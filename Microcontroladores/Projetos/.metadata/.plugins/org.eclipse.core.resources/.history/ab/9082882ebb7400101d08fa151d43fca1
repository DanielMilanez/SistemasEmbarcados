/*
 * DS1307.c
 *
 *  Created on: Aug 7, 2025
 *      Author: Daniel Augusto
 */
#include "main.h"
#include "DS1307.h"

I2C_HandleTypeDef *DS1307_I2C;

void DS1307_STARTUP(I2C_HandleTypeDef *hi2c){
    DS1307_I2C = hi2c;

    uint8_t byte[2];
    byte[0] = 0x00;
    byte[1] = 0x00;

    DS1307_CONFIG_ADDRS(DS1307_ADDRS, 1);

    switch(data.ADDRS_FRAME){
    	case 0xD0:
    	    HAL_I2C_Master_Transmit(DS1307_I2C, data.ADDRS_FRAME, byte, 2, DS1307_COMUNICATE_DELAY);
    	    break;
    	case 0xD1:
    		HAL_I2C_Master_Receive(DS1307_I2C, data.ADDRS_FRAME, byte, 2, DS1307_COMUNICATE_DELAY);
    		break;
    }
}

void DS1307_CONFIG_ADDRS(uint8_t ADDRS, unsigned R_W){
	data.ADDRS_FRAME = (ADDRS << 1) | R_W;
}

int DS1307_DATA_CONV(uint8_t MODE, int VAL_TO_CONV){
	switch(MODE){
		case DEC_TO_BCD:
			return (int) (VAL_TO_CONV / 10 * 16) + (VAL_TO_CONV % 10);
			break;

		case BCD_TO_DEC:
			return (int) (VAL_TO_CONV / 16 * 10) + (VAL_TO_CONV % 16);
			break;
	}

	return 0;
}

void DS1307_SET_TIME(RTC_DS1307 time){
    uint8_t set_time[7];

    set_time[0] = DS1307_DATA_CONV(DEC_TO_BCD, time.seconds) & 0x7F;
    set_time[1] = DS1307_DATA_CONV(DEC_TO_BCD, time.minutes);
    set_time[2] = DS1307_DATA_CONV(DEC_TO_BCD, time.hours);
    set_time[3] = DS1307_DATA_CONV(DEC_TO_BCD, time.day);
    set_time[4] = DS1307_DATA_CONV(DEC_TO_BCD, time.date);
    set_time[5] = DS1307_DATA_CONV(DEC_TO_BCD, time.month);
    set_time[6] = DS1307_DATA_CONV(DEC_TO_BCD, time.year);

    DS1307_CONFIG_ADDRS(DS1307_ADDRS, 0);
    HAL_I2C_Mem_Write(DS1307_I2C, data.ADDRS_FRAME, 0x00, I2C_MEMADD_SIZE_8BIT, set_time, 7, DS1307_COMUNICATE_DELAY);
}

void DS1307_GET_TIME(RTC_DS1307 *time){
    uint8_t get_time[7];

    DS1307_CONFIG_ADDRS(DS1307_ADDRS, 1);
    HAL_I2C_Mem_Read(DS1307_I2C, data.ADDRS_FRAME, 0x00, I2C_MEMADD_SIZE_8BIT, get_time, 7, DS1307_COMUNICATE_DELAY);

    time->seconds = DS1307_DATA_CONV(BCD_TO_DEC, get_time[0] & 0x7F);
    time->minutes = DS1307_DATA_CONV(BCD_TO_DEC, get_time[1]);
    time->hours   = DS1307_DATA_CONV(BCD_TO_DEC, get_time[2]);
    time->day     = DS1307_DATA_CONV(BCD_TO_DEC, get_time[3]);
    time->date    = DS1307_DATA_CONV(BCD_TO_DEC, get_time[4]);
    time->month   = DS1307_DATA_CONV(BCD_TO_DEC, get_time[5]);
    time->year    = DS1307_DATA_CONV(BCD_TO_DEC, get_time[6]);
}
