
Projeto HDC1080.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00009c3c  080000c0  080000c0  000010c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000004ac  08009d00  08009d00  0000ad00  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800a1ac  0800a1ac  0000c1dc  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  0800a1ac  0800a1ac  0000c1dc  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  0800a1ac  0800a1ac  0000c1dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0800a1ac  0800a1ac  0000b1ac  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  0800a1b0  0800a1b0  0000b1b0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         000001dc  20000000  0800a1b4  0000c000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          000001e4  200001dc  0800a390  0000c1dc  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200003c0  0800a390  0000c3c0  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  0000c1dc  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000770a  00000000  00000000  0000c204  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 000018b3  00000000  00000000  0001390e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000860  00000000  00000000  000151c8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000654  00000000  00000000  00015a28  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  00013f38  00000000  00000000  0001607c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   0000ae92  00000000  00000000  00029fb4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    000753d5  00000000  00000000  00034e46  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      00000043  00000000  00000000  000aa21b  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000031bc  00000000  00000000  000aa260  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 0000008f  00000000  00000000  000ad41c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	@ (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	@ (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	@ (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200001dc 	.word	0x200001dc
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08009ce4 	.word	0x08009ce4

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	@ (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	@ (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	@ (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			@ (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200001e0 	.word	0x200001e0
 8000104:	08009ce4 	.word	0x08009ce4

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			@ (mov r8, r8)

0800012c <__gnu_thumb1_case_shi>:
 800012c:	b403      	push	{r0, r1}
 800012e:	4671      	mov	r1, lr
 8000130:	0849      	lsrs	r1, r1, #1
 8000132:	0040      	lsls	r0, r0, #1
 8000134:	0049      	lsls	r1, r1, #1
 8000136:	5e09      	ldrsh	r1, [r1, r0]
 8000138:	0049      	lsls	r1, r1, #1
 800013a:	448e      	add	lr, r1
 800013c:	bc03      	pop	{r0, r1}
 800013e:	4770      	bx	lr

08000140 <__udivsi3>:
 8000140:	2200      	movs	r2, #0
 8000142:	0843      	lsrs	r3, r0, #1
 8000144:	428b      	cmp	r3, r1
 8000146:	d374      	bcc.n	8000232 <__udivsi3+0xf2>
 8000148:	0903      	lsrs	r3, r0, #4
 800014a:	428b      	cmp	r3, r1
 800014c:	d35f      	bcc.n	800020e <__udivsi3+0xce>
 800014e:	0a03      	lsrs	r3, r0, #8
 8000150:	428b      	cmp	r3, r1
 8000152:	d344      	bcc.n	80001de <__udivsi3+0x9e>
 8000154:	0b03      	lsrs	r3, r0, #12
 8000156:	428b      	cmp	r3, r1
 8000158:	d328      	bcc.n	80001ac <__udivsi3+0x6c>
 800015a:	0c03      	lsrs	r3, r0, #16
 800015c:	428b      	cmp	r3, r1
 800015e:	d30d      	bcc.n	800017c <__udivsi3+0x3c>
 8000160:	22ff      	movs	r2, #255	@ 0xff
 8000162:	0209      	lsls	r1, r1, #8
 8000164:	ba12      	rev	r2, r2
 8000166:	0c03      	lsrs	r3, r0, #16
 8000168:	428b      	cmp	r3, r1
 800016a:	d302      	bcc.n	8000172 <__udivsi3+0x32>
 800016c:	1212      	asrs	r2, r2, #8
 800016e:	0209      	lsls	r1, r1, #8
 8000170:	d065      	beq.n	800023e <__udivsi3+0xfe>
 8000172:	0b03      	lsrs	r3, r0, #12
 8000174:	428b      	cmp	r3, r1
 8000176:	d319      	bcc.n	80001ac <__udivsi3+0x6c>
 8000178:	e000      	b.n	800017c <__udivsi3+0x3c>
 800017a:	0a09      	lsrs	r1, r1, #8
 800017c:	0bc3      	lsrs	r3, r0, #15
 800017e:	428b      	cmp	r3, r1
 8000180:	d301      	bcc.n	8000186 <__udivsi3+0x46>
 8000182:	03cb      	lsls	r3, r1, #15
 8000184:	1ac0      	subs	r0, r0, r3
 8000186:	4152      	adcs	r2, r2
 8000188:	0b83      	lsrs	r3, r0, #14
 800018a:	428b      	cmp	r3, r1
 800018c:	d301      	bcc.n	8000192 <__udivsi3+0x52>
 800018e:	038b      	lsls	r3, r1, #14
 8000190:	1ac0      	subs	r0, r0, r3
 8000192:	4152      	adcs	r2, r2
 8000194:	0b43      	lsrs	r3, r0, #13
 8000196:	428b      	cmp	r3, r1
 8000198:	d301      	bcc.n	800019e <__udivsi3+0x5e>
 800019a:	034b      	lsls	r3, r1, #13
 800019c:	1ac0      	subs	r0, r0, r3
 800019e:	4152      	adcs	r2, r2
 80001a0:	0b03      	lsrs	r3, r0, #12
 80001a2:	428b      	cmp	r3, r1
 80001a4:	d301      	bcc.n	80001aa <__udivsi3+0x6a>
 80001a6:	030b      	lsls	r3, r1, #12
 80001a8:	1ac0      	subs	r0, r0, r3
 80001aa:	4152      	adcs	r2, r2
 80001ac:	0ac3      	lsrs	r3, r0, #11
 80001ae:	428b      	cmp	r3, r1
 80001b0:	d301      	bcc.n	80001b6 <__udivsi3+0x76>
 80001b2:	02cb      	lsls	r3, r1, #11
 80001b4:	1ac0      	subs	r0, r0, r3
 80001b6:	4152      	adcs	r2, r2
 80001b8:	0a83      	lsrs	r3, r0, #10
 80001ba:	428b      	cmp	r3, r1
 80001bc:	d301      	bcc.n	80001c2 <__udivsi3+0x82>
 80001be:	028b      	lsls	r3, r1, #10
 80001c0:	1ac0      	subs	r0, r0, r3
 80001c2:	4152      	adcs	r2, r2
 80001c4:	0a43      	lsrs	r3, r0, #9
 80001c6:	428b      	cmp	r3, r1
 80001c8:	d301      	bcc.n	80001ce <__udivsi3+0x8e>
 80001ca:	024b      	lsls	r3, r1, #9
 80001cc:	1ac0      	subs	r0, r0, r3
 80001ce:	4152      	adcs	r2, r2
 80001d0:	0a03      	lsrs	r3, r0, #8
 80001d2:	428b      	cmp	r3, r1
 80001d4:	d301      	bcc.n	80001da <__udivsi3+0x9a>
 80001d6:	020b      	lsls	r3, r1, #8
 80001d8:	1ac0      	subs	r0, r0, r3
 80001da:	4152      	adcs	r2, r2
 80001dc:	d2cd      	bcs.n	800017a <__udivsi3+0x3a>
 80001de:	09c3      	lsrs	r3, r0, #7
 80001e0:	428b      	cmp	r3, r1
 80001e2:	d301      	bcc.n	80001e8 <__udivsi3+0xa8>
 80001e4:	01cb      	lsls	r3, r1, #7
 80001e6:	1ac0      	subs	r0, r0, r3
 80001e8:	4152      	adcs	r2, r2
 80001ea:	0983      	lsrs	r3, r0, #6
 80001ec:	428b      	cmp	r3, r1
 80001ee:	d301      	bcc.n	80001f4 <__udivsi3+0xb4>
 80001f0:	018b      	lsls	r3, r1, #6
 80001f2:	1ac0      	subs	r0, r0, r3
 80001f4:	4152      	adcs	r2, r2
 80001f6:	0943      	lsrs	r3, r0, #5
 80001f8:	428b      	cmp	r3, r1
 80001fa:	d301      	bcc.n	8000200 <__udivsi3+0xc0>
 80001fc:	014b      	lsls	r3, r1, #5
 80001fe:	1ac0      	subs	r0, r0, r3
 8000200:	4152      	adcs	r2, r2
 8000202:	0903      	lsrs	r3, r0, #4
 8000204:	428b      	cmp	r3, r1
 8000206:	d301      	bcc.n	800020c <__udivsi3+0xcc>
 8000208:	010b      	lsls	r3, r1, #4
 800020a:	1ac0      	subs	r0, r0, r3
 800020c:	4152      	adcs	r2, r2
 800020e:	08c3      	lsrs	r3, r0, #3
 8000210:	428b      	cmp	r3, r1
 8000212:	d301      	bcc.n	8000218 <__udivsi3+0xd8>
 8000214:	00cb      	lsls	r3, r1, #3
 8000216:	1ac0      	subs	r0, r0, r3
 8000218:	4152      	adcs	r2, r2
 800021a:	0883      	lsrs	r3, r0, #2
 800021c:	428b      	cmp	r3, r1
 800021e:	d301      	bcc.n	8000224 <__udivsi3+0xe4>
 8000220:	008b      	lsls	r3, r1, #2
 8000222:	1ac0      	subs	r0, r0, r3
 8000224:	4152      	adcs	r2, r2
 8000226:	0843      	lsrs	r3, r0, #1
 8000228:	428b      	cmp	r3, r1
 800022a:	d301      	bcc.n	8000230 <__udivsi3+0xf0>
 800022c:	004b      	lsls	r3, r1, #1
 800022e:	1ac0      	subs	r0, r0, r3
 8000230:	4152      	adcs	r2, r2
 8000232:	1a41      	subs	r1, r0, r1
 8000234:	d200      	bcs.n	8000238 <__udivsi3+0xf8>
 8000236:	4601      	mov	r1, r0
 8000238:	4152      	adcs	r2, r2
 800023a:	4610      	mov	r0, r2
 800023c:	4770      	bx	lr
 800023e:	e7ff      	b.n	8000240 <__udivsi3+0x100>
 8000240:	b501      	push	{r0, lr}
 8000242:	2000      	movs	r0, #0
 8000244:	f000 f8f0 	bl	8000428 <__aeabi_idiv0>
 8000248:	bd02      	pop	{r1, pc}
 800024a:	46c0      	nop			@ (mov r8, r8)

0800024c <__aeabi_uidivmod>:
 800024c:	2900      	cmp	r1, #0
 800024e:	d0f7      	beq.n	8000240 <__udivsi3+0x100>
 8000250:	e776      	b.n	8000140 <__udivsi3>
 8000252:	4770      	bx	lr

08000254 <__divsi3>:
 8000254:	4603      	mov	r3, r0
 8000256:	430b      	orrs	r3, r1
 8000258:	d47f      	bmi.n	800035a <__divsi3+0x106>
 800025a:	2200      	movs	r2, #0
 800025c:	0843      	lsrs	r3, r0, #1
 800025e:	428b      	cmp	r3, r1
 8000260:	d374      	bcc.n	800034c <__divsi3+0xf8>
 8000262:	0903      	lsrs	r3, r0, #4
 8000264:	428b      	cmp	r3, r1
 8000266:	d35f      	bcc.n	8000328 <__divsi3+0xd4>
 8000268:	0a03      	lsrs	r3, r0, #8
 800026a:	428b      	cmp	r3, r1
 800026c:	d344      	bcc.n	80002f8 <__divsi3+0xa4>
 800026e:	0b03      	lsrs	r3, r0, #12
 8000270:	428b      	cmp	r3, r1
 8000272:	d328      	bcc.n	80002c6 <__divsi3+0x72>
 8000274:	0c03      	lsrs	r3, r0, #16
 8000276:	428b      	cmp	r3, r1
 8000278:	d30d      	bcc.n	8000296 <__divsi3+0x42>
 800027a:	22ff      	movs	r2, #255	@ 0xff
 800027c:	0209      	lsls	r1, r1, #8
 800027e:	ba12      	rev	r2, r2
 8000280:	0c03      	lsrs	r3, r0, #16
 8000282:	428b      	cmp	r3, r1
 8000284:	d302      	bcc.n	800028c <__divsi3+0x38>
 8000286:	1212      	asrs	r2, r2, #8
 8000288:	0209      	lsls	r1, r1, #8
 800028a:	d065      	beq.n	8000358 <__divsi3+0x104>
 800028c:	0b03      	lsrs	r3, r0, #12
 800028e:	428b      	cmp	r3, r1
 8000290:	d319      	bcc.n	80002c6 <__divsi3+0x72>
 8000292:	e000      	b.n	8000296 <__divsi3+0x42>
 8000294:	0a09      	lsrs	r1, r1, #8
 8000296:	0bc3      	lsrs	r3, r0, #15
 8000298:	428b      	cmp	r3, r1
 800029a:	d301      	bcc.n	80002a0 <__divsi3+0x4c>
 800029c:	03cb      	lsls	r3, r1, #15
 800029e:	1ac0      	subs	r0, r0, r3
 80002a0:	4152      	adcs	r2, r2
 80002a2:	0b83      	lsrs	r3, r0, #14
 80002a4:	428b      	cmp	r3, r1
 80002a6:	d301      	bcc.n	80002ac <__divsi3+0x58>
 80002a8:	038b      	lsls	r3, r1, #14
 80002aa:	1ac0      	subs	r0, r0, r3
 80002ac:	4152      	adcs	r2, r2
 80002ae:	0b43      	lsrs	r3, r0, #13
 80002b0:	428b      	cmp	r3, r1
 80002b2:	d301      	bcc.n	80002b8 <__divsi3+0x64>
 80002b4:	034b      	lsls	r3, r1, #13
 80002b6:	1ac0      	subs	r0, r0, r3
 80002b8:	4152      	adcs	r2, r2
 80002ba:	0b03      	lsrs	r3, r0, #12
 80002bc:	428b      	cmp	r3, r1
 80002be:	d301      	bcc.n	80002c4 <__divsi3+0x70>
 80002c0:	030b      	lsls	r3, r1, #12
 80002c2:	1ac0      	subs	r0, r0, r3
 80002c4:	4152      	adcs	r2, r2
 80002c6:	0ac3      	lsrs	r3, r0, #11
 80002c8:	428b      	cmp	r3, r1
 80002ca:	d301      	bcc.n	80002d0 <__divsi3+0x7c>
 80002cc:	02cb      	lsls	r3, r1, #11
 80002ce:	1ac0      	subs	r0, r0, r3
 80002d0:	4152      	adcs	r2, r2
 80002d2:	0a83      	lsrs	r3, r0, #10
 80002d4:	428b      	cmp	r3, r1
 80002d6:	d301      	bcc.n	80002dc <__divsi3+0x88>
 80002d8:	028b      	lsls	r3, r1, #10
 80002da:	1ac0      	subs	r0, r0, r3
 80002dc:	4152      	adcs	r2, r2
 80002de:	0a43      	lsrs	r3, r0, #9
 80002e0:	428b      	cmp	r3, r1
 80002e2:	d301      	bcc.n	80002e8 <__divsi3+0x94>
 80002e4:	024b      	lsls	r3, r1, #9
 80002e6:	1ac0      	subs	r0, r0, r3
 80002e8:	4152      	adcs	r2, r2
 80002ea:	0a03      	lsrs	r3, r0, #8
 80002ec:	428b      	cmp	r3, r1
 80002ee:	d301      	bcc.n	80002f4 <__divsi3+0xa0>
 80002f0:	020b      	lsls	r3, r1, #8
 80002f2:	1ac0      	subs	r0, r0, r3
 80002f4:	4152      	adcs	r2, r2
 80002f6:	d2cd      	bcs.n	8000294 <__divsi3+0x40>
 80002f8:	09c3      	lsrs	r3, r0, #7
 80002fa:	428b      	cmp	r3, r1
 80002fc:	d301      	bcc.n	8000302 <__divsi3+0xae>
 80002fe:	01cb      	lsls	r3, r1, #7
 8000300:	1ac0      	subs	r0, r0, r3
 8000302:	4152      	adcs	r2, r2
 8000304:	0983      	lsrs	r3, r0, #6
 8000306:	428b      	cmp	r3, r1
 8000308:	d301      	bcc.n	800030e <__divsi3+0xba>
 800030a:	018b      	lsls	r3, r1, #6
 800030c:	1ac0      	subs	r0, r0, r3
 800030e:	4152      	adcs	r2, r2
 8000310:	0943      	lsrs	r3, r0, #5
 8000312:	428b      	cmp	r3, r1
 8000314:	d301      	bcc.n	800031a <__divsi3+0xc6>
 8000316:	014b      	lsls	r3, r1, #5
 8000318:	1ac0      	subs	r0, r0, r3
 800031a:	4152      	adcs	r2, r2
 800031c:	0903      	lsrs	r3, r0, #4
 800031e:	428b      	cmp	r3, r1
 8000320:	d301      	bcc.n	8000326 <__divsi3+0xd2>
 8000322:	010b      	lsls	r3, r1, #4
 8000324:	1ac0      	subs	r0, r0, r3
 8000326:	4152      	adcs	r2, r2
 8000328:	08c3      	lsrs	r3, r0, #3
 800032a:	428b      	cmp	r3, r1
 800032c:	d301      	bcc.n	8000332 <__divsi3+0xde>
 800032e:	00cb      	lsls	r3, r1, #3
 8000330:	1ac0      	subs	r0, r0, r3
 8000332:	4152      	adcs	r2, r2
 8000334:	0883      	lsrs	r3, r0, #2
 8000336:	428b      	cmp	r3, r1
 8000338:	d301      	bcc.n	800033e <__divsi3+0xea>
 800033a:	008b      	lsls	r3, r1, #2
 800033c:	1ac0      	subs	r0, r0, r3
 800033e:	4152      	adcs	r2, r2
 8000340:	0843      	lsrs	r3, r0, #1
 8000342:	428b      	cmp	r3, r1
 8000344:	d301      	bcc.n	800034a <__divsi3+0xf6>
 8000346:	004b      	lsls	r3, r1, #1
 8000348:	1ac0      	subs	r0, r0, r3
 800034a:	4152      	adcs	r2, r2
 800034c:	1a41      	subs	r1, r0, r1
 800034e:	d200      	bcs.n	8000352 <__divsi3+0xfe>
 8000350:	4601      	mov	r1, r0
 8000352:	4152      	adcs	r2, r2
 8000354:	4610      	mov	r0, r2
 8000356:	4770      	bx	lr
 8000358:	e05d      	b.n	8000416 <__divsi3+0x1c2>
 800035a:	0fca      	lsrs	r2, r1, #31
 800035c:	d000      	beq.n	8000360 <__divsi3+0x10c>
 800035e:	4249      	negs	r1, r1
 8000360:	1003      	asrs	r3, r0, #32
 8000362:	d300      	bcc.n	8000366 <__divsi3+0x112>
 8000364:	4240      	negs	r0, r0
 8000366:	4053      	eors	r3, r2
 8000368:	2200      	movs	r2, #0
 800036a:	469c      	mov	ip, r3
 800036c:	0903      	lsrs	r3, r0, #4
 800036e:	428b      	cmp	r3, r1
 8000370:	d32d      	bcc.n	80003ce <__divsi3+0x17a>
 8000372:	0a03      	lsrs	r3, r0, #8
 8000374:	428b      	cmp	r3, r1
 8000376:	d312      	bcc.n	800039e <__divsi3+0x14a>
 8000378:	22fc      	movs	r2, #252	@ 0xfc
 800037a:	0189      	lsls	r1, r1, #6
 800037c:	ba12      	rev	r2, r2
 800037e:	0a03      	lsrs	r3, r0, #8
 8000380:	428b      	cmp	r3, r1
 8000382:	d30c      	bcc.n	800039e <__divsi3+0x14a>
 8000384:	0189      	lsls	r1, r1, #6
 8000386:	1192      	asrs	r2, r2, #6
 8000388:	428b      	cmp	r3, r1
 800038a:	d308      	bcc.n	800039e <__divsi3+0x14a>
 800038c:	0189      	lsls	r1, r1, #6
 800038e:	1192      	asrs	r2, r2, #6
 8000390:	428b      	cmp	r3, r1
 8000392:	d304      	bcc.n	800039e <__divsi3+0x14a>
 8000394:	0189      	lsls	r1, r1, #6
 8000396:	d03a      	beq.n	800040e <__divsi3+0x1ba>
 8000398:	1192      	asrs	r2, r2, #6
 800039a:	e000      	b.n	800039e <__divsi3+0x14a>
 800039c:	0989      	lsrs	r1, r1, #6
 800039e:	09c3      	lsrs	r3, r0, #7
 80003a0:	428b      	cmp	r3, r1
 80003a2:	d301      	bcc.n	80003a8 <__divsi3+0x154>
 80003a4:	01cb      	lsls	r3, r1, #7
 80003a6:	1ac0      	subs	r0, r0, r3
 80003a8:	4152      	adcs	r2, r2
 80003aa:	0983      	lsrs	r3, r0, #6
 80003ac:	428b      	cmp	r3, r1
 80003ae:	d301      	bcc.n	80003b4 <__divsi3+0x160>
 80003b0:	018b      	lsls	r3, r1, #6
 80003b2:	1ac0      	subs	r0, r0, r3
 80003b4:	4152      	adcs	r2, r2
 80003b6:	0943      	lsrs	r3, r0, #5
 80003b8:	428b      	cmp	r3, r1
 80003ba:	d301      	bcc.n	80003c0 <__divsi3+0x16c>
 80003bc:	014b      	lsls	r3, r1, #5
 80003be:	1ac0      	subs	r0, r0, r3
 80003c0:	4152      	adcs	r2, r2
 80003c2:	0903      	lsrs	r3, r0, #4
 80003c4:	428b      	cmp	r3, r1
 80003c6:	d301      	bcc.n	80003cc <__divsi3+0x178>
 80003c8:	010b      	lsls	r3, r1, #4
 80003ca:	1ac0      	subs	r0, r0, r3
 80003cc:	4152      	adcs	r2, r2
 80003ce:	08c3      	lsrs	r3, r0, #3
 80003d0:	428b      	cmp	r3, r1
 80003d2:	d301      	bcc.n	80003d8 <__divsi3+0x184>
 80003d4:	00cb      	lsls	r3, r1, #3
 80003d6:	1ac0      	subs	r0, r0, r3
 80003d8:	4152      	adcs	r2, r2
 80003da:	0883      	lsrs	r3, r0, #2
 80003dc:	428b      	cmp	r3, r1
 80003de:	d301      	bcc.n	80003e4 <__divsi3+0x190>
 80003e0:	008b      	lsls	r3, r1, #2
 80003e2:	1ac0      	subs	r0, r0, r3
 80003e4:	4152      	adcs	r2, r2
 80003e6:	d2d9      	bcs.n	800039c <__divsi3+0x148>
 80003e8:	0843      	lsrs	r3, r0, #1
 80003ea:	428b      	cmp	r3, r1
 80003ec:	d301      	bcc.n	80003f2 <__divsi3+0x19e>
 80003ee:	004b      	lsls	r3, r1, #1
 80003f0:	1ac0      	subs	r0, r0, r3
 80003f2:	4152      	adcs	r2, r2
 80003f4:	1a41      	subs	r1, r0, r1
 80003f6:	d200      	bcs.n	80003fa <__divsi3+0x1a6>
 80003f8:	4601      	mov	r1, r0
 80003fa:	4663      	mov	r3, ip
 80003fc:	4152      	adcs	r2, r2
 80003fe:	105b      	asrs	r3, r3, #1
 8000400:	4610      	mov	r0, r2
 8000402:	d301      	bcc.n	8000408 <__divsi3+0x1b4>
 8000404:	4240      	negs	r0, r0
 8000406:	2b00      	cmp	r3, #0
 8000408:	d500      	bpl.n	800040c <__divsi3+0x1b8>
 800040a:	4249      	negs	r1, r1
 800040c:	4770      	bx	lr
 800040e:	4663      	mov	r3, ip
 8000410:	105b      	asrs	r3, r3, #1
 8000412:	d300      	bcc.n	8000416 <__divsi3+0x1c2>
 8000414:	4240      	negs	r0, r0
 8000416:	b501      	push	{r0, lr}
 8000418:	2000      	movs	r0, #0
 800041a:	f000 f805 	bl	8000428 <__aeabi_idiv0>
 800041e:	bd02      	pop	{r1, pc}

08000420 <__aeabi_idivmod>:
 8000420:	2900      	cmp	r1, #0
 8000422:	d0f8      	beq.n	8000416 <__divsi3+0x1c2>
 8000424:	e716      	b.n	8000254 <__divsi3>
 8000426:	4770      	bx	lr

08000428 <__aeabi_idiv0>:
 8000428:	4770      	bx	lr
 800042a:	46c0      	nop			@ (mov r8, r8)

0800042c <__aeabi_cdrcmple>:
 800042c:	4684      	mov	ip, r0
 800042e:	0010      	movs	r0, r2
 8000430:	4662      	mov	r2, ip
 8000432:	468c      	mov	ip, r1
 8000434:	0019      	movs	r1, r3
 8000436:	4663      	mov	r3, ip
 8000438:	e000      	b.n	800043c <__aeabi_cdcmpeq>
 800043a:	46c0      	nop			@ (mov r8, r8)

0800043c <__aeabi_cdcmpeq>:
 800043c:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800043e:	f001 f833 	bl	80014a8 <__ledf2>
 8000442:	2800      	cmp	r0, #0
 8000444:	d401      	bmi.n	800044a <__aeabi_cdcmpeq+0xe>
 8000446:	2100      	movs	r1, #0
 8000448:	42c8      	cmn	r0, r1
 800044a:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

0800044c <__aeabi_dcmpeq>:
 800044c:	b510      	push	{r4, lr}
 800044e:	f000 ff77 	bl	8001340 <__eqdf2>
 8000452:	4240      	negs	r0, r0
 8000454:	3001      	adds	r0, #1
 8000456:	bd10      	pop	{r4, pc}

08000458 <__aeabi_dcmplt>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f001 f825 	bl	80014a8 <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	db01      	blt.n	8000466 <__aeabi_dcmplt+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			@ (mov r8, r8)

0800046c <__aeabi_dcmple>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f001 f81b 	bl	80014a8 <__ledf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dd01      	ble.n	800047a <__aeabi_dcmple+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			@ (mov r8, r8)

08000480 <__aeabi_dcmpgt>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f000 ffa1 	bl	80013c8 <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	dc01      	bgt.n	800048e <__aeabi_dcmpgt+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			@ (mov r8, r8)

08000494 <__aeabi_dcmpge>:
 8000494:	b510      	push	{r4, lr}
 8000496:	f000 ff97 	bl	80013c8 <__gedf2>
 800049a:	2800      	cmp	r0, #0
 800049c:	da01      	bge.n	80004a2 <__aeabi_dcmpge+0xe>
 800049e:	2000      	movs	r0, #0
 80004a0:	bd10      	pop	{r4, pc}
 80004a2:	2001      	movs	r0, #1
 80004a4:	bd10      	pop	{r4, pc}
 80004a6:	46c0      	nop			@ (mov r8, r8)

080004a8 <__aeabi_d2uiz>:
 80004a8:	b570      	push	{r4, r5, r6, lr}
 80004aa:	2200      	movs	r2, #0
 80004ac:	4b0c      	ldr	r3, [pc, #48]	@ (80004e0 <__aeabi_d2uiz+0x38>)
 80004ae:	0004      	movs	r4, r0
 80004b0:	000d      	movs	r5, r1
 80004b2:	f7ff ffef 	bl	8000494 <__aeabi_dcmpge>
 80004b6:	2800      	cmp	r0, #0
 80004b8:	d104      	bne.n	80004c4 <__aeabi_d2uiz+0x1c>
 80004ba:	0020      	movs	r0, r4
 80004bc:	0029      	movs	r1, r5
 80004be:	f001 ff73 	bl	80023a8 <__aeabi_d2iz>
 80004c2:	bd70      	pop	{r4, r5, r6, pc}
 80004c4:	4b06      	ldr	r3, [pc, #24]	@ (80004e0 <__aeabi_d2uiz+0x38>)
 80004c6:	2200      	movs	r2, #0
 80004c8:	0020      	movs	r0, r4
 80004ca:	0029      	movs	r1, r5
 80004cc:	f001 fb40 	bl	8001b50 <__aeabi_dsub>
 80004d0:	f001 ff6a 	bl	80023a8 <__aeabi_d2iz>
 80004d4:	2380      	movs	r3, #128	@ 0x80
 80004d6:	061b      	lsls	r3, r3, #24
 80004d8:	469c      	mov	ip, r3
 80004da:	4460      	add	r0, ip
 80004dc:	e7f1      	b.n	80004c2 <__aeabi_d2uiz+0x1a>
 80004de:	46c0      	nop			@ (mov r8, r8)
 80004e0:	41e00000 	.word	0x41e00000

080004e4 <__aeabi_d2lz>:
 80004e4:	b570      	push	{r4, r5, r6, lr}
 80004e6:	2200      	movs	r2, #0
 80004e8:	2300      	movs	r3, #0
 80004ea:	0004      	movs	r4, r0
 80004ec:	000d      	movs	r5, r1
 80004ee:	f7ff ffb3 	bl	8000458 <__aeabi_dcmplt>
 80004f2:	2800      	cmp	r0, #0
 80004f4:	d108      	bne.n	8000508 <__aeabi_d2lz+0x24>
 80004f6:	0020      	movs	r0, r4
 80004f8:	0029      	movs	r1, r5
 80004fa:	f000 f80f 	bl	800051c <__aeabi_d2ulz>
 80004fe:	0002      	movs	r2, r0
 8000500:	000b      	movs	r3, r1
 8000502:	0010      	movs	r0, r2
 8000504:	0019      	movs	r1, r3
 8000506:	bd70      	pop	{r4, r5, r6, pc}
 8000508:	2380      	movs	r3, #128	@ 0x80
 800050a:	061b      	lsls	r3, r3, #24
 800050c:	18e9      	adds	r1, r5, r3
 800050e:	0020      	movs	r0, r4
 8000510:	f000 f804 	bl	800051c <__aeabi_d2ulz>
 8000514:	2300      	movs	r3, #0
 8000516:	4242      	negs	r2, r0
 8000518:	418b      	sbcs	r3, r1
 800051a:	e7f2      	b.n	8000502 <__aeabi_d2lz+0x1e>

0800051c <__aeabi_d2ulz>:
 800051c:	b570      	push	{r4, r5, r6, lr}
 800051e:	2200      	movs	r2, #0
 8000520:	4b0b      	ldr	r3, [pc, #44]	@ (8000550 <__aeabi_d2ulz+0x34>)
 8000522:	000d      	movs	r5, r1
 8000524:	0004      	movs	r4, r0
 8000526:	f001 f82d 	bl	8001584 <__aeabi_dmul>
 800052a:	f7ff ffbd 	bl	80004a8 <__aeabi_d2uiz>
 800052e:	0006      	movs	r6, r0
 8000530:	f001 ffa4 	bl	800247c <__aeabi_ui2d>
 8000534:	2200      	movs	r2, #0
 8000536:	4b07      	ldr	r3, [pc, #28]	@ (8000554 <__aeabi_d2ulz+0x38>)
 8000538:	f001 f824 	bl	8001584 <__aeabi_dmul>
 800053c:	0002      	movs	r2, r0
 800053e:	000b      	movs	r3, r1
 8000540:	0020      	movs	r0, r4
 8000542:	0029      	movs	r1, r5
 8000544:	f001 fb04 	bl	8001b50 <__aeabi_dsub>
 8000548:	f7ff ffae 	bl	80004a8 <__aeabi_d2uiz>
 800054c:	0031      	movs	r1, r6
 800054e:	bd70      	pop	{r4, r5, r6, pc}
 8000550:	3df00000 	.word	0x3df00000
 8000554:	41f00000 	.word	0x41f00000

08000558 <__aeabi_l2d>:
 8000558:	b570      	push	{r4, r5, r6, lr}
 800055a:	0006      	movs	r6, r0
 800055c:	0008      	movs	r0, r1
 800055e:	f001 ff5f 	bl	8002420 <__aeabi_i2d>
 8000562:	2200      	movs	r2, #0
 8000564:	4b06      	ldr	r3, [pc, #24]	@ (8000580 <__aeabi_l2d+0x28>)
 8000566:	f001 f80d 	bl	8001584 <__aeabi_dmul>
 800056a:	000d      	movs	r5, r1
 800056c:	0004      	movs	r4, r0
 800056e:	0030      	movs	r0, r6
 8000570:	f001 ff84 	bl	800247c <__aeabi_ui2d>
 8000574:	002b      	movs	r3, r5
 8000576:	0022      	movs	r2, r4
 8000578:	f000 f804 	bl	8000584 <__aeabi_dadd>
 800057c:	bd70      	pop	{r4, r5, r6, pc}
 800057e:	46c0      	nop			@ (mov r8, r8)
 8000580:	41f00000 	.word	0x41f00000

08000584 <__aeabi_dadd>:
 8000584:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000586:	464f      	mov	r7, r9
 8000588:	4646      	mov	r6, r8
 800058a:	46d6      	mov	lr, sl
 800058c:	b5c0      	push	{r6, r7, lr}
 800058e:	b082      	sub	sp, #8
 8000590:	9000      	str	r0, [sp, #0]
 8000592:	9101      	str	r1, [sp, #4]
 8000594:	030e      	lsls	r6, r1, #12
 8000596:	004c      	lsls	r4, r1, #1
 8000598:	0fcd      	lsrs	r5, r1, #31
 800059a:	0a71      	lsrs	r1, r6, #9
 800059c:	9e00      	ldr	r6, [sp, #0]
 800059e:	005f      	lsls	r7, r3, #1
 80005a0:	0f76      	lsrs	r6, r6, #29
 80005a2:	430e      	orrs	r6, r1
 80005a4:	9900      	ldr	r1, [sp, #0]
 80005a6:	9200      	str	r2, [sp, #0]
 80005a8:	9301      	str	r3, [sp, #4]
 80005aa:	00c9      	lsls	r1, r1, #3
 80005ac:	4689      	mov	r9, r1
 80005ae:	0319      	lsls	r1, r3, #12
 80005b0:	0d7b      	lsrs	r3, r7, #21
 80005b2:	4698      	mov	r8, r3
 80005b4:	9b01      	ldr	r3, [sp, #4]
 80005b6:	0a49      	lsrs	r1, r1, #9
 80005b8:	0fdb      	lsrs	r3, r3, #31
 80005ba:	469c      	mov	ip, r3
 80005bc:	9b00      	ldr	r3, [sp, #0]
 80005be:	9a00      	ldr	r2, [sp, #0]
 80005c0:	0f5b      	lsrs	r3, r3, #29
 80005c2:	430b      	orrs	r3, r1
 80005c4:	4641      	mov	r1, r8
 80005c6:	0d64      	lsrs	r4, r4, #21
 80005c8:	00d2      	lsls	r2, r2, #3
 80005ca:	1a61      	subs	r1, r4, r1
 80005cc:	4565      	cmp	r5, ip
 80005ce:	d100      	bne.n	80005d2 <__aeabi_dadd+0x4e>
 80005d0:	e0a6      	b.n	8000720 <__aeabi_dadd+0x19c>
 80005d2:	2900      	cmp	r1, #0
 80005d4:	dd72      	ble.n	80006bc <__aeabi_dadd+0x138>
 80005d6:	4647      	mov	r7, r8
 80005d8:	2f00      	cmp	r7, #0
 80005da:	d100      	bne.n	80005de <__aeabi_dadd+0x5a>
 80005dc:	e0dd      	b.n	800079a <__aeabi_dadd+0x216>
 80005de:	4fcc      	ldr	r7, [pc, #816]	@ (8000910 <__aeabi_dadd+0x38c>)
 80005e0:	42bc      	cmp	r4, r7
 80005e2:	d100      	bne.n	80005e6 <__aeabi_dadd+0x62>
 80005e4:	e19a      	b.n	800091c <__aeabi_dadd+0x398>
 80005e6:	2701      	movs	r7, #1
 80005e8:	2938      	cmp	r1, #56	@ 0x38
 80005ea:	dc17      	bgt.n	800061c <__aeabi_dadd+0x98>
 80005ec:	2780      	movs	r7, #128	@ 0x80
 80005ee:	043f      	lsls	r7, r7, #16
 80005f0:	433b      	orrs	r3, r7
 80005f2:	291f      	cmp	r1, #31
 80005f4:	dd00      	ble.n	80005f8 <__aeabi_dadd+0x74>
 80005f6:	e1dd      	b.n	80009b4 <__aeabi_dadd+0x430>
 80005f8:	2720      	movs	r7, #32
 80005fa:	1a78      	subs	r0, r7, r1
 80005fc:	001f      	movs	r7, r3
 80005fe:	4087      	lsls	r7, r0
 8000600:	46ba      	mov	sl, r7
 8000602:	0017      	movs	r7, r2
 8000604:	40cf      	lsrs	r7, r1
 8000606:	4684      	mov	ip, r0
 8000608:	0038      	movs	r0, r7
 800060a:	4657      	mov	r7, sl
 800060c:	4307      	orrs	r7, r0
 800060e:	4660      	mov	r0, ip
 8000610:	4082      	lsls	r2, r0
 8000612:	40cb      	lsrs	r3, r1
 8000614:	1e50      	subs	r0, r2, #1
 8000616:	4182      	sbcs	r2, r0
 8000618:	1af6      	subs	r6, r6, r3
 800061a:	4317      	orrs	r7, r2
 800061c:	464b      	mov	r3, r9
 800061e:	1bdf      	subs	r7, r3, r7
 8000620:	45b9      	cmp	r9, r7
 8000622:	4180      	sbcs	r0, r0
 8000624:	4240      	negs	r0, r0
 8000626:	1a36      	subs	r6, r6, r0
 8000628:	0233      	lsls	r3, r6, #8
 800062a:	d400      	bmi.n	800062e <__aeabi_dadd+0xaa>
 800062c:	e0ff      	b.n	800082e <__aeabi_dadd+0x2aa>
 800062e:	0276      	lsls	r6, r6, #9
 8000630:	0a76      	lsrs	r6, r6, #9
 8000632:	2e00      	cmp	r6, #0
 8000634:	d100      	bne.n	8000638 <__aeabi_dadd+0xb4>
 8000636:	e13c      	b.n	80008b2 <__aeabi_dadd+0x32e>
 8000638:	0030      	movs	r0, r6
 800063a:	f002 f80d 	bl	8002658 <__clzsi2>
 800063e:	0003      	movs	r3, r0
 8000640:	3b08      	subs	r3, #8
 8000642:	2120      	movs	r1, #32
 8000644:	0038      	movs	r0, r7
 8000646:	1aca      	subs	r2, r1, r3
 8000648:	40d0      	lsrs	r0, r2
 800064a:	409e      	lsls	r6, r3
 800064c:	0002      	movs	r2, r0
 800064e:	409f      	lsls	r7, r3
 8000650:	4332      	orrs	r2, r6
 8000652:	429c      	cmp	r4, r3
 8000654:	dd00      	ble.n	8000658 <__aeabi_dadd+0xd4>
 8000656:	e1a6      	b.n	80009a6 <__aeabi_dadd+0x422>
 8000658:	1b18      	subs	r0, r3, r4
 800065a:	3001      	adds	r0, #1
 800065c:	1a09      	subs	r1, r1, r0
 800065e:	003e      	movs	r6, r7
 8000660:	408f      	lsls	r7, r1
 8000662:	40c6      	lsrs	r6, r0
 8000664:	1e7b      	subs	r3, r7, #1
 8000666:	419f      	sbcs	r7, r3
 8000668:	0013      	movs	r3, r2
 800066a:	408b      	lsls	r3, r1
 800066c:	4337      	orrs	r7, r6
 800066e:	431f      	orrs	r7, r3
 8000670:	40c2      	lsrs	r2, r0
 8000672:	003b      	movs	r3, r7
 8000674:	0016      	movs	r6, r2
 8000676:	2400      	movs	r4, #0
 8000678:	4313      	orrs	r3, r2
 800067a:	d100      	bne.n	800067e <__aeabi_dadd+0xfa>
 800067c:	e1df      	b.n	8000a3e <__aeabi_dadd+0x4ba>
 800067e:	077b      	lsls	r3, r7, #29
 8000680:	d100      	bne.n	8000684 <__aeabi_dadd+0x100>
 8000682:	e332      	b.n	8000cea <__aeabi_dadd+0x766>
 8000684:	230f      	movs	r3, #15
 8000686:	003a      	movs	r2, r7
 8000688:	403b      	ands	r3, r7
 800068a:	2b04      	cmp	r3, #4
 800068c:	d004      	beq.n	8000698 <__aeabi_dadd+0x114>
 800068e:	1d3a      	adds	r2, r7, #4
 8000690:	42ba      	cmp	r2, r7
 8000692:	41bf      	sbcs	r7, r7
 8000694:	427f      	negs	r7, r7
 8000696:	19f6      	adds	r6, r6, r7
 8000698:	0233      	lsls	r3, r6, #8
 800069a:	d400      	bmi.n	800069e <__aeabi_dadd+0x11a>
 800069c:	e323      	b.n	8000ce6 <__aeabi_dadd+0x762>
 800069e:	4b9c      	ldr	r3, [pc, #624]	@ (8000910 <__aeabi_dadd+0x38c>)
 80006a0:	3401      	adds	r4, #1
 80006a2:	429c      	cmp	r4, r3
 80006a4:	d100      	bne.n	80006a8 <__aeabi_dadd+0x124>
 80006a6:	e0b4      	b.n	8000812 <__aeabi_dadd+0x28e>
 80006a8:	4b9a      	ldr	r3, [pc, #616]	@ (8000914 <__aeabi_dadd+0x390>)
 80006aa:	0564      	lsls	r4, r4, #21
 80006ac:	401e      	ands	r6, r3
 80006ae:	0d64      	lsrs	r4, r4, #21
 80006b0:	0777      	lsls	r7, r6, #29
 80006b2:	08d2      	lsrs	r2, r2, #3
 80006b4:	0276      	lsls	r6, r6, #9
 80006b6:	4317      	orrs	r7, r2
 80006b8:	0b36      	lsrs	r6, r6, #12
 80006ba:	e0ac      	b.n	8000816 <__aeabi_dadd+0x292>
 80006bc:	2900      	cmp	r1, #0
 80006be:	d100      	bne.n	80006c2 <__aeabi_dadd+0x13e>
 80006c0:	e07e      	b.n	80007c0 <__aeabi_dadd+0x23c>
 80006c2:	4641      	mov	r1, r8
 80006c4:	1b09      	subs	r1, r1, r4
 80006c6:	2c00      	cmp	r4, #0
 80006c8:	d000      	beq.n	80006cc <__aeabi_dadd+0x148>
 80006ca:	e160      	b.n	800098e <__aeabi_dadd+0x40a>
 80006cc:	0034      	movs	r4, r6
 80006ce:	4648      	mov	r0, r9
 80006d0:	4304      	orrs	r4, r0
 80006d2:	d100      	bne.n	80006d6 <__aeabi_dadd+0x152>
 80006d4:	e1c9      	b.n	8000a6a <__aeabi_dadd+0x4e6>
 80006d6:	1e4c      	subs	r4, r1, #1
 80006d8:	2901      	cmp	r1, #1
 80006da:	d100      	bne.n	80006de <__aeabi_dadd+0x15a>
 80006dc:	e22e      	b.n	8000b3c <__aeabi_dadd+0x5b8>
 80006de:	4d8c      	ldr	r5, [pc, #560]	@ (8000910 <__aeabi_dadd+0x38c>)
 80006e0:	42a9      	cmp	r1, r5
 80006e2:	d100      	bne.n	80006e6 <__aeabi_dadd+0x162>
 80006e4:	e224      	b.n	8000b30 <__aeabi_dadd+0x5ac>
 80006e6:	2701      	movs	r7, #1
 80006e8:	2c38      	cmp	r4, #56	@ 0x38
 80006ea:	dc11      	bgt.n	8000710 <__aeabi_dadd+0x18c>
 80006ec:	0021      	movs	r1, r4
 80006ee:	291f      	cmp	r1, #31
 80006f0:	dd00      	ble.n	80006f4 <__aeabi_dadd+0x170>
 80006f2:	e20b      	b.n	8000b0c <__aeabi_dadd+0x588>
 80006f4:	2420      	movs	r4, #32
 80006f6:	0037      	movs	r7, r6
 80006f8:	4648      	mov	r0, r9
 80006fa:	1a64      	subs	r4, r4, r1
 80006fc:	40a7      	lsls	r7, r4
 80006fe:	40c8      	lsrs	r0, r1
 8000700:	4307      	orrs	r7, r0
 8000702:	4648      	mov	r0, r9
 8000704:	40a0      	lsls	r0, r4
 8000706:	40ce      	lsrs	r6, r1
 8000708:	1e44      	subs	r4, r0, #1
 800070a:	41a0      	sbcs	r0, r4
 800070c:	1b9b      	subs	r3, r3, r6
 800070e:	4307      	orrs	r7, r0
 8000710:	1bd7      	subs	r7, r2, r7
 8000712:	42ba      	cmp	r2, r7
 8000714:	4192      	sbcs	r2, r2
 8000716:	4252      	negs	r2, r2
 8000718:	4665      	mov	r5, ip
 800071a:	4644      	mov	r4, r8
 800071c:	1a9e      	subs	r6, r3, r2
 800071e:	e783      	b.n	8000628 <__aeabi_dadd+0xa4>
 8000720:	2900      	cmp	r1, #0
 8000722:	dc00      	bgt.n	8000726 <__aeabi_dadd+0x1a2>
 8000724:	e09c      	b.n	8000860 <__aeabi_dadd+0x2dc>
 8000726:	4647      	mov	r7, r8
 8000728:	2f00      	cmp	r7, #0
 800072a:	d167      	bne.n	80007fc <__aeabi_dadd+0x278>
 800072c:	001f      	movs	r7, r3
 800072e:	4317      	orrs	r7, r2
 8000730:	d100      	bne.n	8000734 <__aeabi_dadd+0x1b0>
 8000732:	e0e4      	b.n	80008fe <__aeabi_dadd+0x37a>
 8000734:	1e48      	subs	r0, r1, #1
 8000736:	2901      	cmp	r1, #1
 8000738:	d100      	bne.n	800073c <__aeabi_dadd+0x1b8>
 800073a:	e19b      	b.n	8000a74 <__aeabi_dadd+0x4f0>
 800073c:	4f74      	ldr	r7, [pc, #464]	@ (8000910 <__aeabi_dadd+0x38c>)
 800073e:	42b9      	cmp	r1, r7
 8000740:	d100      	bne.n	8000744 <__aeabi_dadd+0x1c0>
 8000742:	e0eb      	b.n	800091c <__aeabi_dadd+0x398>
 8000744:	2701      	movs	r7, #1
 8000746:	0001      	movs	r1, r0
 8000748:	2838      	cmp	r0, #56	@ 0x38
 800074a:	dc11      	bgt.n	8000770 <__aeabi_dadd+0x1ec>
 800074c:	291f      	cmp	r1, #31
 800074e:	dd00      	ble.n	8000752 <__aeabi_dadd+0x1ce>
 8000750:	e1c7      	b.n	8000ae2 <__aeabi_dadd+0x55e>
 8000752:	2720      	movs	r7, #32
 8000754:	1a78      	subs	r0, r7, r1
 8000756:	001f      	movs	r7, r3
 8000758:	4684      	mov	ip, r0
 800075a:	4087      	lsls	r7, r0
 800075c:	0010      	movs	r0, r2
 800075e:	40c8      	lsrs	r0, r1
 8000760:	4307      	orrs	r7, r0
 8000762:	4660      	mov	r0, ip
 8000764:	4082      	lsls	r2, r0
 8000766:	40cb      	lsrs	r3, r1
 8000768:	1e50      	subs	r0, r2, #1
 800076a:	4182      	sbcs	r2, r0
 800076c:	18f6      	adds	r6, r6, r3
 800076e:	4317      	orrs	r7, r2
 8000770:	444f      	add	r7, r9
 8000772:	454f      	cmp	r7, r9
 8000774:	4180      	sbcs	r0, r0
 8000776:	4240      	negs	r0, r0
 8000778:	1836      	adds	r6, r6, r0
 800077a:	0233      	lsls	r3, r6, #8
 800077c:	d557      	bpl.n	800082e <__aeabi_dadd+0x2aa>
 800077e:	4b64      	ldr	r3, [pc, #400]	@ (8000910 <__aeabi_dadd+0x38c>)
 8000780:	3401      	adds	r4, #1
 8000782:	429c      	cmp	r4, r3
 8000784:	d045      	beq.n	8000812 <__aeabi_dadd+0x28e>
 8000786:	2101      	movs	r1, #1
 8000788:	4b62      	ldr	r3, [pc, #392]	@ (8000914 <__aeabi_dadd+0x390>)
 800078a:	087a      	lsrs	r2, r7, #1
 800078c:	401e      	ands	r6, r3
 800078e:	4039      	ands	r1, r7
 8000790:	430a      	orrs	r2, r1
 8000792:	07f7      	lsls	r7, r6, #31
 8000794:	4317      	orrs	r7, r2
 8000796:	0876      	lsrs	r6, r6, #1
 8000798:	e771      	b.n	800067e <__aeabi_dadd+0xfa>
 800079a:	001f      	movs	r7, r3
 800079c:	4317      	orrs	r7, r2
 800079e:	d100      	bne.n	80007a2 <__aeabi_dadd+0x21e>
 80007a0:	e0ad      	b.n	80008fe <__aeabi_dadd+0x37a>
 80007a2:	1e4f      	subs	r7, r1, #1
 80007a4:	46bc      	mov	ip, r7
 80007a6:	2901      	cmp	r1, #1
 80007a8:	d100      	bne.n	80007ac <__aeabi_dadd+0x228>
 80007aa:	e182      	b.n	8000ab2 <__aeabi_dadd+0x52e>
 80007ac:	4f58      	ldr	r7, [pc, #352]	@ (8000910 <__aeabi_dadd+0x38c>)
 80007ae:	42b9      	cmp	r1, r7
 80007b0:	d100      	bne.n	80007b4 <__aeabi_dadd+0x230>
 80007b2:	e190      	b.n	8000ad6 <__aeabi_dadd+0x552>
 80007b4:	4661      	mov	r1, ip
 80007b6:	2701      	movs	r7, #1
 80007b8:	2938      	cmp	r1, #56	@ 0x38
 80007ba:	dd00      	ble.n	80007be <__aeabi_dadd+0x23a>
 80007bc:	e72e      	b.n	800061c <__aeabi_dadd+0x98>
 80007be:	e718      	b.n	80005f2 <__aeabi_dadd+0x6e>
 80007c0:	4f55      	ldr	r7, [pc, #340]	@ (8000918 <__aeabi_dadd+0x394>)
 80007c2:	1c61      	adds	r1, r4, #1
 80007c4:	4239      	tst	r1, r7
 80007c6:	d000      	beq.n	80007ca <__aeabi_dadd+0x246>
 80007c8:	e0d0      	b.n	800096c <__aeabi_dadd+0x3e8>
 80007ca:	0031      	movs	r1, r6
 80007cc:	4648      	mov	r0, r9
 80007ce:	001f      	movs	r7, r3
 80007d0:	4301      	orrs	r1, r0
 80007d2:	4317      	orrs	r7, r2
 80007d4:	2c00      	cmp	r4, #0
 80007d6:	d000      	beq.n	80007da <__aeabi_dadd+0x256>
 80007d8:	e13d      	b.n	8000a56 <__aeabi_dadd+0x4d2>
 80007da:	2900      	cmp	r1, #0
 80007dc:	d100      	bne.n	80007e0 <__aeabi_dadd+0x25c>
 80007de:	e1bc      	b.n	8000b5a <__aeabi_dadd+0x5d6>
 80007e0:	2f00      	cmp	r7, #0
 80007e2:	d000      	beq.n	80007e6 <__aeabi_dadd+0x262>
 80007e4:	e1bf      	b.n	8000b66 <__aeabi_dadd+0x5e2>
 80007e6:	464b      	mov	r3, r9
 80007e8:	2100      	movs	r1, #0
 80007ea:	08d8      	lsrs	r0, r3, #3
 80007ec:	0777      	lsls	r7, r6, #29
 80007ee:	4307      	orrs	r7, r0
 80007f0:	08f0      	lsrs	r0, r6, #3
 80007f2:	0306      	lsls	r6, r0, #12
 80007f4:	054c      	lsls	r4, r1, #21
 80007f6:	0b36      	lsrs	r6, r6, #12
 80007f8:	0d64      	lsrs	r4, r4, #21
 80007fa:	e00c      	b.n	8000816 <__aeabi_dadd+0x292>
 80007fc:	4f44      	ldr	r7, [pc, #272]	@ (8000910 <__aeabi_dadd+0x38c>)
 80007fe:	42bc      	cmp	r4, r7
 8000800:	d100      	bne.n	8000804 <__aeabi_dadd+0x280>
 8000802:	e08b      	b.n	800091c <__aeabi_dadd+0x398>
 8000804:	2701      	movs	r7, #1
 8000806:	2938      	cmp	r1, #56	@ 0x38
 8000808:	dcb2      	bgt.n	8000770 <__aeabi_dadd+0x1ec>
 800080a:	2780      	movs	r7, #128	@ 0x80
 800080c:	043f      	lsls	r7, r7, #16
 800080e:	433b      	orrs	r3, r7
 8000810:	e79c      	b.n	800074c <__aeabi_dadd+0x1c8>
 8000812:	2600      	movs	r6, #0
 8000814:	2700      	movs	r7, #0
 8000816:	0524      	lsls	r4, r4, #20
 8000818:	4334      	orrs	r4, r6
 800081a:	07ed      	lsls	r5, r5, #31
 800081c:	432c      	orrs	r4, r5
 800081e:	0038      	movs	r0, r7
 8000820:	0021      	movs	r1, r4
 8000822:	b002      	add	sp, #8
 8000824:	bce0      	pop	{r5, r6, r7}
 8000826:	46ba      	mov	sl, r7
 8000828:	46b1      	mov	r9, r6
 800082a:	46a8      	mov	r8, r5
 800082c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800082e:	077b      	lsls	r3, r7, #29
 8000830:	d004      	beq.n	800083c <__aeabi_dadd+0x2b8>
 8000832:	230f      	movs	r3, #15
 8000834:	403b      	ands	r3, r7
 8000836:	2b04      	cmp	r3, #4
 8000838:	d000      	beq.n	800083c <__aeabi_dadd+0x2b8>
 800083a:	e728      	b.n	800068e <__aeabi_dadd+0x10a>
 800083c:	08f8      	lsrs	r0, r7, #3
 800083e:	4b34      	ldr	r3, [pc, #208]	@ (8000910 <__aeabi_dadd+0x38c>)
 8000840:	0777      	lsls	r7, r6, #29
 8000842:	4307      	orrs	r7, r0
 8000844:	08f0      	lsrs	r0, r6, #3
 8000846:	429c      	cmp	r4, r3
 8000848:	d000      	beq.n	800084c <__aeabi_dadd+0x2c8>
 800084a:	e24a      	b.n	8000ce2 <__aeabi_dadd+0x75e>
 800084c:	003b      	movs	r3, r7
 800084e:	4303      	orrs	r3, r0
 8000850:	d059      	beq.n	8000906 <__aeabi_dadd+0x382>
 8000852:	2680      	movs	r6, #128	@ 0x80
 8000854:	0336      	lsls	r6, r6, #12
 8000856:	4306      	orrs	r6, r0
 8000858:	0336      	lsls	r6, r6, #12
 800085a:	4c2d      	ldr	r4, [pc, #180]	@ (8000910 <__aeabi_dadd+0x38c>)
 800085c:	0b36      	lsrs	r6, r6, #12
 800085e:	e7da      	b.n	8000816 <__aeabi_dadd+0x292>
 8000860:	2900      	cmp	r1, #0
 8000862:	d061      	beq.n	8000928 <__aeabi_dadd+0x3a4>
 8000864:	4641      	mov	r1, r8
 8000866:	1b09      	subs	r1, r1, r4
 8000868:	2c00      	cmp	r4, #0
 800086a:	d100      	bne.n	800086e <__aeabi_dadd+0x2ea>
 800086c:	e0b9      	b.n	80009e2 <__aeabi_dadd+0x45e>
 800086e:	4c28      	ldr	r4, [pc, #160]	@ (8000910 <__aeabi_dadd+0x38c>)
 8000870:	45a0      	cmp	r8, r4
 8000872:	d100      	bne.n	8000876 <__aeabi_dadd+0x2f2>
 8000874:	e1a5      	b.n	8000bc2 <__aeabi_dadd+0x63e>
 8000876:	2701      	movs	r7, #1
 8000878:	2938      	cmp	r1, #56	@ 0x38
 800087a:	dc13      	bgt.n	80008a4 <__aeabi_dadd+0x320>
 800087c:	2480      	movs	r4, #128	@ 0x80
 800087e:	0424      	lsls	r4, r4, #16
 8000880:	4326      	orrs	r6, r4
 8000882:	291f      	cmp	r1, #31
 8000884:	dd00      	ble.n	8000888 <__aeabi_dadd+0x304>
 8000886:	e1c8      	b.n	8000c1a <__aeabi_dadd+0x696>
 8000888:	2420      	movs	r4, #32
 800088a:	0037      	movs	r7, r6
 800088c:	4648      	mov	r0, r9
 800088e:	1a64      	subs	r4, r4, r1
 8000890:	40a7      	lsls	r7, r4
 8000892:	40c8      	lsrs	r0, r1
 8000894:	4307      	orrs	r7, r0
 8000896:	4648      	mov	r0, r9
 8000898:	40a0      	lsls	r0, r4
 800089a:	40ce      	lsrs	r6, r1
 800089c:	1e44      	subs	r4, r0, #1
 800089e:	41a0      	sbcs	r0, r4
 80008a0:	199b      	adds	r3, r3, r6
 80008a2:	4307      	orrs	r7, r0
 80008a4:	18bf      	adds	r7, r7, r2
 80008a6:	4297      	cmp	r7, r2
 80008a8:	4192      	sbcs	r2, r2
 80008aa:	4252      	negs	r2, r2
 80008ac:	4644      	mov	r4, r8
 80008ae:	18d6      	adds	r6, r2, r3
 80008b0:	e763      	b.n	800077a <__aeabi_dadd+0x1f6>
 80008b2:	0038      	movs	r0, r7
 80008b4:	f001 fed0 	bl	8002658 <__clzsi2>
 80008b8:	0003      	movs	r3, r0
 80008ba:	3318      	adds	r3, #24
 80008bc:	2b1f      	cmp	r3, #31
 80008be:	dc00      	bgt.n	80008c2 <__aeabi_dadd+0x33e>
 80008c0:	e6bf      	b.n	8000642 <__aeabi_dadd+0xbe>
 80008c2:	003a      	movs	r2, r7
 80008c4:	3808      	subs	r0, #8
 80008c6:	4082      	lsls	r2, r0
 80008c8:	429c      	cmp	r4, r3
 80008ca:	dd00      	ble.n	80008ce <__aeabi_dadd+0x34a>
 80008cc:	e083      	b.n	80009d6 <__aeabi_dadd+0x452>
 80008ce:	1b1b      	subs	r3, r3, r4
 80008d0:	1c58      	adds	r0, r3, #1
 80008d2:	281f      	cmp	r0, #31
 80008d4:	dc00      	bgt.n	80008d8 <__aeabi_dadd+0x354>
 80008d6:	e1b4      	b.n	8000c42 <__aeabi_dadd+0x6be>
 80008d8:	0017      	movs	r7, r2
 80008da:	3b1f      	subs	r3, #31
 80008dc:	40df      	lsrs	r7, r3
 80008de:	2820      	cmp	r0, #32
 80008e0:	d005      	beq.n	80008ee <__aeabi_dadd+0x36a>
 80008e2:	2340      	movs	r3, #64	@ 0x40
 80008e4:	1a1b      	subs	r3, r3, r0
 80008e6:	409a      	lsls	r2, r3
 80008e8:	1e53      	subs	r3, r2, #1
 80008ea:	419a      	sbcs	r2, r3
 80008ec:	4317      	orrs	r7, r2
 80008ee:	2400      	movs	r4, #0
 80008f0:	2f00      	cmp	r7, #0
 80008f2:	d00a      	beq.n	800090a <__aeabi_dadd+0x386>
 80008f4:	077b      	lsls	r3, r7, #29
 80008f6:	d000      	beq.n	80008fa <__aeabi_dadd+0x376>
 80008f8:	e6c4      	b.n	8000684 <__aeabi_dadd+0x100>
 80008fa:	0026      	movs	r6, r4
 80008fc:	e79e      	b.n	800083c <__aeabi_dadd+0x2b8>
 80008fe:	464b      	mov	r3, r9
 8000900:	000c      	movs	r4, r1
 8000902:	08d8      	lsrs	r0, r3, #3
 8000904:	e79b      	b.n	800083e <__aeabi_dadd+0x2ba>
 8000906:	2700      	movs	r7, #0
 8000908:	4c01      	ldr	r4, [pc, #4]	@ (8000910 <__aeabi_dadd+0x38c>)
 800090a:	2600      	movs	r6, #0
 800090c:	e783      	b.n	8000816 <__aeabi_dadd+0x292>
 800090e:	46c0      	nop			@ (mov r8, r8)
 8000910:	000007ff 	.word	0x000007ff
 8000914:	ff7fffff 	.word	0xff7fffff
 8000918:	000007fe 	.word	0x000007fe
 800091c:	464b      	mov	r3, r9
 800091e:	0777      	lsls	r7, r6, #29
 8000920:	08d8      	lsrs	r0, r3, #3
 8000922:	4307      	orrs	r7, r0
 8000924:	08f0      	lsrs	r0, r6, #3
 8000926:	e791      	b.n	800084c <__aeabi_dadd+0x2c8>
 8000928:	4fcd      	ldr	r7, [pc, #820]	@ (8000c60 <__aeabi_dadd+0x6dc>)
 800092a:	1c61      	adds	r1, r4, #1
 800092c:	4239      	tst	r1, r7
 800092e:	d16b      	bne.n	8000a08 <__aeabi_dadd+0x484>
 8000930:	0031      	movs	r1, r6
 8000932:	4648      	mov	r0, r9
 8000934:	4301      	orrs	r1, r0
 8000936:	2c00      	cmp	r4, #0
 8000938:	d000      	beq.n	800093c <__aeabi_dadd+0x3b8>
 800093a:	e14b      	b.n	8000bd4 <__aeabi_dadd+0x650>
 800093c:	001f      	movs	r7, r3
 800093e:	4317      	orrs	r7, r2
 8000940:	2900      	cmp	r1, #0
 8000942:	d100      	bne.n	8000946 <__aeabi_dadd+0x3c2>
 8000944:	e181      	b.n	8000c4a <__aeabi_dadd+0x6c6>
 8000946:	2f00      	cmp	r7, #0
 8000948:	d100      	bne.n	800094c <__aeabi_dadd+0x3c8>
 800094a:	e74c      	b.n	80007e6 <__aeabi_dadd+0x262>
 800094c:	444a      	add	r2, r9
 800094e:	454a      	cmp	r2, r9
 8000950:	4180      	sbcs	r0, r0
 8000952:	18f6      	adds	r6, r6, r3
 8000954:	4240      	negs	r0, r0
 8000956:	1836      	adds	r6, r6, r0
 8000958:	0233      	lsls	r3, r6, #8
 800095a:	d500      	bpl.n	800095e <__aeabi_dadd+0x3da>
 800095c:	e1b0      	b.n	8000cc0 <__aeabi_dadd+0x73c>
 800095e:	0017      	movs	r7, r2
 8000960:	4691      	mov	r9, r2
 8000962:	4337      	orrs	r7, r6
 8000964:	d000      	beq.n	8000968 <__aeabi_dadd+0x3e4>
 8000966:	e73e      	b.n	80007e6 <__aeabi_dadd+0x262>
 8000968:	2600      	movs	r6, #0
 800096a:	e754      	b.n	8000816 <__aeabi_dadd+0x292>
 800096c:	4649      	mov	r1, r9
 800096e:	1a89      	subs	r1, r1, r2
 8000970:	4688      	mov	r8, r1
 8000972:	45c1      	cmp	r9, r8
 8000974:	41bf      	sbcs	r7, r7
 8000976:	1af1      	subs	r1, r6, r3
 8000978:	427f      	negs	r7, r7
 800097a:	1bc9      	subs	r1, r1, r7
 800097c:	020f      	lsls	r7, r1, #8
 800097e:	d461      	bmi.n	8000a44 <__aeabi_dadd+0x4c0>
 8000980:	4647      	mov	r7, r8
 8000982:	430f      	orrs	r7, r1
 8000984:	d100      	bne.n	8000988 <__aeabi_dadd+0x404>
 8000986:	e0bd      	b.n	8000b04 <__aeabi_dadd+0x580>
 8000988:	000e      	movs	r6, r1
 800098a:	4647      	mov	r7, r8
 800098c:	e651      	b.n	8000632 <__aeabi_dadd+0xae>
 800098e:	4cb5      	ldr	r4, [pc, #724]	@ (8000c64 <__aeabi_dadd+0x6e0>)
 8000990:	45a0      	cmp	r8, r4
 8000992:	d100      	bne.n	8000996 <__aeabi_dadd+0x412>
 8000994:	e100      	b.n	8000b98 <__aeabi_dadd+0x614>
 8000996:	2701      	movs	r7, #1
 8000998:	2938      	cmp	r1, #56	@ 0x38
 800099a:	dd00      	ble.n	800099e <__aeabi_dadd+0x41a>
 800099c:	e6b8      	b.n	8000710 <__aeabi_dadd+0x18c>
 800099e:	2480      	movs	r4, #128	@ 0x80
 80009a0:	0424      	lsls	r4, r4, #16
 80009a2:	4326      	orrs	r6, r4
 80009a4:	e6a3      	b.n	80006ee <__aeabi_dadd+0x16a>
 80009a6:	4eb0      	ldr	r6, [pc, #704]	@ (8000c68 <__aeabi_dadd+0x6e4>)
 80009a8:	1ae4      	subs	r4, r4, r3
 80009aa:	4016      	ands	r6, r2
 80009ac:	077b      	lsls	r3, r7, #29
 80009ae:	d000      	beq.n	80009b2 <__aeabi_dadd+0x42e>
 80009b0:	e73f      	b.n	8000832 <__aeabi_dadd+0x2ae>
 80009b2:	e743      	b.n	800083c <__aeabi_dadd+0x2b8>
 80009b4:	000f      	movs	r7, r1
 80009b6:	0018      	movs	r0, r3
 80009b8:	3f20      	subs	r7, #32
 80009ba:	40f8      	lsrs	r0, r7
 80009bc:	4684      	mov	ip, r0
 80009be:	2920      	cmp	r1, #32
 80009c0:	d003      	beq.n	80009ca <__aeabi_dadd+0x446>
 80009c2:	2740      	movs	r7, #64	@ 0x40
 80009c4:	1a79      	subs	r1, r7, r1
 80009c6:	408b      	lsls	r3, r1
 80009c8:	431a      	orrs	r2, r3
 80009ca:	1e53      	subs	r3, r2, #1
 80009cc:	419a      	sbcs	r2, r3
 80009ce:	4663      	mov	r3, ip
 80009d0:	0017      	movs	r7, r2
 80009d2:	431f      	orrs	r7, r3
 80009d4:	e622      	b.n	800061c <__aeabi_dadd+0x98>
 80009d6:	48a4      	ldr	r0, [pc, #656]	@ (8000c68 <__aeabi_dadd+0x6e4>)
 80009d8:	1ae1      	subs	r1, r4, r3
 80009da:	4010      	ands	r0, r2
 80009dc:	0747      	lsls	r7, r0, #29
 80009de:	08c0      	lsrs	r0, r0, #3
 80009e0:	e707      	b.n	80007f2 <__aeabi_dadd+0x26e>
 80009e2:	0034      	movs	r4, r6
 80009e4:	4648      	mov	r0, r9
 80009e6:	4304      	orrs	r4, r0
 80009e8:	d100      	bne.n	80009ec <__aeabi_dadd+0x468>
 80009ea:	e0fa      	b.n	8000be2 <__aeabi_dadd+0x65e>
 80009ec:	1e4c      	subs	r4, r1, #1
 80009ee:	2901      	cmp	r1, #1
 80009f0:	d100      	bne.n	80009f4 <__aeabi_dadd+0x470>
 80009f2:	e0d7      	b.n	8000ba4 <__aeabi_dadd+0x620>
 80009f4:	4f9b      	ldr	r7, [pc, #620]	@ (8000c64 <__aeabi_dadd+0x6e0>)
 80009f6:	42b9      	cmp	r1, r7
 80009f8:	d100      	bne.n	80009fc <__aeabi_dadd+0x478>
 80009fa:	e0e2      	b.n	8000bc2 <__aeabi_dadd+0x63e>
 80009fc:	2701      	movs	r7, #1
 80009fe:	2c38      	cmp	r4, #56	@ 0x38
 8000a00:	dd00      	ble.n	8000a04 <__aeabi_dadd+0x480>
 8000a02:	e74f      	b.n	80008a4 <__aeabi_dadd+0x320>
 8000a04:	0021      	movs	r1, r4
 8000a06:	e73c      	b.n	8000882 <__aeabi_dadd+0x2fe>
 8000a08:	4c96      	ldr	r4, [pc, #600]	@ (8000c64 <__aeabi_dadd+0x6e0>)
 8000a0a:	42a1      	cmp	r1, r4
 8000a0c:	d100      	bne.n	8000a10 <__aeabi_dadd+0x48c>
 8000a0e:	e0dd      	b.n	8000bcc <__aeabi_dadd+0x648>
 8000a10:	444a      	add	r2, r9
 8000a12:	454a      	cmp	r2, r9
 8000a14:	4180      	sbcs	r0, r0
 8000a16:	18f3      	adds	r3, r6, r3
 8000a18:	4240      	negs	r0, r0
 8000a1a:	1818      	adds	r0, r3, r0
 8000a1c:	07c7      	lsls	r7, r0, #31
 8000a1e:	0852      	lsrs	r2, r2, #1
 8000a20:	4317      	orrs	r7, r2
 8000a22:	0846      	lsrs	r6, r0, #1
 8000a24:	0752      	lsls	r2, r2, #29
 8000a26:	d005      	beq.n	8000a34 <__aeabi_dadd+0x4b0>
 8000a28:	220f      	movs	r2, #15
 8000a2a:	000c      	movs	r4, r1
 8000a2c:	403a      	ands	r2, r7
 8000a2e:	2a04      	cmp	r2, #4
 8000a30:	d000      	beq.n	8000a34 <__aeabi_dadd+0x4b0>
 8000a32:	e62c      	b.n	800068e <__aeabi_dadd+0x10a>
 8000a34:	0776      	lsls	r6, r6, #29
 8000a36:	08ff      	lsrs	r7, r7, #3
 8000a38:	4337      	orrs	r7, r6
 8000a3a:	0900      	lsrs	r0, r0, #4
 8000a3c:	e6d9      	b.n	80007f2 <__aeabi_dadd+0x26e>
 8000a3e:	2700      	movs	r7, #0
 8000a40:	2600      	movs	r6, #0
 8000a42:	e6e8      	b.n	8000816 <__aeabi_dadd+0x292>
 8000a44:	4649      	mov	r1, r9
 8000a46:	1a57      	subs	r7, r2, r1
 8000a48:	42ba      	cmp	r2, r7
 8000a4a:	4192      	sbcs	r2, r2
 8000a4c:	1b9e      	subs	r6, r3, r6
 8000a4e:	4252      	negs	r2, r2
 8000a50:	4665      	mov	r5, ip
 8000a52:	1ab6      	subs	r6, r6, r2
 8000a54:	e5ed      	b.n	8000632 <__aeabi_dadd+0xae>
 8000a56:	2900      	cmp	r1, #0
 8000a58:	d000      	beq.n	8000a5c <__aeabi_dadd+0x4d8>
 8000a5a:	e0c6      	b.n	8000bea <__aeabi_dadd+0x666>
 8000a5c:	2f00      	cmp	r7, #0
 8000a5e:	d167      	bne.n	8000b30 <__aeabi_dadd+0x5ac>
 8000a60:	2680      	movs	r6, #128	@ 0x80
 8000a62:	2500      	movs	r5, #0
 8000a64:	4c7f      	ldr	r4, [pc, #508]	@ (8000c64 <__aeabi_dadd+0x6e0>)
 8000a66:	0336      	lsls	r6, r6, #12
 8000a68:	e6d5      	b.n	8000816 <__aeabi_dadd+0x292>
 8000a6a:	4665      	mov	r5, ip
 8000a6c:	000c      	movs	r4, r1
 8000a6e:	001e      	movs	r6, r3
 8000a70:	08d0      	lsrs	r0, r2, #3
 8000a72:	e6e4      	b.n	800083e <__aeabi_dadd+0x2ba>
 8000a74:	444a      	add	r2, r9
 8000a76:	454a      	cmp	r2, r9
 8000a78:	4180      	sbcs	r0, r0
 8000a7a:	18f3      	adds	r3, r6, r3
 8000a7c:	4240      	negs	r0, r0
 8000a7e:	1818      	adds	r0, r3, r0
 8000a80:	0011      	movs	r1, r2
 8000a82:	0203      	lsls	r3, r0, #8
 8000a84:	d400      	bmi.n	8000a88 <__aeabi_dadd+0x504>
 8000a86:	e096      	b.n	8000bb6 <__aeabi_dadd+0x632>
 8000a88:	4b77      	ldr	r3, [pc, #476]	@ (8000c68 <__aeabi_dadd+0x6e4>)
 8000a8a:	0849      	lsrs	r1, r1, #1
 8000a8c:	4018      	ands	r0, r3
 8000a8e:	07c3      	lsls	r3, r0, #31
 8000a90:	430b      	orrs	r3, r1
 8000a92:	0844      	lsrs	r4, r0, #1
 8000a94:	0749      	lsls	r1, r1, #29
 8000a96:	d100      	bne.n	8000a9a <__aeabi_dadd+0x516>
 8000a98:	e129      	b.n	8000cee <__aeabi_dadd+0x76a>
 8000a9a:	220f      	movs	r2, #15
 8000a9c:	401a      	ands	r2, r3
 8000a9e:	2a04      	cmp	r2, #4
 8000aa0:	d100      	bne.n	8000aa4 <__aeabi_dadd+0x520>
 8000aa2:	e0ea      	b.n	8000c7a <__aeabi_dadd+0x6f6>
 8000aa4:	1d1f      	adds	r7, r3, #4
 8000aa6:	429f      	cmp	r7, r3
 8000aa8:	41b6      	sbcs	r6, r6
 8000aaa:	4276      	negs	r6, r6
 8000aac:	1936      	adds	r6, r6, r4
 8000aae:	2402      	movs	r4, #2
 8000ab0:	e6c4      	b.n	800083c <__aeabi_dadd+0x2b8>
 8000ab2:	4649      	mov	r1, r9
 8000ab4:	1a8f      	subs	r7, r1, r2
 8000ab6:	45b9      	cmp	r9, r7
 8000ab8:	4180      	sbcs	r0, r0
 8000aba:	1af6      	subs	r6, r6, r3
 8000abc:	4240      	negs	r0, r0
 8000abe:	1a36      	subs	r6, r6, r0
 8000ac0:	0233      	lsls	r3, r6, #8
 8000ac2:	d406      	bmi.n	8000ad2 <__aeabi_dadd+0x54e>
 8000ac4:	0773      	lsls	r3, r6, #29
 8000ac6:	08ff      	lsrs	r7, r7, #3
 8000ac8:	2101      	movs	r1, #1
 8000aca:	431f      	orrs	r7, r3
 8000acc:	08f0      	lsrs	r0, r6, #3
 8000ace:	e690      	b.n	80007f2 <__aeabi_dadd+0x26e>
 8000ad0:	4665      	mov	r5, ip
 8000ad2:	2401      	movs	r4, #1
 8000ad4:	e5ab      	b.n	800062e <__aeabi_dadd+0xaa>
 8000ad6:	464b      	mov	r3, r9
 8000ad8:	0777      	lsls	r7, r6, #29
 8000ada:	08d8      	lsrs	r0, r3, #3
 8000adc:	4307      	orrs	r7, r0
 8000ade:	08f0      	lsrs	r0, r6, #3
 8000ae0:	e6b4      	b.n	800084c <__aeabi_dadd+0x2c8>
 8000ae2:	000f      	movs	r7, r1
 8000ae4:	0018      	movs	r0, r3
 8000ae6:	3f20      	subs	r7, #32
 8000ae8:	40f8      	lsrs	r0, r7
 8000aea:	4684      	mov	ip, r0
 8000aec:	2920      	cmp	r1, #32
 8000aee:	d003      	beq.n	8000af8 <__aeabi_dadd+0x574>
 8000af0:	2740      	movs	r7, #64	@ 0x40
 8000af2:	1a79      	subs	r1, r7, r1
 8000af4:	408b      	lsls	r3, r1
 8000af6:	431a      	orrs	r2, r3
 8000af8:	1e53      	subs	r3, r2, #1
 8000afa:	419a      	sbcs	r2, r3
 8000afc:	4663      	mov	r3, ip
 8000afe:	0017      	movs	r7, r2
 8000b00:	431f      	orrs	r7, r3
 8000b02:	e635      	b.n	8000770 <__aeabi_dadd+0x1ec>
 8000b04:	2500      	movs	r5, #0
 8000b06:	2400      	movs	r4, #0
 8000b08:	2600      	movs	r6, #0
 8000b0a:	e684      	b.n	8000816 <__aeabi_dadd+0x292>
 8000b0c:	000c      	movs	r4, r1
 8000b0e:	0035      	movs	r5, r6
 8000b10:	3c20      	subs	r4, #32
 8000b12:	40e5      	lsrs	r5, r4
 8000b14:	2920      	cmp	r1, #32
 8000b16:	d005      	beq.n	8000b24 <__aeabi_dadd+0x5a0>
 8000b18:	2440      	movs	r4, #64	@ 0x40
 8000b1a:	1a61      	subs	r1, r4, r1
 8000b1c:	408e      	lsls	r6, r1
 8000b1e:	4649      	mov	r1, r9
 8000b20:	4331      	orrs	r1, r6
 8000b22:	4689      	mov	r9, r1
 8000b24:	4648      	mov	r0, r9
 8000b26:	1e41      	subs	r1, r0, #1
 8000b28:	4188      	sbcs	r0, r1
 8000b2a:	0007      	movs	r7, r0
 8000b2c:	432f      	orrs	r7, r5
 8000b2e:	e5ef      	b.n	8000710 <__aeabi_dadd+0x18c>
 8000b30:	08d2      	lsrs	r2, r2, #3
 8000b32:	075f      	lsls	r7, r3, #29
 8000b34:	4665      	mov	r5, ip
 8000b36:	4317      	orrs	r7, r2
 8000b38:	08d8      	lsrs	r0, r3, #3
 8000b3a:	e687      	b.n	800084c <__aeabi_dadd+0x2c8>
 8000b3c:	1a17      	subs	r7, r2, r0
 8000b3e:	42ba      	cmp	r2, r7
 8000b40:	4192      	sbcs	r2, r2
 8000b42:	1b9e      	subs	r6, r3, r6
 8000b44:	4252      	negs	r2, r2
 8000b46:	1ab6      	subs	r6, r6, r2
 8000b48:	0233      	lsls	r3, r6, #8
 8000b4a:	d4c1      	bmi.n	8000ad0 <__aeabi_dadd+0x54c>
 8000b4c:	0773      	lsls	r3, r6, #29
 8000b4e:	08ff      	lsrs	r7, r7, #3
 8000b50:	4665      	mov	r5, ip
 8000b52:	2101      	movs	r1, #1
 8000b54:	431f      	orrs	r7, r3
 8000b56:	08f0      	lsrs	r0, r6, #3
 8000b58:	e64b      	b.n	80007f2 <__aeabi_dadd+0x26e>
 8000b5a:	2f00      	cmp	r7, #0
 8000b5c:	d07b      	beq.n	8000c56 <__aeabi_dadd+0x6d2>
 8000b5e:	4665      	mov	r5, ip
 8000b60:	001e      	movs	r6, r3
 8000b62:	4691      	mov	r9, r2
 8000b64:	e63f      	b.n	80007e6 <__aeabi_dadd+0x262>
 8000b66:	1a81      	subs	r1, r0, r2
 8000b68:	4688      	mov	r8, r1
 8000b6a:	45c1      	cmp	r9, r8
 8000b6c:	41a4      	sbcs	r4, r4
 8000b6e:	1af1      	subs	r1, r6, r3
 8000b70:	4264      	negs	r4, r4
 8000b72:	1b09      	subs	r1, r1, r4
 8000b74:	2480      	movs	r4, #128	@ 0x80
 8000b76:	0424      	lsls	r4, r4, #16
 8000b78:	4221      	tst	r1, r4
 8000b7a:	d077      	beq.n	8000c6c <__aeabi_dadd+0x6e8>
 8000b7c:	1a10      	subs	r0, r2, r0
 8000b7e:	4282      	cmp	r2, r0
 8000b80:	4192      	sbcs	r2, r2
 8000b82:	0007      	movs	r7, r0
 8000b84:	1b9e      	subs	r6, r3, r6
 8000b86:	4252      	negs	r2, r2
 8000b88:	1ab6      	subs	r6, r6, r2
 8000b8a:	4337      	orrs	r7, r6
 8000b8c:	d000      	beq.n	8000b90 <__aeabi_dadd+0x60c>
 8000b8e:	e0a0      	b.n	8000cd2 <__aeabi_dadd+0x74e>
 8000b90:	4665      	mov	r5, ip
 8000b92:	2400      	movs	r4, #0
 8000b94:	2600      	movs	r6, #0
 8000b96:	e63e      	b.n	8000816 <__aeabi_dadd+0x292>
 8000b98:	075f      	lsls	r7, r3, #29
 8000b9a:	08d2      	lsrs	r2, r2, #3
 8000b9c:	4665      	mov	r5, ip
 8000b9e:	4317      	orrs	r7, r2
 8000ba0:	08d8      	lsrs	r0, r3, #3
 8000ba2:	e653      	b.n	800084c <__aeabi_dadd+0x2c8>
 8000ba4:	1881      	adds	r1, r0, r2
 8000ba6:	4291      	cmp	r1, r2
 8000ba8:	4192      	sbcs	r2, r2
 8000baa:	18f0      	adds	r0, r6, r3
 8000bac:	4252      	negs	r2, r2
 8000bae:	1880      	adds	r0, r0, r2
 8000bb0:	0203      	lsls	r3, r0, #8
 8000bb2:	d500      	bpl.n	8000bb6 <__aeabi_dadd+0x632>
 8000bb4:	e768      	b.n	8000a88 <__aeabi_dadd+0x504>
 8000bb6:	0747      	lsls	r7, r0, #29
 8000bb8:	08c9      	lsrs	r1, r1, #3
 8000bba:	430f      	orrs	r7, r1
 8000bbc:	08c0      	lsrs	r0, r0, #3
 8000bbe:	2101      	movs	r1, #1
 8000bc0:	e617      	b.n	80007f2 <__aeabi_dadd+0x26e>
 8000bc2:	08d2      	lsrs	r2, r2, #3
 8000bc4:	075f      	lsls	r7, r3, #29
 8000bc6:	4317      	orrs	r7, r2
 8000bc8:	08d8      	lsrs	r0, r3, #3
 8000bca:	e63f      	b.n	800084c <__aeabi_dadd+0x2c8>
 8000bcc:	000c      	movs	r4, r1
 8000bce:	2600      	movs	r6, #0
 8000bd0:	2700      	movs	r7, #0
 8000bd2:	e620      	b.n	8000816 <__aeabi_dadd+0x292>
 8000bd4:	2900      	cmp	r1, #0
 8000bd6:	d156      	bne.n	8000c86 <__aeabi_dadd+0x702>
 8000bd8:	075f      	lsls	r7, r3, #29
 8000bda:	08d2      	lsrs	r2, r2, #3
 8000bdc:	4317      	orrs	r7, r2
 8000bde:	08d8      	lsrs	r0, r3, #3
 8000be0:	e634      	b.n	800084c <__aeabi_dadd+0x2c8>
 8000be2:	000c      	movs	r4, r1
 8000be4:	001e      	movs	r6, r3
 8000be6:	08d0      	lsrs	r0, r2, #3
 8000be8:	e629      	b.n	800083e <__aeabi_dadd+0x2ba>
 8000bea:	08c1      	lsrs	r1, r0, #3
 8000bec:	0770      	lsls	r0, r6, #29
 8000bee:	4301      	orrs	r1, r0
 8000bf0:	08f0      	lsrs	r0, r6, #3
 8000bf2:	2f00      	cmp	r7, #0
 8000bf4:	d062      	beq.n	8000cbc <__aeabi_dadd+0x738>
 8000bf6:	2480      	movs	r4, #128	@ 0x80
 8000bf8:	0324      	lsls	r4, r4, #12
 8000bfa:	4220      	tst	r0, r4
 8000bfc:	d007      	beq.n	8000c0e <__aeabi_dadd+0x68a>
 8000bfe:	08de      	lsrs	r6, r3, #3
 8000c00:	4226      	tst	r6, r4
 8000c02:	d104      	bne.n	8000c0e <__aeabi_dadd+0x68a>
 8000c04:	4665      	mov	r5, ip
 8000c06:	0030      	movs	r0, r6
 8000c08:	08d1      	lsrs	r1, r2, #3
 8000c0a:	075b      	lsls	r3, r3, #29
 8000c0c:	4319      	orrs	r1, r3
 8000c0e:	0f4f      	lsrs	r7, r1, #29
 8000c10:	00c9      	lsls	r1, r1, #3
 8000c12:	08c9      	lsrs	r1, r1, #3
 8000c14:	077f      	lsls	r7, r7, #29
 8000c16:	430f      	orrs	r7, r1
 8000c18:	e618      	b.n	800084c <__aeabi_dadd+0x2c8>
 8000c1a:	000c      	movs	r4, r1
 8000c1c:	0030      	movs	r0, r6
 8000c1e:	3c20      	subs	r4, #32
 8000c20:	40e0      	lsrs	r0, r4
 8000c22:	4684      	mov	ip, r0
 8000c24:	2920      	cmp	r1, #32
 8000c26:	d005      	beq.n	8000c34 <__aeabi_dadd+0x6b0>
 8000c28:	2440      	movs	r4, #64	@ 0x40
 8000c2a:	1a61      	subs	r1, r4, r1
 8000c2c:	408e      	lsls	r6, r1
 8000c2e:	4649      	mov	r1, r9
 8000c30:	4331      	orrs	r1, r6
 8000c32:	4689      	mov	r9, r1
 8000c34:	4648      	mov	r0, r9
 8000c36:	1e41      	subs	r1, r0, #1
 8000c38:	4188      	sbcs	r0, r1
 8000c3a:	4661      	mov	r1, ip
 8000c3c:	0007      	movs	r7, r0
 8000c3e:	430f      	orrs	r7, r1
 8000c40:	e630      	b.n	80008a4 <__aeabi_dadd+0x320>
 8000c42:	2120      	movs	r1, #32
 8000c44:	2700      	movs	r7, #0
 8000c46:	1a09      	subs	r1, r1, r0
 8000c48:	e50e      	b.n	8000668 <__aeabi_dadd+0xe4>
 8000c4a:	001e      	movs	r6, r3
 8000c4c:	2f00      	cmp	r7, #0
 8000c4e:	d000      	beq.n	8000c52 <__aeabi_dadd+0x6ce>
 8000c50:	e522      	b.n	8000698 <__aeabi_dadd+0x114>
 8000c52:	2400      	movs	r4, #0
 8000c54:	e758      	b.n	8000b08 <__aeabi_dadd+0x584>
 8000c56:	2500      	movs	r5, #0
 8000c58:	2400      	movs	r4, #0
 8000c5a:	2600      	movs	r6, #0
 8000c5c:	e5db      	b.n	8000816 <__aeabi_dadd+0x292>
 8000c5e:	46c0      	nop			@ (mov r8, r8)
 8000c60:	000007fe 	.word	0x000007fe
 8000c64:	000007ff 	.word	0x000007ff
 8000c68:	ff7fffff 	.word	0xff7fffff
 8000c6c:	4647      	mov	r7, r8
 8000c6e:	430f      	orrs	r7, r1
 8000c70:	d100      	bne.n	8000c74 <__aeabi_dadd+0x6f0>
 8000c72:	e747      	b.n	8000b04 <__aeabi_dadd+0x580>
 8000c74:	000e      	movs	r6, r1
 8000c76:	46c1      	mov	r9, r8
 8000c78:	e5b5      	b.n	80007e6 <__aeabi_dadd+0x262>
 8000c7a:	08df      	lsrs	r7, r3, #3
 8000c7c:	0764      	lsls	r4, r4, #29
 8000c7e:	2102      	movs	r1, #2
 8000c80:	4327      	orrs	r7, r4
 8000c82:	0900      	lsrs	r0, r0, #4
 8000c84:	e5b5      	b.n	80007f2 <__aeabi_dadd+0x26e>
 8000c86:	0019      	movs	r1, r3
 8000c88:	08c0      	lsrs	r0, r0, #3
 8000c8a:	0777      	lsls	r7, r6, #29
 8000c8c:	4307      	orrs	r7, r0
 8000c8e:	4311      	orrs	r1, r2
 8000c90:	08f0      	lsrs	r0, r6, #3
 8000c92:	2900      	cmp	r1, #0
 8000c94:	d100      	bne.n	8000c98 <__aeabi_dadd+0x714>
 8000c96:	e5d9      	b.n	800084c <__aeabi_dadd+0x2c8>
 8000c98:	2180      	movs	r1, #128	@ 0x80
 8000c9a:	0309      	lsls	r1, r1, #12
 8000c9c:	4208      	tst	r0, r1
 8000c9e:	d007      	beq.n	8000cb0 <__aeabi_dadd+0x72c>
 8000ca0:	08dc      	lsrs	r4, r3, #3
 8000ca2:	420c      	tst	r4, r1
 8000ca4:	d104      	bne.n	8000cb0 <__aeabi_dadd+0x72c>
 8000ca6:	08d2      	lsrs	r2, r2, #3
 8000ca8:	075b      	lsls	r3, r3, #29
 8000caa:	431a      	orrs	r2, r3
 8000cac:	0017      	movs	r7, r2
 8000cae:	0020      	movs	r0, r4
 8000cb0:	0f7b      	lsrs	r3, r7, #29
 8000cb2:	00ff      	lsls	r7, r7, #3
 8000cb4:	08ff      	lsrs	r7, r7, #3
 8000cb6:	075b      	lsls	r3, r3, #29
 8000cb8:	431f      	orrs	r7, r3
 8000cba:	e5c7      	b.n	800084c <__aeabi_dadd+0x2c8>
 8000cbc:	000f      	movs	r7, r1
 8000cbe:	e5c5      	b.n	800084c <__aeabi_dadd+0x2c8>
 8000cc0:	4b12      	ldr	r3, [pc, #72]	@ (8000d0c <__aeabi_dadd+0x788>)
 8000cc2:	08d2      	lsrs	r2, r2, #3
 8000cc4:	4033      	ands	r3, r6
 8000cc6:	075f      	lsls	r7, r3, #29
 8000cc8:	025b      	lsls	r3, r3, #9
 8000cca:	2401      	movs	r4, #1
 8000ccc:	4317      	orrs	r7, r2
 8000cce:	0b1e      	lsrs	r6, r3, #12
 8000cd0:	e5a1      	b.n	8000816 <__aeabi_dadd+0x292>
 8000cd2:	4226      	tst	r6, r4
 8000cd4:	d012      	beq.n	8000cfc <__aeabi_dadd+0x778>
 8000cd6:	4b0d      	ldr	r3, [pc, #52]	@ (8000d0c <__aeabi_dadd+0x788>)
 8000cd8:	4665      	mov	r5, ip
 8000cda:	0002      	movs	r2, r0
 8000cdc:	2401      	movs	r4, #1
 8000cde:	401e      	ands	r6, r3
 8000ce0:	e4e6      	b.n	80006b0 <__aeabi_dadd+0x12c>
 8000ce2:	0021      	movs	r1, r4
 8000ce4:	e585      	b.n	80007f2 <__aeabi_dadd+0x26e>
 8000ce6:	0017      	movs	r7, r2
 8000ce8:	e5a8      	b.n	800083c <__aeabi_dadd+0x2b8>
 8000cea:	003a      	movs	r2, r7
 8000cec:	e4d4      	b.n	8000698 <__aeabi_dadd+0x114>
 8000cee:	08db      	lsrs	r3, r3, #3
 8000cf0:	0764      	lsls	r4, r4, #29
 8000cf2:	431c      	orrs	r4, r3
 8000cf4:	0027      	movs	r7, r4
 8000cf6:	2102      	movs	r1, #2
 8000cf8:	0900      	lsrs	r0, r0, #4
 8000cfa:	e57a      	b.n	80007f2 <__aeabi_dadd+0x26e>
 8000cfc:	08c0      	lsrs	r0, r0, #3
 8000cfe:	0777      	lsls	r7, r6, #29
 8000d00:	4307      	orrs	r7, r0
 8000d02:	4665      	mov	r5, ip
 8000d04:	2100      	movs	r1, #0
 8000d06:	08f0      	lsrs	r0, r6, #3
 8000d08:	e573      	b.n	80007f2 <__aeabi_dadd+0x26e>
 8000d0a:	46c0      	nop			@ (mov r8, r8)
 8000d0c:	ff7fffff 	.word	0xff7fffff

08000d10 <__aeabi_ddiv>:
 8000d10:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000d12:	46de      	mov	lr, fp
 8000d14:	4645      	mov	r5, r8
 8000d16:	4657      	mov	r7, sl
 8000d18:	464e      	mov	r6, r9
 8000d1a:	b5e0      	push	{r5, r6, r7, lr}
 8000d1c:	b087      	sub	sp, #28
 8000d1e:	9200      	str	r2, [sp, #0]
 8000d20:	9301      	str	r3, [sp, #4]
 8000d22:	030b      	lsls	r3, r1, #12
 8000d24:	0b1b      	lsrs	r3, r3, #12
 8000d26:	469b      	mov	fp, r3
 8000d28:	0fca      	lsrs	r2, r1, #31
 8000d2a:	004b      	lsls	r3, r1, #1
 8000d2c:	0004      	movs	r4, r0
 8000d2e:	4680      	mov	r8, r0
 8000d30:	0d5b      	lsrs	r3, r3, #21
 8000d32:	9202      	str	r2, [sp, #8]
 8000d34:	d100      	bne.n	8000d38 <__aeabi_ddiv+0x28>
 8000d36:	e098      	b.n	8000e6a <__aeabi_ddiv+0x15a>
 8000d38:	4a7c      	ldr	r2, [pc, #496]	@ (8000f2c <__aeabi_ddiv+0x21c>)
 8000d3a:	4293      	cmp	r3, r2
 8000d3c:	d037      	beq.n	8000dae <__aeabi_ddiv+0x9e>
 8000d3e:	4659      	mov	r1, fp
 8000d40:	0f42      	lsrs	r2, r0, #29
 8000d42:	00c9      	lsls	r1, r1, #3
 8000d44:	430a      	orrs	r2, r1
 8000d46:	2180      	movs	r1, #128	@ 0x80
 8000d48:	0409      	lsls	r1, r1, #16
 8000d4a:	4311      	orrs	r1, r2
 8000d4c:	00c2      	lsls	r2, r0, #3
 8000d4e:	4690      	mov	r8, r2
 8000d50:	4a77      	ldr	r2, [pc, #476]	@ (8000f30 <__aeabi_ddiv+0x220>)
 8000d52:	4689      	mov	r9, r1
 8000d54:	4692      	mov	sl, r2
 8000d56:	449a      	add	sl, r3
 8000d58:	2300      	movs	r3, #0
 8000d5a:	2400      	movs	r4, #0
 8000d5c:	9303      	str	r3, [sp, #12]
 8000d5e:	9e00      	ldr	r6, [sp, #0]
 8000d60:	9f01      	ldr	r7, [sp, #4]
 8000d62:	033b      	lsls	r3, r7, #12
 8000d64:	0b1b      	lsrs	r3, r3, #12
 8000d66:	469b      	mov	fp, r3
 8000d68:	007b      	lsls	r3, r7, #1
 8000d6a:	0030      	movs	r0, r6
 8000d6c:	0d5b      	lsrs	r3, r3, #21
 8000d6e:	0ffd      	lsrs	r5, r7, #31
 8000d70:	2b00      	cmp	r3, #0
 8000d72:	d059      	beq.n	8000e28 <__aeabi_ddiv+0x118>
 8000d74:	4a6d      	ldr	r2, [pc, #436]	@ (8000f2c <__aeabi_ddiv+0x21c>)
 8000d76:	4293      	cmp	r3, r2
 8000d78:	d048      	beq.n	8000e0c <__aeabi_ddiv+0xfc>
 8000d7a:	4659      	mov	r1, fp
 8000d7c:	0f72      	lsrs	r2, r6, #29
 8000d7e:	00c9      	lsls	r1, r1, #3
 8000d80:	430a      	orrs	r2, r1
 8000d82:	2180      	movs	r1, #128	@ 0x80
 8000d84:	0409      	lsls	r1, r1, #16
 8000d86:	4311      	orrs	r1, r2
 8000d88:	468b      	mov	fp, r1
 8000d8a:	4969      	ldr	r1, [pc, #420]	@ (8000f30 <__aeabi_ddiv+0x220>)
 8000d8c:	00f2      	lsls	r2, r6, #3
 8000d8e:	468c      	mov	ip, r1
 8000d90:	4651      	mov	r1, sl
 8000d92:	4463      	add	r3, ip
 8000d94:	1acb      	subs	r3, r1, r3
 8000d96:	469a      	mov	sl, r3
 8000d98:	2100      	movs	r1, #0
 8000d9a:	9e02      	ldr	r6, [sp, #8]
 8000d9c:	406e      	eors	r6, r5
 8000d9e:	b2f6      	uxtb	r6, r6
 8000da0:	2c0f      	cmp	r4, #15
 8000da2:	d900      	bls.n	8000da6 <__aeabi_ddiv+0x96>
 8000da4:	e0ce      	b.n	8000f44 <__aeabi_ddiv+0x234>
 8000da6:	4b63      	ldr	r3, [pc, #396]	@ (8000f34 <__aeabi_ddiv+0x224>)
 8000da8:	00a4      	lsls	r4, r4, #2
 8000daa:	591b      	ldr	r3, [r3, r4]
 8000dac:	469f      	mov	pc, r3
 8000dae:	465a      	mov	r2, fp
 8000db0:	4302      	orrs	r2, r0
 8000db2:	4691      	mov	r9, r2
 8000db4:	d000      	beq.n	8000db8 <__aeabi_ddiv+0xa8>
 8000db6:	e090      	b.n	8000eda <__aeabi_ddiv+0x1ca>
 8000db8:	469a      	mov	sl, r3
 8000dba:	2302      	movs	r3, #2
 8000dbc:	4690      	mov	r8, r2
 8000dbe:	2408      	movs	r4, #8
 8000dc0:	9303      	str	r3, [sp, #12]
 8000dc2:	e7cc      	b.n	8000d5e <__aeabi_ddiv+0x4e>
 8000dc4:	46cb      	mov	fp, r9
 8000dc6:	4642      	mov	r2, r8
 8000dc8:	9d02      	ldr	r5, [sp, #8]
 8000dca:	9903      	ldr	r1, [sp, #12]
 8000dcc:	2902      	cmp	r1, #2
 8000dce:	d100      	bne.n	8000dd2 <__aeabi_ddiv+0xc2>
 8000dd0:	e1de      	b.n	8001190 <__aeabi_ddiv+0x480>
 8000dd2:	2903      	cmp	r1, #3
 8000dd4:	d100      	bne.n	8000dd8 <__aeabi_ddiv+0xc8>
 8000dd6:	e08d      	b.n	8000ef4 <__aeabi_ddiv+0x1e4>
 8000dd8:	2901      	cmp	r1, #1
 8000dda:	d000      	beq.n	8000dde <__aeabi_ddiv+0xce>
 8000ddc:	e179      	b.n	80010d2 <__aeabi_ddiv+0x3c2>
 8000dde:	002e      	movs	r6, r5
 8000de0:	2200      	movs	r2, #0
 8000de2:	2300      	movs	r3, #0
 8000de4:	2400      	movs	r4, #0
 8000de6:	4690      	mov	r8, r2
 8000de8:	051b      	lsls	r3, r3, #20
 8000dea:	4323      	orrs	r3, r4
 8000dec:	07f6      	lsls	r6, r6, #31
 8000dee:	4333      	orrs	r3, r6
 8000df0:	4640      	mov	r0, r8
 8000df2:	0019      	movs	r1, r3
 8000df4:	b007      	add	sp, #28
 8000df6:	bcf0      	pop	{r4, r5, r6, r7}
 8000df8:	46bb      	mov	fp, r7
 8000dfa:	46b2      	mov	sl, r6
 8000dfc:	46a9      	mov	r9, r5
 8000dfe:	46a0      	mov	r8, r4
 8000e00:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000e02:	2200      	movs	r2, #0
 8000e04:	2400      	movs	r4, #0
 8000e06:	4690      	mov	r8, r2
 8000e08:	4b48      	ldr	r3, [pc, #288]	@ (8000f2c <__aeabi_ddiv+0x21c>)
 8000e0a:	e7ed      	b.n	8000de8 <__aeabi_ddiv+0xd8>
 8000e0c:	465a      	mov	r2, fp
 8000e0e:	9b00      	ldr	r3, [sp, #0]
 8000e10:	431a      	orrs	r2, r3
 8000e12:	4b49      	ldr	r3, [pc, #292]	@ (8000f38 <__aeabi_ddiv+0x228>)
 8000e14:	469c      	mov	ip, r3
 8000e16:	44e2      	add	sl, ip
 8000e18:	2a00      	cmp	r2, #0
 8000e1a:	d159      	bne.n	8000ed0 <__aeabi_ddiv+0x1c0>
 8000e1c:	2302      	movs	r3, #2
 8000e1e:	431c      	orrs	r4, r3
 8000e20:	2300      	movs	r3, #0
 8000e22:	2102      	movs	r1, #2
 8000e24:	469b      	mov	fp, r3
 8000e26:	e7b8      	b.n	8000d9a <__aeabi_ddiv+0x8a>
 8000e28:	465a      	mov	r2, fp
 8000e2a:	9b00      	ldr	r3, [sp, #0]
 8000e2c:	431a      	orrs	r2, r3
 8000e2e:	d049      	beq.n	8000ec4 <__aeabi_ddiv+0x1b4>
 8000e30:	465b      	mov	r3, fp
 8000e32:	2b00      	cmp	r3, #0
 8000e34:	d100      	bne.n	8000e38 <__aeabi_ddiv+0x128>
 8000e36:	e19c      	b.n	8001172 <__aeabi_ddiv+0x462>
 8000e38:	4658      	mov	r0, fp
 8000e3a:	f001 fc0d 	bl	8002658 <__clzsi2>
 8000e3e:	0002      	movs	r2, r0
 8000e40:	0003      	movs	r3, r0
 8000e42:	3a0b      	subs	r2, #11
 8000e44:	271d      	movs	r7, #29
 8000e46:	9e00      	ldr	r6, [sp, #0]
 8000e48:	1aba      	subs	r2, r7, r2
 8000e4a:	0019      	movs	r1, r3
 8000e4c:	4658      	mov	r0, fp
 8000e4e:	40d6      	lsrs	r6, r2
 8000e50:	3908      	subs	r1, #8
 8000e52:	4088      	lsls	r0, r1
 8000e54:	0032      	movs	r2, r6
 8000e56:	4302      	orrs	r2, r0
 8000e58:	4693      	mov	fp, r2
 8000e5a:	9a00      	ldr	r2, [sp, #0]
 8000e5c:	408a      	lsls	r2, r1
 8000e5e:	4937      	ldr	r1, [pc, #220]	@ (8000f3c <__aeabi_ddiv+0x22c>)
 8000e60:	4453      	add	r3, sl
 8000e62:	468a      	mov	sl, r1
 8000e64:	2100      	movs	r1, #0
 8000e66:	449a      	add	sl, r3
 8000e68:	e797      	b.n	8000d9a <__aeabi_ddiv+0x8a>
 8000e6a:	465b      	mov	r3, fp
 8000e6c:	4303      	orrs	r3, r0
 8000e6e:	4699      	mov	r9, r3
 8000e70:	d021      	beq.n	8000eb6 <__aeabi_ddiv+0x1a6>
 8000e72:	465b      	mov	r3, fp
 8000e74:	2b00      	cmp	r3, #0
 8000e76:	d100      	bne.n	8000e7a <__aeabi_ddiv+0x16a>
 8000e78:	e169      	b.n	800114e <__aeabi_ddiv+0x43e>
 8000e7a:	4658      	mov	r0, fp
 8000e7c:	f001 fbec 	bl	8002658 <__clzsi2>
 8000e80:	230b      	movs	r3, #11
 8000e82:	425b      	negs	r3, r3
 8000e84:	469c      	mov	ip, r3
 8000e86:	0002      	movs	r2, r0
 8000e88:	4484      	add	ip, r0
 8000e8a:	4666      	mov	r6, ip
 8000e8c:	231d      	movs	r3, #29
 8000e8e:	1b9b      	subs	r3, r3, r6
 8000e90:	0026      	movs	r6, r4
 8000e92:	0011      	movs	r1, r2
 8000e94:	4658      	mov	r0, fp
 8000e96:	40de      	lsrs	r6, r3
 8000e98:	3908      	subs	r1, #8
 8000e9a:	4088      	lsls	r0, r1
 8000e9c:	0033      	movs	r3, r6
 8000e9e:	4303      	orrs	r3, r0
 8000ea0:	4699      	mov	r9, r3
 8000ea2:	0023      	movs	r3, r4
 8000ea4:	408b      	lsls	r3, r1
 8000ea6:	4698      	mov	r8, r3
 8000ea8:	4b25      	ldr	r3, [pc, #148]	@ (8000f40 <__aeabi_ddiv+0x230>)
 8000eaa:	2400      	movs	r4, #0
 8000eac:	1a9b      	subs	r3, r3, r2
 8000eae:	469a      	mov	sl, r3
 8000eb0:	2300      	movs	r3, #0
 8000eb2:	9303      	str	r3, [sp, #12]
 8000eb4:	e753      	b.n	8000d5e <__aeabi_ddiv+0x4e>
 8000eb6:	2300      	movs	r3, #0
 8000eb8:	4698      	mov	r8, r3
 8000eba:	469a      	mov	sl, r3
 8000ebc:	3301      	adds	r3, #1
 8000ebe:	2404      	movs	r4, #4
 8000ec0:	9303      	str	r3, [sp, #12]
 8000ec2:	e74c      	b.n	8000d5e <__aeabi_ddiv+0x4e>
 8000ec4:	2301      	movs	r3, #1
 8000ec6:	431c      	orrs	r4, r3
 8000ec8:	2300      	movs	r3, #0
 8000eca:	2101      	movs	r1, #1
 8000ecc:	469b      	mov	fp, r3
 8000ece:	e764      	b.n	8000d9a <__aeabi_ddiv+0x8a>
 8000ed0:	2303      	movs	r3, #3
 8000ed2:	0032      	movs	r2, r6
 8000ed4:	2103      	movs	r1, #3
 8000ed6:	431c      	orrs	r4, r3
 8000ed8:	e75f      	b.n	8000d9a <__aeabi_ddiv+0x8a>
 8000eda:	469a      	mov	sl, r3
 8000edc:	2303      	movs	r3, #3
 8000ede:	46d9      	mov	r9, fp
 8000ee0:	240c      	movs	r4, #12
 8000ee2:	9303      	str	r3, [sp, #12]
 8000ee4:	e73b      	b.n	8000d5e <__aeabi_ddiv+0x4e>
 8000ee6:	2300      	movs	r3, #0
 8000ee8:	2480      	movs	r4, #128	@ 0x80
 8000eea:	4698      	mov	r8, r3
 8000eec:	2600      	movs	r6, #0
 8000eee:	4b0f      	ldr	r3, [pc, #60]	@ (8000f2c <__aeabi_ddiv+0x21c>)
 8000ef0:	0324      	lsls	r4, r4, #12
 8000ef2:	e779      	b.n	8000de8 <__aeabi_ddiv+0xd8>
 8000ef4:	2480      	movs	r4, #128	@ 0x80
 8000ef6:	465b      	mov	r3, fp
 8000ef8:	0324      	lsls	r4, r4, #12
 8000efa:	431c      	orrs	r4, r3
 8000efc:	0324      	lsls	r4, r4, #12
 8000efe:	002e      	movs	r6, r5
 8000f00:	4690      	mov	r8, r2
 8000f02:	4b0a      	ldr	r3, [pc, #40]	@ (8000f2c <__aeabi_ddiv+0x21c>)
 8000f04:	0b24      	lsrs	r4, r4, #12
 8000f06:	e76f      	b.n	8000de8 <__aeabi_ddiv+0xd8>
 8000f08:	2480      	movs	r4, #128	@ 0x80
 8000f0a:	464b      	mov	r3, r9
 8000f0c:	0324      	lsls	r4, r4, #12
 8000f0e:	4223      	tst	r3, r4
 8000f10:	d002      	beq.n	8000f18 <__aeabi_ddiv+0x208>
 8000f12:	465b      	mov	r3, fp
 8000f14:	4223      	tst	r3, r4
 8000f16:	d0f0      	beq.n	8000efa <__aeabi_ddiv+0x1ea>
 8000f18:	2480      	movs	r4, #128	@ 0x80
 8000f1a:	464b      	mov	r3, r9
 8000f1c:	0324      	lsls	r4, r4, #12
 8000f1e:	431c      	orrs	r4, r3
 8000f20:	0324      	lsls	r4, r4, #12
 8000f22:	9e02      	ldr	r6, [sp, #8]
 8000f24:	4b01      	ldr	r3, [pc, #4]	@ (8000f2c <__aeabi_ddiv+0x21c>)
 8000f26:	0b24      	lsrs	r4, r4, #12
 8000f28:	e75e      	b.n	8000de8 <__aeabi_ddiv+0xd8>
 8000f2a:	46c0      	nop			@ (mov r8, r8)
 8000f2c:	000007ff 	.word	0x000007ff
 8000f30:	fffffc01 	.word	0xfffffc01
 8000f34:	08009d2c 	.word	0x08009d2c
 8000f38:	fffff801 	.word	0xfffff801
 8000f3c:	000003f3 	.word	0x000003f3
 8000f40:	fffffc0d 	.word	0xfffffc0d
 8000f44:	45cb      	cmp	fp, r9
 8000f46:	d200      	bcs.n	8000f4a <__aeabi_ddiv+0x23a>
 8000f48:	e0f8      	b.n	800113c <__aeabi_ddiv+0x42c>
 8000f4a:	d100      	bne.n	8000f4e <__aeabi_ddiv+0x23e>
 8000f4c:	e0f3      	b.n	8001136 <__aeabi_ddiv+0x426>
 8000f4e:	2301      	movs	r3, #1
 8000f50:	425b      	negs	r3, r3
 8000f52:	469c      	mov	ip, r3
 8000f54:	4644      	mov	r4, r8
 8000f56:	4648      	mov	r0, r9
 8000f58:	2500      	movs	r5, #0
 8000f5a:	44e2      	add	sl, ip
 8000f5c:	465b      	mov	r3, fp
 8000f5e:	0e17      	lsrs	r7, r2, #24
 8000f60:	021b      	lsls	r3, r3, #8
 8000f62:	431f      	orrs	r7, r3
 8000f64:	0c19      	lsrs	r1, r3, #16
 8000f66:	043b      	lsls	r3, r7, #16
 8000f68:	0212      	lsls	r2, r2, #8
 8000f6a:	9700      	str	r7, [sp, #0]
 8000f6c:	0c1f      	lsrs	r7, r3, #16
 8000f6e:	4691      	mov	r9, r2
 8000f70:	9102      	str	r1, [sp, #8]
 8000f72:	9703      	str	r7, [sp, #12]
 8000f74:	f7ff f96a 	bl	800024c <__aeabi_uidivmod>
 8000f78:	0002      	movs	r2, r0
 8000f7a:	437a      	muls	r2, r7
 8000f7c:	040b      	lsls	r3, r1, #16
 8000f7e:	0c21      	lsrs	r1, r4, #16
 8000f80:	4680      	mov	r8, r0
 8000f82:	4319      	orrs	r1, r3
 8000f84:	428a      	cmp	r2, r1
 8000f86:	d909      	bls.n	8000f9c <__aeabi_ddiv+0x28c>
 8000f88:	9f00      	ldr	r7, [sp, #0]
 8000f8a:	2301      	movs	r3, #1
 8000f8c:	46bc      	mov	ip, r7
 8000f8e:	425b      	negs	r3, r3
 8000f90:	4461      	add	r1, ip
 8000f92:	469c      	mov	ip, r3
 8000f94:	44e0      	add	r8, ip
 8000f96:	428f      	cmp	r7, r1
 8000f98:	d800      	bhi.n	8000f9c <__aeabi_ddiv+0x28c>
 8000f9a:	e15c      	b.n	8001256 <__aeabi_ddiv+0x546>
 8000f9c:	1a88      	subs	r0, r1, r2
 8000f9e:	9902      	ldr	r1, [sp, #8]
 8000fa0:	f7ff f954 	bl	800024c <__aeabi_uidivmod>
 8000fa4:	9a03      	ldr	r2, [sp, #12]
 8000fa6:	0424      	lsls	r4, r4, #16
 8000fa8:	4342      	muls	r2, r0
 8000faa:	0409      	lsls	r1, r1, #16
 8000fac:	0c24      	lsrs	r4, r4, #16
 8000fae:	0003      	movs	r3, r0
 8000fb0:	430c      	orrs	r4, r1
 8000fb2:	42a2      	cmp	r2, r4
 8000fb4:	d906      	bls.n	8000fc4 <__aeabi_ddiv+0x2b4>
 8000fb6:	9900      	ldr	r1, [sp, #0]
 8000fb8:	3b01      	subs	r3, #1
 8000fba:	468c      	mov	ip, r1
 8000fbc:	4464      	add	r4, ip
 8000fbe:	42a1      	cmp	r1, r4
 8000fc0:	d800      	bhi.n	8000fc4 <__aeabi_ddiv+0x2b4>
 8000fc2:	e142      	b.n	800124a <__aeabi_ddiv+0x53a>
 8000fc4:	1aa0      	subs	r0, r4, r2
 8000fc6:	4642      	mov	r2, r8
 8000fc8:	0412      	lsls	r2, r2, #16
 8000fca:	431a      	orrs	r2, r3
 8000fcc:	4693      	mov	fp, r2
 8000fce:	464b      	mov	r3, r9
 8000fd0:	4659      	mov	r1, fp
 8000fd2:	0c1b      	lsrs	r3, r3, #16
 8000fd4:	001f      	movs	r7, r3
 8000fd6:	9304      	str	r3, [sp, #16]
 8000fd8:	040b      	lsls	r3, r1, #16
 8000fda:	4649      	mov	r1, r9
 8000fdc:	0409      	lsls	r1, r1, #16
 8000fde:	0c09      	lsrs	r1, r1, #16
 8000fe0:	000c      	movs	r4, r1
 8000fe2:	0c1b      	lsrs	r3, r3, #16
 8000fe4:	435c      	muls	r4, r3
 8000fe6:	0c12      	lsrs	r2, r2, #16
 8000fe8:	437b      	muls	r3, r7
 8000fea:	4688      	mov	r8, r1
 8000fec:	4351      	muls	r1, r2
 8000fee:	437a      	muls	r2, r7
 8000ff0:	0c27      	lsrs	r7, r4, #16
 8000ff2:	46bc      	mov	ip, r7
 8000ff4:	185b      	adds	r3, r3, r1
 8000ff6:	4463      	add	r3, ip
 8000ff8:	4299      	cmp	r1, r3
 8000ffa:	d903      	bls.n	8001004 <__aeabi_ddiv+0x2f4>
 8000ffc:	2180      	movs	r1, #128	@ 0x80
 8000ffe:	0249      	lsls	r1, r1, #9
 8001000:	468c      	mov	ip, r1
 8001002:	4462      	add	r2, ip
 8001004:	0c19      	lsrs	r1, r3, #16
 8001006:	0424      	lsls	r4, r4, #16
 8001008:	041b      	lsls	r3, r3, #16
 800100a:	0c24      	lsrs	r4, r4, #16
 800100c:	188a      	adds	r2, r1, r2
 800100e:	191c      	adds	r4, r3, r4
 8001010:	4290      	cmp	r0, r2
 8001012:	d302      	bcc.n	800101a <__aeabi_ddiv+0x30a>
 8001014:	d116      	bne.n	8001044 <__aeabi_ddiv+0x334>
 8001016:	42a5      	cmp	r5, r4
 8001018:	d214      	bcs.n	8001044 <__aeabi_ddiv+0x334>
 800101a:	465b      	mov	r3, fp
 800101c:	9f00      	ldr	r7, [sp, #0]
 800101e:	3b01      	subs	r3, #1
 8001020:	444d      	add	r5, r9
 8001022:	9305      	str	r3, [sp, #20]
 8001024:	454d      	cmp	r5, r9
 8001026:	419b      	sbcs	r3, r3
 8001028:	46bc      	mov	ip, r7
 800102a:	425b      	negs	r3, r3
 800102c:	4463      	add	r3, ip
 800102e:	18c0      	adds	r0, r0, r3
 8001030:	4287      	cmp	r7, r0
 8001032:	d300      	bcc.n	8001036 <__aeabi_ddiv+0x326>
 8001034:	e102      	b.n	800123c <__aeabi_ddiv+0x52c>
 8001036:	4282      	cmp	r2, r0
 8001038:	d900      	bls.n	800103c <__aeabi_ddiv+0x32c>
 800103a:	e129      	b.n	8001290 <__aeabi_ddiv+0x580>
 800103c:	d100      	bne.n	8001040 <__aeabi_ddiv+0x330>
 800103e:	e124      	b.n	800128a <__aeabi_ddiv+0x57a>
 8001040:	9b05      	ldr	r3, [sp, #20]
 8001042:	469b      	mov	fp, r3
 8001044:	1b2c      	subs	r4, r5, r4
 8001046:	42a5      	cmp	r5, r4
 8001048:	41ad      	sbcs	r5, r5
 800104a:	9b00      	ldr	r3, [sp, #0]
 800104c:	1a80      	subs	r0, r0, r2
 800104e:	426d      	negs	r5, r5
 8001050:	1b40      	subs	r0, r0, r5
 8001052:	4283      	cmp	r3, r0
 8001054:	d100      	bne.n	8001058 <__aeabi_ddiv+0x348>
 8001056:	e10f      	b.n	8001278 <__aeabi_ddiv+0x568>
 8001058:	9902      	ldr	r1, [sp, #8]
 800105a:	f7ff f8f7 	bl	800024c <__aeabi_uidivmod>
 800105e:	9a03      	ldr	r2, [sp, #12]
 8001060:	040b      	lsls	r3, r1, #16
 8001062:	4342      	muls	r2, r0
 8001064:	0c21      	lsrs	r1, r4, #16
 8001066:	0005      	movs	r5, r0
 8001068:	4319      	orrs	r1, r3
 800106a:	428a      	cmp	r2, r1
 800106c:	d900      	bls.n	8001070 <__aeabi_ddiv+0x360>
 800106e:	e0cb      	b.n	8001208 <__aeabi_ddiv+0x4f8>
 8001070:	1a88      	subs	r0, r1, r2
 8001072:	9902      	ldr	r1, [sp, #8]
 8001074:	f7ff f8ea 	bl	800024c <__aeabi_uidivmod>
 8001078:	9a03      	ldr	r2, [sp, #12]
 800107a:	0424      	lsls	r4, r4, #16
 800107c:	4342      	muls	r2, r0
 800107e:	0409      	lsls	r1, r1, #16
 8001080:	0c24      	lsrs	r4, r4, #16
 8001082:	0003      	movs	r3, r0
 8001084:	430c      	orrs	r4, r1
 8001086:	42a2      	cmp	r2, r4
 8001088:	d900      	bls.n	800108c <__aeabi_ddiv+0x37c>
 800108a:	e0ca      	b.n	8001222 <__aeabi_ddiv+0x512>
 800108c:	4641      	mov	r1, r8
 800108e:	1aa4      	subs	r4, r4, r2
 8001090:	042a      	lsls	r2, r5, #16
 8001092:	431a      	orrs	r2, r3
 8001094:	9f04      	ldr	r7, [sp, #16]
 8001096:	0413      	lsls	r3, r2, #16
 8001098:	0c1b      	lsrs	r3, r3, #16
 800109a:	4359      	muls	r1, r3
 800109c:	4640      	mov	r0, r8
 800109e:	437b      	muls	r3, r7
 80010a0:	469c      	mov	ip, r3
 80010a2:	0c15      	lsrs	r5, r2, #16
 80010a4:	4368      	muls	r0, r5
 80010a6:	0c0b      	lsrs	r3, r1, #16
 80010a8:	4484      	add	ip, r0
 80010aa:	4463      	add	r3, ip
 80010ac:	437d      	muls	r5, r7
 80010ae:	4298      	cmp	r0, r3
 80010b0:	d903      	bls.n	80010ba <__aeabi_ddiv+0x3aa>
 80010b2:	2080      	movs	r0, #128	@ 0x80
 80010b4:	0240      	lsls	r0, r0, #9
 80010b6:	4684      	mov	ip, r0
 80010b8:	4465      	add	r5, ip
 80010ba:	0c18      	lsrs	r0, r3, #16
 80010bc:	0409      	lsls	r1, r1, #16
 80010be:	041b      	lsls	r3, r3, #16
 80010c0:	0c09      	lsrs	r1, r1, #16
 80010c2:	1940      	adds	r0, r0, r5
 80010c4:	185b      	adds	r3, r3, r1
 80010c6:	4284      	cmp	r4, r0
 80010c8:	d327      	bcc.n	800111a <__aeabi_ddiv+0x40a>
 80010ca:	d023      	beq.n	8001114 <__aeabi_ddiv+0x404>
 80010cc:	2301      	movs	r3, #1
 80010ce:	0035      	movs	r5, r6
 80010d0:	431a      	orrs	r2, r3
 80010d2:	4b94      	ldr	r3, [pc, #592]	@ (8001324 <__aeabi_ddiv+0x614>)
 80010d4:	4453      	add	r3, sl
 80010d6:	2b00      	cmp	r3, #0
 80010d8:	dd60      	ble.n	800119c <__aeabi_ddiv+0x48c>
 80010da:	0751      	lsls	r1, r2, #29
 80010dc:	d000      	beq.n	80010e0 <__aeabi_ddiv+0x3d0>
 80010de:	e086      	b.n	80011ee <__aeabi_ddiv+0x4de>
 80010e0:	002e      	movs	r6, r5
 80010e2:	08d1      	lsrs	r1, r2, #3
 80010e4:	465a      	mov	r2, fp
 80010e6:	01d2      	lsls	r2, r2, #7
 80010e8:	d506      	bpl.n	80010f8 <__aeabi_ddiv+0x3e8>
 80010ea:	465a      	mov	r2, fp
 80010ec:	4b8e      	ldr	r3, [pc, #568]	@ (8001328 <__aeabi_ddiv+0x618>)
 80010ee:	401a      	ands	r2, r3
 80010f0:	2380      	movs	r3, #128	@ 0x80
 80010f2:	4693      	mov	fp, r2
 80010f4:	00db      	lsls	r3, r3, #3
 80010f6:	4453      	add	r3, sl
 80010f8:	4a8c      	ldr	r2, [pc, #560]	@ (800132c <__aeabi_ddiv+0x61c>)
 80010fa:	4293      	cmp	r3, r2
 80010fc:	dd00      	ble.n	8001100 <__aeabi_ddiv+0x3f0>
 80010fe:	e680      	b.n	8000e02 <__aeabi_ddiv+0xf2>
 8001100:	465a      	mov	r2, fp
 8001102:	0752      	lsls	r2, r2, #29
 8001104:	430a      	orrs	r2, r1
 8001106:	4690      	mov	r8, r2
 8001108:	465a      	mov	r2, fp
 800110a:	055b      	lsls	r3, r3, #21
 800110c:	0254      	lsls	r4, r2, #9
 800110e:	0b24      	lsrs	r4, r4, #12
 8001110:	0d5b      	lsrs	r3, r3, #21
 8001112:	e669      	b.n	8000de8 <__aeabi_ddiv+0xd8>
 8001114:	0035      	movs	r5, r6
 8001116:	2b00      	cmp	r3, #0
 8001118:	d0db      	beq.n	80010d2 <__aeabi_ddiv+0x3c2>
 800111a:	9d00      	ldr	r5, [sp, #0]
 800111c:	1e51      	subs	r1, r2, #1
 800111e:	46ac      	mov	ip, r5
 8001120:	4464      	add	r4, ip
 8001122:	42ac      	cmp	r4, r5
 8001124:	d200      	bcs.n	8001128 <__aeabi_ddiv+0x418>
 8001126:	e09e      	b.n	8001266 <__aeabi_ddiv+0x556>
 8001128:	4284      	cmp	r4, r0
 800112a:	d200      	bcs.n	800112e <__aeabi_ddiv+0x41e>
 800112c:	e0e1      	b.n	80012f2 <__aeabi_ddiv+0x5e2>
 800112e:	d100      	bne.n	8001132 <__aeabi_ddiv+0x422>
 8001130:	e0ee      	b.n	8001310 <__aeabi_ddiv+0x600>
 8001132:	000a      	movs	r2, r1
 8001134:	e7ca      	b.n	80010cc <__aeabi_ddiv+0x3bc>
 8001136:	4542      	cmp	r2, r8
 8001138:	d900      	bls.n	800113c <__aeabi_ddiv+0x42c>
 800113a:	e708      	b.n	8000f4e <__aeabi_ddiv+0x23e>
 800113c:	464b      	mov	r3, r9
 800113e:	07dc      	lsls	r4, r3, #31
 8001140:	0858      	lsrs	r0, r3, #1
 8001142:	4643      	mov	r3, r8
 8001144:	085b      	lsrs	r3, r3, #1
 8001146:	431c      	orrs	r4, r3
 8001148:	4643      	mov	r3, r8
 800114a:	07dd      	lsls	r5, r3, #31
 800114c:	e706      	b.n	8000f5c <__aeabi_ddiv+0x24c>
 800114e:	f001 fa83 	bl	8002658 <__clzsi2>
 8001152:	2315      	movs	r3, #21
 8001154:	469c      	mov	ip, r3
 8001156:	4484      	add	ip, r0
 8001158:	0002      	movs	r2, r0
 800115a:	4663      	mov	r3, ip
 800115c:	3220      	adds	r2, #32
 800115e:	2b1c      	cmp	r3, #28
 8001160:	dc00      	bgt.n	8001164 <__aeabi_ddiv+0x454>
 8001162:	e692      	b.n	8000e8a <__aeabi_ddiv+0x17a>
 8001164:	0023      	movs	r3, r4
 8001166:	3808      	subs	r0, #8
 8001168:	4083      	lsls	r3, r0
 800116a:	4699      	mov	r9, r3
 800116c:	2300      	movs	r3, #0
 800116e:	4698      	mov	r8, r3
 8001170:	e69a      	b.n	8000ea8 <__aeabi_ddiv+0x198>
 8001172:	f001 fa71 	bl	8002658 <__clzsi2>
 8001176:	0002      	movs	r2, r0
 8001178:	0003      	movs	r3, r0
 800117a:	3215      	adds	r2, #21
 800117c:	3320      	adds	r3, #32
 800117e:	2a1c      	cmp	r2, #28
 8001180:	dc00      	bgt.n	8001184 <__aeabi_ddiv+0x474>
 8001182:	e65f      	b.n	8000e44 <__aeabi_ddiv+0x134>
 8001184:	9900      	ldr	r1, [sp, #0]
 8001186:	3808      	subs	r0, #8
 8001188:	4081      	lsls	r1, r0
 800118a:	2200      	movs	r2, #0
 800118c:	468b      	mov	fp, r1
 800118e:	e666      	b.n	8000e5e <__aeabi_ddiv+0x14e>
 8001190:	2200      	movs	r2, #0
 8001192:	002e      	movs	r6, r5
 8001194:	2400      	movs	r4, #0
 8001196:	4690      	mov	r8, r2
 8001198:	4b65      	ldr	r3, [pc, #404]	@ (8001330 <__aeabi_ddiv+0x620>)
 800119a:	e625      	b.n	8000de8 <__aeabi_ddiv+0xd8>
 800119c:	002e      	movs	r6, r5
 800119e:	2101      	movs	r1, #1
 80011a0:	1ac9      	subs	r1, r1, r3
 80011a2:	2938      	cmp	r1, #56	@ 0x38
 80011a4:	dd00      	ble.n	80011a8 <__aeabi_ddiv+0x498>
 80011a6:	e61b      	b.n	8000de0 <__aeabi_ddiv+0xd0>
 80011a8:	291f      	cmp	r1, #31
 80011aa:	dc7e      	bgt.n	80012aa <__aeabi_ddiv+0x59a>
 80011ac:	4861      	ldr	r0, [pc, #388]	@ (8001334 <__aeabi_ddiv+0x624>)
 80011ae:	0014      	movs	r4, r2
 80011b0:	4450      	add	r0, sl
 80011b2:	465b      	mov	r3, fp
 80011b4:	4082      	lsls	r2, r0
 80011b6:	4083      	lsls	r3, r0
 80011b8:	40cc      	lsrs	r4, r1
 80011ba:	1e50      	subs	r0, r2, #1
 80011bc:	4182      	sbcs	r2, r0
 80011be:	4323      	orrs	r3, r4
 80011c0:	431a      	orrs	r2, r3
 80011c2:	465b      	mov	r3, fp
 80011c4:	40cb      	lsrs	r3, r1
 80011c6:	0751      	lsls	r1, r2, #29
 80011c8:	d009      	beq.n	80011de <__aeabi_ddiv+0x4ce>
 80011ca:	210f      	movs	r1, #15
 80011cc:	4011      	ands	r1, r2
 80011ce:	2904      	cmp	r1, #4
 80011d0:	d005      	beq.n	80011de <__aeabi_ddiv+0x4ce>
 80011d2:	1d11      	adds	r1, r2, #4
 80011d4:	4291      	cmp	r1, r2
 80011d6:	4192      	sbcs	r2, r2
 80011d8:	4252      	negs	r2, r2
 80011da:	189b      	adds	r3, r3, r2
 80011dc:	000a      	movs	r2, r1
 80011de:	0219      	lsls	r1, r3, #8
 80011e0:	d400      	bmi.n	80011e4 <__aeabi_ddiv+0x4d4>
 80011e2:	e09b      	b.n	800131c <__aeabi_ddiv+0x60c>
 80011e4:	2200      	movs	r2, #0
 80011e6:	2301      	movs	r3, #1
 80011e8:	2400      	movs	r4, #0
 80011ea:	4690      	mov	r8, r2
 80011ec:	e5fc      	b.n	8000de8 <__aeabi_ddiv+0xd8>
 80011ee:	210f      	movs	r1, #15
 80011f0:	4011      	ands	r1, r2
 80011f2:	2904      	cmp	r1, #4
 80011f4:	d100      	bne.n	80011f8 <__aeabi_ddiv+0x4e8>
 80011f6:	e773      	b.n	80010e0 <__aeabi_ddiv+0x3d0>
 80011f8:	1d11      	adds	r1, r2, #4
 80011fa:	4291      	cmp	r1, r2
 80011fc:	4192      	sbcs	r2, r2
 80011fe:	4252      	negs	r2, r2
 8001200:	002e      	movs	r6, r5
 8001202:	08c9      	lsrs	r1, r1, #3
 8001204:	4493      	add	fp, r2
 8001206:	e76d      	b.n	80010e4 <__aeabi_ddiv+0x3d4>
 8001208:	9b00      	ldr	r3, [sp, #0]
 800120a:	3d01      	subs	r5, #1
 800120c:	469c      	mov	ip, r3
 800120e:	4461      	add	r1, ip
 8001210:	428b      	cmp	r3, r1
 8001212:	d900      	bls.n	8001216 <__aeabi_ddiv+0x506>
 8001214:	e72c      	b.n	8001070 <__aeabi_ddiv+0x360>
 8001216:	428a      	cmp	r2, r1
 8001218:	d800      	bhi.n	800121c <__aeabi_ddiv+0x50c>
 800121a:	e729      	b.n	8001070 <__aeabi_ddiv+0x360>
 800121c:	1e85      	subs	r5, r0, #2
 800121e:	4461      	add	r1, ip
 8001220:	e726      	b.n	8001070 <__aeabi_ddiv+0x360>
 8001222:	9900      	ldr	r1, [sp, #0]
 8001224:	3b01      	subs	r3, #1
 8001226:	468c      	mov	ip, r1
 8001228:	4464      	add	r4, ip
 800122a:	42a1      	cmp	r1, r4
 800122c:	d900      	bls.n	8001230 <__aeabi_ddiv+0x520>
 800122e:	e72d      	b.n	800108c <__aeabi_ddiv+0x37c>
 8001230:	42a2      	cmp	r2, r4
 8001232:	d800      	bhi.n	8001236 <__aeabi_ddiv+0x526>
 8001234:	e72a      	b.n	800108c <__aeabi_ddiv+0x37c>
 8001236:	1e83      	subs	r3, r0, #2
 8001238:	4464      	add	r4, ip
 800123a:	e727      	b.n	800108c <__aeabi_ddiv+0x37c>
 800123c:	4287      	cmp	r7, r0
 800123e:	d000      	beq.n	8001242 <__aeabi_ddiv+0x532>
 8001240:	e6fe      	b.n	8001040 <__aeabi_ddiv+0x330>
 8001242:	45a9      	cmp	r9, r5
 8001244:	d900      	bls.n	8001248 <__aeabi_ddiv+0x538>
 8001246:	e6fb      	b.n	8001040 <__aeabi_ddiv+0x330>
 8001248:	e6f5      	b.n	8001036 <__aeabi_ddiv+0x326>
 800124a:	42a2      	cmp	r2, r4
 800124c:	d800      	bhi.n	8001250 <__aeabi_ddiv+0x540>
 800124e:	e6b9      	b.n	8000fc4 <__aeabi_ddiv+0x2b4>
 8001250:	1e83      	subs	r3, r0, #2
 8001252:	4464      	add	r4, ip
 8001254:	e6b6      	b.n	8000fc4 <__aeabi_ddiv+0x2b4>
 8001256:	428a      	cmp	r2, r1
 8001258:	d800      	bhi.n	800125c <__aeabi_ddiv+0x54c>
 800125a:	e69f      	b.n	8000f9c <__aeabi_ddiv+0x28c>
 800125c:	46bc      	mov	ip, r7
 800125e:	1e83      	subs	r3, r0, #2
 8001260:	4698      	mov	r8, r3
 8001262:	4461      	add	r1, ip
 8001264:	e69a      	b.n	8000f9c <__aeabi_ddiv+0x28c>
 8001266:	000a      	movs	r2, r1
 8001268:	4284      	cmp	r4, r0
 800126a:	d000      	beq.n	800126e <__aeabi_ddiv+0x55e>
 800126c:	e72e      	b.n	80010cc <__aeabi_ddiv+0x3bc>
 800126e:	454b      	cmp	r3, r9
 8001270:	d000      	beq.n	8001274 <__aeabi_ddiv+0x564>
 8001272:	e72b      	b.n	80010cc <__aeabi_ddiv+0x3bc>
 8001274:	0035      	movs	r5, r6
 8001276:	e72c      	b.n	80010d2 <__aeabi_ddiv+0x3c2>
 8001278:	4b2a      	ldr	r3, [pc, #168]	@ (8001324 <__aeabi_ddiv+0x614>)
 800127a:	4a2f      	ldr	r2, [pc, #188]	@ (8001338 <__aeabi_ddiv+0x628>)
 800127c:	4453      	add	r3, sl
 800127e:	4592      	cmp	sl, r2
 8001280:	db43      	blt.n	800130a <__aeabi_ddiv+0x5fa>
 8001282:	2201      	movs	r2, #1
 8001284:	2100      	movs	r1, #0
 8001286:	4493      	add	fp, r2
 8001288:	e72c      	b.n	80010e4 <__aeabi_ddiv+0x3d4>
 800128a:	42ac      	cmp	r4, r5
 800128c:	d800      	bhi.n	8001290 <__aeabi_ddiv+0x580>
 800128e:	e6d7      	b.n	8001040 <__aeabi_ddiv+0x330>
 8001290:	2302      	movs	r3, #2
 8001292:	425b      	negs	r3, r3
 8001294:	469c      	mov	ip, r3
 8001296:	9900      	ldr	r1, [sp, #0]
 8001298:	444d      	add	r5, r9
 800129a:	454d      	cmp	r5, r9
 800129c:	419b      	sbcs	r3, r3
 800129e:	44e3      	add	fp, ip
 80012a0:	468c      	mov	ip, r1
 80012a2:	425b      	negs	r3, r3
 80012a4:	4463      	add	r3, ip
 80012a6:	18c0      	adds	r0, r0, r3
 80012a8:	e6cc      	b.n	8001044 <__aeabi_ddiv+0x334>
 80012aa:	201f      	movs	r0, #31
 80012ac:	4240      	negs	r0, r0
 80012ae:	1ac3      	subs	r3, r0, r3
 80012b0:	4658      	mov	r0, fp
 80012b2:	40d8      	lsrs	r0, r3
 80012b4:	2920      	cmp	r1, #32
 80012b6:	d004      	beq.n	80012c2 <__aeabi_ddiv+0x5b2>
 80012b8:	4659      	mov	r1, fp
 80012ba:	4b20      	ldr	r3, [pc, #128]	@ (800133c <__aeabi_ddiv+0x62c>)
 80012bc:	4453      	add	r3, sl
 80012be:	4099      	lsls	r1, r3
 80012c0:	430a      	orrs	r2, r1
 80012c2:	1e53      	subs	r3, r2, #1
 80012c4:	419a      	sbcs	r2, r3
 80012c6:	2307      	movs	r3, #7
 80012c8:	0019      	movs	r1, r3
 80012ca:	4302      	orrs	r2, r0
 80012cc:	2400      	movs	r4, #0
 80012ce:	4011      	ands	r1, r2
 80012d0:	4213      	tst	r3, r2
 80012d2:	d009      	beq.n	80012e8 <__aeabi_ddiv+0x5d8>
 80012d4:	3308      	adds	r3, #8
 80012d6:	4013      	ands	r3, r2
 80012d8:	2b04      	cmp	r3, #4
 80012da:	d01d      	beq.n	8001318 <__aeabi_ddiv+0x608>
 80012dc:	1d13      	adds	r3, r2, #4
 80012de:	4293      	cmp	r3, r2
 80012e0:	4189      	sbcs	r1, r1
 80012e2:	001a      	movs	r2, r3
 80012e4:	4249      	negs	r1, r1
 80012e6:	0749      	lsls	r1, r1, #29
 80012e8:	08d2      	lsrs	r2, r2, #3
 80012ea:	430a      	orrs	r2, r1
 80012ec:	4690      	mov	r8, r2
 80012ee:	2300      	movs	r3, #0
 80012f0:	e57a      	b.n	8000de8 <__aeabi_ddiv+0xd8>
 80012f2:	4649      	mov	r1, r9
 80012f4:	9f00      	ldr	r7, [sp, #0]
 80012f6:	004d      	lsls	r5, r1, #1
 80012f8:	454d      	cmp	r5, r9
 80012fa:	4189      	sbcs	r1, r1
 80012fc:	46bc      	mov	ip, r7
 80012fe:	4249      	negs	r1, r1
 8001300:	4461      	add	r1, ip
 8001302:	46a9      	mov	r9, r5
 8001304:	3a02      	subs	r2, #2
 8001306:	1864      	adds	r4, r4, r1
 8001308:	e7ae      	b.n	8001268 <__aeabi_ddiv+0x558>
 800130a:	2201      	movs	r2, #1
 800130c:	4252      	negs	r2, r2
 800130e:	e746      	b.n	800119e <__aeabi_ddiv+0x48e>
 8001310:	4599      	cmp	r9, r3
 8001312:	d3ee      	bcc.n	80012f2 <__aeabi_ddiv+0x5e2>
 8001314:	000a      	movs	r2, r1
 8001316:	e7aa      	b.n	800126e <__aeabi_ddiv+0x55e>
 8001318:	2100      	movs	r1, #0
 800131a:	e7e5      	b.n	80012e8 <__aeabi_ddiv+0x5d8>
 800131c:	0759      	lsls	r1, r3, #29
 800131e:	025b      	lsls	r3, r3, #9
 8001320:	0b1c      	lsrs	r4, r3, #12
 8001322:	e7e1      	b.n	80012e8 <__aeabi_ddiv+0x5d8>
 8001324:	000003ff 	.word	0x000003ff
 8001328:	feffffff 	.word	0xfeffffff
 800132c:	000007fe 	.word	0x000007fe
 8001330:	000007ff 	.word	0x000007ff
 8001334:	0000041e 	.word	0x0000041e
 8001338:	fffffc02 	.word	0xfffffc02
 800133c:	0000043e 	.word	0x0000043e

08001340 <__eqdf2>:
 8001340:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001342:	4657      	mov	r7, sl
 8001344:	46de      	mov	lr, fp
 8001346:	464e      	mov	r6, r9
 8001348:	4645      	mov	r5, r8
 800134a:	b5e0      	push	{r5, r6, r7, lr}
 800134c:	000d      	movs	r5, r1
 800134e:	0004      	movs	r4, r0
 8001350:	0fe8      	lsrs	r0, r5, #31
 8001352:	4683      	mov	fp, r0
 8001354:	0309      	lsls	r1, r1, #12
 8001356:	0fd8      	lsrs	r0, r3, #31
 8001358:	0b09      	lsrs	r1, r1, #12
 800135a:	4682      	mov	sl, r0
 800135c:	4819      	ldr	r0, [pc, #100]	@ (80013c4 <__eqdf2+0x84>)
 800135e:	468c      	mov	ip, r1
 8001360:	031f      	lsls	r7, r3, #12
 8001362:	0069      	lsls	r1, r5, #1
 8001364:	005e      	lsls	r6, r3, #1
 8001366:	0d49      	lsrs	r1, r1, #21
 8001368:	0b3f      	lsrs	r7, r7, #12
 800136a:	0d76      	lsrs	r6, r6, #21
 800136c:	4281      	cmp	r1, r0
 800136e:	d018      	beq.n	80013a2 <__eqdf2+0x62>
 8001370:	4286      	cmp	r6, r0
 8001372:	d00f      	beq.n	8001394 <__eqdf2+0x54>
 8001374:	2001      	movs	r0, #1
 8001376:	42b1      	cmp	r1, r6
 8001378:	d10d      	bne.n	8001396 <__eqdf2+0x56>
 800137a:	45bc      	cmp	ip, r7
 800137c:	d10b      	bne.n	8001396 <__eqdf2+0x56>
 800137e:	4294      	cmp	r4, r2
 8001380:	d109      	bne.n	8001396 <__eqdf2+0x56>
 8001382:	45d3      	cmp	fp, sl
 8001384:	d01c      	beq.n	80013c0 <__eqdf2+0x80>
 8001386:	2900      	cmp	r1, #0
 8001388:	d105      	bne.n	8001396 <__eqdf2+0x56>
 800138a:	4660      	mov	r0, ip
 800138c:	4320      	orrs	r0, r4
 800138e:	1e43      	subs	r3, r0, #1
 8001390:	4198      	sbcs	r0, r3
 8001392:	e000      	b.n	8001396 <__eqdf2+0x56>
 8001394:	2001      	movs	r0, #1
 8001396:	bcf0      	pop	{r4, r5, r6, r7}
 8001398:	46bb      	mov	fp, r7
 800139a:	46b2      	mov	sl, r6
 800139c:	46a9      	mov	r9, r5
 800139e:	46a0      	mov	r8, r4
 80013a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013a2:	2001      	movs	r0, #1
 80013a4:	428e      	cmp	r6, r1
 80013a6:	d1f6      	bne.n	8001396 <__eqdf2+0x56>
 80013a8:	4661      	mov	r1, ip
 80013aa:	4339      	orrs	r1, r7
 80013ac:	000f      	movs	r7, r1
 80013ae:	4317      	orrs	r7, r2
 80013b0:	4327      	orrs	r7, r4
 80013b2:	d1f0      	bne.n	8001396 <__eqdf2+0x56>
 80013b4:	465b      	mov	r3, fp
 80013b6:	4652      	mov	r2, sl
 80013b8:	1a98      	subs	r0, r3, r2
 80013ba:	1e43      	subs	r3, r0, #1
 80013bc:	4198      	sbcs	r0, r3
 80013be:	e7ea      	b.n	8001396 <__eqdf2+0x56>
 80013c0:	2000      	movs	r0, #0
 80013c2:	e7e8      	b.n	8001396 <__eqdf2+0x56>
 80013c4:	000007ff 	.word	0x000007ff

080013c8 <__gedf2>:
 80013c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80013ca:	4657      	mov	r7, sl
 80013cc:	464e      	mov	r6, r9
 80013ce:	4645      	mov	r5, r8
 80013d0:	46de      	mov	lr, fp
 80013d2:	b5e0      	push	{r5, r6, r7, lr}
 80013d4:	000d      	movs	r5, r1
 80013d6:	030e      	lsls	r6, r1, #12
 80013d8:	0049      	lsls	r1, r1, #1
 80013da:	0d49      	lsrs	r1, r1, #21
 80013dc:	468a      	mov	sl, r1
 80013de:	0fdf      	lsrs	r7, r3, #31
 80013e0:	0fe9      	lsrs	r1, r5, #31
 80013e2:	46bc      	mov	ip, r7
 80013e4:	b083      	sub	sp, #12
 80013e6:	4f2f      	ldr	r7, [pc, #188]	@ (80014a4 <__gedf2+0xdc>)
 80013e8:	0004      	movs	r4, r0
 80013ea:	4680      	mov	r8, r0
 80013ec:	9101      	str	r1, [sp, #4]
 80013ee:	0058      	lsls	r0, r3, #1
 80013f0:	0319      	lsls	r1, r3, #12
 80013f2:	4691      	mov	r9, r2
 80013f4:	0b36      	lsrs	r6, r6, #12
 80013f6:	0b09      	lsrs	r1, r1, #12
 80013f8:	0d40      	lsrs	r0, r0, #21
 80013fa:	45ba      	cmp	sl, r7
 80013fc:	d01d      	beq.n	800143a <__gedf2+0x72>
 80013fe:	42b8      	cmp	r0, r7
 8001400:	d00d      	beq.n	800141e <__gedf2+0x56>
 8001402:	4657      	mov	r7, sl
 8001404:	2f00      	cmp	r7, #0
 8001406:	d12a      	bne.n	800145e <__gedf2+0x96>
 8001408:	4334      	orrs	r4, r6
 800140a:	2800      	cmp	r0, #0
 800140c:	d124      	bne.n	8001458 <__gedf2+0x90>
 800140e:	430a      	orrs	r2, r1
 8001410:	d036      	beq.n	8001480 <__gedf2+0xb8>
 8001412:	2c00      	cmp	r4, #0
 8001414:	d141      	bne.n	800149a <__gedf2+0xd2>
 8001416:	4663      	mov	r3, ip
 8001418:	0058      	lsls	r0, r3, #1
 800141a:	3801      	subs	r0, #1
 800141c:	e015      	b.n	800144a <__gedf2+0x82>
 800141e:	4311      	orrs	r1, r2
 8001420:	d138      	bne.n	8001494 <__gedf2+0xcc>
 8001422:	4653      	mov	r3, sl
 8001424:	2b00      	cmp	r3, #0
 8001426:	d101      	bne.n	800142c <__gedf2+0x64>
 8001428:	4326      	orrs	r6, r4
 800142a:	d0f4      	beq.n	8001416 <__gedf2+0x4e>
 800142c:	9b01      	ldr	r3, [sp, #4]
 800142e:	4563      	cmp	r3, ip
 8001430:	d107      	bne.n	8001442 <__gedf2+0x7a>
 8001432:	9b01      	ldr	r3, [sp, #4]
 8001434:	0058      	lsls	r0, r3, #1
 8001436:	3801      	subs	r0, #1
 8001438:	e007      	b.n	800144a <__gedf2+0x82>
 800143a:	4326      	orrs	r6, r4
 800143c:	d12a      	bne.n	8001494 <__gedf2+0xcc>
 800143e:	4550      	cmp	r0, sl
 8001440:	d021      	beq.n	8001486 <__gedf2+0xbe>
 8001442:	2001      	movs	r0, #1
 8001444:	9b01      	ldr	r3, [sp, #4]
 8001446:	425f      	negs	r7, r3
 8001448:	4338      	orrs	r0, r7
 800144a:	b003      	add	sp, #12
 800144c:	bcf0      	pop	{r4, r5, r6, r7}
 800144e:	46bb      	mov	fp, r7
 8001450:	46b2      	mov	sl, r6
 8001452:	46a9      	mov	r9, r5
 8001454:	46a0      	mov	r8, r4
 8001456:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001458:	2c00      	cmp	r4, #0
 800145a:	d0dc      	beq.n	8001416 <__gedf2+0x4e>
 800145c:	e7e6      	b.n	800142c <__gedf2+0x64>
 800145e:	2800      	cmp	r0, #0
 8001460:	d0ef      	beq.n	8001442 <__gedf2+0x7a>
 8001462:	9b01      	ldr	r3, [sp, #4]
 8001464:	4563      	cmp	r3, ip
 8001466:	d1ec      	bne.n	8001442 <__gedf2+0x7a>
 8001468:	4582      	cmp	sl, r0
 800146a:	dcea      	bgt.n	8001442 <__gedf2+0x7a>
 800146c:	dbe1      	blt.n	8001432 <__gedf2+0x6a>
 800146e:	428e      	cmp	r6, r1
 8001470:	d8e7      	bhi.n	8001442 <__gedf2+0x7a>
 8001472:	d1de      	bne.n	8001432 <__gedf2+0x6a>
 8001474:	45c8      	cmp	r8, r9
 8001476:	d8e4      	bhi.n	8001442 <__gedf2+0x7a>
 8001478:	2000      	movs	r0, #0
 800147a:	45c8      	cmp	r8, r9
 800147c:	d2e5      	bcs.n	800144a <__gedf2+0x82>
 800147e:	e7d8      	b.n	8001432 <__gedf2+0x6a>
 8001480:	2c00      	cmp	r4, #0
 8001482:	d0e2      	beq.n	800144a <__gedf2+0x82>
 8001484:	e7dd      	b.n	8001442 <__gedf2+0x7a>
 8001486:	4311      	orrs	r1, r2
 8001488:	d104      	bne.n	8001494 <__gedf2+0xcc>
 800148a:	9b01      	ldr	r3, [sp, #4]
 800148c:	4563      	cmp	r3, ip
 800148e:	d1d8      	bne.n	8001442 <__gedf2+0x7a>
 8001490:	2000      	movs	r0, #0
 8001492:	e7da      	b.n	800144a <__gedf2+0x82>
 8001494:	2002      	movs	r0, #2
 8001496:	4240      	negs	r0, r0
 8001498:	e7d7      	b.n	800144a <__gedf2+0x82>
 800149a:	9b01      	ldr	r3, [sp, #4]
 800149c:	4563      	cmp	r3, ip
 800149e:	d0e6      	beq.n	800146e <__gedf2+0xa6>
 80014a0:	e7cf      	b.n	8001442 <__gedf2+0x7a>
 80014a2:	46c0      	nop			@ (mov r8, r8)
 80014a4:	000007ff 	.word	0x000007ff

080014a8 <__ledf2>:
 80014a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80014aa:	4657      	mov	r7, sl
 80014ac:	464e      	mov	r6, r9
 80014ae:	4645      	mov	r5, r8
 80014b0:	46de      	mov	lr, fp
 80014b2:	b5e0      	push	{r5, r6, r7, lr}
 80014b4:	000d      	movs	r5, r1
 80014b6:	030e      	lsls	r6, r1, #12
 80014b8:	0049      	lsls	r1, r1, #1
 80014ba:	0d49      	lsrs	r1, r1, #21
 80014bc:	468a      	mov	sl, r1
 80014be:	0fdf      	lsrs	r7, r3, #31
 80014c0:	0fe9      	lsrs	r1, r5, #31
 80014c2:	46bc      	mov	ip, r7
 80014c4:	b083      	sub	sp, #12
 80014c6:	4f2e      	ldr	r7, [pc, #184]	@ (8001580 <__ledf2+0xd8>)
 80014c8:	0004      	movs	r4, r0
 80014ca:	4680      	mov	r8, r0
 80014cc:	9101      	str	r1, [sp, #4]
 80014ce:	0058      	lsls	r0, r3, #1
 80014d0:	0319      	lsls	r1, r3, #12
 80014d2:	4691      	mov	r9, r2
 80014d4:	0b36      	lsrs	r6, r6, #12
 80014d6:	0b09      	lsrs	r1, r1, #12
 80014d8:	0d40      	lsrs	r0, r0, #21
 80014da:	45ba      	cmp	sl, r7
 80014dc:	d01e      	beq.n	800151c <__ledf2+0x74>
 80014de:	42b8      	cmp	r0, r7
 80014e0:	d00d      	beq.n	80014fe <__ledf2+0x56>
 80014e2:	4657      	mov	r7, sl
 80014e4:	2f00      	cmp	r7, #0
 80014e6:	d127      	bne.n	8001538 <__ledf2+0x90>
 80014e8:	4334      	orrs	r4, r6
 80014ea:	2800      	cmp	r0, #0
 80014ec:	d133      	bne.n	8001556 <__ledf2+0xae>
 80014ee:	430a      	orrs	r2, r1
 80014f0:	d034      	beq.n	800155c <__ledf2+0xb4>
 80014f2:	2c00      	cmp	r4, #0
 80014f4:	d140      	bne.n	8001578 <__ledf2+0xd0>
 80014f6:	4663      	mov	r3, ip
 80014f8:	0058      	lsls	r0, r3, #1
 80014fa:	3801      	subs	r0, #1
 80014fc:	e015      	b.n	800152a <__ledf2+0x82>
 80014fe:	4311      	orrs	r1, r2
 8001500:	d112      	bne.n	8001528 <__ledf2+0x80>
 8001502:	4653      	mov	r3, sl
 8001504:	2b00      	cmp	r3, #0
 8001506:	d101      	bne.n	800150c <__ledf2+0x64>
 8001508:	4326      	orrs	r6, r4
 800150a:	d0f4      	beq.n	80014f6 <__ledf2+0x4e>
 800150c:	9b01      	ldr	r3, [sp, #4]
 800150e:	4563      	cmp	r3, ip
 8001510:	d01d      	beq.n	800154e <__ledf2+0xa6>
 8001512:	2001      	movs	r0, #1
 8001514:	9b01      	ldr	r3, [sp, #4]
 8001516:	425f      	negs	r7, r3
 8001518:	4338      	orrs	r0, r7
 800151a:	e006      	b.n	800152a <__ledf2+0x82>
 800151c:	4326      	orrs	r6, r4
 800151e:	d103      	bne.n	8001528 <__ledf2+0x80>
 8001520:	4550      	cmp	r0, sl
 8001522:	d1f6      	bne.n	8001512 <__ledf2+0x6a>
 8001524:	4311      	orrs	r1, r2
 8001526:	d01c      	beq.n	8001562 <__ledf2+0xba>
 8001528:	2002      	movs	r0, #2
 800152a:	b003      	add	sp, #12
 800152c:	bcf0      	pop	{r4, r5, r6, r7}
 800152e:	46bb      	mov	fp, r7
 8001530:	46b2      	mov	sl, r6
 8001532:	46a9      	mov	r9, r5
 8001534:	46a0      	mov	r8, r4
 8001536:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001538:	2800      	cmp	r0, #0
 800153a:	d0ea      	beq.n	8001512 <__ledf2+0x6a>
 800153c:	9b01      	ldr	r3, [sp, #4]
 800153e:	4563      	cmp	r3, ip
 8001540:	d1e7      	bne.n	8001512 <__ledf2+0x6a>
 8001542:	4582      	cmp	sl, r0
 8001544:	dce5      	bgt.n	8001512 <__ledf2+0x6a>
 8001546:	db02      	blt.n	800154e <__ledf2+0xa6>
 8001548:	428e      	cmp	r6, r1
 800154a:	d8e2      	bhi.n	8001512 <__ledf2+0x6a>
 800154c:	d00e      	beq.n	800156c <__ledf2+0xc4>
 800154e:	9b01      	ldr	r3, [sp, #4]
 8001550:	0058      	lsls	r0, r3, #1
 8001552:	3801      	subs	r0, #1
 8001554:	e7e9      	b.n	800152a <__ledf2+0x82>
 8001556:	2c00      	cmp	r4, #0
 8001558:	d0cd      	beq.n	80014f6 <__ledf2+0x4e>
 800155a:	e7d7      	b.n	800150c <__ledf2+0x64>
 800155c:	2c00      	cmp	r4, #0
 800155e:	d0e4      	beq.n	800152a <__ledf2+0x82>
 8001560:	e7d7      	b.n	8001512 <__ledf2+0x6a>
 8001562:	9b01      	ldr	r3, [sp, #4]
 8001564:	2000      	movs	r0, #0
 8001566:	4563      	cmp	r3, ip
 8001568:	d0df      	beq.n	800152a <__ledf2+0x82>
 800156a:	e7d2      	b.n	8001512 <__ledf2+0x6a>
 800156c:	45c8      	cmp	r8, r9
 800156e:	d8d0      	bhi.n	8001512 <__ledf2+0x6a>
 8001570:	2000      	movs	r0, #0
 8001572:	45c8      	cmp	r8, r9
 8001574:	d2d9      	bcs.n	800152a <__ledf2+0x82>
 8001576:	e7ea      	b.n	800154e <__ledf2+0xa6>
 8001578:	9b01      	ldr	r3, [sp, #4]
 800157a:	4563      	cmp	r3, ip
 800157c:	d0e4      	beq.n	8001548 <__ledf2+0xa0>
 800157e:	e7c8      	b.n	8001512 <__ledf2+0x6a>
 8001580:	000007ff 	.word	0x000007ff

08001584 <__aeabi_dmul>:
 8001584:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001586:	4657      	mov	r7, sl
 8001588:	464e      	mov	r6, r9
 800158a:	46de      	mov	lr, fp
 800158c:	4645      	mov	r5, r8
 800158e:	b5e0      	push	{r5, r6, r7, lr}
 8001590:	001f      	movs	r7, r3
 8001592:	030b      	lsls	r3, r1, #12
 8001594:	0b1b      	lsrs	r3, r3, #12
 8001596:	0016      	movs	r6, r2
 8001598:	469a      	mov	sl, r3
 800159a:	0fca      	lsrs	r2, r1, #31
 800159c:	004b      	lsls	r3, r1, #1
 800159e:	0004      	movs	r4, r0
 80015a0:	4691      	mov	r9, r2
 80015a2:	b085      	sub	sp, #20
 80015a4:	0d5b      	lsrs	r3, r3, #21
 80015a6:	d100      	bne.n	80015aa <__aeabi_dmul+0x26>
 80015a8:	e1cf      	b.n	800194a <__aeabi_dmul+0x3c6>
 80015aa:	4acd      	ldr	r2, [pc, #820]	@ (80018e0 <__aeabi_dmul+0x35c>)
 80015ac:	4293      	cmp	r3, r2
 80015ae:	d055      	beq.n	800165c <__aeabi_dmul+0xd8>
 80015b0:	4651      	mov	r1, sl
 80015b2:	0f42      	lsrs	r2, r0, #29
 80015b4:	00c9      	lsls	r1, r1, #3
 80015b6:	430a      	orrs	r2, r1
 80015b8:	2180      	movs	r1, #128	@ 0x80
 80015ba:	0409      	lsls	r1, r1, #16
 80015bc:	4311      	orrs	r1, r2
 80015be:	00c2      	lsls	r2, r0, #3
 80015c0:	4690      	mov	r8, r2
 80015c2:	4ac8      	ldr	r2, [pc, #800]	@ (80018e4 <__aeabi_dmul+0x360>)
 80015c4:	468a      	mov	sl, r1
 80015c6:	4693      	mov	fp, r2
 80015c8:	449b      	add	fp, r3
 80015ca:	2300      	movs	r3, #0
 80015cc:	2500      	movs	r5, #0
 80015ce:	9302      	str	r3, [sp, #8]
 80015d0:	033c      	lsls	r4, r7, #12
 80015d2:	007b      	lsls	r3, r7, #1
 80015d4:	0ffa      	lsrs	r2, r7, #31
 80015d6:	9601      	str	r6, [sp, #4]
 80015d8:	0b24      	lsrs	r4, r4, #12
 80015da:	0d5b      	lsrs	r3, r3, #21
 80015dc:	9200      	str	r2, [sp, #0]
 80015de:	d100      	bne.n	80015e2 <__aeabi_dmul+0x5e>
 80015e0:	e188      	b.n	80018f4 <__aeabi_dmul+0x370>
 80015e2:	4abf      	ldr	r2, [pc, #764]	@ (80018e0 <__aeabi_dmul+0x35c>)
 80015e4:	4293      	cmp	r3, r2
 80015e6:	d100      	bne.n	80015ea <__aeabi_dmul+0x66>
 80015e8:	e092      	b.n	8001710 <__aeabi_dmul+0x18c>
 80015ea:	4abe      	ldr	r2, [pc, #760]	@ (80018e4 <__aeabi_dmul+0x360>)
 80015ec:	4694      	mov	ip, r2
 80015ee:	4463      	add	r3, ip
 80015f0:	449b      	add	fp, r3
 80015f2:	2d0a      	cmp	r5, #10
 80015f4:	dc42      	bgt.n	800167c <__aeabi_dmul+0xf8>
 80015f6:	00e4      	lsls	r4, r4, #3
 80015f8:	0f73      	lsrs	r3, r6, #29
 80015fa:	4323      	orrs	r3, r4
 80015fc:	2480      	movs	r4, #128	@ 0x80
 80015fe:	4649      	mov	r1, r9
 8001600:	0424      	lsls	r4, r4, #16
 8001602:	431c      	orrs	r4, r3
 8001604:	00f3      	lsls	r3, r6, #3
 8001606:	9301      	str	r3, [sp, #4]
 8001608:	9b00      	ldr	r3, [sp, #0]
 800160a:	2000      	movs	r0, #0
 800160c:	4059      	eors	r1, r3
 800160e:	b2cb      	uxtb	r3, r1
 8001610:	9303      	str	r3, [sp, #12]
 8001612:	2d02      	cmp	r5, #2
 8001614:	dc00      	bgt.n	8001618 <__aeabi_dmul+0x94>
 8001616:	e094      	b.n	8001742 <__aeabi_dmul+0x1be>
 8001618:	2301      	movs	r3, #1
 800161a:	40ab      	lsls	r3, r5
 800161c:	001d      	movs	r5, r3
 800161e:	23a6      	movs	r3, #166	@ 0xa6
 8001620:	002a      	movs	r2, r5
 8001622:	00db      	lsls	r3, r3, #3
 8001624:	401a      	ands	r2, r3
 8001626:	421d      	tst	r5, r3
 8001628:	d000      	beq.n	800162c <__aeabi_dmul+0xa8>
 800162a:	e229      	b.n	8001a80 <__aeabi_dmul+0x4fc>
 800162c:	2390      	movs	r3, #144	@ 0x90
 800162e:	009b      	lsls	r3, r3, #2
 8001630:	421d      	tst	r5, r3
 8001632:	d100      	bne.n	8001636 <__aeabi_dmul+0xb2>
 8001634:	e24d      	b.n	8001ad2 <__aeabi_dmul+0x54e>
 8001636:	2300      	movs	r3, #0
 8001638:	2480      	movs	r4, #128	@ 0x80
 800163a:	4699      	mov	r9, r3
 800163c:	0324      	lsls	r4, r4, #12
 800163e:	4ba8      	ldr	r3, [pc, #672]	@ (80018e0 <__aeabi_dmul+0x35c>)
 8001640:	0010      	movs	r0, r2
 8001642:	464a      	mov	r2, r9
 8001644:	051b      	lsls	r3, r3, #20
 8001646:	4323      	orrs	r3, r4
 8001648:	07d2      	lsls	r2, r2, #31
 800164a:	4313      	orrs	r3, r2
 800164c:	0019      	movs	r1, r3
 800164e:	b005      	add	sp, #20
 8001650:	bcf0      	pop	{r4, r5, r6, r7}
 8001652:	46bb      	mov	fp, r7
 8001654:	46b2      	mov	sl, r6
 8001656:	46a9      	mov	r9, r5
 8001658:	46a0      	mov	r8, r4
 800165a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800165c:	4652      	mov	r2, sl
 800165e:	4302      	orrs	r2, r0
 8001660:	4690      	mov	r8, r2
 8001662:	d000      	beq.n	8001666 <__aeabi_dmul+0xe2>
 8001664:	e1ac      	b.n	80019c0 <__aeabi_dmul+0x43c>
 8001666:	469b      	mov	fp, r3
 8001668:	2302      	movs	r3, #2
 800166a:	4692      	mov	sl, r2
 800166c:	2508      	movs	r5, #8
 800166e:	9302      	str	r3, [sp, #8]
 8001670:	e7ae      	b.n	80015d0 <__aeabi_dmul+0x4c>
 8001672:	9b00      	ldr	r3, [sp, #0]
 8001674:	46a2      	mov	sl, r4
 8001676:	4699      	mov	r9, r3
 8001678:	9b01      	ldr	r3, [sp, #4]
 800167a:	4698      	mov	r8, r3
 800167c:	9b02      	ldr	r3, [sp, #8]
 800167e:	2b02      	cmp	r3, #2
 8001680:	d100      	bne.n	8001684 <__aeabi_dmul+0x100>
 8001682:	e1ca      	b.n	8001a1a <__aeabi_dmul+0x496>
 8001684:	2b03      	cmp	r3, #3
 8001686:	d100      	bne.n	800168a <__aeabi_dmul+0x106>
 8001688:	e192      	b.n	80019b0 <__aeabi_dmul+0x42c>
 800168a:	2b01      	cmp	r3, #1
 800168c:	d110      	bne.n	80016b0 <__aeabi_dmul+0x12c>
 800168e:	2300      	movs	r3, #0
 8001690:	2400      	movs	r4, #0
 8001692:	2200      	movs	r2, #0
 8001694:	e7d4      	b.n	8001640 <__aeabi_dmul+0xbc>
 8001696:	2201      	movs	r2, #1
 8001698:	087b      	lsrs	r3, r7, #1
 800169a:	403a      	ands	r2, r7
 800169c:	4313      	orrs	r3, r2
 800169e:	4652      	mov	r2, sl
 80016a0:	07d2      	lsls	r2, r2, #31
 80016a2:	4313      	orrs	r3, r2
 80016a4:	4698      	mov	r8, r3
 80016a6:	4653      	mov	r3, sl
 80016a8:	085b      	lsrs	r3, r3, #1
 80016aa:	469a      	mov	sl, r3
 80016ac:	9b03      	ldr	r3, [sp, #12]
 80016ae:	4699      	mov	r9, r3
 80016b0:	465b      	mov	r3, fp
 80016b2:	1c58      	adds	r0, r3, #1
 80016b4:	2380      	movs	r3, #128	@ 0x80
 80016b6:	00db      	lsls	r3, r3, #3
 80016b8:	445b      	add	r3, fp
 80016ba:	2b00      	cmp	r3, #0
 80016bc:	dc00      	bgt.n	80016c0 <__aeabi_dmul+0x13c>
 80016be:	e1b1      	b.n	8001a24 <__aeabi_dmul+0x4a0>
 80016c0:	4642      	mov	r2, r8
 80016c2:	0752      	lsls	r2, r2, #29
 80016c4:	d00b      	beq.n	80016de <__aeabi_dmul+0x15a>
 80016c6:	220f      	movs	r2, #15
 80016c8:	4641      	mov	r1, r8
 80016ca:	400a      	ands	r2, r1
 80016cc:	2a04      	cmp	r2, #4
 80016ce:	d006      	beq.n	80016de <__aeabi_dmul+0x15a>
 80016d0:	4642      	mov	r2, r8
 80016d2:	1d11      	adds	r1, r2, #4
 80016d4:	4541      	cmp	r1, r8
 80016d6:	4192      	sbcs	r2, r2
 80016d8:	4688      	mov	r8, r1
 80016da:	4252      	negs	r2, r2
 80016dc:	4492      	add	sl, r2
 80016de:	4652      	mov	r2, sl
 80016e0:	01d2      	lsls	r2, r2, #7
 80016e2:	d506      	bpl.n	80016f2 <__aeabi_dmul+0x16e>
 80016e4:	4652      	mov	r2, sl
 80016e6:	4b80      	ldr	r3, [pc, #512]	@ (80018e8 <__aeabi_dmul+0x364>)
 80016e8:	401a      	ands	r2, r3
 80016ea:	2380      	movs	r3, #128	@ 0x80
 80016ec:	4692      	mov	sl, r2
 80016ee:	00db      	lsls	r3, r3, #3
 80016f0:	18c3      	adds	r3, r0, r3
 80016f2:	4a7e      	ldr	r2, [pc, #504]	@ (80018ec <__aeabi_dmul+0x368>)
 80016f4:	4293      	cmp	r3, r2
 80016f6:	dd00      	ble.n	80016fa <__aeabi_dmul+0x176>
 80016f8:	e18f      	b.n	8001a1a <__aeabi_dmul+0x496>
 80016fa:	4642      	mov	r2, r8
 80016fc:	08d1      	lsrs	r1, r2, #3
 80016fe:	4652      	mov	r2, sl
 8001700:	0752      	lsls	r2, r2, #29
 8001702:	430a      	orrs	r2, r1
 8001704:	4651      	mov	r1, sl
 8001706:	055b      	lsls	r3, r3, #21
 8001708:	024c      	lsls	r4, r1, #9
 800170a:	0b24      	lsrs	r4, r4, #12
 800170c:	0d5b      	lsrs	r3, r3, #21
 800170e:	e797      	b.n	8001640 <__aeabi_dmul+0xbc>
 8001710:	4b73      	ldr	r3, [pc, #460]	@ (80018e0 <__aeabi_dmul+0x35c>)
 8001712:	4326      	orrs	r6, r4
 8001714:	469c      	mov	ip, r3
 8001716:	44e3      	add	fp, ip
 8001718:	2e00      	cmp	r6, #0
 800171a:	d100      	bne.n	800171e <__aeabi_dmul+0x19a>
 800171c:	e16f      	b.n	80019fe <__aeabi_dmul+0x47a>
 800171e:	2303      	movs	r3, #3
 8001720:	4649      	mov	r1, r9
 8001722:	431d      	orrs	r5, r3
 8001724:	9b00      	ldr	r3, [sp, #0]
 8001726:	4059      	eors	r1, r3
 8001728:	b2cb      	uxtb	r3, r1
 800172a:	9303      	str	r3, [sp, #12]
 800172c:	2d0a      	cmp	r5, #10
 800172e:	dd00      	ble.n	8001732 <__aeabi_dmul+0x1ae>
 8001730:	e133      	b.n	800199a <__aeabi_dmul+0x416>
 8001732:	2301      	movs	r3, #1
 8001734:	40ab      	lsls	r3, r5
 8001736:	001d      	movs	r5, r3
 8001738:	2303      	movs	r3, #3
 800173a:	9302      	str	r3, [sp, #8]
 800173c:	2288      	movs	r2, #136	@ 0x88
 800173e:	422a      	tst	r2, r5
 8001740:	d197      	bne.n	8001672 <__aeabi_dmul+0xee>
 8001742:	4642      	mov	r2, r8
 8001744:	4643      	mov	r3, r8
 8001746:	0412      	lsls	r2, r2, #16
 8001748:	0c12      	lsrs	r2, r2, #16
 800174a:	0016      	movs	r6, r2
 800174c:	9801      	ldr	r0, [sp, #4]
 800174e:	0c1d      	lsrs	r5, r3, #16
 8001750:	0c03      	lsrs	r3, r0, #16
 8001752:	0400      	lsls	r0, r0, #16
 8001754:	0c00      	lsrs	r0, r0, #16
 8001756:	4346      	muls	r6, r0
 8001758:	46b4      	mov	ip, r6
 800175a:	001e      	movs	r6, r3
 800175c:	436e      	muls	r6, r5
 800175e:	9600      	str	r6, [sp, #0]
 8001760:	0016      	movs	r6, r2
 8001762:	0007      	movs	r7, r0
 8001764:	435e      	muls	r6, r3
 8001766:	4661      	mov	r1, ip
 8001768:	46b0      	mov	r8, r6
 800176a:	436f      	muls	r7, r5
 800176c:	0c0e      	lsrs	r6, r1, #16
 800176e:	44b8      	add	r8, r7
 8001770:	4446      	add	r6, r8
 8001772:	42b7      	cmp	r7, r6
 8001774:	d905      	bls.n	8001782 <__aeabi_dmul+0x1fe>
 8001776:	2180      	movs	r1, #128	@ 0x80
 8001778:	0249      	lsls	r1, r1, #9
 800177a:	4688      	mov	r8, r1
 800177c:	9f00      	ldr	r7, [sp, #0]
 800177e:	4447      	add	r7, r8
 8001780:	9700      	str	r7, [sp, #0]
 8001782:	4661      	mov	r1, ip
 8001784:	0409      	lsls	r1, r1, #16
 8001786:	0c09      	lsrs	r1, r1, #16
 8001788:	0c37      	lsrs	r7, r6, #16
 800178a:	0436      	lsls	r6, r6, #16
 800178c:	468c      	mov	ip, r1
 800178e:	0031      	movs	r1, r6
 8001790:	4461      	add	r1, ip
 8001792:	9101      	str	r1, [sp, #4]
 8001794:	0011      	movs	r1, r2
 8001796:	0c26      	lsrs	r6, r4, #16
 8001798:	0424      	lsls	r4, r4, #16
 800179a:	0c24      	lsrs	r4, r4, #16
 800179c:	4361      	muls	r1, r4
 800179e:	468c      	mov	ip, r1
 80017a0:	0021      	movs	r1, r4
 80017a2:	4369      	muls	r1, r5
 80017a4:	4689      	mov	r9, r1
 80017a6:	4661      	mov	r1, ip
 80017a8:	0c09      	lsrs	r1, r1, #16
 80017aa:	4688      	mov	r8, r1
 80017ac:	4372      	muls	r2, r6
 80017ae:	444a      	add	r2, r9
 80017b0:	4442      	add	r2, r8
 80017b2:	4375      	muls	r5, r6
 80017b4:	4591      	cmp	r9, r2
 80017b6:	d903      	bls.n	80017c0 <__aeabi_dmul+0x23c>
 80017b8:	2180      	movs	r1, #128	@ 0x80
 80017ba:	0249      	lsls	r1, r1, #9
 80017bc:	4688      	mov	r8, r1
 80017be:	4445      	add	r5, r8
 80017c0:	0c11      	lsrs	r1, r2, #16
 80017c2:	4688      	mov	r8, r1
 80017c4:	4661      	mov	r1, ip
 80017c6:	0409      	lsls	r1, r1, #16
 80017c8:	0c09      	lsrs	r1, r1, #16
 80017ca:	468c      	mov	ip, r1
 80017cc:	0412      	lsls	r2, r2, #16
 80017ce:	4462      	add	r2, ip
 80017d0:	18b9      	adds	r1, r7, r2
 80017d2:	9102      	str	r1, [sp, #8]
 80017d4:	4651      	mov	r1, sl
 80017d6:	0c09      	lsrs	r1, r1, #16
 80017d8:	468c      	mov	ip, r1
 80017da:	4651      	mov	r1, sl
 80017dc:	040f      	lsls	r7, r1, #16
 80017de:	0c3f      	lsrs	r7, r7, #16
 80017e0:	0039      	movs	r1, r7
 80017e2:	4341      	muls	r1, r0
 80017e4:	4445      	add	r5, r8
 80017e6:	4688      	mov	r8, r1
 80017e8:	4661      	mov	r1, ip
 80017ea:	4341      	muls	r1, r0
 80017ec:	468a      	mov	sl, r1
 80017ee:	4641      	mov	r1, r8
 80017f0:	4660      	mov	r0, ip
 80017f2:	0c09      	lsrs	r1, r1, #16
 80017f4:	4689      	mov	r9, r1
 80017f6:	4358      	muls	r0, r3
 80017f8:	437b      	muls	r3, r7
 80017fa:	4453      	add	r3, sl
 80017fc:	444b      	add	r3, r9
 80017fe:	459a      	cmp	sl, r3
 8001800:	d903      	bls.n	800180a <__aeabi_dmul+0x286>
 8001802:	2180      	movs	r1, #128	@ 0x80
 8001804:	0249      	lsls	r1, r1, #9
 8001806:	4689      	mov	r9, r1
 8001808:	4448      	add	r0, r9
 800180a:	0c19      	lsrs	r1, r3, #16
 800180c:	4689      	mov	r9, r1
 800180e:	4641      	mov	r1, r8
 8001810:	0409      	lsls	r1, r1, #16
 8001812:	0c09      	lsrs	r1, r1, #16
 8001814:	4688      	mov	r8, r1
 8001816:	0039      	movs	r1, r7
 8001818:	4361      	muls	r1, r4
 800181a:	041b      	lsls	r3, r3, #16
 800181c:	4443      	add	r3, r8
 800181e:	4688      	mov	r8, r1
 8001820:	4661      	mov	r1, ip
 8001822:	434c      	muls	r4, r1
 8001824:	4371      	muls	r1, r6
 8001826:	468c      	mov	ip, r1
 8001828:	4641      	mov	r1, r8
 800182a:	4377      	muls	r7, r6
 800182c:	0c0e      	lsrs	r6, r1, #16
 800182e:	193f      	adds	r7, r7, r4
 8001830:	19f6      	adds	r6, r6, r7
 8001832:	4448      	add	r0, r9
 8001834:	42b4      	cmp	r4, r6
 8001836:	d903      	bls.n	8001840 <__aeabi_dmul+0x2bc>
 8001838:	2180      	movs	r1, #128	@ 0x80
 800183a:	0249      	lsls	r1, r1, #9
 800183c:	4689      	mov	r9, r1
 800183e:	44cc      	add	ip, r9
 8001840:	9902      	ldr	r1, [sp, #8]
 8001842:	9f00      	ldr	r7, [sp, #0]
 8001844:	4689      	mov	r9, r1
 8001846:	0431      	lsls	r1, r6, #16
 8001848:	444f      	add	r7, r9
 800184a:	4689      	mov	r9, r1
 800184c:	4641      	mov	r1, r8
 800184e:	4297      	cmp	r7, r2
 8001850:	4192      	sbcs	r2, r2
 8001852:	040c      	lsls	r4, r1, #16
 8001854:	0c24      	lsrs	r4, r4, #16
 8001856:	444c      	add	r4, r9
 8001858:	18ff      	adds	r7, r7, r3
 800185a:	4252      	negs	r2, r2
 800185c:	1964      	adds	r4, r4, r5
 800185e:	18a1      	adds	r1, r4, r2
 8001860:	429f      	cmp	r7, r3
 8001862:	419b      	sbcs	r3, r3
 8001864:	4688      	mov	r8, r1
 8001866:	4682      	mov	sl, r0
 8001868:	425b      	negs	r3, r3
 800186a:	4699      	mov	r9, r3
 800186c:	4590      	cmp	r8, r2
 800186e:	4192      	sbcs	r2, r2
 8001870:	42ac      	cmp	r4, r5
 8001872:	41a4      	sbcs	r4, r4
 8001874:	44c2      	add	sl, r8
 8001876:	44d1      	add	r9, sl
 8001878:	4252      	negs	r2, r2
 800187a:	4264      	negs	r4, r4
 800187c:	4314      	orrs	r4, r2
 800187e:	4599      	cmp	r9, r3
 8001880:	419b      	sbcs	r3, r3
 8001882:	4582      	cmp	sl, r0
 8001884:	4192      	sbcs	r2, r2
 8001886:	425b      	negs	r3, r3
 8001888:	4252      	negs	r2, r2
 800188a:	4313      	orrs	r3, r2
 800188c:	464a      	mov	r2, r9
 800188e:	0c36      	lsrs	r6, r6, #16
 8001890:	19a4      	adds	r4, r4, r6
 8001892:	18e3      	adds	r3, r4, r3
 8001894:	4463      	add	r3, ip
 8001896:	025b      	lsls	r3, r3, #9
 8001898:	0dd2      	lsrs	r2, r2, #23
 800189a:	431a      	orrs	r2, r3
 800189c:	9901      	ldr	r1, [sp, #4]
 800189e:	4692      	mov	sl, r2
 80018a0:	027a      	lsls	r2, r7, #9
 80018a2:	430a      	orrs	r2, r1
 80018a4:	1e50      	subs	r0, r2, #1
 80018a6:	4182      	sbcs	r2, r0
 80018a8:	0dff      	lsrs	r7, r7, #23
 80018aa:	4317      	orrs	r7, r2
 80018ac:	464a      	mov	r2, r9
 80018ae:	0252      	lsls	r2, r2, #9
 80018b0:	4317      	orrs	r7, r2
 80018b2:	46b8      	mov	r8, r7
 80018b4:	01db      	lsls	r3, r3, #7
 80018b6:	d500      	bpl.n	80018ba <__aeabi_dmul+0x336>
 80018b8:	e6ed      	b.n	8001696 <__aeabi_dmul+0x112>
 80018ba:	4b0d      	ldr	r3, [pc, #52]	@ (80018f0 <__aeabi_dmul+0x36c>)
 80018bc:	9a03      	ldr	r2, [sp, #12]
 80018be:	445b      	add	r3, fp
 80018c0:	4691      	mov	r9, r2
 80018c2:	2b00      	cmp	r3, #0
 80018c4:	dc00      	bgt.n	80018c8 <__aeabi_dmul+0x344>
 80018c6:	e0ac      	b.n	8001a22 <__aeabi_dmul+0x49e>
 80018c8:	003a      	movs	r2, r7
 80018ca:	0752      	lsls	r2, r2, #29
 80018cc:	d100      	bne.n	80018d0 <__aeabi_dmul+0x34c>
 80018ce:	e710      	b.n	80016f2 <__aeabi_dmul+0x16e>
 80018d0:	220f      	movs	r2, #15
 80018d2:	4658      	mov	r0, fp
 80018d4:	403a      	ands	r2, r7
 80018d6:	2a04      	cmp	r2, #4
 80018d8:	d000      	beq.n	80018dc <__aeabi_dmul+0x358>
 80018da:	e6f9      	b.n	80016d0 <__aeabi_dmul+0x14c>
 80018dc:	e709      	b.n	80016f2 <__aeabi_dmul+0x16e>
 80018de:	46c0      	nop			@ (mov r8, r8)
 80018e0:	000007ff 	.word	0x000007ff
 80018e4:	fffffc01 	.word	0xfffffc01
 80018e8:	feffffff 	.word	0xfeffffff
 80018ec:	000007fe 	.word	0x000007fe
 80018f0:	000003ff 	.word	0x000003ff
 80018f4:	0022      	movs	r2, r4
 80018f6:	4332      	orrs	r2, r6
 80018f8:	d06f      	beq.n	80019da <__aeabi_dmul+0x456>
 80018fa:	2c00      	cmp	r4, #0
 80018fc:	d100      	bne.n	8001900 <__aeabi_dmul+0x37c>
 80018fe:	e0c2      	b.n	8001a86 <__aeabi_dmul+0x502>
 8001900:	0020      	movs	r0, r4
 8001902:	f000 fea9 	bl	8002658 <__clzsi2>
 8001906:	0002      	movs	r2, r0
 8001908:	0003      	movs	r3, r0
 800190a:	3a0b      	subs	r2, #11
 800190c:	201d      	movs	r0, #29
 800190e:	1a82      	subs	r2, r0, r2
 8001910:	0030      	movs	r0, r6
 8001912:	0019      	movs	r1, r3
 8001914:	40d0      	lsrs	r0, r2
 8001916:	3908      	subs	r1, #8
 8001918:	408c      	lsls	r4, r1
 800191a:	0002      	movs	r2, r0
 800191c:	4322      	orrs	r2, r4
 800191e:	0034      	movs	r4, r6
 8001920:	408c      	lsls	r4, r1
 8001922:	4659      	mov	r1, fp
 8001924:	1acb      	subs	r3, r1, r3
 8001926:	4986      	ldr	r1, [pc, #536]	@ (8001b40 <__aeabi_dmul+0x5bc>)
 8001928:	468b      	mov	fp, r1
 800192a:	449b      	add	fp, r3
 800192c:	2d0a      	cmp	r5, #10
 800192e:	dd00      	ble.n	8001932 <__aeabi_dmul+0x3ae>
 8001930:	e6a4      	b.n	800167c <__aeabi_dmul+0xf8>
 8001932:	4649      	mov	r1, r9
 8001934:	9b00      	ldr	r3, [sp, #0]
 8001936:	9401      	str	r4, [sp, #4]
 8001938:	4059      	eors	r1, r3
 800193a:	b2cb      	uxtb	r3, r1
 800193c:	0014      	movs	r4, r2
 800193e:	2000      	movs	r0, #0
 8001940:	9303      	str	r3, [sp, #12]
 8001942:	2d02      	cmp	r5, #2
 8001944:	dd00      	ble.n	8001948 <__aeabi_dmul+0x3c4>
 8001946:	e667      	b.n	8001618 <__aeabi_dmul+0x94>
 8001948:	e6fb      	b.n	8001742 <__aeabi_dmul+0x1be>
 800194a:	4653      	mov	r3, sl
 800194c:	4303      	orrs	r3, r0
 800194e:	4698      	mov	r8, r3
 8001950:	d03c      	beq.n	80019cc <__aeabi_dmul+0x448>
 8001952:	4653      	mov	r3, sl
 8001954:	2b00      	cmp	r3, #0
 8001956:	d100      	bne.n	800195a <__aeabi_dmul+0x3d6>
 8001958:	e0a3      	b.n	8001aa2 <__aeabi_dmul+0x51e>
 800195a:	4650      	mov	r0, sl
 800195c:	f000 fe7c 	bl	8002658 <__clzsi2>
 8001960:	230b      	movs	r3, #11
 8001962:	425b      	negs	r3, r3
 8001964:	469c      	mov	ip, r3
 8001966:	0002      	movs	r2, r0
 8001968:	4484      	add	ip, r0
 800196a:	0011      	movs	r1, r2
 800196c:	4650      	mov	r0, sl
 800196e:	3908      	subs	r1, #8
 8001970:	4088      	lsls	r0, r1
 8001972:	231d      	movs	r3, #29
 8001974:	4680      	mov	r8, r0
 8001976:	4660      	mov	r0, ip
 8001978:	1a1b      	subs	r3, r3, r0
 800197a:	0020      	movs	r0, r4
 800197c:	40d8      	lsrs	r0, r3
 800197e:	0003      	movs	r3, r0
 8001980:	4640      	mov	r0, r8
 8001982:	4303      	orrs	r3, r0
 8001984:	469a      	mov	sl, r3
 8001986:	0023      	movs	r3, r4
 8001988:	408b      	lsls	r3, r1
 800198a:	4698      	mov	r8, r3
 800198c:	4b6c      	ldr	r3, [pc, #432]	@ (8001b40 <__aeabi_dmul+0x5bc>)
 800198e:	2500      	movs	r5, #0
 8001990:	1a9b      	subs	r3, r3, r2
 8001992:	469b      	mov	fp, r3
 8001994:	2300      	movs	r3, #0
 8001996:	9302      	str	r3, [sp, #8]
 8001998:	e61a      	b.n	80015d0 <__aeabi_dmul+0x4c>
 800199a:	2d0f      	cmp	r5, #15
 800199c:	d000      	beq.n	80019a0 <__aeabi_dmul+0x41c>
 800199e:	e0c9      	b.n	8001b34 <__aeabi_dmul+0x5b0>
 80019a0:	2380      	movs	r3, #128	@ 0x80
 80019a2:	4652      	mov	r2, sl
 80019a4:	031b      	lsls	r3, r3, #12
 80019a6:	421a      	tst	r2, r3
 80019a8:	d002      	beq.n	80019b0 <__aeabi_dmul+0x42c>
 80019aa:	421c      	tst	r4, r3
 80019ac:	d100      	bne.n	80019b0 <__aeabi_dmul+0x42c>
 80019ae:	e092      	b.n	8001ad6 <__aeabi_dmul+0x552>
 80019b0:	2480      	movs	r4, #128	@ 0x80
 80019b2:	4653      	mov	r3, sl
 80019b4:	0324      	lsls	r4, r4, #12
 80019b6:	431c      	orrs	r4, r3
 80019b8:	0324      	lsls	r4, r4, #12
 80019ba:	4642      	mov	r2, r8
 80019bc:	0b24      	lsrs	r4, r4, #12
 80019be:	e63e      	b.n	800163e <__aeabi_dmul+0xba>
 80019c0:	469b      	mov	fp, r3
 80019c2:	2303      	movs	r3, #3
 80019c4:	4680      	mov	r8, r0
 80019c6:	250c      	movs	r5, #12
 80019c8:	9302      	str	r3, [sp, #8]
 80019ca:	e601      	b.n	80015d0 <__aeabi_dmul+0x4c>
 80019cc:	2300      	movs	r3, #0
 80019ce:	469a      	mov	sl, r3
 80019d0:	469b      	mov	fp, r3
 80019d2:	3301      	adds	r3, #1
 80019d4:	2504      	movs	r5, #4
 80019d6:	9302      	str	r3, [sp, #8]
 80019d8:	e5fa      	b.n	80015d0 <__aeabi_dmul+0x4c>
 80019da:	2101      	movs	r1, #1
 80019dc:	430d      	orrs	r5, r1
 80019de:	2d0a      	cmp	r5, #10
 80019e0:	dd00      	ble.n	80019e4 <__aeabi_dmul+0x460>
 80019e2:	e64b      	b.n	800167c <__aeabi_dmul+0xf8>
 80019e4:	4649      	mov	r1, r9
 80019e6:	9800      	ldr	r0, [sp, #0]
 80019e8:	4041      	eors	r1, r0
 80019ea:	b2c9      	uxtb	r1, r1
 80019ec:	9103      	str	r1, [sp, #12]
 80019ee:	2d02      	cmp	r5, #2
 80019f0:	dc00      	bgt.n	80019f4 <__aeabi_dmul+0x470>
 80019f2:	e096      	b.n	8001b22 <__aeabi_dmul+0x59e>
 80019f4:	2300      	movs	r3, #0
 80019f6:	2400      	movs	r4, #0
 80019f8:	2001      	movs	r0, #1
 80019fa:	9301      	str	r3, [sp, #4]
 80019fc:	e60c      	b.n	8001618 <__aeabi_dmul+0x94>
 80019fe:	4649      	mov	r1, r9
 8001a00:	2302      	movs	r3, #2
 8001a02:	9a00      	ldr	r2, [sp, #0]
 8001a04:	432b      	orrs	r3, r5
 8001a06:	4051      	eors	r1, r2
 8001a08:	b2ca      	uxtb	r2, r1
 8001a0a:	9203      	str	r2, [sp, #12]
 8001a0c:	2b0a      	cmp	r3, #10
 8001a0e:	dd00      	ble.n	8001a12 <__aeabi_dmul+0x48e>
 8001a10:	e634      	b.n	800167c <__aeabi_dmul+0xf8>
 8001a12:	2d00      	cmp	r5, #0
 8001a14:	d157      	bne.n	8001ac6 <__aeabi_dmul+0x542>
 8001a16:	9b03      	ldr	r3, [sp, #12]
 8001a18:	4699      	mov	r9, r3
 8001a1a:	2400      	movs	r4, #0
 8001a1c:	2200      	movs	r2, #0
 8001a1e:	4b49      	ldr	r3, [pc, #292]	@ (8001b44 <__aeabi_dmul+0x5c0>)
 8001a20:	e60e      	b.n	8001640 <__aeabi_dmul+0xbc>
 8001a22:	4658      	mov	r0, fp
 8001a24:	2101      	movs	r1, #1
 8001a26:	1ac9      	subs	r1, r1, r3
 8001a28:	2938      	cmp	r1, #56	@ 0x38
 8001a2a:	dd00      	ble.n	8001a2e <__aeabi_dmul+0x4aa>
 8001a2c:	e62f      	b.n	800168e <__aeabi_dmul+0x10a>
 8001a2e:	291f      	cmp	r1, #31
 8001a30:	dd56      	ble.n	8001ae0 <__aeabi_dmul+0x55c>
 8001a32:	221f      	movs	r2, #31
 8001a34:	4654      	mov	r4, sl
 8001a36:	4252      	negs	r2, r2
 8001a38:	1ad3      	subs	r3, r2, r3
 8001a3a:	40dc      	lsrs	r4, r3
 8001a3c:	2920      	cmp	r1, #32
 8001a3e:	d007      	beq.n	8001a50 <__aeabi_dmul+0x4cc>
 8001a40:	4b41      	ldr	r3, [pc, #260]	@ (8001b48 <__aeabi_dmul+0x5c4>)
 8001a42:	4642      	mov	r2, r8
 8001a44:	469c      	mov	ip, r3
 8001a46:	4653      	mov	r3, sl
 8001a48:	4460      	add	r0, ip
 8001a4a:	4083      	lsls	r3, r0
 8001a4c:	431a      	orrs	r2, r3
 8001a4e:	4690      	mov	r8, r2
 8001a50:	4642      	mov	r2, r8
 8001a52:	2107      	movs	r1, #7
 8001a54:	1e53      	subs	r3, r2, #1
 8001a56:	419a      	sbcs	r2, r3
 8001a58:	000b      	movs	r3, r1
 8001a5a:	4322      	orrs	r2, r4
 8001a5c:	4013      	ands	r3, r2
 8001a5e:	2400      	movs	r4, #0
 8001a60:	4211      	tst	r1, r2
 8001a62:	d009      	beq.n	8001a78 <__aeabi_dmul+0x4f4>
 8001a64:	230f      	movs	r3, #15
 8001a66:	4013      	ands	r3, r2
 8001a68:	2b04      	cmp	r3, #4
 8001a6a:	d05d      	beq.n	8001b28 <__aeabi_dmul+0x5a4>
 8001a6c:	1d11      	adds	r1, r2, #4
 8001a6e:	4291      	cmp	r1, r2
 8001a70:	419b      	sbcs	r3, r3
 8001a72:	000a      	movs	r2, r1
 8001a74:	425b      	negs	r3, r3
 8001a76:	075b      	lsls	r3, r3, #29
 8001a78:	08d2      	lsrs	r2, r2, #3
 8001a7a:	431a      	orrs	r2, r3
 8001a7c:	2300      	movs	r3, #0
 8001a7e:	e5df      	b.n	8001640 <__aeabi_dmul+0xbc>
 8001a80:	9b03      	ldr	r3, [sp, #12]
 8001a82:	4699      	mov	r9, r3
 8001a84:	e5fa      	b.n	800167c <__aeabi_dmul+0xf8>
 8001a86:	9801      	ldr	r0, [sp, #4]
 8001a88:	f000 fde6 	bl	8002658 <__clzsi2>
 8001a8c:	0002      	movs	r2, r0
 8001a8e:	0003      	movs	r3, r0
 8001a90:	3215      	adds	r2, #21
 8001a92:	3320      	adds	r3, #32
 8001a94:	2a1c      	cmp	r2, #28
 8001a96:	dc00      	bgt.n	8001a9a <__aeabi_dmul+0x516>
 8001a98:	e738      	b.n	800190c <__aeabi_dmul+0x388>
 8001a9a:	9a01      	ldr	r2, [sp, #4]
 8001a9c:	3808      	subs	r0, #8
 8001a9e:	4082      	lsls	r2, r0
 8001aa0:	e73f      	b.n	8001922 <__aeabi_dmul+0x39e>
 8001aa2:	f000 fdd9 	bl	8002658 <__clzsi2>
 8001aa6:	2315      	movs	r3, #21
 8001aa8:	469c      	mov	ip, r3
 8001aaa:	4484      	add	ip, r0
 8001aac:	0002      	movs	r2, r0
 8001aae:	4663      	mov	r3, ip
 8001ab0:	3220      	adds	r2, #32
 8001ab2:	2b1c      	cmp	r3, #28
 8001ab4:	dc00      	bgt.n	8001ab8 <__aeabi_dmul+0x534>
 8001ab6:	e758      	b.n	800196a <__aeabi_dmul+0x3e6>
 8001ab8:	2300      	movs	r3, #0
 8001aba:	4698      	mov	r8, r3
 8001abc:	0023      	movs	r3, r4
 8001abe:	3808      	subs	r0, #8
 8001ac0:	4083      	lsls	r3, r0
 8001ac2:	469a      	mov	sl, r3
 8001ac4:	e762      	b.n	800198c <__aeabi_dmul+0x408>
 8001ac6:	001d      	movs	r5, r3
 8001ac8:	2300      	movs	r3, #0
 8001aca:	2400      	movs	r4, #0
 8001acc:	2002      	movs	r0, #2
 8001ace:	9301      	str	r3, [sp, #4]
 8001ad0:	e5a2      	b.n	8001618 <__aeabi_dmul+0x94>
 8001ad2:	9002      	str	r0, [sp, #8]
 8001ad4:	e632      	b.n	800173c <__aeabi_dmul+0x1b8>
 8001ad6:	431c      	orrs	r4, r3
 8001ad8:	9b00      	ldr	r3, [sp, #0]
 8001ada:	9a01      	ldr	r2, [sp, #4]
 8001adc:	4699      	mov	r9, r3
 8001ade:	e5ae      	b.n	800163e <__aeabi_dmul+0xba>
 8001ae0:	4b1a      	ldr	r3, [pc, #104]	@ (8001b4c <__aeabi_dmul+0x5c8>)
 8001ae2:	4652      	mov	r2, sl
 8001ae4:	18c3      	adds	r3, r0, r3
 8001ae6:	4640      	mov	r0, r8
 8001ae8:	409a      	lsls	r2, r3
 8001aea:	40c8      	lsrs	r0, r1
 8001aec:	4302      	orrs	r2, r0
 8001aee:	4640      	mov	r0, r8
 8001af0:	4098      	lsls	r0, r3
 8001af2:	0003      	movs	r3, r0
 8001af4:	1e58      	subs	r0, r3, #1
 8001af6:	4183      	sbcs	r3, r0
 8001af8:	4654      	mov	r4, sl
 8001afa:	431a      	orrs	r2, r3
 8001afc:	40cc      	lsrs	r4, r1
 8001afe:	0753      	lsls	r3, r2, #29
 8001b00:	d009      	beq.n	8001b16 <__aeabi_dmul+0x592>
 8001b02:	230f      	movs	r3, #15
 8001b04:	4013      	ands	r3, r2
 8001b06:	2b04      	cmp	r3, #4
 8001b08:	d005      	beq.n	8001b16 <__aeabi_dmul+0x592>
 8001b0a:	1d13      	adds	r3, r2, #4
 8001b0c:	4293      	cmp	r3, r2
 8001b0e:	4192      	sbcs	r2, r2
 8001b10:	4252      	negs	r2, r2
 8001b12:	18a4      	adds	r4, r4, r2
 8001b14:	001a      	movs	r2, r3
 8001b16:	0223      	lsls	r3, r4, #8
 8001b18:	d508      	bpl.n	8001b2c <__aeabi_dmul+0x5a8>
 8001b1a:	2301      	movs	r3, #1
 8001b1c:	2400      	movs	r4, #0
 8001b1e:	2200      	movs	r2, #0
 8001b20:	e58e      	b.n	8001640 <__aeabi_dmul+0xbc>
 8001b22:	4689      	mov	r9, r1
 8001b24:	2400      	movs	r4, #0
 8001b26:	e58b      	b.n	8001640 <__aeabi_dmul+0xbc>
 8001b28:	2300      	movs	r3, #0
 8001b2a:	e7a5      	b.n	8001a78 <__aeabi_dmul+0x4f4>
 8001b2c:	0763      	lsls	r3, r4, #29
 8001b2e:	0264      	lsls	r4, r4, #9
 8001b30:	0b24      	lsrs	r4, r4, #12
 8001b32:	e7a1      	b.n	8001a78 <__aeabi_dmul+0x4f4>
 8001b34:	9b00      	ldr	r3, [sp, #0]
 8001b36:	46a2      	mov	sl, r4
 8001b38:	4699      	mov	r9, r3
 8001b3a:	9b01      	ldr	r3, [sp, #4]
 8001b3c:	4698      	mov	r8, r3
 8001b3e:	e737      	b.n	80019b0 <__aeabi_dmul+0x42c>
 8001b40:	fffffc0d 	.word	0xfffffc0d
 8001b44:	000007ff 	.word	0x000007ff
 8001b48:	0000043e 	.word	0x0000043e
 8001b4c:	0000041e 	.word	0x0000041e

08001b50 <__aeabi_dsub>:
 8001b50:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001b52:	4657      	mov	r7, sl
 8001b54:	464e      	mov	r6, r9
 8001b56:	4645      	mov	r5, r8
 8001b58:	46de      	mov	lr, fp
 8001b5a:	b5e0      	push	{r5, r6, r7, lr}
 8001b5c:	b083      	sub	sp, #12
 8001b5e:	9000      	str	r0, [sp, #0]
 8001b60:	9101      	str	r1, [sp, #4]
 8001b62:	030c      	lsls	r4, r1, #12
 8001b64:	004d      	lsls	r5, r1, #1
 8001b66:	0fce      	lsrs	r6, r1, #31
 8001b68:	0a61      	lsrs	r1, r4, #9
 8001b6a:	9c00      	ldr	r4, [sp, #0]
 8001b6c:	005f      	lsls	r7, r3, #1
 8001b6e:	0f64      	lsrs	r4, r4, #29
 8001b70:	430c      	orrs	r4, r1
 8001b72:	9900      	ldr	r1, [sp, #0]
 8001b74:	9200      	str	r2, [sp, #0]
 8001b76:	9301      	str	r3, [sp, #4]
 8001b78:	00c8      	lsls	r0, r1, #3
 8001b7a:	0319      	lsls	r1, r3, #12
 8001b7c:	0d7b      	lsrs	r3, r7, #21
 8001b7e:	4699      	mov	r9, r3
 8001b80:	9b01      	ldr	r3, [sp, #4]
 8001b82:	4fcc      	ldr	r7, [pc, #816]	@ (8001eb4 <__aeabi_dsub+0x364>)
 8001b84:	0fdb      	lsrs	r3, r3, #31
 8001b86:	469c      	mov	ip, r3
 8001b88:	0a4b      	lsrs	r3, r1, #9
 8001b8a:	9900      	ldr	r1, [sp, #0]
 8001b8c:	4680      	mov	r8, r0
 8001b8e:	0f49      	lsrs	r1, r1, #29
 8001b90:	4319      	orrs	r1, r3
 8001b92:	9b00      	ldr	r3, [sp, #0]
 8001b94:	468b      	mov	fp, r1
 8001b96:	00da      	lsls	r2, r3, #3
 8001b98:	4692      	mov	sl, r2
 8001b9a:	0d6d      	lsrs	r5, r5, #21
 8001b9c:	45b9      	cmp	r9, r7
 8001b9e:	d100      	bne.n	8001ba2 <__aeabi_dsub+0x52>
 8001ba0:	e0bf      	b.n	8001d22 <__aeabi_dsub+0x1d2>
 8001ba2:	2301      	movs	r3, #1
 8001ba4:	4661      	mov	r1, ip
 8001ba6:	4059      	eors	r1, r3
 8001ba8:	464b      	mov	r3, r9
 8001baa:	468c      	mov	ip, r1
 8001bac:	1aeb      	subs	r3, r5, r3
 8001bae:	428e      	cmp	r6, r1
 8001bb0:	d075      	beq.n	8001c9e <__aeabi_dsub+0x14e>
 8001bb2:	2b00      	cmp	r3, #0
 8001bb4:	dc00      	bgt.n	8001bb8 <__aeabi_dsub+0x68>
 8001bb6:	e2a3      	b.n	8002100 <__aeabi_dsub+0x5b0>
 8001bb8:	4649      	mov	r1, r9
 8001bba:	2900      	cmp	r1, #0
 8001bbc:	d100      	bne.n	8001bc0 <__aeabi_dsub+0x70>
 8001bbe:	e0ce      	b.n	8001d5e <__aeabi_dsub+0x20e>
 8001bc0:	42bd      	cmp	r5, r7
 8001bc2:	d100      	bne.n	8001bc6 <__aeabi_dsub+0x76>
 8001bc4:	e200      	b.n	8001fc8 <__aeabi_dsub+0x478>
 8001bc6:	2701      	movs	r7, #1
 8001bc8:	2b38      	cmp	r3, #56	@ 0x38
 8001bca:	dc19      	bgt.n	8001c00 <__aeabi_dsub+0xb0>
 8001bcc:	2780      	movs	r7, #128	@ 0x80
 8001bce:	4659      	mov	r1, fp
 8001bd0:	043f      	lsls	r7, r7, #16
 8001bd2:	4339      	orrs	r1, r7
 8001bd4:	468b      	mov	fp, r1
 8001bd6:	2b1f      	cmp	r3, #31
 8001bd8:	dd00      	ble.n	8001bdc <__aeabi_dsub+0x8c>
 8001bda:	e1fa      	b.n	8001fd2 <__aeabi_dsub+0x482>
 8001bdc:	2720      	movs	r7, #32
 8001bde:	1af9      	subs	r1, r7, r3
 8001be0:	468c      	mov	ip, r1
 8001be2:	4659      	mov	r1, fp
 8001be4:	4667      	mov	r7, ip
 8001be6:	40b9      	lsls	r1, r7
 8001be8:	000f      	movs	r7, r1
 8001bea:	0011      	movs	r1, r2
 8001bec:	40d9      	lsrs	r1, r3
 8001bee:	430f      	orrs	r7, r1
 8001bf0:	4661      	mov	r1, ip
 8001bf2:	408a      	lsls	r2, r1
 8001bf4:	1e51      	subs	r1, r2, #1
 8001bf6:	418a      	sbcs	r2, r1
 8001bf8:	4659      	mov	r1, fp
 8001bfa:	40d9      	lsrs	r1, r3
 8001bfc:	4317      	orrs	r7, r2
 8001bfe:	1a64      	subs	r4, r4, r1
 8001c00:	1bc7      	subs	r7, r0, r7
 8001c02:	42b8      	cmp	r0, r7
 8001c04:	4180      	sbcs	r0, r0
 8001c06:	4240      	negs	r0, r0
 8001c08:	1a24      	subs	r4, r4, r0
 8001c0a:	0223      	lsls	r3, r4, #8
 8001c0c:	d400      	bmi.n	8001c10 <__aeabi_dsub+0xc0>
 8001c0e:	e140      	b.n	8001e92 <__aeabi_dsub+0x342>
 8001c10:	0264      	lsls	r4, r4, #9
 8001c12:	0a64      	lsrs	r4, r4, #9
 8001c14:	2c00      	cmp	r4, #0
 8001c16:	d100      	bne.n	8001c1a <__aeabi_dsub+0xca>
 8001c18:	e154      	b.n	8001ec4 <__aeabi_dsub+0x374>
 8001c1a:	0020      	movs	r0, r4
 8001c1c:	f000 fd1c 	bl	8002658 <__clzsi2>
 8001c20:	0003      	movs	r3, r0
 8001c22:	3b08      	subs	r3, #8
 8001c24:	2120      	movs	r1, #32
 8001c26:	0038      	movs	r0, r7
 8001c28:	1aca      	subs	r2, r1, r3
 8001c2a:	40d0      	lsrs	r0, r2
 8001c2c:	409c      	lsls	r4, r3
 8001c2e:	0002      	movs	r2, r0
 8001c30:	409f      	lsls	r7, r3
 8001c32:	4322      	orrs	r2, r4
 8001c34:	429d      	cmp	r5, r3
 8001c36:	dd00      	ble.n	8001c3a <__aeabi_dsub+0xea>
 8001c38:	e1a6      	b.n	8001f88 <__aeabi_dsub+0x438>
 8001c3a:	1b58      	subs	r0, r3, r5
 8001c3c:	3001      	adds	r0, #1
 8001c3e:	1a09      	subs	r1, r1, r0
 8001c40:	003c      	movs	r4, r7
 8001c42:	408f      	lsls	r7, r1
 8001c44:	40c4      	lsrs	r4, r0
 8001c46:	1e7b      	subs	r3, r7, #1
 8001c48:	419f      	sbcs	r7, r3
 8001c4a:	0013      	movs	r3, r2
 8001c4c:	408b      	lsls	r3, r1
 8001c4e:	4327      	orrs	r7, r4
 8001c50:	431f      	orrs	r7, r3
 8001c52:	40c2      	lsrs	r2, r0
 8001c54:	003b      	movs	r3, r7
 8001c56:	0014      	movs	r4, r2
 8001c58:	2500      	movs	r5, #0
 8001c5a:	4313      	orrs	r3, r2
 8001c5c:	d100      	bne.n	8001c60 <__aeabi_dsub+0x110>
 8001c5e:	e1f7      	b.n	8002050 <__aeabi_dsub+0x500>
 8001c60:	077b      	lsls	r3, r7, #29
 8001c62:	d100      	bne.n	8001c66 <__aeabi_dsub+0x116>
 8001c64:	e377      	b.n	8002356 <__aeabi_dsub+0x806>
 8001c66:	230f      	movs	r3, #15
 8001c68:	0038      	movs	r0, r7
 8001c6a:	403b      	ands	r3, r7
 8001c6c:	2b04      	cmp	r3, #4
 8001c6e:	d004      	beq.n	8001c7a <__aeabi_dsub+0x12a>
 8001c70:	1d38      	adds	r0, r7, #4
 8001c72:	42b8      	cmp	r0, r7
 8001c74:	41bf      	sbcs	r7, r7
 8001c76:	427f      	negs	r7, r7
 8001c78:	19e4      	adds	r4, r4, r7
 8001c7a:	0223      	lsls	r3, r4, #8
 8001c7c:	d400      	bmi.n	8001c80 <__aeabi_dsub+0x130>
 8001c7e:	e368      	b.n	8002352 <__aeabi_dsub+0x802>
 8001c80:	4b8c      	ldr	r3, [pc, #560]	@ (8001eb4 <__aeabi_dsub+0x364>)
 8001c82:	3501      	adds	r5, #1
 8001c84:	429d      	cmp	r5, r3
 8001c86:	d100      	bne.n	8001c8a <__aeabi_dsub+0x13a>
 8001c88:	e0f4      	b.n	8001e74 <__aeabi_dsub+0x324>
 8001c8a:	4b8b      	ldr	r3, [pc, #556]	@ (8001eb8 <__aeabi_dsub+0x368>)
 8001c8c:	056d      	lsls	r5, r5, #21
 8001c8e:	401c      	ands	r4, r3
 8001c90:	0d6d      	lsrs	r5, r5, #21
 8001c92:	0767      	lsls	r7, r4, #29
 8001c94:	08c0      	lsrs	r0, r0, #3
 8001c96:	0264      	lsls	r4, r4, #9
 8001c98:	4307      	orrs	r7, r0
 8001c9a:	0b24      	lsrs	r4, r4, #12
 8001c9c:	e0ec      	b.n	8001e78 <__aeabi_dsub+0x328>
 8001c9e:	2b00      	cmp	r3, #0
 8001ca0:	dc00      	bgt.n	8001ca4 <__aeabi_dsub+0x154>
 8001ca2:	e329      	b.n	80022f8 <__aeabi_dsub+0x7a8>
 8001ca4:	4649      	mov	r1, r9
 8001ca6:	2900      	cmp	r1, #0
 8001ca8:	d000      	beq.n	8001cac <__aeabi_dsub+0x15c>
 8001caa:	e0d6      	b.n	8001e5a <__aeabi_dsub+0x30a>
 8001cac:	4659      	mov	r1, fp
 8001cae:	4311      	orrs	r1, r2
 8001cb0:	d100      	bne.n	8001cb4 <__aeabi_dsub+0x164>
 8001cb2:	e12e      	b.n	8001f12 <__aeabi_dsub+0x3c2>
 8001cb4:	1e59      	subs	r1, r3, #1
 8001cb6:	2b01      	cmp	r3, #1
 8001cb8:	d100      	bne.n	8001cbc <__aeabi_dsub+0x16c>
 8001cba:	e1e6      	b.n	800208a <__aeabi_dsub+0x53a>
 8001cbc:	42bb      	cmp	r3, r7
 8001cbe:	d100      	bne.n	8001cc2 <__aeabi_dsub+0x172>
 8001cc0:	e182      	b.n	8001fc8 <__aeabi_dsub+0x478>
 8001cc2:	2701      	movs	r7, #1
 8001cc4:	000b      	movs	r3, r1
 8001cc6:	2938      	cmp	r1, #56	@ 0x38
 8001cc8:	dc14      	bgt.n	8001cf4 <__aeabi_dsub+0x1a4>
 8001cca:	2b1f      	cmp	r3, #31
 8001ccc:	dd00      	ble.n	8001cd0 <__aeabi_dsub+0x180>
 8001cce:	e23c      	b.n	800214a <__aeabi_dsub+0x5fa>
 8001cd0:	2720      	movs	r7, #32
 8001cd2:	1af9      	subs	r1, r7, r3
 8001cd4:	468c      	mov	ip, r1
 8001cd6:	4659      	mov	r1, fp
 8001cd8:	4667      	mov	r7, ip
 8001cda:	40b9      	lsls	r1, r7
 8001cdc:	000f      	movs	r7, r1
 8001cde:	0011      	movs	r1, r2
 8001ce0:	40d9      	lsrs	r1, r3
 8001ce2:	430f      	orrs	r7, r1
 8001ce4:	4661      	mov	r1, ip
 8001ce6:	408a      	lsls	r2, r1
 8001ce8:	1e51      	subs	r1, r2, #1
 8001cea:	418a      	sbcs	r2, r1
 8001cec:	4659      	mov	r1, fp
 8001cee:	40d9      	lsrs	r1, r3
 8001cf0:	4317      	orrs	r7, r2
 8001cf2:	1864      	adds	r4, r4, r1
 8001cf4:	183f      	adds	r7, r7, r0
 8001cf6:	4287      	cmp	r7, r0
 8001cf8:	4180      	sbcs	r0, r0
 8001cfa:	4240      	negs	r0, r0
 8001cfc:	1824      	adds	r4, r4, r0
 8001cfe:	0223      	lsls	r3, r4, #8
 8001d00:	d400      	bmi.n	8001d04 <__aeabi_dsub+0x1b4>
 8001d02:	e0c6      	b.n	8001e92 <__aeabi_dsub+0x342>
 8001d04:	4b6b      	ldr	r3, [pc, #428]	@ (8001eb4 <__aeabi_dsub+0x364>)
 8001d06:	3501      	adds	r5, #1
 8001d08:	429d      	cmp	r5, r3
 8001d0a:	d100      	bne.n	8001d0e <__aeabi_dsub+0x1be>
 8001d0c:	e0b2      	b.n	8001e74 <__aeabi_dsub+0x324>
 8001d0e:	2101      	movs	r1, #1
 8001d10:	4b69      	ldr	r3, [pc, #420]	@ (8001eb8 <__aeabi_dsub+0x368>)
 8001d12:	087a      	lsrs	r2, r7, #1
 8001d14:	401c      	ands	r4, r3
 8001d16:	4039      	ands	r1, r7
 8001d18:	430a      	orrs	r2, r1
 8001d1a:	07e7      	lsls	r7, r4, #31
 8001d1c:	4317      	orrs	r7, r2
 8001d1e:	0864      	lsrs	r4, r4, #1
 8001d20:	e79e      	b.n	8001c60 <__aeabi_dsub+0x110>
 8001d22:	4b66      	ldr	r3, [pc, #408]	@ (8001ebc <__aeabi_dsub+0x36c>)
 8001d24:	4311      	orrs	r1, r2
 8001d26:	468a      	mov	sl, r1
 8001d28:	18eb      	adds	r3, r5, r3
 8001d2a:	2900      	cmp	r1, #0
 8001d2c:	d028      	beq.n	8001d80 <__aeabi_dsub+0x230>
 8001d2e:	4566      	cmp	r6, ip
 8001d30:	d02c      	beq.n	8001d8c <__aeabi_dsub+0x23c>
 8001d32:	2b00      	cmp	r3, #0
 8001d34:	d05b      	beq.n	8001dee <__aeabi_dsub+0x29e>
 8001d36:	2d00      	cmp	r5, #0
 8001d38:	d100      	bne.n	8001d3c <__aeabi_dsub+0x1ec>
 8001d3a:	e12c      	b.n	8001f96 <__aeabi_dsub+0x446>
 8001d3c:	465b      	mov	r3, fp
 8001d3e:	4666      	mov	r6, ip
 8001d40:	075f      	lsls	r7, r3, #29
 8001d42:	08d2      	lsrs	r2, r2, #3
 8001d44:	4317      	orrs	r7, r2
 8001d46:	08dd      	lsrs	r5, r3, #3
 8001d48:	003b      	movs	r3, r7
 8001d4a:	432b      	orrs	r3, r5
 8001d4c:	d100      	bne.n	8001d50 <__aeabi_dsub+0x200>
 8001d4e:	e0e2      	b.n	8001f16 <__aeabi_dsub+0x3c6>
 8001d50:	2480      	movs	r4, #128	@ 0x80
 8001d52:	0324      	lsls	r4, r4, #12
 8001d54:	432c      	orrs	r4, r5
 8001d56:	0324      	lsls	r4, r4, #12
 8001d58:	4d56      	ldr	r5, [pc, #344]	@ (8001eb4 <__aeabi_dsub+0x364>)
 8001d5a:	0b24      	lsrs	r4, r4, #12
 8001d5c:	e08c      	b.n	8001e78 <__aeabi_dsub+0x328>
 8001d5e:	4659      	mov	r1, fp
 8001d60:	4311      	orrs	r1, r2
 8001d62:	d100      	bne.n	8001d66 <__aeabi_dsub+0x216>
 8001d64:	e0d5      	b.n	8001f12 <__aeabi_dsub+0x3c2>
 8001d66:	1e59      	subs	r1, r3, #1
 8001d68:	2b01      	cmp	r3, #1
 8001d6a:	d100      	bne.n	8001d6e <__aeabi_dsub+0x21e>
 8001d6c:	e1b9      	b.n	80020e2 <__aeabi_dsub+0x592>
 8001d6e:	42bb      	cmp	r3, r7
 8001d70:	d100      	bne.n	8001d74 <__aeabi_dsub+0x224>
 8001d72:	e1b1      	b.n	80020d8 <__aeabi_dsub+0x588>
 8001d74:	2701      	movs	r7, #1
 8001d76:	000b      	movs	r3, r1
 8001d78:	2938      	cmp	r1, #56	@ 0x38
 8001d7a:	dd00      	ble.n	8001d7e <__aeabi_dsub+0x22e>
 8001d7c:	e740      	b.n	8001c00 <__aeabi_dsub+0xb0>
 8001d7e:	e72a      	b.n	8001bd6 <__aeabi_dsub+0x86>
 8001d80:	4661      	mov	r1, ip
 8001d82:	2701      	movs	r7, #1
 8001d84:	4079      	eors	r1, r7
 8001d86:	468c      	mov	ip, r1
 8001d88:	4566      	cmp	r6, ip
 8001d8a:	d1d2      	bne.n	8001d32 <__aeabi_dsub+0x1e2>
 8001d8c:	2b00      	cmp	r3, #0
 8001d8e:	d100      	bne.n	8001d92 <__aeabi_dsub+0x242>
 8001d90:	e0c5      	b.n	8001f1e <__aeabi_dsub+0x3ce>
 8001d92:	2d00      	cmp	r5, #0
 8001d94:	d000      	beq.n	8001d98 <__aeabi_dsub+0x248>
 8001d96:	e155      	b.n	8002044 <__aeabi_dsub+0x4f4>
 8001d98:	464b      	mov	r3, r9
 8001d9a:	0025      	movs	r5, r4
 8001d9c:	4305      	orrs	r5, r0
 8001d9e:	d100      	bne.n	8001da2 <__aeabi_dsub+0x252>
 8001da0:	e212      	b.n	80021c8 <__aeabi_dsub+0x678>
 8001da2:	1e59      	subs	r1, r3, #1
 8001da4:	468c      	mov	ip, r1
 8001da6:	2b01      	cmp	r3, #1
 8001da8:	d100      	bne.n	8001dac <__aeabi_dsub+0x25c>
 8001daa:	e249      	b.n	8002240 <__aeabi_dsub+0x6f0>
 8001dac:	4d41      	ldr	r5, [pc, #260]	@ (8001eb4 <__aeabi_dsub+0x364>)
 8001dae:	42ab      	cmp	r3, r5
 8001db0:	d100      	bne.n	8001db4 <__aeabi_dsub+0x264>
 8001db2:	e28f      	b.n	80022d4 <__aeabi_dsub+0x784>
 8001db4:	2701      	movs	r7, #1
 8001db6:	2938      	cmp	r1, #56	@ 0x38
 8001db8:	dc11      	bgt.n	8001dde <__aeabi_dsub+0x28e>
 8001dba:	4663      	mov	r3, ip
 8001dbc:	2b1f      	cmp	r3, #31
 8001dbe:	dd00      	ble.n	8001dc2 <__aeabi_dsub+0x272>
 8001dc0:	e25b      	b.n	800227a <__aeabi_dsub+0x72a>
 8001dc2:	4661      	mov	r1, ip
 8001dc4:	2320      	movs	r3, #32
 8001dc6:	0027      	movs	r7, r4
 8001dc8:	1a5b      	subs	r3, r3, r1
 8001dca:	0005      	movs	r5, r0
 8001dcc:	4098      	lsls	r0, r3
 8001dce:	409f      	lsls	r7, r3
 8001dd0:	40cd      	lsrs	r5, r1
 8001dd2:	1e43      	subs	r3, r0, #1
 8001dd4:	4198      	sbcs	r0, r3
 8001dd6:	40cc      	lsrs	r4, r1
 8001dd8:	432f      	orrs	r7, r5
 8001dda:	4307      	orrs	r7, r0
 8001ddc:	44a3      	add	fp, r4
 8001dde:	18bf      	adds	r7, r7, r2
 8001de0:	4297      	cmp	r7, r2
 8001de2:	4192      	sbcs	r2, r2
 8001de4:	4252      	negs	r2, r2
 8001de6:	445a      	add	r2, fp
 8001de8:	0014      	movs	r4, r2
 8001dea:	464d      	mov	r5, r9
 8001dec:	e787      	b.n	8001cfe <__aeabi_dsub+0x1ae>
 8001dee:	4f34      	ldr	r7, [pc, #208]	@ (8001ec0 <__aeabi_dsub+0x370>)
 8001df0:	1c6b      	adds	r3, r5, #1
 8001df2:	423b      	tst	r3, r7
 8001df4:	d000      	beq.n	8001df8 <__aeabi_dsub+0x2a8>
 8001df6:	e0b6      	b.n	8001f66 <__aeabi_dsub+0x416>
 8001df8:	4659      	mov	r1, fp
 8001dfa:	0023      	movs	r3, r4
 8001dfc:	4311      	orrs	r1, r2
 8001dfe:	000f      	movs	r7, r1
 8001e00:	4303      	orrs	r3, r0
 8001e02:	2d00      	cmp	r5, #0
 8001e04:	d000      	beq.n	8001e08 <__aeabi_dsub+0x2b8>
 8001e06:	e126      	b.n	8002056 <__aeabi_dsub+0x506>
 8001e08:	2b00      	cmp	r3, #0
 8001e0a:	d100      	bne.n	8001e0e <__aeabi_dsub+0x2be>
 8001e0c:	e1c0      	b.n	8002190 <__aeabi_dsub+0x640>
 8001e0e:	2900      	cmp	r1, #0
 8001e10:	d100      	bne.n	8001e14 <__aeabi_dsub+0x2c4>
 8001e12:	e0a1      	b.n	8001f58 <__aeabi_dsub+0x408>
 8001e14:	1a83      	subs	r3, r0, r2
 8001e16:	4698      	mov	r8, r3
 8001e18:	465b      	mov	r3, fp
 8001e1a:	4540      	cmp	r0, r8
 8001e1c:	41ad      	sbcs	r5, r5
 8001e1e:	1ae3      	subs	r3, r4, r3
 8001e20:	426d      	negs	r5, r5
 8001e22:	1b5b      	subs	r3, r3, r5
 8001e24:	2580      	movs	r5, #128	@ 0x80
 8001e26:	042d      	lsls	r5, r5, #16
 8001e28:	422b      	tst	r3, r5
 8001e2a:	d100      	bne.n	8001e2e <__aeabi_dsub+0x2de>
 8001e2c:	e14b      	b.n	80020c6 <__aeabi_dsub+0x576>
 8001e2e:	465b      	mov	r3, fp
 8001e30:	1a10      	subs	r0, r2, r0
 8001e32:	4282      	cmp	r2, r0
 8001e34:	4192      	sbcs	r2, r2
 8001e36:	1b1c      	subs	r4, r3, r4
 8001e38:	0007      	movs	r7, r0
 8001e3a:	2601      	movs	r6, #1
 8001e3c:	4663      	mov	r3, ip
 8001e3e:	4252      	negs	r2, r2
 8001e40:	1aa4      	subs	r4, r4, r2
 8001e42:	4327      	orrs	r7, r4
 8001e44:	401e      	ands	r6, r3
 8001e46:	2f00      	cmp	r7, #0
 8001e48:	d100      	bne.n	8001e4c <__aeabi_dsub+0x2fc>
 8001e4a:	e142      	b.n	80020d2 <__aeabi_dsub+0x582>
 8001e4c:	422c      	tst	r4, r5
 8001e4e:	d100      	bne.n	8001e52 <__aeabi_dsub+0x302>
 8001e50:	e26d      	b.n	800232e <__aeabi_dsub+0x7de>
 8001e52:	4b19      	ldr	r3, [pc, #100]	@ (8001eb8 <__aeabi_dsub+0x368>)
 8001e54:	2501      	movs	r5, #1
 8001e56:	401c      	ands	r4, r3
 8001e58:	e71b      	b.n	8001c92 <__aeabi_dsub+0x142>
 8001e5a:	42bd      	cmp	r5, r7
 8001e5c:	d100      	bne.n	8001e60 <__aeabi_dsub+0x310>
 8001e5e:	e13b      	b.n	80020d8 <__aeabi_dsub+0x588>
 8001e60:	2701      	movs	r7, #1
 8001e62:	2b38      	cmp	r3, #56	@ 0x38
 8001e64:	dd00      	ble.n	8001e68 <__aeabi_dsub+0x318>
 8001e66:	e745      	b.n	8001cf4 <__aeabi_dsub+0x1a4>
 8001e68:	2780      	movs	r7, #128	@ 0x80
 8001e6a:	4659      	mov	r1, fp
 8001e6c:	043f      	lsls	r7, r7, #16
 8001e6e:	4339      	orrs	r1, r7
 8001e70:	468b      	mov	fp, r1
 8001e72:	e72a      	b.n	8001cca <__aeabi_dsub+0x17a>
 8001e74:	2400      	movs	r4, #0
 8001e76:	2700      	movs	r7, #0
 8001e78:	052d      	lsls	r5, r5, #20
 8001e7a:	4325      	orrs	r5, r4
 8001e7c:	07f6      	lsls	r6, r6, #31
 8001e7e:	4335      	orrs	r5, r6
 8001e80:	0038      	movs	r0, r7
 8001e82:	0029      	movs	r1, r5
 8001e84:	b003      	add	sp, #12
 8001e86:	bcf0      	pop	{r4, r5, r6, r7}
 8001e88:	46bb      	mov	fp, r7
 8001e8a:	46b2      	mov	sl, r6
 8001e8c:	46a9      	mov	r9, r5
 8001e8e:	46a0      	mov	r8, r4
 8001e90:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001e92:	077b      	lsls	r3, r7, #29
 8001e94:	d004      	beq.n	8001ea0 <__aeabi_dsub+0x350>
 8001e96:	230f      	movs	r3, #15
 8001e98:	403b      	ands	r3, r7
 8001e9a:	2b04      	cmp	r3, #4
 8001e9c:	d000      	beq.n	8001ea0 <__aeabi_dsub+0x350>
 8001e9e:	e6e7      	b.n	8001c70 <__aeabi_dsub+0x120>
 8001ea0:	002b      	movs	r3, r5
 8001ea2:	08f8      	lsrs	r0, r7, #3
 8001ea4:	4a03      	ldr	r2, [pc, #12]	@ (8001eb4 <__aeabi_dsub+0x364>)
 8001ea6:	0767      	lsls	r7, r4, #29
 8001ea8:	4307      	orrs	r7, r0
 8001eaa:	08e5      	lsrs	r5, r4, #3
 8001eac:	4293      	cmp	r3, r2
 8001eae:	d100      	bne.n	8001eb2 <__aeabi_dsub+0x362>
 8001eb0:	e74a      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 8001eb2:	e0a5      	b.n	8002000 <__aeabi_dsub+0x4b0>
 8001eb4:	000007ff 	.word	0x000007ff
 8001eb8:	ff7fffff 	.word	0xff7fffff
 8001ebc:	fffff801 	.word	0xfffff801
 8001ec0:	000007fe 	.word	0x000007fe
 8001ec4:	0038      	movs	r0, r7
 8001ec6:	f000 fbc7 	bl	8002658 <__clzsi2>
 8001eca:	0003      	movs	r3, r0
 8001ecc:	3318      	adds	r3, #24
 8001ece:	2b1f      	cmp	r3, #31
 8001ed0:	dc00      	bgt.n	8001ed4 <__aeabi_dsub+0x384>
 8001ed2:	e6a7      	b.n	8001c24 <__aeabi_dsub+0xd4>
 8001ed4:	003a      	movs	r2, r7
 8001ed6:	3808      	subs	r0, #8
 8001ed8:	4082      	lsls	r2, r0
 8001eda:	429d      	cmp	r5, r3
 8001edc:	dd00      	ble.n	8001ee0 <__aeabi_dsub+0x390>
 8001ede:	e08a      	b.n	8001ff6 <__aeabi_dsub+0x4a6>
 8001ee0:	1b5b      	subs	r3, r3, r5
 8001ee2:	1c58      	adds	r0, r3, #1
 8001ee4:	281f      	cmp	r0, #31
 8001ee6:	dc00      	bgt.n	8001eea <__aeabi_dsub+0x39a>
 8001ee8:	e1d8      	b.n	800229c <__aeabi_dsub+0x74c>
 8001eea:	0017      	movs	r7, r2
 8001eec:	3b1f      	subs	r3, #31
 8001eee:	40df      	lsrs	r7, r3
 8001ef0:	2820      	cmp	r0, #32
 8001ef2:	d005      	beq.n	8001f00 <__aeabi_dsub+0x3b0>
 8001ef4:	2340      	movs	r3, #64	@ 0x40
 8001ef6:	1a1b      	subs	r3, r3, r0
 8001ef8:	409a      	lsls	r2, r3
 8001efa:	1e53      	subs	r3, r2, #1
 8001efc:	419a      	sbcs	r2, r3
 8001efe:	4317      	orrs	r7, r2
 8001f00:	2500      	movs	r5, #0
 8001f02:	2f00      	cmp	r7, #0
 8001f04:	d100      	bne.n	8001f08 <__aeabi_dsub+0x3b8>
 8001f06:	e0e5      	b.n	80020d4 <__aeabi_dsub+0x584>
 8001f08:	077b      	lsls	r3, r7, #29
 8001f0a:	d000      	beq.n	8001f0e <__aeabi_dsub+0x3be>
 8001f0c:	e6ab      	b.n	8001c66 <__aeabi_dsub+0x116>
 8001f0e:	002c      	movs	r4, r5
 8001f10:	e7c6      	b.n	8001ea0 <__aeabi_dsub+0x350>
 8001f12:	08c0      	lsrs	r0, r0, #3
 8001f14:	e7c6      	b.n	8001ea4 <__aeabi_dsub+0x354>
 8001f16:	2700      	movs	r7, #0
 8001f18:	2400      	movs	r4, #0
 8001f1a:	4dd1      	ldr	r5, [pc, #836]	@ (8002260 <__aeabi_dsub+0x710>)
 8001f1c:	e7ac      	b.n	8001e78 <__aeabi_dsub+0x328>
 8001f1e:	4fd1      	ldr	r7, [pc, #836]	@ (8002264 <__aeabi_dsub+0x714>)
 8001f20:	1c6b      	adds	r3, r5, #1
 8001f22:	423b      	tst	r3, r7
 8001f24:	d171      	bne.n	800200a <__aeabi_dsub+0x4ba>
 8001f26:	0023      	movs	r3, r4
 8001f28:	4303      	orrs	r3, r0
 8001f2a:	2d00      	cmp	r5, #0
 8001f2c:	d000      	beq.n	8001f30 <__aeabi_dsub+0x3e0>
 8001f2e:	e14e      	b.n	80021ce <__aeabi_dsub+0x67e>
 8001f30:	4657      	mov	r7, sl
 8001f32:	2b00      	cmp	r3, #0
 8001f34:	d100      	bne.n	8001f38 <__aeabi_dsub+0x3e8>
 8001f36:	e1b5      	b.n	80022a4 <__aeabi_dsub+0x754>
 8001f38:	2f00      	cmp	r7, #0
 8001f3a:	d00d      	beq.n	8001f58 <__aeabi_dsub+0x408>
 8001f3c:	1883      	adds	r3, r0, r2
 8001f3e:	4283      	cmp	r3, r0
 8001f40:	4180      	sbcs	r0, r0
 8001f42:	445c      	add	r4, fp
 8001f44:	4240      	negs	r0, r0
 8001f46:	1824      	adds	r4, r4, r0
 8001f48:	0222      	lsls	r2, r4, #8
 8001f4a:	d500      	bpl.n	8001f4e <__aeabi_dsub+0x3fe>
 8001f4c:	e1c8      	b.n	80022e0 <__aeabi_dsub+0x790>
 8001f4e:	001f      	movs	r7, r3
 8001f50:	4698      	mov	r8, r3
 8001f52:	4327      	orrs	r7, r4
 8001f54:	d100      	bne.n	8001f58 <__aeabi_dsub+0x408>
 8001f56:	e0bc      	b.n	80020d2 <__aeabi_dsub+0x582>
 8001f58:	4643      	mov	r3, r8
 8001f5a:	0767      	lsls	r7, r4, #29
 8001f5c:	08db      	lsrs	r3, r3, #3
 8001f5e:	431f      	orrs	r7, r3
 8001f60:	08e5      	lsrs	r5, r4, #3
 8001f62:	2300      	movs	r3, #0
 8001f64:	e04c      	b.n	8002000 <__aeabi_dsub+0x4b0>
 8001f66:	1a83      	subs	r3, r0, r2
 8001f68:	4698      	mov	r8, r3
 8001f6a:	465b      	mov	r3, fp
 8001f6c:	4540      	cmp	r0, r8
 8001f6e:	41bf      	sbcs	r7, r7
 8001f70:	1ae3      	subs	r3, r4, r3
 8001f72:	427f      	negs	r7, r7
 8001f74:	1bdb      	subs	r3, r3, r7
 8001f76:	021f      	lsls	r7, r3, #8
 8001f78:	d47c      	bmi.n	8002074 <__aeabi_dsub+0x524>
 8001f7a:	4647      	mov	r7, r8
 8001f7c:	431f      	orrs	r7, r3
 8001f7e:	d100      	bne.n	8001f82 <__aeabi_dsub+0x432>
 8001f80:	e0a6      	b.n	80020d0 <__aeabi_dsub+0x580>
 8001f82:	001c      	movs	r4, r3
 8001f84:	4647      	mov	r7, r8
 8001f86:	e645      	b.n	8001c14 <__aeabi_dsub+0xc4>
 8001f88:	4cb7      	ldr	r4, [pc, #732]	@ (8002268 <__aeabi_dsub+0x718>)
 8001f8a:	1aed      	subs	r5, r5, r3
 8001f8c:	4014      	ands	r4, r2
 8001f8e:	077b      	lsls	r3, r7, #29
 8001f90:	d000      	beq.n	8001f94 <__aeabi_dsub+0x444>
 8001f92:	e780      	b.n	8001e96 <__aeabi_dsub+0x346>
 8001f94:	e784      	b.n	8001ea0 <__aeabi_dsub+0x350>
 8001f96:	464b      	mov	r3, r9
 8001f98:	0025      	movs	r5, r4
 8001f9a:	4305      	orrs	r5, r0
 8001f9c:	d066      	beq.n	800206c <__aeabi_dsub+0x51c>
 8001f9e:	1e5f      	subs	r7, r3, #1
 8001fa0:	2b01      	cmp	r3, #1
 8001fa2:	d100      	bne.n	8001fa6 <__aeabi_dsub+0x456>
 8001fa4:	e0fc      	b.n	80021a0 <__aeabi_dsub+0x650>
 8001fa6:	4dae      	ldr	r5, [pc, #696]	@ (8002260 <__aeabi_dsub+0x710>)
 8001fa8:	42ab      	cmp	r3, r5
 8001faa:	d100      	bne.n	8001fae <__aeabi_dsub+0x45e>
 8001fac:	e15e      	b.n	800226c <__aeabi_dsub+0x71c>
 8001fae:	4666      	mov	r6, ip
 8001fb0:	2f38      	cmp	r7, #56	@ 0x38
 8001fb2:	dc00      	bgt.n	8001fb6 <__aeabi_dsub+0x466>
 8001fb4:	e0b4      	b.n	8002120 <__aeabi_dsub+0x5d0>
 8001fb6:	2001      	movs	r0, #1
 8001fb8:	1a17      	subs	r7, r2, r0
 8001fba:	42ba      	cmp	r2, r7
 8001fbc:	4192      	sbcs	r2, r2
 8001fbe:	465b      	mov	r3, fp
 8001fc0:	4252      	negs	r2, r2
 8001fc2:	464d      	mov	r5, r9
 8001fc4:	1a9c      	subs	r4, r3, r2
 8001fc6:	e620      	b.n	8001c0a <__aeabi_dsub+0xba>
 8001fc8:	0767      	lsls	r7, r4, #29
 8001fca:	08c0      	lsrs	r0, r0, #3
 8001fcc:	4307      	orrs	r7, r0
 8001fce:	08e5      	lsrs	r5, r4, #3
 8001fd0:	e6ba      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 8001fd2:	001f      	movs	r7, r3
 8001fd4:	4659      	mov	r1, fp
 8001fd6:	3f20      	subs	r7, #32
 8001fd8:	40f9      	lsrs	r1, r7
 8001fda:	000f      	movs	r7, r1
 8001fdc:	2b20      	cmp	r3, #32
 8001fde:	d005      	beq.n	8001fec <__aeabi_dsub+0x49c>
 8001fe0:	2140      	movs	r1, #64	@ 0x40
 8001fe2:	1acb      	subs	r3, r1, r3
 8001fe4:	4659      	mov	r1, fp
 8001fe6:	4099      	lsls	r1, r3
 8001fe8:	430a      	orrs	r2, r1
 8001fea:	4692      	mov	sl, r2
 8001fec:	4653      	mov	r3, sl
 8001fee:	1e5a      	subs	r2, r3, #1
 8001ff0:	4193      	sbcs	r3, r2
 8001ff2:	431f      	orrs	r7, r3
 8001ff4:	e604      	b.n	8001c00 <__aeabi_dsub+0xb0>
 8001ff6:	1aeb      	subs	r3, r5, r3
 8001ff8:	4d9b      	ldr	r5, [pc, #620]	@ (8002268 <__aeabi_dsub+0x718>)
 8001ffa:	4015      	ands	r5, r2
 8001ffc:	076f      	lsls	r7, r5, #29
 8001ffe:	08ed      	lsrs	r5, r5, #3
 8002000:	032c      	lsls	r4, r5, #12
 8002002:	055d      	lsls	r5, r3, #21
 8002004:	0b24      	lsrs	r4, r4, #12
 8002006:	0d6d      	lsrs	r5, r5, #21
 8002008:	e736      	b.n	8001e78 <__aeabi_dsub+0x328>
 800200a:	4d95      	ldr	r5, [pc, #596]	@ (8002260 <__aeabi_dsub+0x710>)
 800200c:	42ab      	cmp	r3, r5
 800200e:	d100      	bne.n	8002012 <__aeabi_dsub+0x4c2>
 8002010:	e0d6      	b.n	80021c0 <__aeabi_dsub+0x670>
 8002012:	1882      	adds	r2, r0, r2
 8002014:	0021      	movs	r1, r4
 8002016:	4282      	cmp	r2, r0
 8002018:	4180      	sbcs	r0, r0
 800201a:	4459      	add	r1, fp
 800201c:	4240      	negs	r0, r0
 800201e:	1808      	adds	r0, r1, r0
 8002020:	07c7      	lsls	r7, r0, #31
 8002022:	0852      	lsrs	r2, r2, #1
 8002024:	4317      	orrs	r7, r2
 8002026:	0844      	lsrs	r4, r0, #1
 8002028:	0752      	lsls	r2, r2, #29
 800202a:	d400      	bmi.n	800202e <__aeabi_dsub+0x4de>
 800202c:	e185      	b.n	800233a <__aeabi_dsub+0x7ea>
 800202e:	220f      	movs	r2, #15
 8002030:	001d      	movs	r5, r3
 8002032:	403a      	ands	r2, r7
 8002034:	2a04      	cmp	r2, #4
 8002036:	d000      	beq.n	800203a <__aeabi_dsub+0x4ea>
 8002038:	e61a      	b.n	8001c70 <__aeabi_dsub+0x120>
 800203a:	08ff      	lsrs	r7, r7, #3
 800203c:	0764      	lsls	r4, r4, #29
 800203e:	4327      	orrs	r7, r4
 8002040:	0905      	lsrs	r5, r0, #4
 8002042:	e7dd      	b.n	8002000 <__aeabi_dsub+0x4b0>
 8002044:	465b      	mov	r3, fp
 8002046:	08d2      	lsrs	r2, r2, #3
 8002048:	075f      	lsls	r7, r3, #29
 800204a:	4317      	orrs	r7, r2
 800204c:	08dd      	lsrs	r5, r3, #3
 800204e:	e67b      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 8002050:	2700      	movs	r7, #0
 8002052:	2400      	movs	r4, #0
 8002054:	e710      	b.n	8001e78 <__aeabi_dsub+0x328>
 8002056:	2b00      	cmp	r3, #0
 8002058:	d000      	beq.n	800205c <__aeabi_dsub+0x50c>
 800205a:	e0d6      	b.n	800220a <__aeabi_dsub+0x6ba>
 800205c:	2900      	cmp	r1, #0
 800205e:	d000      	beq.n	8002062 <__aeabi_dsub+0x512>
 8002060:	e12f      	b.n	80022c2 <__aeabi_dsub+0x772>
 8002062:	2480      	movs	r4, #128	@ 0x80
 8002064:	2600      	movs	r6, #0
 8002066:	4d7e      	ldr	r5, [pc, #504]	@ (8002260 <__aeabi_dsub+0x710>)
 8002068:	0324      	lsls	r4, r4, #12
 800206a:	e705      	b.n	8001e78 <__aeabi_dsub+0x328>
 800206c:	4666      	mov	r6, ip
 800206e:	465c      	mov	r4, fp
 8002070:	08d0      	lsrs	r0, r2, #3
 8002072:	e717      	b.n	8001ea4 <__aeabi_dsub+0x354>
 8002074:	465b      	mov	r3, fp
 8002076:	1a17      	subs	r7, r2, r0
 8002078:	42ba      	cmp	r2, r7
 800207a:	4192      	sbcs	r2, r2
 800207c:	1b1c      	subs	r4, r3, r4
 800207e:	2601      	movs	r6, #1
 8002080:	4663      	mov	r3, ip
 8002082:	4252      	negs	r2, r2
 8002084:	1aa4      	subs	r4, r4, r2
 8002086:	401e      	ands	r6, r3
 8002088:	e5c4      	b.n	8001c14 <__aeabi_dsub+0xc4>
 800208a:	1883      	adds	r3, r0, r2
 800208c:	4283      	cmp	r3, r0
 800208e:	4180      	sbcs	r0, r0
 8002090:	445c      	add	r4, fp
 8002092:	4240      	negs	r0, r0
 8002094:	1825      	adds	r5, r4, r0
 8002096:	022a      	lsls	r2, r5, #8
 8002098:	d400      	bmi.n	800209c <__aeabi_dsub+0x54c>
 800209a:	e0da      	b.n	8002252 <__aeabi_dsub+0x702>
 800209c:	4a72      	ldr	r2, [pc, #456]	@ (8002268 <__aeabi_dsub+0x718>)
 800209e:	085b      	lsrs	r3, r3, #1
 80020a0:	4015      	ands	r5, r2
 80020a2:	07ea      	lsls	r2, r5, #31
 80020a4:	431a      	orrs	r2, r3
 80020a6:	0869      	lsrs	r1, r5, #1
 80020a8:	075b      	lsls	r3, r3, #29
 80020aa:	d400      	bmi.n	80020ae <__aeabi_dsub+0x55e>
 80020ac:	e14a      	b.n	8002344 <__aeabi_dsub+0x7f4>
 80020ae:	230f      	movs	r3, #15
 80020b0:	4013      	ands	r3, r2
 80020b2:	2b04      	cmp	r3, #4
 80020b4:	d100      	bne.n	80020b8 <__aeabi_dsub+0x568>
 80020b6:	e0fc      	b.n	80022b2 <__aeabi_dsub+0x762>
 80020b8:	1d17      	adds	r7, r2, #4
 80020ba:	4297      	cmp	r7, r2
 80020bc:	41a4      	sbcs	r4, r4
 80020be:	4264      	negs	r4, r4
 80020c0:	2502      	movs	r5, #2
 80020c2:	1864      	adds	r4, r4, r1
 80020c4:	e6ec      	b.n	8001ea0 <__aeabi_dsub+0x350>
 80020c6:	4647      	mov	r7, r8
 80020c8:	001c      	movs	r4, r3
 80020ca:	431f      	orrs	r7, r3
 80020cc:	d000      	beq.n	80020d0 <__aeabi_dsub+0x580>
 80020ce:	e743      	b.n	8001f58 <__aeabi_dsub+0x408>
 80020d0:	2600      	movs	r6, #0
 80020d2:	2500      	movs	r5, #0
 80020d4:	2400      	movs	r4, #0
 80020d6:	e6cf      	b.n	8001e78 <__aeabi_dsub+0x328>
 80020d8:	08c0      	lsrs	r0, r0, #3
 80020da:	0767      	lsls	r7, r4, #29
 80020dc:	4307      	orrs	r7, r0
 80020de:	08e5      	lsrs	r5, r4, #3
 80020e0:	e632      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 80020e2:	1a87      	subs	r7, r0, r2
 80020e4:	465b      	mov	r3, fp
 80020e6:	42b8      	cmp	r0, r7
 80020e8:	4180      	sbcs	r0, r0
 80020ea:	1ae4      	subs	r4, r4, r3
 80020ec:	4240      	negs	r0, r0
 80020ee:	1a24      	subs	r4, r4, r0
 80020f0:	0223      	lsls	r3, r4, #8
 80020f2:	d428      	bmi.n	8002146 <__aeabi_dsub+0x5f6>
 80020f4:	0763      	lsls	r3, r4, #29
 80020f6:	08ff      	lsrs	r7, r7, #3
 80020f8:	431f      	orrs	r7, r3
 80020fa:	08e5      	lsrs	r5, r4, #3
 80020fc:	2301      	movs	r3, #1
 80020fe:	e77f      	b.n	8002000 <__aeabi_dsub+0x4b0>
 8002100:	2b00      	cmp	r3, #0
 8002102:	d100      	bne.n	8002106 <__aeabi_dsub+0x5b6>
 8002104:	e673      	b.n	8001dee <__aeabi_dsub+0x29e>
 8002106:	464b      	mov	r3, r9
 8002108:	1b5f      	subs	r7, r3, r5
 800210a:	003b      	movs	r3, r7
 800210c:	2d00      	cmp	r5, #0
 800210e:	d100      	bne.n	8002112 <__aeabi_dsub+0x5c2>
 8002110:	e742      	b.n	8001f98 <__aeabi_dsub+0x448>
 8002112:	2f38      	cmp	r7, #56	@ 0x38
 8002114:	dd00      	ble.n	8002118 <__aeabi_dsub+0x5c8>
 8002116:	e0ec      	b.n	80022f2 <__aeabi_dsub+0x7a2>
 8002118:	2380      	movs	r3, #128	@ 0x80
 800211a:	000e      	movs	r6, r1
 800211c:	041b      	lsls	r3, r3, #16
 800211e:	431c      	orrs	r4, r3
 8002120:	2f1f      	cmp	r7, #31
 8002122:	dc25      	bgt.n	8002170 <__aeabi_dsub+0x620>
 8002124:	2520      	movs	r5, #32
 8002126:	0023      	movs	r3, r4
 8002128:	1bed      	subs	r5, r5, r7
 800212a:	0001      	movs	r1, r0
 800212c:	40a8      	lsls	r0, r5
 800212e:	40ab      	lsls	r3, r5
 8002130:	40f9      	lsrs	r1, r7
 8002132:	1e45      	subs	r5, r0, #1
 8002134:	41a8      	sbcs	r0, r5
 8002136:	430b      	orrs	r3, r1
 8002138:	40fc      	lsrs	r4, r7
 800213a:	4318      	orrs	r0, r3
 800213c:	465b      	mov	r3, fp
 800213e:	1b1b      	subs	r3, r3, r4
 8002140:	469b      	mov	fp, r3
 8002142:	e739      	b.n	8001fb8 <__aeabi_dsub+0x468>
 8002144:	4666      	mov	r6, ip
 8002146:	2501      	movs	r5, #1
 8002148:	e562      	b.n	8001c10 <__aeabi_dsub+0xc0>
 800214a:	001f      	movs	r7, r3
 800214c:	4659      	mov	r1, fp
 800214e:	3f20      	subs	r7, #32
 8002150:	40f9      	lsrs	r1, r7
 8002152:	468c      	mov	ip, r1
 8002154:	2b20      	cmp	r3, #32
 8002156:	d005      	beq.n	8002164 <__aeabi_dsub+0x614>
 8002158:	2740      	movs	r7, #64	@ 0x40
 800215a:	4659      	mov	r1, fp
 800215c:	1afb      	subs	r3, r7, r3
 800215e:	4099      	lsls	r1, r3
 8002160:	430a      	orrs	r2, r1
 8002162:	4692      	mov	sl, r2
 8002164:	4657      	mov	r7, sl
 8002166:	1e7b      	subs	r3, r7, #1
 8002168:	419f      	sbcs	r7, r3
 800216a:	4663      	mov	r3, ip
 800216c:	431f      	orrs	r7, r3
 800216e:	e5c1      	b.n	8001cf4 <__aeabi_dsub+0x1a4>
 8002170:	003b      	movs	r3, r7
 8002172:	0025      	movs	r5, r4
 8002174:	3b20      	subs	r3, #32
 8002176:	40dd      	lsrs	r5, r3
 8002178:	2f20      	cmp	r7, #32
 800217a:	d004      	beq.n	8002186 <__aeabi_dsub+0x636>
 800217c:	2340      	movs	r3, #64	@ 0x40
 800217e:	1bdb      	subs	r3, r3, r7
 8002180:	409c      	lsls	r4, r3
 8002182:	4320      	orrs	r0, r4
 8002184:	4680      	mov	r8, r0
 8002186:	4640      	mov	r0, r8
 8002188:	1e43      	subs	r3, r0, #1
 800218a:	4198      	sbcs	r0, r3
 800218c:	4328      	orrs	r0, r5
 800218e:	e713      	b.n	8001fb8 <__aeabi_dsub+0x468>
 8002190:	2900      	cmp	r1, #0
 8002192:	d09d      	beq.n	80020d0 <__aeabi_dsub+0x580>
 8002194:	2601      	movs	r6, #1
 8002196:	4663      	mov	r3, ip
 8002198:	465c      	mov	r4, fp
 800219a:	4690      	mov	r8, r2
 800219c:	401e      	ands	r6, r3
 800219e:	e6db      	b.n	8001f58 <__aeabi_dsub+0x408>
 80021a0:	1a17      	subs	r7, r2, r0
 80021a2:	465b      	mov	r3, fp
 80021a4:	42ba      	cmp	r2, r7
 80021a6:	4192      	sbcs	r2, r2
 80021a8:	1b1c      	subs	r4, r3, r4
 80021aa:	4252      	negs	r2, r2
 80021ac:	1aa4      	subs	r4, r4, r2
 80021ae:	0223      	lsls	r3, r4, #8
 80021b0:	d4c8      	bmi.n	8002144 <__aeabi_dsub+0x5f4>
 80021b2:	0763      	lsls	r3, r4, #29
 80021b4:	08ff      	lsrs	r7, r7, #3
 80021b6:	431f      	orrs	r7, r3
 80021b8:	4666      	mov	r6, ip
 80021ba:	2301      	movs	r3, #1
 80021bc:	08e5      	lsrs	r5, r4, #3
 80021be:	e71f      	b.n	8002000 <__aeabi_dsub+0x4b0>
 80021c0:	001d      	movs	r5, r3
 80021c2:	2400      	movs	r4, #0
 80021c4:	2700      	movs	r7, #0
 80021c6:	e657      	b.n	8001e78 <__aeabi_dsub+0x328>
 80021c8:	465c      	mov	r4, fp
 80021ca:	08d0      	lsrs	r0, r2, #3
 80021cc:	e66a      	b.n	8001ea4 <__aeabi_dsub+0x354>
 80021ce:	2b00      	cmp	r3, #0
 80021d0:	d100      	bne.n	80021d4 <__aeabi_dsub+0x684>
 80021d2:	e737      	b.n	8002044 <__aeabi_dsub+0x4f4>
 80021d4:	4653      	mov	r3, sl
 80021d6:	08c0      	lsrs	r0, r0, #3
 80021d8:	0767      	lsls	r7, r4, #29
 80021da:	4307      	orrs	r7, r0
 80021dc:	08e5      	lsrs	r5, r4, #3
 80021de:	2b00      	cmp	r3, #0
 80021e0:	d100      	bne.n	80021e4 <__aeabi_dsub+0x694>
 80021e2:	e5b1      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 80021e4:	2380      	movs	r3, #128	@ 0x80
 80021e6:	031b      	lsls	r3, r3, #12
 80021e8:	421d      	tst	r5, r3
 80021ea:	d008      	beq.n	80021fe <__aeabi_dsub+0x6ae>
 80021ec:	4659      	mov	r1, fp
 80021ee:	08c8      	lsrs	r0, r1, #3
 80021f0:	4218      	tst	r0, r3
 80021f2:	d104      	bne.n	80021fe <__aeabi_dsub+0x6ae>
 80021f4:	08d2      	lsrs	r2, r2, #3
 80021f6:	0749      	lsls	r1, r1, #29
 80021f8:	430a      	orrs	r2, r1
 80021fa:	0017      	movs	r7, r2
 80021fc:	0005      	movs	r5, r0
 80021fe:	0f7b      	lsrs	r3, r7, #29
 8002200:	00ff      	lsls	r7, r7, #3
 8002202:	08ff      	lsrs	r7, r7, #3
 8002204:	075b      	lsls	r3, r3, #29
 8002206:	431f      	orrs	r7, r3
 8002208:	e59e      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 800220a:	08c0      	lsrs	r0, r0, #3
 800220c:	0763      	lsls	r3, r4, #29
 800220e:	4318      	orrs	r0, r3
 8002210:	08e5      	lsrs	r5, r4, #3
 8002212:	2900      	cmp	r1, #0
 8002214:	d053      	beq.n	80022be <__aeabi_dsub+0x76e>
 8002216:	2380      	movs	r3, #128	@ 0x80
 8002218:	031b      	lsls	r3, r3, #12
 800221a:	421d      	tst	r5, r3
 800221c:	d00a      	beq.n	8002234 <__aeabi_dsub+0x6e4>
 800221e:	4659      	mov	r1, fp
 8002220:	08cc      	lsrs	r4, r1, #3
 8002222:	421c      	tst	r4, r3
 8002224:	d106      	bne.n	8002234 <__aeabi_dsub+0x6e4>
 8002226:	2601      	movs	r6, #1
 8002228:	4663      	mov	r3, ip
 800222a:	0025      	movs	r5, r4
 800222c:	08d0      	lsrs	r0, r2, #3
 800222e:	0749      	lsls	r1, r1, #29
 8002230:	4308      	orrs	r0, r1
 8002232:	401e      	ands	r6, r3
 8002234:	0f47      	lsrs	r7, r0, #29
 8002236:	00c0      	lsls	r0, r0, #3
 8002238:	08c0      	lsrs	r0, r0, #3
 800223a:	077f      	lsls	r7, r7, #29
 800223c:	4307      	orrs	r7, r0
 800223e:	e583      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 8002240:	1883      	adds	r3, r0, r2
 8002242:	4293      	cmp	r3, r2
 8002244:	4192      	sbcs	r2, r2
 8002246:	445c      	add	r4, fp
 8002248:	4252      	negs	r2, r2
 800224a:	18a5      	adds	r5, r4, r2
 800224c:	022a      	lsls	r2, r5, #8
 800224e:	d500      	bpl.n	8002252 <__aeabi_dsub+0x702>
 8002250:	e724      	b.n	800209c <__aeabi_dsub+0x54c>
 8002252:	076f      	lsls	r7, r5, #29
 8002254:	08db      	lsrs	r3, r3, #3
 8002256:	431f      	orrs	r7, r3
 8002258:	08ed      	lsrs	r5, r5, #3
 800225a:	2301      	movs	r3, #1
 800225c:	e6d0      	b.n	8002000 <__aeabi_dsub+0x4b0>
 800225e:	46c0      	nop			@ (mov r8, r8)
 8002260:	000007ff 	.word	0x000007ff
 8002264:	000007fe 	.word	0x000007fe
 8002268:	ff7fffff 	.word	0xff7fffff
 800226c:	465b      	mov	r3, fp
 800226e:	08d2      	lsrs	r2, r2, #3
 8002270:	075f      	lsls	r7, r3, #29
 8002272:	4666      	mov	r6, ip
 8002274:	4317      	orrs	r7, r2
 8002276:	08dd      	lsrs	r5, r3, #3
 8002278:	e566      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 800227a:	0025      	movs	r5, r4
 800227c:	3b20      	subs	r3, #32
 800227e:	40dd      	lsrs	r5, r3
 8002280:	4663      	mov	r3, ip
 8002282:	2b20      	cmp	r3, #32
 8002284:	d005      	beq.n	8002292 <__aeabi_dsub+0x742>
 8002286:	2340      	movs	r3, #64	@ 0x40
 8002288:	4661      	mov	r1, ip
 800228a:	1a5b      	subs	r3, r3, r1
 800228c:	409c      	lsls	r4, r3
 800228e:	4320      	orrs	r0, r4
 8002290:	4680      	mov	r8, r0
 8002292:	4647      	mov	r7, r8
 8002294:	1e7b      	subs	r3, r7, #1
 8002296:	419f      	sbcs	r7, r3
 8002298:	432f      	orrs	r7, r5
 800229a:	e5a0      	b.n	8001dde <__aeabi_dsub+0x28e>
 800229c:	2120      	movs	r1, #32
 800229e:	2700      	movs	r7, #0
 80022a0:	1a09      	subs	r1, r1, r0
 80022a2:	e4d2      	b.n	8001c4a <__aeabi_dsub+0xfa>
 80022a4:	2f00      	cmp	r7, #0
 80022a6:	d100      	bne.n	80022aa <__aeabi_dsub+0x75a>
 80022a8:	e713      	b.n	80020d2 <__aeabi_dsub+0x582>
 80022aa:	465c      	mov	r4, fp
 80022ac:	0017      	movs	r7, r2
 80022ae:	2500      	movs	r5, #0
 80022b0:	e5f6      	b.n	8001ea0 <__aeabi_dsub+0x350>
 80022b2:	08d7      	lsrs	r7, r2, #3
 80022b4:	0749      	lsls	r1, r1, #29
 80022b6:	2302      	movs	r3, #2
 80022b8:	430f      	orrs	r7, r1
 80022ba:	092d      	lsrs	r5, r5, #4
 80022bc:	e6a0      	b.n	8002000 <__aeabi_dsub+0x4b0>
 80022be:	0007      	movs	r7, r0
 80022c0:	e542      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 80022c2:	465b      	mov	r3, fp
 80022c4:	2601      	movs	r6, #1
 80022c6:	075f      	lsls	r7, r3, #29
 80022c8:	08dd      	lsrs	r5, r3, #3
 80022ca:	4663      	mov	r3, ip
 80022cc:	08d2      	lsrs	r2, r2, #3
 80022ce:	4317      	orrs	r7, r2
 80022d0:	401e      	ands	r6, r3
 80022d2:	e539      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 80022d4:	465b      	mov	r3, fp
 80022d6:	08d2      	lsrs	r2, r2, #3
 80022d8:	075f      	lsls	r7, r3, #29
 80022da:	4317      	orrs	r7, r2
 80022dc:	08dd      	lsrs	r5, r3, #3
 80022de:	e533      	b.n	8001d48 <__aeabi_dsub+0x1f8>
 80022e0:	4a1e      	ldr	r2, [pc, #120]	@ (800235c <__aeabi_dsub+0x80c>)
 80022e2:	08db      	lsrs	r3, r3, #3
 80022e4:	4022      	ands	r2, r4
 80022e6:	0757      	lsls	r7, r2, #29
 80022e8:	0252      	lsls	r2, r2, #9
 80022ea:	2501      	movs	r5, #1
 80022ec:	431f      	orrs	r7, r3
 80022ee:	0b14      	lsrs	r4, r2, #12
 80022f0:	e5c2      	b.n	8001e78 <__aeabi_dsub+0x328>
 80022f2:	000e      	movs	r6, r1
 80022f4:	2001      	movs	r0, #1
 80022f6:	e65f      	b.n	8001fb8 <__aeabi_dsub+0x468>
 80022f8:	2b00      	cmp	r3, #0
 80022fa:	d00d      	beq.n	8002318 <__aeabi_dsub+0x7c8>
 80022fc:	464b      	mov	r3, r9
 80022fe:	1b5b      	subs	r3, r3, r5
 8002300:	469c      	mov	ip, r3
 8002302:	2d00      	cmp	r5, #0
 8002304:	d100      	bne.n	8002308 <__aeabi_dsub+0x7b8>
 8002306:	e548      	b.n	8001d9a <__aeabi_dsub+0x24a>
 8002308:	2701      	movs	r7, #1
 800230a:	2b38      	cmp	r3, #56	@ 0x38
 800230c:	dd00      	ble.n	8002310 <__aeabi_dsub+0x7c0>
 800230e:	e566      	b.n	8001dde <__aeabi_dsub+0x28e>
 8002310:	2380      	movs	r3, #128	@ 0x80
 8002312:	041b      	lsls	r3, r3, #16
 8002314:	431c      	orrs	r4, r3
 8002316:	e550      	b.n	8001dba <__aeabi_dsub+0x26a>
 8002318:	1c6b      	adds	r3, r5, #1
 800231a:	4d11      	ldr	r5, [pc, #68]	@ (8002360 <__aeabi_dsub+0x810>)
 800231c:	422b      	tst	r3, r5
 800231e:	d000      	beq.n	8002322 <__aeabi_dsub+0x7d2>
 8002320:	e673      	b.n	800200a <__aeabi_dsub+0x4ba>
 8002322:	4659      	mov	r1, fp
 8002324:	0023      	movs	r3, r4
 8002326:	4311      	orrs	r1, r2
 8002328:	468a      	mov	sl, r1
 800232a:	4303      	orrs	r3, r0
 800232c:	e600      	b.n	8001f30 <__aeabi_dsub+0x3e0>
 800232e:	0767      	lsls	r7, r4, #29
 8002330:	08c0      	lsrs	r0, r0, #3
 8002332:	2300      	movs	r3, #0
 8002334:	4307      	orrs	r7, r0
 8002336:	08e5      	lsrs	r5, r4, #3
 8002338:	e662      	b.n	8002000 <__aeabi_dsub+0x4b0>
 800233a:	0764      	lsls	r4, r4, #29
 800233c:	08ff      	lsrs	r7, r7, #3
 800233e:	4327      	orrs	r7, r4
 8002340:	0905      	lsrs	r5, r0, #4
 8002342:	e65d      	b.n	8002000 <__aeabi_dsub+0x4b0>
 8002344:	08d2      	lsrs	r2, r2, #3
 8002346:	0749      	lsls	r1, r1, #29
 8002348:	4311      	orrs	r1, r2
 800234a:	000f      	movs	r7, r1
 800234c:	2302      	movs	r3, #2
 800234e:	092d      	lsrs	r5, r5, #4
 8002350:	e656      	b.n	8002000 <__aeabi_dsub+0x4b0>
 8002352:	0007      	movs	r7, r0
 8002354:	e5a4      	b.n	8001ea0 <__aeabi_dsub+0x350>
 8002356:	0038      	movs	r0, r7
 8002358:	e48f      	b.n	8001c7a <__aeabi_dsub+0x12a>
 800235a:	46c0      	nop			@ (mov r8, r8)
 800235c:	ff7fffff 	.word	0xff7fffff
 8002360:	000007fe 	.word	0x000007fe

08002364 <__aeabi_dcmpun>:
 8002364:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002366:	46c6      	mov	lr, r8
 8002368:	031e      	lsls	r6, r3, #12
 800236a:	0b36      	lsrs	r6, r6, #12
 800236c:	46b0      	mov	r8, r6
 800236e:	4e0d      	ldr	r6, [pc, #52]	@ (80023a4 <__aeabi_dcmpun+0x40>)
 8002370:	030c      	lsls	r4, r1, #12
 8002372:	004d      	lsls	r5, r1, #1
 8002374:	005f      	lsls	r7, r3, #1
 8002376:	b500      	push	{lr}
 8002378:	0b24      	lsrs	r4, r4, #12
 800237a:	0d6d      	lsrs	r5, r5, #21
 800237c:	0d7f      	lsrs	r7, r7, #21
 800237e:	42b5      	cmp	r5, r6
 8002380:	d00b      	beq.n	800239a <__aeabi_dcmpun+0x36>
 8002382:	4908      	ldr	r1, [pc, #32]	@ (80023a4 <__aeabi_dcmpun+0x40>)
 8002384:	2000      	movs	r0, #0
 8002386:	428f      	cmp	r7, r1
 8002388:	d104      	bne.n	8002394 <__aeabi_dcmpun+0x30>
 800238a:	4646      	mov	r6, r8
 800238c:	4316      	orrs	r6, r2
 800238e:	0030      	movs	r0, r6
 8002390:	1e43      	subs	r3, r0, #1
 8002392:	4198      	sbcs	r0, r3
 8002394:	bc80      	pop	{r7}
 8002396:	46b8      	mov	r8, r7
 8002398:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800239a:	4304      	orrs	r4, r0
 800239c:	2001      	movs	r0, #1
 800239e:	2c00      	cmp	r4, #0
 80023a0:	d1f8      	bne.n	8002394 <__aeabi_dcmpun+0x30>
 80023a2:	e7ee      	b.n	8002382 <__aeabi_dcmpun+0x1e>
 80023a4:	000007ff 	.word	0x000007ff

080023a8 <__aeabi_d2iz>:
 80023a8:	000b      	movs	r3, r1
 80023aa:	0002      	movs	r2, r0
 80023ac:	b570      	push	{r4, r5, r6, lr}
 80023ae:	4d16      	ldr	r5, [pc, #88]	@ (8002408 <__aeabi_d2iz+0x60>)
 80023b0:	030c      	lsls	r4, r1, #12
 80023b2:	b082      	sub	sp, #8
 80023b4:	0049      	lsls	r1, r1, #1
 80023b6:	2000      	movs	r0, #0
 80023b8:	9200      	str	r2, [sp, #0]
 80023ba:	9301      	str	r3, [sp, #4]
 80023bc:	0b24      	lsrs	r4, r4, #12
 80023be:	0d49      	lsrs	r1, r1, #21
 80023c0:	0fde      	lsrs	r6, r3, #31
 80023c2:	42a9      	cmp	r1, r5
 80023c4:	dd04      	ble.n	80023d0 <__aeabi_d2iz+0x28>
 80023c6:	4811      	ldr	r0, [pc, #68]	@ (800240c <__aeabi_d2iz+0x64>)
 80023c8:	4281      	cmp	r1, r0
 80023ca:	dd03      	ble.n	80023d4 <__aeabi_d2iz+0x2c>
 80023cc:	4b10      	ldr	r3, [pc, #64]	@ (8002410 <__aeabi_d2iz+0x68>)
 80023ce:	18f0      	adds	r0, r6, r3
 80023d0:	b002      	add	sp, #8
 80023d2:	bd70      	pop	{r4, r5, r6, pc}
 80023d4:	2080      	movs	r0, #128	@ 0x80
 80023d6:	0340      	lsls	r0, r0, #13
 80023d8:	4320      	orrs	r0, r4
 80023da:	4c0e      	ldr	r4, [pc, #56]	@ (8002414 <__aeabi_d2iz+0x6c>)
 80023dc:	1a64      	subs	r4, r4, r1
 80023de:	2c1f      	cmp	r4, #31
 80023e0:	dd08      	ble.n	80023f4 <__aeabi_d2iz+0x4c>
 80023e2:	4b0d      	ldr	r3, [pc, #52]	@ (8002418 <__aeabi_d2iz+0x70>)
 80023e4:	1a5b      	subs	r3, r3, r1
 80023e6:	40d8      	lsrs	r0, r3
 80023e8:	0003      	movs	r3, r0
 80023ea:	4258      	negs	r0, r3
 80023ec:	2e00      	cmp	r6, #0
 80023ee:	d1ef      	bne.n	80023d0 <__aeabi_d2iz+0x28>
 80023f0:	0018      	movs	r0, r3
 80023f2:	e7ed      	b.n	80023d0 <__aeabi_d2iz+0x28>
 80023f4:	4b09      	ldr	r3, [pc, #36]	@ (800241c <__aeabi_d2iz+0x74>)
 80023f6:	9a00      	ldr	r2, [sp, #0]
 80023f8:	469c      	mov	ip, r3
 80023fa:	0003      	movs	r3, r0
 80023fc:	4461      	add	r1, ip
 80023fe:	408b      	lsls	r3, r1
 8002400:	40e2      	lsrs	r2, r4
 8002402:	4313      	orrs	r3, r2
 8002404:	e7f1      	b.n	80023ea <__aeabi_d2iz+0x42>
 8002406:	46c0      	nop			@ (mov r8, r8)
 8002408:	000003fe 	.word	0x000003fe
 800240c:	0000041d 	.word	0x0000041d
 8002410:	7fffffff 	.word	0x7fffffff
 8002414:	00000433 	.word	0x00000433
 8002418:	00000413 	.word	0x00000413
 800241c:	fffffbed 	.word	0xfffffbed

08002420 <__aeabi_i2d>:
 8002420:	b570      	push	{r4, r5, r6, lr}
 8002422:	2800      	cmp	r0, #0
 8002424:	d016      	beq.n	8002454 <__aeabi_i2d+0x34>
 8002426:	17c3      	asrs	r3, r0, #31
 8002428:	18c5      	adds	r5, r0, r3
 800242a:	405d      	eors	r5, r3
 800242c:	0fc4      	lsrs	r4, r0, #31
 800242e:	0028      	movs	r0, r5
 8002430:	f000 f912 	bl	8002658 <__clzsi2>
 8002434:	4b10      	ldr	r3, [pc, #64]	@ (8002478 <__aeabi_i2d+0x58>)
 8002436:	1a1b      	subs	r3, r3, r0
 8002438:	055b      	lsls	r3, r3, #21
 800243a:	0d5b      	lsrs	r3, r3, #21
 800243c:	280a      	cmp	r0, #10
 800243e:	dc14      	bgt.n	800246a <__aeabi_i2d+0x4a>
 8002440:	0002      	movs	r2, r0
 8002442:	002e      	movs	r6, r5
 8002444:	3215      	adds	r2, #21
 8002446:	4096      	lsls	r6, r2
 8002448:	220b      	movs	r2, #11
 800244a:	1a12      	subs	r2, r2, r0
 800244c:	40d5      	lsrs	r5, r2
 800244e:	032d      	lsls	r5, r5, #12
 8002450:	0b2d      	lsrs	r5, r5, #12
 8002452:	e003      	b.n	800245c <__aeabi_i2d+0x3c>
 8002454:	2400      	movs	r4, #0
 8002456:	2300      	movs	r3, #0
 8002458:	2500      	movs	r5, #0
 800245a:	2600      	movs	r6, #0
 800245c:	051b      	lsls	r3, r3, #20
 800245e:	432b      	orrs	r3, r5
 8002460:	07e4      	lsls	r4, r4, #31
 8002462:	4323      	orrs	r3, r4
 8002464:	0030      	movs	r0, r6
 8002466:	0019      	movs	r1, r3
 8002468:	bd70      	pop	{r4, r5, r6, pc}
 800246a:	380b      	subs	r0, #11
 800246c:	4085      	lsls	r5, r0
 800246e:	032d      	lsls	r5, r5, #12
 8002470:	2600      	movs	r6, #0
 8002472:	0b2d      	lsrs	r5, r5, #12
 8002474:	e7f2      	b.n	800245c <__aeabi_i2d+0x3c>
 8002476:	46c0      	nop			@ (mov r8, r8)
 8002478:	0000041e 	.word	0x0000041e

0800247c <__aeabi_ui2d>:
 800247c:	b510      	push	{r4, lr}
 800247e:	1e04      	subs	r4, r0, #0
 8002480:	d010      	beq.n	80024a4 <__aeabi_ui2d+0x28>
 8002482:	f000 f8e9 	bl	8002658 <__clzsi2>
 8002486:	4b0e      	ldr	r3, [pc, #56]	@ (80024c0 <__aeabi_ui2d+0x44>)
 8002488:	1a1b      	subs	r3, r3, r0
 800248a:	055b      	lsls	r3, r3, #21
 800248c:	0d5b      	lsrs	r3, r3, #21
 800248e:	280a      	cmp	r0, #10
 8002490:	dc0f      	bgt.n	80024b2 <__aeabi_ui2d+0x36>
 8002492:	220b      	movs	r2, #11
 8002494:	0021      	movs	r1, r4
 8002496:	1a12      	subs	r2, r2, r0
 8002498:	40d1      	lsrs	r1, r2
 800249a:	3015      	adds	r0, #21
 800249c:	030a      	lsls	r2, r1, #12
 800249e:	4084      	lsls	r4, r0
 80024a0:	0b12      	lsrs	r2, r2, #12
 80024a2:	e001      	b.n	80024a8 <__aeabi_ui2d+0x2c>
 80024a4:	2300      	movs	r3, #0
 80024a6:	2200      	movs	r2, #0
 80024a8:	051b      	lsls	r3, r3, #20
 80024aa:	4313      	orrs	r3, r2
 80024ac:	0020      	movs	r0, r4
 80024ae:	0019      	movs	r1, r3
 80024b0:	bd10      	pop	{r4, pc}
 80024b2:	0022      	movs	r2, r4
 80024b4:	380b      	subs	r0, #11
 80024b6:	4082      	lsls	r2, r0
 80024b8:	0312      	lsls	r2, r2, #12
 80024ba:	2400      	movs	r4, #0
 80024bc:	0b12      	lsrs	r2, r2, #12
 80024be:	e7f3      	b.n	80024a8 <__aeabi_ui2d+0x2c>
 80024c0:	0000041e 	.word	0x0000041e

080024c4 <__aeabi_f2d>:
 80024c4:	b570      	push	{r4, r5, r6, lr}
 80024c6:	0242      	lsls	r2, r0, #9
 80024c8:	0043      	lsls	r3, r0, #1
 80024ca:	0fc4      	lsrs	r4, r0, #31
 80024cc:	20fe      	movs	r0, #254	@ 0xfe
 80024ce:	0e1b      	lsrs	r3, r3, #24
 80024d0:	1c59      	adds	r1, r3, #1
 80024d2:	0a55      	lsrs	r5, r2, #9
 80024d4:	4208      	tst	r0, r1
 80024d6:	d00c      	beq.n	80024f2 <__aeabi_f2d+0x2e>
 80024d8:	21e0      	movs	r1, #224	@ 0xe0
 80024da:	0089      	lsls	r1, r1, #2
 80024dc:	468c      	mov	ip, r1
 80024de:	076d      	lsls	r5, r5, #29
 80024e0:	0b12      	lsrs	r2, r2, #12
 80024e2:	4463      	add	r3, ip
 80024e4:	051b      	lsls	r3, r3, #20
 80024e6:	4313      	orrs	r3, r2
 80024e8:	07e4      	lsls	r4, r4, #31
 80024ea:	4323      	orrs	r3, r4
 80024ec:	0028      	movs	r0, r5
 80024ee:	0019      	movs	r1, r3
 80024f0:	bd70      	pop	{r4, r5, r6, pc}
 80024f2:	2b00      	cmp	r3, #0
 80024f4:	d114      	bne.n	8002520 <__aeabi_f2d+0x5c>
 80024f6:	2d00      	cmp	r5, #0
 80024f8:	d01b      	beq.n	8002532 <__aeabi_f2d+0x6e>
 80024fa:	0028      	movs	r0, r5
 80024fc:	f000 f8ac 	bl	8002658 <__clzsi2>
 8002500:	280a      	cmp	r0, #10
 8002502:	dc1c      	bgt.n	800253e <__aeabi_f2d+0x7a>
 8002504:	230b      	movs	r3, #11
 8002506:	002a      	movs	r2, r5
 8002508:	1a1b      	subs	r3, r3, r0
 800250a:	40da      	lsrs	r2, r3
 800250c:	0003      	movs	r3, r0
 800250e:	3315      	adds	r3, #21
 8002510:	409d      	lsls	r5, r3
 8002512:	4b0e      	ldr	r3, [pc, #56]	@ (800254c <__aeabi_f2d+0x88>)
 8002514:	0312      	lsls	r2, r2, #12
 8002516:	1a1b      	subs	r3, r3, r0
 8002518:	055b      	lsls	r3, r3, #21
 800251a:	0b12      	lsrs	r2, r2, #12
 800251c:	0d5b      	lsrs	r3, r3, #21
 800251e:	e7e1      	b.n	80024e4 <__aeabi_f2d+0x20>
 8002520:	2d00      	cmp	r5, #0
 8002522:	d009      	beq.n	8002538 <__aeabi_f2d+0x74>
 8002524:	0b13      	lsrs	r3, r2, #12
 8002526:	2280      	movs	r2, #128	@ 0x80
 8002528:	0312      	lsls	r2, r2, #12
 800252a:	431a      	orrs	r2, r3
 800252c:	076d      	lsls	r5, r5, #29
 800252e:	4b08      	ldr	r3, [pc, #32]	@ (8002550 <__aeabi_f2d+0x8c>)
 8002530:	e7d8      	b.n	80024e4 <__aeabi_f2d+0x20>
 8002532:	2300      	movs	r3, #0
 8002534:	2200      	movs	r2, #0
 8002536:	e7d5      	b.n	80024e4 <__aeabi_f2d+0x20>
 8002538:	2200      	movs	r2, #0
 800253a:	4b05      	ldr	r3, [pc, #20]	@ (8002550 <__aeabi_f2d+0x8c>)
 800253c:	e7d2      	b.n	80024e4 <__aeabi_f2d+0x20>
 800253e:	0003      	movs	r3, r0
 8002540:	002a      	movs	r2, r5
 8002542:	3b0b      	subs	r3, #11
 8002544:	409a      	lsls	r2, r3
 8002546:	2500      	movs	r5, #0
 8002548:	e7e3      	b.n	8002512 <__aeabi_f2d+0x4e>
 800254a:	46c0      	nop			@ (mov r8, r8)
 800254c:	00000389 	.word	0x00000389
 8002550:	000007ff 	.word	0x000007ff

08002554 <__aeabi_d2f>:
 8002554:	b5f0      	push	{r4, r5, r6, r7, lr}
 8002556:	004b      	lsls	r3, r1, #1
 8002558:	030f      	lsls	r7, r1, #12
 800255a:	0d5b      	lsrs	r3, r3, #21
 800255c:	4c3a      	ldr	r4, [pc, #232]	@ (8002648 <__aeabi_d2f+0xf4>)
 800255e:	0f45      	lsrs	r5, r0, #29
 8002560:	b083      	sub	sp, #12
 8002562:	0a7f      	lsrs	r7, r7, #9
 8002564:	1c5e      	adds	r6, r3, #1
 8002566:	432f      	orrs	r7, r5
 8002568:	9000      	str	r0, [sp, #0]
 800256a:	9101      	str	r1, [sp, #4]
 800256c:	0fca      	lsrs	r2, r1, #31
 800256e:	00c5      	lsls	r5, r0, #3
 8002570:	4226      	tst	r6, r4
 8002572:	d00b      	beq.n	800258c <__aeabi_d2f+0x38>
 8002574:	4935      	ldr	r1, [pc, #212]	@ (800264c <__aeabi_d2f+0xf8>)
 8002576:	185c      	adds	r4, r3, r1
 8002578:	2cfe      	cmp	r4, #254	@ 0xfe
 800257a:	dd13      	ble.n	80025a4 <__aeabi_d2f+0x50>
 800257c:	20ff      	movs	r0, #255	@ 0xff
 800257e:	2300      	movs	r3, #0
 8002580:	05c0      	lsls	r0, r0, #23
 8002582:	4318      	orrs	r0, r3
 8002584:	07d2      	lsls	r2, r2, #31
 8002586:	4310      	orrs	r0, r2
 8002588:	b003      	add	sp, #12
 800258a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800258c:	433d      	orrs	r5, r7
 800258e:	2b00      	cmp	r3, #0
 8002590:	d101      	bne.n	8002596 <__aeabi_d2f+0x42>
 8002592:	2000      	movs	r0, #0
 8002594:	e7f4      	b.n	8002580 <__aeabi_d2f+0x2c>
 8002596:	2d00      	cmp	r5, #0
 8002598:	d0f0      	beq.n	800257c <__aeabi_d2f+0x28>
 800259a:	2380      	movs	r3, #128	@ 0x80
 800259c:	03db      	lsls	r3, r3, #15
 800259e:	20ff      	movs	r0, #255	@ 0xff
 80025a0:	433b      	orrs	r3, r7
 80025a2:	e7ed      	b.n	8002580 <__aeabi_d2f+0x2c>
 80025a4:	2c00      	cmp	r4, #0
 80025a6:	dd0c      	ble.n	80025c2 <__aeabi_d2f+0x6e>
 80025a8:	9b00      	ldr	r3, [sp, #0]
 80025aa:	00ff      	lsls	r7, r7, #3
 80025ac:	019b      	lsls	r3, r3, #6
 80025ae:	1e58      	subs	r0, r3, #1
 80025b0:	4183      	sbcs	r3, r0
 80025b2:	0f69      	lsrs	r1, r5, #29
 80025b4:	433b      	orrs	r3, r7
 80025b6:	430b      	orrs	r3, r1
 80025b8:	0759      	lsls	r1, r3, #29
 80025ba:	d127      	bne.n	800260c <__aeabi_d2f+0xb8>
 80025bc:	08db      	lsrs	r3, r3, #3
 80025be:	b2e0      	uxtb	r0, r4
 80025c0:	e7de      	b.n	8002580 <__aeabi_d2f+0x2c>
 80025c2:	0021      	movs	r1, r4
 80025c4:	3117      	adds	r1, #23
 80025c6:	db31      	blt.n	800262c <__aeabi_d2f+0xd8>
 80025c8:	2180      	movs	r1, #128	@ 0x80
 80025ca:	201e      	movs	r0, #30
 80025cc:	0409      	lsls	r1, r1, #16
 80025ce:	4339      	orrs	r1, r7
 80025d0:	1b00      	subs	r0, r0, r4
 80025d2:	281f      	cmp	r0, #31
 80025d4:	dd2d      	ble.n	8002632 <__aeabi_d2f+0xde>
 80025d6:	2602      	movs	r6, #2
 80025d8:	4276      	negs	r6, r6
 80025da:	1b34      	subs	r4, r6, r4
 80025dc:	000e      	movs	r6, r1
 80025de:	40e6      	lsrs	r6, r4
 80025e0:	0034      	movs	r4, r6
 80025e2:	2820      	cmp	r0, #32
 80025e4:	d004      	beq.n	80025f0 <__aeabi_d2f+0x9c>
 80025e6:	481a      	ldr	r0, [pc, #104]	@ (8002650 <__aeabi_d2f+0xfc>)
 80025e8:	4684      	mov	ip, r0
 80025ea:	4463      	add	r3, ip
 80025ec:	4099      	lsls	r1, r3
 80025ee:	430d      	orrs	r5, r1
 80025f0:	002b      	movs	r3, r5
 80025f2:	1e59      	subs	r1, r3, #1
 80025f4:	418b      	sbcs	r3, r1
 80025f6:	4323      	orrs	r3, r4
 80025f8:	0759      	lsls	r1, r3, #29
 80025fa:	d003      	beq.n	8002604 <__aeabi_d2f+0xb0>
 80025fc:	210f      	movs	r1, #15
 80025fe:	4019      	ands	r1, r3
 8002600:	2904      	cmp	r1, #4
 8002602:	d10b      	bne.n	800261c <__aeabi_d2f+0xc8>
 8002604:	019b      	lsls	r3, r3, #6
 8002606:	2000      	movs	r0, #0
 8002608:	0a5b      	lsrs	r3, r3, #9
 800260a:	e7b9      	b.n	8002580 <__aeabi_d2f+0x2c>
 800260c:	210f      	movs	r1, #15
 800260e:	4019      	ands	r1, r3
 8002610:	2904      	cmp	r1, #4
 8002612:	d104      	bne.n	800261e <__aeabi_d2f+0xca>
 8002614:	019b      	lsls	r3, r3, #6
 8002616:	0a5b      	lsrs	r3, r3, #9
 8002618:	b2e0      	uxtb	r0, r4
 800261a:	e7b1      	b.n	8002580 <__aeabi_d2f+0x2c>
 800261c:	2400      	movs	r4, #0
 800261e:	3304      	adds	r3, #4
 8002620:	0159      	lsls	r1, r3, #5
 8002622:	d5f7      	bpl.n	8002614 <__aeabi_d2f+0xc0>
 8002624:	3401      	adds	r4, #1
 8002626:	2300      	movs	r3, #0
 8002628:	b2e0      	uxtb	r0, r4
 800262a:	e7a9      	b.n	8002580 <__aeabi_d2f+0x2c>
 800262c:	2000      	movs	r0, #0
 800262e:	2300      	movs	r3, #0
 8002630:	e7a6      	b.n	8002580 <__aeabi_d2f+0x2c>
 8002632:	4c08      	ldr	r4, [pc, #32]	@ (8002654 <__aeabi_d2f+0x100>)
 8002634:	191c      	adds	r4, r3, r4
 8002636:	002b      	movs	r3, r5
 8002638:	40a5      	lsls	r5, r4
 800263a:	40c3      	lsrs	r3, r0
 800263c:	40a1      	lsls	r1, r4
 800263e:	1e68      	subs	r0, r5, #1
 8002640:	4185      	sbcs	r5, r0
 8002642:	4329      	orrs	r1, r5
 8002644:	430b      	orrs	r3, r1
 8002646:	e7d7      	b.n	80025f8 <__aeabi_d2f+0xa4>
 8002648:	000007fe 	.word	0x000007fe
 800264c:	fffffc80 	.word	0xfffffc80
 8002650:	fffffca2 	.word	0xfffffca2
 8002654:	fffffc82 	.word	0xfffffc82

08002658 <__clzsi2>:
 8002658:	211c      	movs	r1, #28
 800265a:	2301      	movs	r3, #1
 800265c:	041b      	lsls	r3, r3, #16
 800265e:	4298      	cmp	r0, r3
 8002660:	d301      	bcc.n	8002666 <__clzsi2+0xe>
 8002662:	0c00      	lsrs	r0, r0, #16
 8002664:	3910      	subs	r1, #16
 8002666:	0a1b      	lsrs	r3, r3, #8
 8002668:	4298      	cmp	r0, r3
 800266a:	d301      	bcc.n	8002670 <__clzsi2+0x18>
 800266c:	0a00      	lsrs	r0, r0, #8
 800266e:	3908      	subs	r1, #8
 8002670:	091b      	lsrs	r3, r3, #4
 8002672:	4298      	cmp	r0, r3
 8002674:	d301      	bcc.n	800267a <__clzsi2+0x22>
 8002676:	0900      	lsrs	r0, r0, #4
 8002678:	3904      	subs	r1, #4
 800267a:	a202      	add	r2, pc, #8	@ (adr r2, 8002684 <__clzsi2+0x2c>)
 800267c:	5c10      	ldrb	r0, [r2, r0]
 800267e:	1840      	adds	r0, r0, r1
 8002680:	4770      	bx	lr
 8002682:	46c0      	nop			@ (mov r8, r8)
 8002684:	02020304 	.word	0x02020304
 8002688:	01010101 	.word	0x01010101
	...

08002694 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 8002694:	b580      	push	{r7, lr}
 8002696:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8002698:	f000 fd36 	bl	8003108 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 800269c:	f000 f85e 	bl	800275c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80026a0:	f000 f904 	bl	80028ac <MX_GPIO_Init>
  MX_I2C1_Init();
 80026a4:	f000 f8c2 	bl	800282c <MX_I2C1_Init>
  /* USER CODE BEGIN 2 */
  LCD_START_UP();
 80026a8:	f000 f946 	bl	8002938 <LCD_START_UP>
  LCD_ADD_CHAR(0, customChar);
 80026ac:	4b22      	ldr	r3, [pc, #136]	@ (8002738 <main+0xa4>)
 80026ae:	0019      	movs	r1, r3
 80026b0:	2000      	movs	r0, #0
 80026b2:	f000 fab9 	bl	8002c28 <LCD_ADD_CHAR>
  HDC1080_INIT(&hi2c1, temp_res_14_bit, humid_res_14_bit);
 80026b6:	4b21      	ldr	r3, [pc, #132]	@ (800273c <main+0xa8>)
 80026b8:	2200      	movs	r2, #0
 80026ba:	2100      	movs	r1, #0
 80026bc:	0018      	movs	r0, r3
 80026be:	f000 fae3 	bl	8002c88 <HDC1080_INIT>

  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {
	  LCD_DATA_MANAGER(0x83, INSTRUCTION);
 80026c2:	2100      	movs	r1, #0
 80026c4:	2083      	movs	r0, #131	@ 0x83
 80026c6:	f000 f971 	bl	80029ac <LCD_DATA_MANAGER>
	  LCD_SEND_MESSAGE("SENSOR HDC1080");
 80026ca:	4b1d      	ldr	r3, [pc, #116]	@ (8002740 <main+0xac>)
 80026cc:	0018      	movs	r0, r3
 80026ce:	f000 f94f 	bl	8002970 <LCD_SEND_MESSAGE>

	  HDC1080_READ(&hi2c1, &temp, &humi);
 80026d2:	4a1c      	ldr	r2, [pc, #112]	@ (8002744 <main+0xb0>)
 80026d4:	491c      	ldr	r1, [pc, #112]	@ (8002748 <main+0xb4>)
 80026d6:	4b19      	ldr	r3, [pc, #100]	@ (800273c <main+0xa8>)
 80026d8:	0018      	movs	r0, r3
 80026da:	f000 fb2b 	bl	8002d34 <HDC1080_READ>

	  LCD_DATA_MANAGER(0x94, INSTRUCTION);
 80026de:	2100      	movs	r1, #0
 80026e0:	2094      	movs	r0, #148	@ 0x94
 80026e2:	f000 f963 	bl	80029ac <LCD_DATA_MANAGER>
	  sprintf(buffer, "TEMP: %.2f", temp);
 80026e6:	4b18      	ldr	r3, [pc, #96]	@ (8002748 <main+0xb4>)
 80026e8:	681b      	ldr	r3, [r3, #0]
 80026ea:	1c18      	adds	r0, r3, #0
 80026ec:	f7ff feea 	bl	80024c4 <__aeabi_f2d>
 80026f0:	0002      	movs	r2, r0
 80026f2:	000b      	movs	r3, r1
 80026f4:	4915      	ldr	r1, [pc, #84]	@ (800274c <main+0xb8>)
 80026f6:	4816      	ldr	r0, [pc, #88]	@ (8002750 <main+0xbc>)
 80026f8:	f003 fde0 	bl	80062bc <siprintf>
	  LCD_SEND_MESSAGE(buffer);
 80026fc:	4b14      	ldr	r3, [pc, #80]	@ (8002750 <main+0xbc>)
 80026fe:	0018      	movs	r0, r3
 8002700:	f000 f936 	bl	8002970 <LCD_SEND_MESSAGE>

	  LCD_DATA_MANAGER(0, DATA);
 8002704:	2101      	movs	r1, #1
 8002706:	2000      	movs	r0, #0
 8002708:	f000 f950 	bl	80029ac <LCD_DATA_MANAGER>
	  LCD_SEND_MESSAGE("C");
 800270c:	4b11      	ldr	r3, [pc, #68]	@ (8002754 <main+0xc0>)
 800270e:	0018      	movs	r0, r3
 8002710:	f000 f92e 	bl	8002970 <LCD_SEND_MESSAGE>

	  LCD_DATA_MANAGER(0xD4, INSTRUCTION);
 8002714:	2100      	movs	r1, #0
 8002716:	20d4      	movs	r0, #212	@ 0xd4
 8002718:	f000 f948 	bl	80029ac <LCD_DATA_MANAGER>
	  sprintf(buffer, "HUMD: %d%%", humi);
 800271c:	4b09      	ldr	r3, [pc, #36]	@ (8002744 <main+0xb0>)
 800271e:	781b      	ldrb	r3, [r3, #0]
 8002720:	001a      	movs	r2, r3
 8002722:	490d      	ldr	r1, [pc, #52]	@ (8002758 <main+0xc4>)
 8002724:	4b0a      	ldr	r3, [pc, #40]	@ (8002750 <main+0xbc>)
 8002726:	0018      	movs	r0, r3
 8002728:	f003 fdc8 	bl	80062bc <siprintf>
	  LCD_SEND_MESSAGE(buffer);
 800272c:	4b08      	ldr	r3, [pc, #32]	@ (8002750 <main+0xbc>)
 800272e:	0018      	movs	r0, r3
 8002730:	f000 f91e 	bl	8002970 <LCD_SEND_MESSAGE>
	  LCD_DATA_MANAGER(0x83, INSTRUCTION);
 8002734:	46c0      	nop			@ (mov r8, r8)
 8002736:	e7c4      	b.n	80026c2 <main+0x2e>
 8002738:	20000000 	.word	0x20000000
 800273c:	200001f8 	.word	0x200001f8
 8002740:	08009d00 	.word	0x08009d00
 8002744:	20000268 	.word	0x20000268
 8002748:	20000250 	.word	0x20000250
 800274c:	08009d10 	.word	0x08009d10
 8002750:	20000254 	.word	0x20000254
 8002754:	08009d1c 	.word	0x08009d1c
 8002758:	08009d20 	.word	0x08009d20

0800275c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 800275c:	b590      	push	{r4, r7, lr}
 800275e:	b09d      	sub	sp, #116	@ 0x74
 8002760:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002762:	2438      	movs	r4, #56	@ 0x38
 8002764:	193b      	adds	r3, r7, r4
 8002766:	0018      	movs	r0, r3
 8002768:	2338      	movs	r3, #56	@ 0x38
 800276a:	001a      	movs	r2, r3
 800276c:	2100      	movs	r1, #0
 800276e:	f003 fe13 	bl	8006398 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002772:	2324      	movs	r3, #36	@ 0x24
 8002774:	18fb      	adds	r3, r7, r3
 8002776:	0018      	movs	r0, r3
 8002778:	2314      	movs	r3, #20
 800277a:	001a      	movs	r2, r3
 800277c:	2100      	movs	r1, #0
 800277e:	f003 fe0b 	bl	8006398 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002782:	1d3b      	adds	r3, r7, #4
 8002784:	0018      	movs	r0, r3
 8002786:	2320      	movs	r3, #32
 8002788:	001a      	movs	r2, r3
 800278a:	2100      	movs	r1, #0
 800278c:	f003 fe04 	bl	8006398 <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002790:	4b24      	ldr	r3, [pc, #144]	@ (8002824 <SystemClock_Config+0xc8>)
 8002792:	681b      	ldr	r3, [r3, #0]
 8002794:	4a24      	ldr	r2, [pc, #144]	@ (8002828 <SystemClock_Config+0xcc>)
 8002796:	401a      	ands	r2, r3
 8002798:	4b22      	ldr	r3, [pc, #136]	@ (8002824 <SystemClock_Config+0xc8>)
 800279a:	2180      	movs	r1, #128	@ 0x80
 800279c:	0109      	lsls	r1, r1, #4
 800279e:	430a      	orrs	r2, r1
 80027a0:	601a      	str	r2, [r3, #0]

  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 80027a2:	0021      	movs	r1, r4
 80027a4:	187b      	adds	r3, r7, r1
 80027a6:	2202      	movs	r2, #2
 80027a8:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 80027aa:	187b      	adds	r3, r7, r1
 80027ac:	2201      	movs	r2, #1
 80027ae:	60da      	str	r2, [r3, #12]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 80027b0:	187b      	adds	r3, r7, r1
 80027b2:	2210      	movs	r2, #16
 80027b4:	611a      	str	r2, [r3, #16]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 80027b6:	187b      	adds	r3, r7, r1
 80027b8:	2200      	movs	r2, #0
 80027ba:	629a      	str	r2, [r3, #40]	@ 0x28
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 80027bc:	187b      	adds	r3, r7, r1
 80027be:	0018      	movs	r0, r3
 80027c0:	f001 ff6e 	bl	80046a0 <HAL_RCC_OscConfig>
 80027c4:	1e03      	subs	r3, r0, #0
 80027c6:	d001      	beq.n	80027cc <SystemClock_Config+0x70>
  {
    Error_Handler();
 80027c8:	f000 fb38 	bl	8002e3c <Error_Handler>
  }

  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 80027cc:	2124      	movs	r1, #36	@ 0x24
 80027ce:	187b      	adds	r3, r7, r1
 80027d0:	220f      	movs	r2, #15
 80027d2:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 80027d4:	187b      	adds	r3, r7, r1
 80027d6:	2201      	movs	r2, #1
 80027d8:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV2;
 80027da:	187b      	adds	r3, r7, r1
 80027dc:	2280      	movs	r2, #128	@ 0x80
 80027de:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 80027e0:	187b      	adds	r3, r7, r1
 80027e2:	2200      	movs	r2, #0
 80027e4:	60da      	str	r2, [r3, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 80027e6:	187b      	adds	r3, r7, r1
 80027e8:	2200      	movs	r2, #0
 80027ea:	611a      	str	r2, [r3, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 80027ec:	187b      	adds	r3, r7, r1
 80027ee:	2100      	movs	r1, #0
 80027f0:	0018      	movs	r0, r3
 80027f2:	f002 fb19 	bl	8004e28 <HAL_RCC_ClockConfig>
 80027f6:	1e03      	subs	r3, r0, #0
 80027f8:	d001      	beq.n	80027fe <SystemClock_Config+0xa2>
  {
    Error_Handler();
 80027fa:	f000 fb1f 	bl	8002e3c <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_I2C1;
 80027fe:	1d3b      	adds	r3, r7, #4
 8002800:	2208      	movs	r2, #8
 8002802:	601a      	str	r2, [r3, #0]
  PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 8002804:	1d3b      	adds	r3, r7, #4
 8002806:	2200      	movs	r2, #0
 8002808:	615a      	str	r2, [r3, #20]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 800280a:	1d3b      	adds	r3, r7, #4
 800280c:	0018      	movs	r0, r3
 800280e:	f002 fcd9 	bl	80051c4 <HAL_RCCEx_PeriphCLKConfig>
 8002812:	1e03      	subs	r3, r0, #0
 8002814:	d001      	beq.n	800281a <SystemClock_Config+0xbe>
  {
    Error_Handler();
 8002816:	f000 fb11 	bl	8002e3c <Error_Handler>
  }
}
 800281a:	46c0      	nop			@ (mov r8, r8)
 800281c:	46bd      	mov	sp, r7
 800281e:	b01d      	add	sp, #116	@ 0x74
 8002820:	bd90      	pop	{r4, r7, pc}
 8002822:	46c0      	nop			@ (mov r8, r8)
 8002824:	40007000 	.word	0x40007000
 8002828:	ffffe7ff 	.word	0xffffe7ff

0800282c <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 800282c:	b580      	push	{r7, lr}
 800282e:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8002830:	4b1b      	ldr	r3, [pc, #108]	@ (80028a0 <MX_I2C1_Init+0x74>)
 8002832:	4a1c      	ldr	r2, [pc, #112]	@ (80028a4 <MX_I2C1_Init+0x78>)
 8002834:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x2000090E;
 8002836:	4b1a      	ldr	r3, [pc, #104]	@ (80028a0 <MX_I2C1_Init+0x74>)
 8002838:	4a1b      	ldr	r2, [pc, #108]	@ (80028a8 <MX_I2C1_Init+0x7c>)
 800283a:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 800283c:	4b18      	ldr	r3, [pc, #96]	@ (80028a0 <MX_I2C1_Init+0x74>)
 800283e:	2200      	movs	r2, #0
 8002840:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8002842:	4b17      	ldr	r3, [pc, #92]	@ (80028a0 <MX_I2C1_Init+0x74>)
 8002844:	2201      	movs	r2, #1
 8002846:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8002848:	4b15      	ldr	r3, [pc, #84]	@ (80028a0 <MX_I2C1_Init+0x74>)
 800284a:	2200      	movs	r2, #0
 800284c:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 800284e:	4b14      	ldr	r3, [pc, #80]	@ (80028a0 <MX_I2C1_Init+0x74>)
 8002850:	2200      	movs	r2, #0
 8002852:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8002854:	4b12      	ldr	r3, [pc, #72]	@ (80028a0 <MX_I2C1_Init+0x74>)
 8002856:	2200      	movs	r2, #0
 8002858:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 800285a:	4b11      	ldr	r3, [pc, #68]	@ (80028a0 <MX_I2C1_Init+0x74>)
 800285c:	2200      	movs	r2, #0
 800285e:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8002860:	4b0f      	ldr	r3, [pc, #60]	@ (80028a0 <MX_I2C1_Init+0x74>)
 8002862:	2200      	movs	r2, #0
 8002864:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8002866:	4b0e      	ldr	r3, [pc, #56]	@ (80028a0 <MX_I2C1_Init+0x74>)
 8002868:	0018      	movs	r0, r3
 800286a:	f000 ff43 	bl	80036f4 <HAL_I2C_Init>
 800286e:	1e03      	subs	r3, r0, #0
 8002870:	d001      	beq.n	8002876 <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 8002872:	f000 fae3 	bl	8002e3c <Error_Handler>
  }

  /** Configure Analogue filter
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8002876:	4b0a      	ldr	r3, [pc, #40]	@ (80028a0 <MX_I2C1_Init+0x74>)
 8002878:	2100      	movs	r1, #0
 800287a:	0018      	movs	r0, r3
 800287c:	f001 fe78 	bl	8004570 <HAL_I2CEx_ConfigAnalogFilter>
 8002880:	1e03      	subs	r3, r0, #0
 8002882:	d001      	beq.n	8002888 <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 8002884:	f000 fada 	bl	8002e3c <Error_Handler>
  }

  /** Configure Digital filter
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8002888:	4b05      	ldr	r3, [pc, #20]	@ (80028a0 <MX_I2C1_Init+0x74>)
 800288a:	2100      	movs	r1, #0
 800288c:	0018      	movs	r0, r3
 800288e:	f001 febb 	bl	8004608 <HAL_I2CEx_ConfigDigitalFilter>
 8002892:	1e03      	subs	r3, r0, #0
 8002894:	d001      	beq.n	800289a <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 8002896:	f000 fad1 	bl	8002e3c <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 800289a:	46c0      	nop			@ (mov r8, r8)
 800289c:	46bd      	mov	sp, r7
 800289e:	bd80      	pop	{r7, pc}
 80028a0:	200001f8 	.word	0x200001f8
 80028a4:	40005400 	.word	0x40005400
 80028a8:	2000090e 	.word	0x2000090e

080028ac <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80028ac:	b590      	push	{r4, r7, lr}
 80028ae:	b089      	sub	sp, #36	@ 0x24
 80028b0:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80028b2:	240c      	movs	r4, #12
 80028b4:	193b      	adds	r3, r7, r4
 80028b6:	0018      	movs	r0, r3
 80028b8:	2314      	movs	r3, #20
 80028ba:	001a      	movs	r2, r3
 80028bc:	2100      	movs	r1, #0
 80028be:	f003 fd6b 	bl	8006398 <memset>
  /* USER CODE BEGIN MX_GPIO_Init_1 */

  /* USER CODE END MX_GPIO_Init_1 */

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOA_CLK_ENABLE();
 80028c2:	4b1b      	ldr	r3, [pc, #108]	@ (8002930 <MX_GPIO_Init+0x84>)
 80028c4:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80028c6:	4b1a      	ldr	r3, [pc, #104]	@ (8002930 <MX_GPIO_Init+0x84>)
 80028c8:	2101      	movs	r1, #1
 80028ca:	430a      	orrs	r2, r1
 80028cc:	62da      	str	r2, [r3, #44]	@ 0x2c
 80028ce:	4b18      	ldr	r3, [pc, #96]	@ (8002930 <MX_GPIO_Init+0x84>)
 80028d0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80028d2:	2201      	movs	r2, #1
 80028d4:	4013      	ands	r3, r2
 80028d6:	60bb      	str	r3, [r7, #8]
 80028d8:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 80028da:	4b15      	ldr	r3, [pc, #84]	@ (8002930 <MX_GPIO_Init+0x84>)
 80028dc:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 80028de:	4b14      	ldr	r3, [pc, #80]	@ (8002930 <MX_GPIO_Init+0x84>)
 80028e0:	2102      	movs	r1, #2
 80028e2:	430a      	orrs	r2, r1
 80028e4:	62da      	str	r2, [r3, #44]	@ 0x2c
 80028e6:	4b12      	ldr	r3, [pc, #72]	@ (8002930 <MX_GPIO_Init+0x84>)
 80028e8:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 80028ea:	2202      	movs	r2, #2
 80028ec:	4013      	ands	r3, r2
 80028ee:	607b      	str	r3, [r7, #4]
 80028f0:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, RS_Pin|RW_Pin|EN_Pin|DB7_Pin
 80028f2:	4910      	ldr	r1, [pc, #64]	@ (8002934 <MX_GPIO_Init+0x88>)
 80028f4:	23a0      	movs	r3, #160	@ 0xa0
 80028f6:	05db      	lsls	r3, r3, #23
 80028f8:	2200      	movs	r2, #0
 80028fa:	0018      	movs	r0, r3
 80028fc:	f000 fec2 	bl	8003684 <HAL_GPIO_WritePin>
                          |DB6_Pin|DB5_Pin|DB4_Pin, GPIO_PIN_RESET);

  /*Configure GPIO pins : RS_Pin RW_Pin EN_Pin DB7_Pin
                           DB6_Pin DB5_Pin DB4_Pin */
  GPIO_InitStruct.Pin = RS_Pin|RW_Pin|EN_Pin|DB7_Pin
 8002900:	0021      	movs	r1, r4
 8002902:	187b      	adds	r3, r7, r1
 8002904:	4a0b      	ldr	r2, [pc, #44]	@ (8002934 <MX_GPIO_Init+0x88>)
 8002906:	601a      	str	r2, [r3, #0]
                          |DB6_Pin|DB5_Pin|DB4_Pin;
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002908:	187b      	adds	r3, r7, r1
 800290a:	2201      	movs	r2, #1
 800290c:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800290e:	187b      	adds	r3, r7, r1
 8002910:	2200      	movs	r2, #0
 8002912:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002914:	187b      	adds	r3, r7, r1
 8002916:	2200      	movs	r2, #0
 8002918:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800291a:	187a      	adds	r2, r7, r1
 800291c:	23a0      	movs	r3, #160	@ 0xa0
 800291e:	05db      	lsls	r3, r3, #23
 8002920:	0011      	movs	r1, r2
 8002922:	0018      	movs	r0, r3
 8002924:	f000 fd38 	bl	8003398 <HAL_GPIO_Init>

  /* USER CODE BEGIN MX_GPIO_Init_2 */

  /* USER CODE END MX_GPIO_Init_2 */
}
 8002928:	46c0      	nop			@ (mov r8, r8)
 800292a:	46bd      	mov	sp, r7
 800292c:	b009      	add	sp, #36	@ 0x24
 800292e:	bd90      	pop	{r4, r7, pc}
 8002930:	40021000 	.word	0x40021000
 8002934:	0000870e 	.word	0x0000870e

08002938 <LCD_START_UP>:

/* USER CODE BEGIN 4 */
void LCD_START_UP(void){
 8002938:	b580      	push	{r7, lr}
 800293a:	af00      	add	r7, sp, #0
	LCD_DATA_MANAGER(0x33, INSTRUCTION);
 800293c:	2100      	movs	r1, #0
 800293e:	2033      	movs	r0, #51	@ 0x33
 8002940:	f000 f834 	bl	80029ac <LCD_DATA_MANAGER>
	LCD_DATA_MANAGER(0x32, INSTRUCTION);
 8002944:	2100      	movs	r1, #0
 8002946:	2032      	movs	r0, #50	@ 0x32
 8002948:	f000 f830 	bl	80029ac <LCD_DATA_MANAGER>
	LCD_DATA_MANAGER(0x28, INSTRUCTION);
 800294c:	2100      	movs	r1, #0
 800294e:	2028      	movs	r0, #40	@ 0x28
 8002950:	f000 f82c 	bl	80029ac <LCD_DATA_MANAGER>
	LCD_DATA_MANAGER(0x0C, INSTRUCTION);
 8002954:	2100      	movs	r1, #0
 8002956:	200c      	movs	r0, #12
 8002958:	f000 f828 	bl	80029ac <LCD_DATA_MANAGER>
	LCD_DATA_MANAGER(0x06, INSTRUCTION);
 800295c:	2100      	movs	r1, #0
 800295e:	2006      	movs	r0, #6
 8002960:	f000 f824 	bl	80029ac <LCD_DATA_MANAGER>

	HAL_Delay(2);
 8002964:	2002      	movs	r0, #2
 8002966:	f000 fc3f 	bl	80031e8 <HAL_Delay>
}
 800296a:	46c0      	nop			@ (mov r8, r8)
 800296c:	46bd      	mov	sp, r7
 800296e:	bd80      	pop	{r7, pc}

08002970 <LCD_SEND_MESSAGE>:
void LCD_SEND_MESSAGE(char * message){
 8002970:	b580      	push	{r7, lr}
 8002972:	b084      	sub	sp, #16
 8002974:	af00      	add	r7, sp, #0
 8002976:	6078      	str	r0, [r7, #4]
	for (int i = 0; message[i] != '\0'; ++i){
 8002978:	2300      	movs	r3, #0
 800297a:	60fb      	str	r3, [r7, #12]
 800297c:	e00a      	b.n	8002994 <LCD_SEND_MESSAGE+0x24>
		LCD_DATA_MANAGER(message[i], DATA);
 800297e:	68fb      	ldr	r3, [r7, #12]
 8002980:	687a      	ldr	r2, [r7, #4]
 8002982:	18d3      	adds	r3, r2, r3
 8002984:	781b      	ldrb	r3, [r3, #0]
 8002986:	2101      	movs	r1, #1
 8002988:	0018      	movs	r0, r3
 800298a:	f000 f80f 	bl	80029ac <LCD_DATA_MANAGER>
	for (int i = 0; message[i] != '\0'; ++i){
 800298e:	68fb      	ldr	r3, [r7, #12]
 8002990:	3301      	adds	r3, #1
 8002992:	60fb      	str	r3, [r7, #12]
 8002994:	68fb      	ldr	r3, [r7, #12]
 8002996:	687a      	ldr	r2, [r7, #4]
 8002998:	18d3      	adds	r3, r2, r3
 800299a:	781b      	ldrb	r3, [r3, #0]
 800299c:	2b00      	cmp	r3, #0
 800299e:	d1ee      	bne.n	800297e <LCD_SEND_MESSAGE+0xe>
	}
}
 80029a0:	46c0      	nop			@ (mov r8, r8)
 80029a2:	46c0      	nop			@ (mov r8, r8)
 80029a4:	46bd      	mov	sp, r7
 80029a6:	b004      	add	sp, #16
 80029a8:	bd80      	pop	{r7, pc}
	...

080029ac <LCD_DATA_MANAGER>:
void LCD_DATA_MANAGER(uint8_t data, uint8_t state){
 80029ac:	b580      	push	{r7, lr}
 80029ae:	b082      	sub	sp, #8
 80029b0:	af00      	add	r7, sp, #0
 80029b2:	0002      	movs	r2, r0
 80029b4:	1dfb      	adds	r3, r7, #7
 80029b6:	701a      	strb	r2, [r3, #0]
 80029b8:	1dbb      	adds	r3, r7, #6
 80029ba:	1c0a      	adds	r2, r1, #0
 80029bc:	701a      	strb	r2, [r3, #0]
	PORT.P0 = (data >> 0) & 1;
 80029be:	1dfb      	adds	r3, r7, #7
 80029c0:	781b      	ldrb	r3, [r3, #0]
 80029c2:	2201      	movs	r2, #1
 80029c4:	4013      	ands	r3, r2
 80029c6:	b2da      	uxtb	r2, r3
 80029c8:	4b96      	ldr	r3, [pc, #600]	@ (8002c24 <LCD_DATA_MANAGER+0x278>)
 80029ca:	2101      	movs	r1, #1
 80029cc:	400a      	ands	r2, r1
 80029ce:	0010      	movs	r0, r2
 80029d0:	781a      	ldrb	r2, [r3, #0]
 80029d2:	2101      	movs	r1, #1
 80029d4:	438a      	bics	r2, r1
 80029d6:	1c11      	adds	r1, r2, #0
 80029d8:	1c02      	adds	r2, r0, #0
 80029da:	430a      	orrs	r2, r1
 80029dc:	701a      	strb	r2, [r3, #0]
	PORT.P1 = (data >> 1) & 1;
 80029de:	1dfb      	adds	r3, r7, #7
 80029e0:	781b      	ldrb	r3, [r3, #0]
 80029e2:	085b      	lsrs	r3, r3, #1
 80029e4:	b2db      	uxtb	r3, r3
 80029e6:	1c1a      	adds	r2, r3, #0
 80029e8:	2301      	movs	r3, #1
 80029ea:	4013      	ands	r3, r2
 80029ec:	b2da      	uxtb	r2, r3
 80029ee:	4b8d      	ldr	r3, [pc, #564]	@ (8002c24 <LCD_DATA_MANAGER+0x278>)
 80029f0:	2101      	movs	r1, #1
 80029f2:	400a      	ands	r2, r1
 80029f4:	1890      	adds	r0, r2, r2
 80029f6:	781a      	ldrb	r2, [r3, #0]
 80029f8:	2102      	movs	r1, #2
 80029fa:	438a      	bics	r2, r1
 80029fc:	1c11      	adds	r1, r2, #0
 80029fe:	1c02      	adds	r2, r0, #0
 8002a00:	430a      	orrs	r2, r1
 8002a02:	701a      	strb	r2, [r3, #0]
	PORT.P2 = (data >> 2) & 1;
 8002a04:	1dfb      	adds	r3, r7, #7
 8002a06:	781b      	ldrb	r3, [r3, #0]
 8002a08:	089b      	lsrs	r3, r3, #2
 8002a0a:	b2db      	uxtb	r3, r3
 8002a0c:	1c1a      	adds	r2, r3, #0
 8002a0e:	2301      	movs	r3, #1
 8002a10:	4013      	ands	r3, r2
 8002a12:	b2da      	uxtb	r2, r3
 8002a14:	4b83      	ldr	r3, [pc, #524]	@ (8002c24 <LCD_DATA_MANAGER+0x278>)
 8002a16:	2101      	movs	r1, #1
 8002a18:	400a      	ands	r2, r1
 8002a1a:	0090      	lsls	r0, r2, #2
 8002a1c:	781a      	ldrb	r2, [r3, #0]
 8002a1e:	2104      	movs	r1, #4
 8002a20:	438a      	bics	r2, r1
 8002a22:	1c11      	adds	r1, r2, #0
 8002a24:	1c02      	adds	r2, r0, #0
 8002a26:	430a      	orrs	r2, r1
 8002a28:	701a      	strb	r2, [r3, #0]
	PORT.P3 = (data >> 3) & 1;
 8002a2a:	1dfb      	adds	r3, r7, #7
 8002a2c:	781b      	ldrb	r3, [r3, #0]
 8002a2e:	08db      	lsrs	r3, r3, #3
 8002a30:	b2db      	uxtb	r3, r3
 8002a32:	1c1a      	adds	r2, r3, #0
 8002a34:	2301      	movs	r3, #1
 8002a36:	4013      	ands	r3, r2
 8002a38:	b2da      	uxtb	r2, r3
 8002a3a:	4b7a      	ldr	r3, [pc, #488]	@ (8002c24 <LCD_DATA_MANAGER+0x278>)
 8002a3c:	2101      	movs	r1, #1
 8002a3e:	400a      	ands	r2, r1
 8002a40:	00d0      	lsls	r0, r2, #3
 8002a42:	781a      	ldrb	r2, [r3, #0]
 8002a44:	2108      	movs	r1, #8
 8002a46:	438a      	bics	r2, r1
 8002a48:	1c11      	adds	r1, r2, #0
 8002a4a:	1c02      	adds	r2, r0, #0
 8002a4c:	430a      	orrs	r2, r1
 8002a4e:	701a      	strb	r2, [r3, #0]
	PORT.P4 = (data >> 4) & 1;
 8002a50:	1dfb      	adds	r3, r7, #7
 8002a52:	781b      	ldrb	r3, [r3, #0]
 8002a54:	091b      	lsrs	r3, r3, #4
 8002a56:	b2db      	uxtb	r3, r3
 8002a58:	1c1a      	adds	r2, r3, #0
 8002a5a:	2301      	movs	r3, #1
 8002a5c:	4013      	ands	r3, r2
 8002a5e:	b2da      	uxtb	r2, r3
 8002a60:	4b70      	ldr	r3, [pc, #448]	@ (8002c24 <LCD_DATA_MANAGER+0x278>)
 8002a62:	2101      	movs	r1, #1
 8002a64:	400a      	ands	r2, r1
 8002a66:	0110      	lsls	r0, r2, #4
 8002a68:	781a      	ldrb	r2, [r3, #0]
 8002a6a:	2110      	movs	r1, #16
 8002a6c:	438a      	bics	r2, r1
 8002a6e:	1c11      	adds	r1, r2, #0
 8002a70:	1c02      	adds	r2, r0, #0
 8002a72:	430a      	orrs	r2, r1
 8002a74:	701a      	strb	r2, [r3, #0]
	PORT.P5 = (data >> 5) & 1;
 8002a76:	1dfb      	adds	r3, r7, #7
 8002a78:	781b      	ldrb	r3, [r3, #0]
 8002a7a:	095b      	lsrs	r3, r3, #5
 8002a7c:	b2db      	uxtb	r3, r3
 8002a7e:	1c1a      	adds	r2, r3, #0
 8002a80:	2301      	movs	r3, #1
 8002a82:	4013      	ands	r3, r2
 8002a84:	b2da      	uxtb	r2, r3
 8002a86:	4b67      	ldr	r3, [pc, #412]	@ (8002c24 <LCD_DATA_MANAGER+0x278>)
 8002a88:	2101      	movs	r1, #1
 8002a8a:	400a      	ands	r2, r1
 8002a8c:	0150      	lsls	r0, r2, #5
 8002a8e:	781a      	ldrb	r2, [r3, #0]
 8002a90:	2120      	movs	r1, #32
 8002a92:	438a      	bics	r2, r1
 8002a94:	1c11      	adds	r1, r2, #0
 8002a96:	1c02      	adds	r2, r0, #0
 8002a98:	430a      	orrs	r2, r1
 8002a9a:	701a      	strb	r2, [r3, #0]
	PORT.P6 = (data >> 6) & 1;
 8002a9c:	1dfb      	adds	r3, r7, #7
 8002a9e:	781b      	ldrb	r3, [r3, #0]
 8002aa0:	099b      	lsrs	r3, r3, #6
 8002aa2:	b2db      	uxtb	r3, r3
 8002aa4:	1c1a      	adds	r2, r3, #0
 8002aa6:	2301      	movs	r3, #1
 8002aa8:	4013      	ands	r3, r2
 8002aaa:	b2da      	uxtb	r2, r3
 8002aac:	4b5d      	ldr	r3, [pc, #372]	@ (8002c24 <LCD_DATA_MANAGER+0x278>)
 8002aae:	2101      	movs	r1, #1
 8002ab0:	400a      	ands	r2, r1
 8002ab2:	0190      	lsls	r0, r2, #6
 8002ab4:	781a      	ldrb	r2, [r3, #0]
 8002ab6:	2140      	movs	r1, #64	@ 0x40
 8002ab8:	438a      	bics	r2, r1
 8002aba:	1c11      	adds	r1, r2, #0
 8002abc:	1c02      	adds	r2, r0, #0
 8002abe:	430a      	orrs	r2, r1
 8002ac0:	701a      	strb	r2, [r3, #0]
	PORT.P7 = (data >> 7) & 1;
 8002ac2:	1dfb      	adds	r3, r7, #7
 8002ac4:	781b      	ldrb	r3, [r3, #0]
 8002ac6:	09db      	lsrs	r3, r3, #7
 8002ac8:	b2db      	uxtb	r3, r3
 8002aca:	1c1a      	adds	r2, r3, #0
 8002acc:	2301      	movs	r3, #1
 8002ace:	4013      	ands	r3, r2
 8002ad0:	b2da      	uxtb	r2, r3
 8002ad2:	4b54      	ldr	r3, [pc, #336]	@ (8002c24 <LCD_DATA_MANAGER+0x278>)
 8002ad4:	01d0      	lsls	r0, r2, #7
 8002ad6:	781a      	ldrb	r2, [r3, #0]
 8002ad8:	217f      	movs	r1, #127	@ 0x7f
 8002ada:	400a      	ands	r2, r1
 8002adc:	1c11      	adds	r1, r2, #0
 8002ade:	1c02      	adds	r2, r0, #0
 8002ae0:	430a      	orrs	r2, r1
 8002ae2:	701a      	strb	r2, [r3, #0]

	HAL_GPIO_WritePin(RS_GPIO_Port, RS_Pin, state);
 8002ae4:	1dbb      	adds	r3, r7, #6
 8002ae6:	781a      	ldrb	r2, [r3, #0]
 8002ae8:	23a0      	movs	r3, #160	@ 0xa0
 8002aea:	05db      	lsls	r3, r3, #23
 8002aec:	2102      	movs	r1, #2
 8002aee:	0018      	movs	r0, r3
 8002af0:	f000 fdc8 	bl	8003684 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(RW_GPIO_Port, RW_Pin, GPIO_PIN_RESET);
 8002af4:	23a0      	movs	r3, #160	@ 0xa0
 8002af6:	05db      	lsls	r3, r3, #23
 8002af8:	2200      	movs	r2, #0
 8002afa:	2104      	movs	r1, #4
 8002afc:	0018      	movs	r0, r3
 8002afe:	f000 fdc1 	bl	8003684 <HAL_GPIO_WritePin>

	HAL_GPIO_WritePin(DB4_GPIO_Port, DB4_Pin, PORT.P4);
 8002b02:	4b48      	ldr	r3, [pc, #288]	@ (8002c24 <LCD_DATA_MANAGER+0x278>)
 8002b04:	781b      	ldrb	r3, [r3, #0]
 8002b06:	06db      	lsls	r3, r3, #27
 8002b08:	0fdb      	lsrs	r3, r3, #31
 8002b0a:	b2db      	uxtb	r3, r3
 8002b0c:	001a      	movs	r2, r3
 8002b0e:	2380      	movs	r3, #128	@ 0x80
 8002b10:	0219      	lsls	r1, r3, #8
 8002b12:	23a0      	movs	r3, #160	@ 0xa0
 8002b14:	05db      	lsls	r3, r3, #23
 8002b16:	0018      	movs	r0, r3
 8002b18:	f000 fdb4 	bl	8003684 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(DB5_GPIO_Port, DB5_Pin, PORT.P5);
 8002b1c:	4b41      	ldr	r3, [pc, #260]	@ (8002c24 <LCD_DATA_MANAGER+0x278>)
 8002b1e:	781b      	ldrb	r3, [r3, #0]
 8002b20:	069b      	lsls	r3, r3, #26
 8002b22:	0fdb      	lsrs	r3, r3, #31
 8002b24:	b2db      	uxtb	r3, r3
 8002b26:	001a      	movs	r2, r3
 8002b28:	2380      	movs	r3, #128	@ 0x80
 8002b2a:	00d9      	lsls	r1, r3, #3
 8002b2c:	23a0      	movs	r3, #160	@ 0xa0
 8002b2e:	05db      	lsls	r3, r3, #23
 8002b30:	0018      	movs	r0, r3
 8002b32:	f000 fda7 	bl	8003684 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(DB6_GPIO_Port, DB6_Pin, PORT.P6);
 8002b36:	4b3b      	ldr	r3, [pc, #236]	@ (8002c24 <LCD_DATA_MANAGER+0x278>)
 8002b38:	781b      	ldrb	r3, [r3, #0]
 8002b3a:	065b      	lsls	r3, r3, #25
 8002b3c:	0fdb      	lsrs	r3, r3, #31
 8002b3e:	b2db      	uxtb	r3, r3
 8002b40:	001a      	movs	r2, r3
 8002b42:	2380      	movs	r3, #128	@ 0x80
 8002b44:	0099      	lsls	r1, r3, #2
 8002b46:	23a0      	movs	r3, #160	@ 0xa0
 8002b48:	05db      	lsls	r3, r3, #23
 8002b4a:	0018      	movs	r0, r3
 8002b4c:	f000 fd9a 	bl	8003684 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(DB7_GPIO_Port, DB7_Pin, PORT.P7);
 8002b50:	4b34      	ldr	r3, [pc, #208]	@ (8002c24 <LCD_DATA_MANAGER+0x278>)
 8002b52:	781b      	ldrb	r3, [r3, #0]
 8002b54:	061b      	lsls	r3, r3, #24
 8002b56:	0fdb      	lsrs	r3, r3, #31
 8002b58:	b2db      	uxtb	r3, r3
 8002b5a:	001a      	movs	r2, r3
 8002b5c:	2380      	movs	r3, #128	@ 0x80
 8002b5e:	0059      	lsls	r1, r3, #1
 8002b60:	23a0      	movs	r3, #160	@ 0xa0
 8002b62:	05db      	lsls	r3, r3, #23
 8002b64:	0018      	movs	r0, r3
 8002b66:	f000 fd8d 	bl	8003684 <HAL_GPIO_WritePin>

	HAL_GPIO_TogglePin(EN_GPIO_Port, EN_Pin);
 8002b6a:	23a0      	movs	r3, #160	@ 0xa0
 8002b6c:	05db      	lsls	r3, r3, #23
 8002b6e:	2108      	movs	r1, #8
 8002b70:	0018      	movs	r0, r3
 8002b72:	f000 fda4 	bl	80036be <HAL_GPIO_TogglePin>
	HAL_Delay(1);
 8002b76:	2001      	movs	r0, #1
 8002b78:	f000 fb36 	bl	80031e8 <HAL_Delay>
	HAL_GPIO_TogglePin(EN_GPIO_Port, EN_Pin);
 8002b7c:	23a0      	movs	r3, #160	@ 0xa0
 8002b7e:	05db      	lsls	r3, r3, #23
 8002b80:	2108      	movs	r1, #8
 8002b82:	0018      	movs	r0, r3
 8002b84:	f000 fd9b 	bl	80036be <HAL_GPIO_TogglePin>
	HAL_Delay(1);
 8002b88:	2001      	movs	r0, #1
 8002b8a:	f000 fb2d 	bl	80031e8 <HAL_Delay>

	HAL_GPIO_WritePin(DB4_GPIO_Port, DB4_Pin, PORT.P0);
 8002b8e:	4b25      	ldr	r3, [pc, #148]	@ (8002c24 <LCD_DATA_MANAGER+0x278>)
 8002b90:	781b      	ldrb	r3, [r3, #0]
 8002b92:	07db      	lsls	r3, r3, #31
 8002b94:	0fdb      	lsrs	r3, r3, #31
 8002b96:	b2db      	uxtb	r3, r3
 8002b98:	001a      	movs	r2, r3
 8002b9a:	2380      	movs	r3, #128	@ 0x80
 8002b9c:	0219      	lsls	r1, r3, #8
 8002b9e:	23a0      	movs	r3, #160	@ 0xa0
 8002ba0:	05db      	lsls	r3, r3, #23
 8002ba2:	0018      	movs	r0, r3
 8002ba4:	f000 fd6e 	bl	8003684 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(DB5_GPIO_Port, DB5_Pin, PORT.P1);
 8002ba8:	4b1e      	ldr	r3, [pc, #120]	@ (8002c24 <LCD_DATA_MANAGER+0x278>)
 8002baa:	781b      	ldrb	r3, [r3, #0]
 8002bac:	079b      	lsls	r3, r3, #30
 8002bae:	0fdb      	lsrs	r3, r3, #31
 8002bb0:	b2db      	uxtb	r3, r3
 8002bb2:	001a      	movs	r2, r3
 8002bb4:	2380      	movs	r3, #128	@ 0x80
 8002bb6:	00d9      	lsls	r1, r3, #3
 8002bb8:	23a0      	movs	r3, #160	@ 0xa0
 8002bba:	05db      	lsls	r3, r3, #23
 8002bbc:	0018      	movs	r0, r3
 8002bbe:	f000 fd61 	bl	8003684 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(DB6_GPIO_Port, DB6_Pin, PORT.P2);
 8002bc2:	4b18      	ldr	r3, [pc, #96]	@ (8002c24 <LCD_DATA_MANAGER+0x278>)
 8002bc4:	781b      	ldrb	r3, [r3, #0]
 8002bc6:	075b      	lsls	r3, r3, #29
 8002bc8:	0fdb      	lsrs	r3, r3, #31
 8002bca:	b2db      	uxtb	r3, r3
 8002bcc:	001a      	movs	r2, r3
 8002bce:	2380      	movs	r3, #128	@ 0x80
 8002bd0:	0099      	lsls	r1, r3, #2
 8002bd2:	23a0      	movs	r3, #160	@ 0xa0
 8002bd4:	05db      	lsls	r3, r3, #23
 8002bd6:	0018      	movs	r0, r3
 8002bd8:	f000 fd54 	bl	8003684 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(DB7_GPIO_Port, DB7_Pin, PORT.P3);
 8002bdc:	4b11      	ldr	r3, [pc, #68]	@ (8002c24 <LCD_DATA_MANAGER+0x278>)
 8002bde:	781b      	ldrb	r3, [r3, #0]
 8002be0:	071b      	lsls	r3, r3, #28
 8002be2:	0fdb      	lsrs	r3, r3, #31
 8002be4:	b2db      	uxtb	r3, r3
 8002be6:	001a      	movs	r2, r3
 8002be8:	2380      	movs	r3, #128	@ 0x80
 8002bea:	0059      	lsls	r1, r3, #1
 8002bec:	23a0      	movs	r3, #160	@ 0xa0
 8002bee:	05db      	lsls	r3, r3, #23
 8002bf0:	0018      	movs	r0, r3
 8002bf2:	f000 fd47 	bl	8003684 <HAL_GPIO_WritePin>

	HAL_GPIO_TogglePin(EN_GPIO_Port, EN_Pin);
 8002bf6:	23a0      	movs	r3, #160	@ 0xa0
 8002bf8:	05db      	lsls	r3, r3, #23
 8002bfa:	2108      	movs	r1, #8
 8002bfc:	0018      	movs	r0, r3
 8002bfe:	f000 fd5e 	bl	80036be <HAL_GPIO_TogglePin>
	HAL_Delay(1);
 8002c02:	2001      	movs	r0, #1
 8002c04:	f000 faf0 	bl	80031e8 <HAL_Delay>
	HAL_GPIO_TogglePin(EN_GPIO_Port, EN_Pin);
 8002c08:	23a0      	movs	r3, #160	@ 0xa0
 8002c0a:	05db      	lsls	r3, r3, #23
 8002c0c:	2108      	movs	r1, #8
 8002c0e:	0018      	movs	r0, r3
 8002c10:	f000 fd55 	bl	80036be <HAL_GPIO_TogglePin>
	HAL_Delay(1);
 8002c14:	2001      	movs	r0, #1
 8002c16:	f000 fae7 	bl	80031e8 <HAL_Delay>
}
 8002c1a:	46c0      	nop			@ (mov r8, r8)
 8002c1c:	46bd      	mov	sp, r7
 8002c1e:	b002      	add	sp, #8
 8002c20:	bd80      	pop	{r7, pc}
 8002c22:	46c0      	nop			@ (mov r8, r8)
 8002c24:	2000024c 	.word	0x2000024c

08002c28 <LCD_ADD_CHAR>:
void LCD_ADD_CHAR(uint8_t locale, uint8_t * customChar){
 8002c28:	b580      	push	{r7, lr}
 8002c2a:	b084      	sub	sp, #16
 8002c2c:	af00      	add	r7, sp, #0
 8002c2e:	0002      	movs	r2, r0
 8002c30:	6039      	str	r1, [r7, #0]
 8002c32:	1dfb      	adds	r3, r7, #7
 8002c34:	701a      	strb	r2, [r3, #0]
	locale &= 0x7;
 8002c36:	1dfb      	adds	r3, r7, #7
 8002c38:	1dfa      	adds	r2, r7, #7
 8002c3a:	7812      	ldrb	r2, [r2, #0]
 8002c3c:	2107      	movs	r1, #7
 8002c3e:	400a      	ands	r2, r1
 8002c40:	701a      	strb	r2, [r3, #0]
    LCD_DATA_MANAGER(0x40 | (locale << 3), INSTRUCTION);
 8002c42:	1dfb      	adds	r3, r7, #7
 8002c44:	781b      	ldrb	r3, [r3, #0]
 8002c46:	b25b      	sxtb	r3, r3
 8002c48:	00db      	lsls	r3, r3, #3
 8002c4a:	b25b      	sxtb	r3, r3
 8002c4c:	2240      	movs	r2, #64	@ 0x40
 8002c4e:	4313      	orrs	r3, r2
 8002c50:	b25b      	sxtb	r3, r3
 8002c52:	b2db      	uxtb	r3, r3
 8002c54:	2100      	movs	r1, #0
 8002c56:	0018      	movs	r0, r3
 8002c58:	f7ff fea8 	bl	80029ac <LCD_DATA_MANAGER>

	for (int i = 0; i < 8; ++i){
 8002c5c:	2300      	movs	r3, #0
 8002c5e:	60fb      	str	r3, [r7, #12]
 8002c60:	e00a      	b.n	8002c78 <LCD_ADD_CHAR+0x50>
		LCD_DATA_MANAGER(customChar[i], DATA);
 8002c62:	68fb      	ldr	r3, [r7, #12]
 8002c64:	683a      	ldr	r2, [r7, #0]
 8002c66:	18d3      	adds	r3, r2, r3
 8002c68:	781b      	ldrb	r3, [r3, #0]
 8002c6a:	2101      	movs	r1, #1
 8002c6c:	0018      	movs	r0, r3
 8002c6e:	f7ff fe9d 	bl	80029ac <LCD_DATA_MANAGER>
	for (int i = 0; i < 8; ++i){
 8002c72:	68fb      	ldr	r3, [r7, #12]
 8002c74:	3301      	adds	r3, #1
 8002c76:	60fb      	str	r3, [r7, #12]
 8002c78:	68fb      	ldr	r3, [r7, #12]
 8002c7a:	2b07      	cmp	r3, #7
 8002c7c:	ddf1      	ble.n	8002c62 <LCD_ADD_CHAR+0x3a>
	}
}
 8002c7e:	46c0      	nop			@ (mov r8, r8)
 8002c80:	46c0      	nop			@ (mov r8, r8)
 8002c82:	46bd      	mov	sp, r7
 8002c84:	b004      	add	sp, #16
 8002c86:	bd80      	pop	{r7, pc}

08002c88 <HDC1080_INIT>:

void HDC1080_INIT(I2C_HandleTypeDef * HI2C_X, TR temp_resolution, HR humid_resolution){
 8002c88:	b590      	push	{r4, r7, lr}
 8002c8a:	b089      	sub	sp, #36	@ 0x24
 8002c8c:	af04      	add	r7, sp, #16
 8002c8e:	6078      	str	r0, [r7, #4]
 8002c90:	0008      	movs	r0, r1
 8002c92:	0011      	movs	r1, r2
 8002c94:	1cfb      	adds	r3, r7, #3
 8002c96:	1c02      	adds	r2, r0, #0
 8002c98:	701a      	strb	r2, [r3, #0]
 8002c9a:	1cbb      	adds	r3, r7, #2
 8002c9c:	1c0a      	adds	r2, r1, #0
 8002c9e:	701a      	strb	r2, [r3, #0]
	uint16_t config_reg_value = 0x1000;
 8002ca0:	210e      	movs	r1, #14
 8002ca2:	187b      	adds	r3, r7, r1
 8002ca4:	2280      	movs	r2, #128	@ 0x80
 8002ca6:	0152      	lsls	r2, r2, #5
 8002ca8:	801a      	strh	r2, [r3, #0]
	uint8_t data_sed[2];

	if (temp_resolution == temp_res_11_bit) config_reg_value |= (1 << 10);
 8002caa:	1cfb      	adds	r3, r7, #3
 8002cac:	781b      	ldrb	r3, [r3, #0]
 8002cae:	2b01      	cmp	r3, #1
 8002cb0:	d106      	bne.n	8002cc0 <HDC1080_INIT+0x38>
 8002cb2:	187b      	adds	r3, r7, r1
 8002cb4:	187a      	adds	r2, r7, r1
 8002cb6:	8812      	ldrh	r2, [r2, #0]
 8002cb8:	2180      	movs	r1, #128	@ 0x80
 8002cba:	00c9      	lsls	r1, r1, #3
 8002cbc:	430a      	orrs	r2, r1
 8002cbe:	801a      	strh	r2, [r3, #0]
	if (humid_resolution == humid_res_11_bit) config_reg_value |= (1 << 8);
 8002cc0:	1cbb      	adds	r3, r7, #2
 8002cc2:	781b      	ldrb	r3, [r3, #0]
 8002cc4:	2b01      	cmp	r3, #1
 8002cc6:	d108      	bne.n	8002cda <HDC1080_INIT+0x52>
 8002cc8:	220e      	movs	r2, #14
 8002cca:	18bb      	adds	r3, r7, r2
 8002ccc:	18ba      	adds	r2, r7, r2
 8002cce:	8812      	ldrh	r2, [r2, #0]
 8002cd0:	2180      	movs	r1, #128	@ 0x80
 8002cd2:	0049      	lsls	r1, r1, #1
 8002cd4:	430a      	orrs	r2, r1
 8002cd6:	801a      	strh	r2, [r3, #0]
 8002cd8:	e00b      	b.n	8002cf2 <HDC1080_INIT+0x6a>
	else if (humid_resolution == humid_res_8_bit) config_reg_value |= (1 << 9);
 8002cda:	1cbb      	adds	r3, r7, #2
 8002cdc:	781b      	ldrb	r3, [r3, #0]
 8002cde:	2b02      	cmp	r3, #2
 8002ce0:	d107      	bne.n	8002cf2 <HDC1080_INIT+0x6a>
 8002ce2:	220e      	movs	r2, #14
 8002ce4:	18bb      	adds	r3, r7, r2
 8002ce6:	18ba      	adds	r2, r7, r2
 8002ce8:	8812      	ldrh	r2, [r2, #0]
 8002cea:	2180      	movs	r1, #128	@ 0x80
 8002cec:	0089      	lsls	r1, r1, #2
 8002cee:	430a      	orrs	r2, r1
 8002cf0:	801a      	strh	r2, [r3, #0]

	data_sed[0] = (config_reg_value >> 8);
 8002cf2:	210e      	movs	r1, #14
 8002cf4:	187b      	adds	r3, r7, r1
 8002cf6:	881b      	ldrh	r3, [r3, #0]
 8002cf8:	0a1b      	lsrs	r3, r3, #8
 8002cfa:	b29b      	uxth	r3, r3
 8002cfc:	b2da      	uxtb	r2, r3
 8002cfe:	240c      	movs	r4, #12
 8002d00:	193b      	adds	r3, r7, r4
 8002d02:	701a      	strb	r2, [r3, #0]
	data_sed[1] = (config_reg_value & 0x00FF);
 8002d04:	187b      	adds	r3, r7, r1
 8002d06:	881b      	ldrh	r3, [r3, #0]
 8002d08:	b2da      	uxtb	r2, r3
 8002d0a:	193b      	adds	r3, r7, r4
 8002d0c:	705a      	strb	r2, [r3, #1]

	HAL_I2C_Mem_Write(HI2C_X, HDC_1080_ADRS << 1, config_reg_value, I2C_MEMADD_SIZE_8BIT, data_sed, 2, 1000);
 8002d0e:	187b      	adds	r3, r7, r1
 8002d10:	881a      	ldrh	r2, [r3, #0]
 8002d12:	6878      	ldr	r0, [r7, #4]
 8002d14:	23fa      	movs	r3, #250	@ 0xfa
 8002d16:	009b      	lsls	r3, r3, #2
 8002d18:	9302      	str	r3, [sp, #8]
 8002d1a:	2302      	movs	r3, #2
 8002d1c:	9301      	str	r3, [sp, #4]
 8002d1e:	193b      	adds	r3, r7, r4
 8002d20:	9300      	str	r3, [sp, #0]
 8002d22:	2301      	movs	r3, #1
 8002d24:	2180      	movs	r1, #128	@ 0x80
 8002d26:	f000 ffbd 	bl	8003ca4 <HAL_I2C_Mem_Write>
}
 8002d2a:	46c0      	nop			@ (mov r8, r8)
 8002d2c:	46bd      	mov	sp, r7
 8002d2e:	b005      	add	sp, #20
 8002d30:	bd90      	pop	{r4, r7, pc}
	...

08002d34 <HDC1080_READ>:
void HDC1080_READ(I2C_HandleTypeDef * HI2C_X, float *temperature, uint8_t *humidity){
 8002d34:	b590      	push	{r4, r7, lr}
 8002d36:	b08b      	sub	sp, #44	@ 0x2c
 8002d38:	af02      	add	r7, sp, #8
 8002d3a:	60f8      	str	r0, [r7, #12]
 8002d3c:	60b9      	str	r1, [r7, #8]
 8002d3e:	607a      	str	r2, [r7, #4]
	uint8_t receive_data[4];
	uint16_t temp_x, humd_x;
	uint8_t send_data = HDC_TEMP_REG_ADRS;
 8002d40:	2117      	movs	r1, #23
 8002d42:	187b      	adds	r3, r7, r1
 8002d44:	2200      	movs	r2, #0
 8002d46:	701a      	strb	r2, [r3, #0]

	HAL_I2C_Master_Transmit(HI2C_X, HDC_1080_ADRS << 1, &send_data, 1, 1000);
 8002d48:	187a      	adds	r2, r7, r1
 8002d4a:	68f8      	ldr	r0, [r7, #12]
 8002d4c:	23fa      	movs	r3, #250	@ 0xfa
 8002d4e:	009b      	lsls	r3, r3, #2
 8002d50:	9300      	str	r3, [sp, #0]
 8002d52:	2301      	movs	r3, #1
 8002d54:	2180      	movs	r1, #128	@ 0x80
 8002d56:	f000 fd73 	bl	8003840 <HAL_I2C_Master_Transmit>
	HAL_Delay(15);
 8002d5a:	200f      	movs	r0, #15
 8002d5c:	f000 fa44 	bl	80031e8 <HAL_Delay>
	HAL_I2C_Master_Receive(HI2C_X, HDC_1080_ADRS << 1, receive_data, 4, 1000);
 8002d60:	2418      	movs	r4, #24
 8002d62:	193a      	adds	r2, r7, r4
 8002d64:	68f8      	ldr	r0, [r7, #12]
 8002d66:	23fa      	movs	r3, #250	@ 0xfa
 8002d68:	009b      	lsls	r3, r3, #2
 8002d6a:	9300      	str	r3, [sp, #0]
 8002d6c:	2304      	movs	r3, #4
 8002d6e:	2180      	movs	r1, #128	@ 0x80
 8002d70:	f000 fe90 	bl	8003a94 <HAL_I2C_Master_Receive>

	temp_x = ((receive_data[0] << 8) | receive_data[1]);
 8002d74:	0021      	movs	r1, r4
 8002d76:	187b      	adds	r3, r7, r1
 8002d78:	781b      	ldrb	r3, [r3, #0]
 8002d7a:	b21b      	sxth	r3, r3
 8002d7c:	021b      	lsls	r3, r3, #8
 8002d7e:	b21a      	sxth	r2, r3
 8002d80:	187b      	adds	r3, r7, r1
 8002d82:	785b      	ldrb	r3, [r3, #1]
 8002d84:	b21b      	sxth	r3, r3
 8002d86:	4313      	orrs	r3, r2
 8002d88:	b21a      	sxth	r2, r3
 8002d8a:	201e      	movs	r0, #30
 8002d8c:	183b      	adds	r3, r7, r0
 8002d8e:	801a      	strh	r2, [r3, #0]
	humd_x = ((receive_data[2] << 8) | receive_data[3]);
 8002d90:	187b      	adds	r3, r7, r1
 8002d92:	789b      	ldrb	r3, [r3, #2]
 8002d94:	b21b      	sxth	r3, r3
 8002d96:	021b      	lsls	r3, r3, #8
 8002d98:	b21a      	sxth	r2, r3
 8002d9a:	187b      	adds	r3, r7, r1
 8002d9c:	78db      	ldrb	r3, [r3, #3]
 8002d9e:	b21b      	sxth	r3, r3
 8002da0:	4313      	orrs	r3, r2
 8002da2:	b21a      	sxth	r2, r3
 8002da4:	241c      	movs	r4, #28
 8002da6:	193b      	adds	r3, r7, r4
 8002da8:	801a      	strh	r2, [r3, #0]

	*temperature = ((temp_x / 65536.0) *165.0) -40.0;
 8002daa:	183b      	adds	r3, r7, r0
 8002dac:	881b      	ldrh	r3, [r3, #0]
 8002dae:	0018      	movs	r0, r3
 8002db0:	f7ff fb36 	bl	8002420 <__aeabi_i2d>
 8002db4:	2200      	movs	r2, #0
 8002db6:	4b1d      	ldr	r3, [pc, #116]	@ (8002e2c <HDC1080_READ+0xf8>)
 8002db8:	f7fd ffaa 	bl	8000d10 <__aeabi_ddiv>
 8002dbc:	0002      	movs	r2, r0
 8002dbe:	000b      	movs	r3, r1
 8002dc0:	0010      	movs	r0, r2
 8002dc2:	0019      	movs	r1, r3
 8002dc4:	2200      	movs	r2, #0
 8002dc6:	4b1a      	ldr	r3, [pc, #104]	@ (8002e30 <HDC1080_READ+0xfc>)
 8002dc8:	f7fe fbdc 	bl	8001584 <__aeabi_dmul>
 8002dcc:	0002      	movs	r2, r0
 8002dce:	000b      	movs	r3, r1
 8002dd0:	0010      	movs	r0, r2
 8002dd2:	0019      	movs	r1, r3
 8002dd4:	2200      	movs	r2, #0
 8002dd6:	4b17      	ldr	r3, [pc, #92]	@ (8002e34 <HDC1080_READ+0x100>)
 8002dd8:	f7fe feba 	bl	8001b50 <__aeabi_dsub>
 8002ddc:	0002      	movs	r2, r0
 8002dde:	000b      	movs	r3, r1
 8002de0:	0010      	movs	r0, r2
 8002de2:	0019      	movs	r1, r3
 8002de4:	f7ff fbb6 	bl	8002554 <__aeabi_d2f>
 8002de8:	1c02      	adds	r2, r0, #0
 8002dea:	68bb      	ldr	r3, [r7, #8]
 8002dec:	601a      	str	r2, [r3, #0]
	*humidity = (uint8_t) ((humd_x / 65536.0) * 100.0);
 8002dee:	193b      	adds	r3, r7, r4
 8002df0:	881b      	ldrh	r3, [r3, #0]
 8002df2:	0018      	movs	r0, r3
 8002df4:	f7ff fb14 	bl	8002420 <__aeabi_i2d>
 8002df8:	2200      	movs	r2, #0
 8002dfa:	4b0c      	ldr	r3, [pc, #48]	@ (8002e2c <HDC1080_READ+0xf8>)
 8002dfc:	f7fd ff88 	bl	8000d10 <__aeabi_ddiv>
 8002e00:	0002      	movs	r2, r0
 8002e02:	000b      	movs	r3, r1
 8002e04:	0010      	movs	r0, r2
 8002e06:	0019      	movs	r1, r3
 8002e08:	2200      	movs	r2, #0
 8002e0a:	4b0b      	ldr	r3, [pc, #44]	@ (8002e38 <HDC1080_READ+0x104>)
 8002e0c:	f7fe fbba 	bl	8001584 <__aeabi_dmul>
 8002e10:	0002      	movs	r2, r0
 8002e12:	000b      	movs	r3, r1
 8002e14:	0010      	movs	r0, r2
 8002e16:	0019      	movs	r1, r3
 8002e18:	f7fd fb46 	bl	80004a8 <__aeabi_d2uiz>
 8002e1c:	0003      	movs	r3, r0
 8002e1e:	b2da      	uxtb	r2, r3
 8002e20:	687b      	ldr	r3, [r7, #4]
 8002e22:	701a      	strb	r2, [r3, #0]
}
 8002e24:	46c0      	nop			@ (mov r8, r8)
 8002e26:	46bd      	mov	sp, r7
 8002e28:	b009      	add	sp, #36	@ 0x24
 8002e2a:	bd90      	pop	{r4, r7, pc}
 8002e2c:	40f00000 	.word	0x40f00000
 8002e30:	4064a000 	.word	0x4064a000
 8002e34:	40440000 	.word	0x40440000
 8002e38:	40590000 	.word	0x40590000

08002e3c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002e3c:	b580      	push	{r7, lr}
 8002e3e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 8002e40:	b672      	cpsid	i
}
 8002e42:	46c0      	nop			@ (mov r8, r8)
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 8002e44:	46c0      	nop			@ (mov r8, r8)
 8002e46:	e7fd      	b.n	8002e44 <Error_Handler+0x8>

08002e48 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002e48:	b580      	push	{r7, lr}
 8002e4a:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002e4c:	4b07      	ldr	r3, [pc, #28]	@ (8002e6c <HAL_MspInit+0x24>)
 8002e4e:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8002e50:	4b06      	ldr	r3, [pc, #24]	@ (8002e6c <HAL_MspInit+0x24>)
 8002e52:	2101      	movs	r1, #1
 8002e54:	430a      	orrs	r2, r1
 8002e56:	635a      	str	r2, [r3, #52]	@ 0x34
  __HAL_RCC_PWR_CLK_ENABLE();
 8002e58:	4b04      	ldr	r3, [pc, #16]	@ (8002e6c <HAL_MspInit+0x24>)
 8002e5a:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8002e5c:	4b03      	ldr	r3, [pc, #12]	@ (8002e6c <HAL_MspInit+0x24>)
 8002e5e:	2180      	movs	r1, #128	@ 0x80
 8002e60:	0549      	lsls	r1, r1, #21
 8002e62:	430a      	orrs	r2, r1
 8002e64:	639a      	str	r2, [r3, #56]	@ 0x38
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002e66:	46c0      	nop			@ (mov r8, r8)
 8002e68:	46bd      	mov	sp, r7
 8002e6a:	bd80      	pop	{r7, pc}
 8002e6c:	40021000 	.word	0x40021000

08002e70 <HAL_I2C_MspInit>:
  * This function configures the hardware resources used in this example
  * @param hi2c: I2C handle pointer
  * @retval None
  */
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8002e70:	b590      	push	{r4, r7, lr}
 8002e72:	b089      	sub	sp, #36	@ 0x24
 8002e74:	af00      	add	r7, sp, #0
 8002e76:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002e78:	240c      	movs	r4, #12
 8002e7a:	193b      	adds	r3, r7, r4
 8002e7c:	0018      	movs	r0, r3
 8002e7e:	2314      	movs	r3, #20
 8002e80:	001a      	movs	r2, r3
 8002e82:	2100      	movs	r1, #0
 8002e84:	f003 fa88 	bl	8006398 <memset>
  if(hi2c->Instance==I2C1)
 8002e88:	687b      	ldr	r3, [r7, #4]
 8002e8a:	681b      	ldr	r3, [r3, #0]
 8002e8c:	4a17      	ldr	r2, [pc, #92]	@ (8002eec <HAL_I2C_MspInit+0x7c>)
 8002e8e:	4293      	cmp	r3, r2
 8002e90:	d128      	bne.n	8002ee4 <HAL_I2C_MspInit+0x74>
  {
    /* USER CODE BEGIN I2C1_MspInit 0 */

    /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 8002e92:	4b17      	ldr	r3, [pc, #92]	@ (8002ef0 <HAL_I2C_MspInit+0x80>)
 8002e94:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8002e96:	4b16      	ldr	r3, [pc, #88]	@ (8002ef0 <HAL_I2C_MspInit+0x80>)
 8002e98:	2102      	movs	r1, #2
 8002e9a:	430a      	orrs	r2, r1
 8002e9c:	62da      	str	r2, [r3, #44]	@ 0x2c
 8002e9e:	4b14      	ldr	r3, [pc, #80]	@ (8002ef0 <HAL_I2C_MspInit+0x80>)
 8002ea0:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8002ea2:	2202      	movs	r2, #2
 8002ea4:	4013      	ands	r3, r2
 8002ea6:	60bb      	str	r3, [r7, #8]
 8002ea8:	68bb      	ldr	r3, [r7, #8]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 8002eaa:	0021      	movs	r1, r4
 8002eac:	187b      	adds	r3, r7, r1
 8002eae:	22c0      	movs	r2, #192	@ 0xc0
 8002eb0:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8002eb2:	187b      	adds	r3, r7, r1
 8002eb4:	2212      	movs	r2, #18
 8002eb6:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002eb8:	187b      	adds	r3, r7, r1
 8002eba:	2200      	movs	r2, #0
 8002ebc:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8002ebe:	187b      	adds	r3, r7, r1
 8002ec0:	2203      	movs	r2, #3
 8002ec2:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF1_I2C1;
 8002ec4:	187b      	adds	r3, r7, r1
 8002ec6:	2201      	movs	r2, #1
 8002ec8:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002eca:	187b      	adds	r3, r7, r1
 8002ecc:	4a09      	ldr	r2, [pc, #36]	@ (8002ef4 <HAL_I2C_MspInit+0x84>)
 8002ece:	0019      	movs	r1, r3
 8002ed0:	0010      	movs	r0, r2
 8002ed2:	f000 fa61 	bl	8003398 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8002ed6:	4b06      	ldr	r3, [pc, #24]	@ (8002ef0 <HAL_I2C_MspInit+0x80>)
 8002ed8:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8002eda:	4b05      	ldr	r3, [pc, #20]	@ (8002ef0 <HAL_I2C_MspInit+0x80>)
 8002edc:	2180      	movs	r1, #128	@ 0x80
 8002ede:	0389      	lsls	r1, r1, #14
 8002ee0:	430a      	orrs	r2, r1
 8002ee2:	639a      	str	r2, [r3, #56]	@ 0x38

    /* USER CODE END I2C1_MspInit 1 */

  }

}
 8002ee4:	46c0      	nop			@ (mov r8, r8)
 8002ee6:	46bd      	mov	sp, r7
 8002ee8:	b009      	add	sp, #36	@ 0x24
 8002eea:	bd90      	pop	{r4, r7, pc}
 8002eec:	40005400 	.word	0x40005400
 8002ef0:	40021000 	.word	0x40021000
 8002ef4:	50000400 	.word	0x50000400

08002ef8 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8002ef8:	b580      	push	{r7, lr}
 8002efa:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
   while (1)
 8002efc:	46c0      	nop			@ (mov r8, r8)
 8002efe:	e7fd      	b.n	8002efc <NMI_Handler+0x4>

08002f00 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002f00:	b580      	push	{r7, lr}
 8002f02:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002f04:	46c0      	nop			@ (mov r8, r8)
 8002f06:	e7fd      	b.n	8002f04 <HardFault_Handler+0x4>

08002f08 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002f08:	b580      	push	{r7, lr}
 8002f0a:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8002f0c:	46c0      	nop			@ (mov r8, r8)
 8002f0e:	46bd      	mov	sp, r7
 8002f10:	bd80      	pop	{r7, pc}

08002f12 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002f12:	b580      	push	{r7, lr}
 8002f14:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002f16:	46c0      	nop			@ (mov r8, r8)
 8002f18:	46bd      	mov	sp, r7
 8002f1a:	bd80      	pop	{r7, pc}

08002f1c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8002f1c:	b580      	push	{r7, lr}
 8002f1e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002f20:	f000 f946 	bl	80031b0 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002f24:	46c0      	nop			@ (mov r8, r8)
 8002f26:	46bd      	mov	sp, r7
 8002f28:	bd80      	pop	{r7, pc}

08002f2a <_getpid>:
void initialise_monitor_handles()
{
}

int _getpid(void)
{
 8002f2a:	b580      	push	{r7, lr}
 8002f2c:	af00      	add	r7, sp, #0
  return 1;
 8002f2e:	2301      	movs	r3, #1
}
 8002f30:	0018      	movs	r0, r3
 8002f32:	46bd      	mov	sp, r7
 8002f34:	bd80      	pop	{r7, pc}

08002f36 <_kill>:

int _kill(int pid, int sig)
{
 8002f36:	b580      	push	{r7, lr}
 8002f38:	b082      	sub	sp, #8
 8002f3a:	af00      	add	r7, sp, #0
 8002f3c:	6078      	str	r0, [r7, #4]
 8002f3e:	6039      	str	r1, [r7, #0]
  (void)pid;
  (void)sig;
  errno = EINVAL;
 8002f40:	f003 fa84 	bl	800644c <__errno>
 8002f44:	0003      	movs	r3, r0
 8002f46:	2216      	movs	r2, #22
 8002f48:	601a      	str	r2, [r3, #0]
  return -1;
 8002f4a:	2301      	movs	r3, #1
 8002f4c:	425b      	negs	r3, r3
}
 8002f4e:	0018      	movs	r0, r3
 8002f50:	46bd      	mov	sp, r7
 8002f52:	b002      	add	sp, #8
 8002f54:	bd80      	pop	{r7, pc}

08002f56 <_exit>:

void _exit (int status)
{
 8002f56:	b580      	push	{r7, lr}
 8002f58:	b082      	sub	sp, #8
 8002f5a:	af00      	add	r7, sp, #0
 8002f5c:	6078      	str	r0, [r7, #4]
  _kill(status, -1);
 8002f5e:	2301      	movs	r3, #1
 8002f60:	425a      	negs	r2, r3
 8002f62:	687b      	ldr	r3, [r7, #4]
 8002f64:	0011      	movs	r1, r2
 8002f66:	0018      	movs	r0, r3
 8002f68:	f7ff ffe5 	bl	8002f36 <_kill>
  while (1) {}    /* Make sure we hang here */
 8002f6c:	46c0      	nop			@ (mov r8, r8)
 8002f6e:	e7fd      	b.n	8002f6c <_exit+0x16>

08002f70 <_read>:
}

__attribute__((weak)) int _read(int file, char *ptr, int len)
{
 8002f70:	b580      	push	{r7, lr}
 8002f72:	b086      	sub	sp, #24
 8002f74:	af00      	add	r7, sp, #0
 8002f76:	60f8      	str	r0, [r7, #12]
 8002f78:	60b9      	str	r1, [r7, #8]
 8002f7a:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002f7c:	2300      	movs	r3, #0
 8002f7e:	617b      	str	r3, [r7, #20]
 8002f80:	e00a      	b.n	8002f98 <_read+0x28>
  {
    *ptr++ = __io_getchar();
 8002f82:	e000      	b.n	8002f86 <_read+0x16>
 8002f84:	bf00      	nop
 8002f86:	0001      	movs	r1, r0
 8002f88:	68bb      	ldr	r3, [r7, #8]
 8002f8a:	1c5a      	adds	r2, r3, #1
 8002f8c:	60ba      	str	r2, [r7, #8]
 8002f8e:	b2ca      	uxtb	r2, r1
 8002f90:	701a      	strb	r2, [r3, #0]
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002f92:	697b      	ldr	r3, [r7, #20]
 8002f94:	3301      	adds	r3, #1
 8002f96:	617b      	str	r3, [r7, #20]
 8002f98:	697a      	ldr	r2, [r7, #20]
 8002f9a:	687b      	ldr	r3, [r7, #4]
 8002f9c:	429a      	cmp	r2, r3
 8002f9e:	dbf0      	blt.n	8002f82 <_read+0x12>
  }

  return len;
 8002fa0:	687b      	ldr	r3, [r7, #4]
}
 8002fa2:	0018      	movs	r0, r3
 8002fa4:	46bd      	mov	sp, r7
 8002fa6:	b006      	add	sp, #24
 8002fa8:	bd80      	pop	{r7, pc}

08002faa <_write>:

__attribute__((weak)) int _write(int file, char *ptr, int len)
{
 8002faa:	b580      	push	{r7, lr}
 8002fac:	b086      	sub	sp, #24
 8002fae:	af00      	add	r7, sp, #0
 8002fb0:	60f8      	str	r0, [r7, #12]
 8002fb2:	60b9      	str	r1, [r7, #8]
 8002fb4:	607a      	str	r2, [r7, #4]
  (void)file;
  int DataIdx;

  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002fb6:	2300      	movs	r3, #0
 8002fb8:	617b      	str	r3, [r7, #20]
 8002fba:	e009      	b.n	8002fd0 <_write+0x26>
  {
    __io_putchar(*ptr++);
 8002fbc:	68bb      	ldr	r3, [r7, #8]
 8002fbe:	1c5a      	adds	r2, r3, #1
 8002fc0:	60ba      	str	r2, [r7, #8]
 8002fc2:	781b      	ldrb	r3, [r3, #0]
 8002fc4:	0018      	movs	r0, r3
 8002fc6:	e000      	b.n	8002fca <_write+0x20>
 8002fc8:	bf00      	nop
  for (DataIdx = 0; DataIdx < len; DataIdx++)
 8002fca:	697b      	ldr	r3, [r7, #20]
 8002fcc:	3301      	adds	r3, #1
 8002fce:	617b      	str	r3, [r7, #20]
 8002fd0:	697a      	ldr	r2, [r7, #20]
 8002fd2:	687b      	ldr	r3, [r7, #4]
 8002fd4:	429a      	cmp	r2, r3
 8002fd6:	dbf1      	blt.n	8002fbc <_write+0x12>
  }
  return len;
 8002fd8:	687b      	ldr	r3, [r7, #4]
}
 8002fda:	0018      	movs	r0, r3
 8002fdc:	46bd      	mov	sp, r7
 8002fde:	b006      	add	sp, #24
 8002fe0:	bd80      	pop	{r7, pc}

08002fe2 <_close>:

int _close(int file)
{
 8002fe2:	b580      	push	{r7, lr}
 8002fe4:	b082      	sub	sp, #8
 8002fe6:	af00      	add	r7, sp, #0
 8002fe8:	6078      	str	r0, [r7, #4]
  (void)file;
  return -1;
 8002fea:	2301      	movs	r3, #1
 8002fec:	425b      	negs	r3, r3
}
 8002fee:	0018      	movs	r0, r3
 8002ff0:	46bd      	mov	sp, r7
 8002ff2:	b002      	add	sp, #8
 8002ff4:	bd80      	pop	{r7, pc}

08002ff6 <_fstat>:


int _fstat(int file, struct stat *st)
{
 8002ff6:	b580      	push	{r7, lr}
 8002ff8:	b082      	sub	sp, #8
 8002ffa:	af00      	add	r7, sp, #0
 8002ffc:	6078      	str	r0, [r7, #4]
 8002ffe:	6039      	str	r1, [r7, #0]
  (void)file;
  st->st_mode = S_IFCHR;
 8003000:	683b      	ldr	r3, [r7, #0]
 8003002:	2280      	movs	r2, #128	@ 0x80
 8003004:	0192      	lsls	r2, r2, #6
 8003006:	605a      	str	r2, [r3, #4]
  return 0;
 8003008:	2300      	movs	r3, #0
}
 800300a:	0018      	movs	r0, r3
 800300c:	46bd      	mov	sp, r7
 800300e:	b002      	add	sp, #8
 8003010:	bd80      	pop	{r7, pc}

08003012 <_isatty>:

int _isatty(int file)
{
 8003012:	b580      	push	{r7, lr}
 8003014:	b082      	sub	sp, #8
 8003016:	af00      	add	r7, sp, #0
 8003018:	6078      	str	r0, [r7, #4]
  (void)file;
  return 1;
 800301a:	2301      	movs	r3, #1
}
 800301c:	0018      	movs	r0, r3
 800301e:	46bd      	mov	sp, r7
 8003020:	b002      	add	sp, #8
 8003022:	bd80      	pop	{r7, pc}

08003024 <_lseek>:

int _lseek(int file, int ptr, int dir)
{
 8003024:	b580      	push	{r7, lr}
 8003026:	b084      	sub	sp, #16
 8003028:	af00      	add	r7, sp, #0
 800302a:	60f8      	str	r0, [r7, #12]
 800302c:	60b9      	str	r1, [r7, #8]
 800302e:	607a      	str	r2, [r7, #4]
  (void)file;
  (void)ptr;
  (void)dir;
  return 0;
 8003030:	2300      	movs	r3, #0
}
 8003032:	0018      	movs	r0, r3
 8003034:	46bd      	mov	sp, r7
 8003036:	b004      	add	sp, #16
 8003038:	bd80      	pop	{r7, pc}
	...

0800303c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 800303c:	b580      	push	{r7, lr}
 800303e:	b086      	sub	sp, #24
 8003040:	af00      	add	r7, sp, #0
 8003042:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 8003044:	4a14      	ldr	r2, [pc, #80]	@ (8003098 <_sbrk+0x5c>)
 8003046:	4b15      	ldr	r3, [pc, #84]	@ (800309c <_sbrk+0x60>)
 8003048:	1ad3      	subs	r3, r2, r3
 800304a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 800304c:	697b      	ldr	r3, [r7, #20]
 800304e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 8003050:	4b13      	ldr	r3, [pc, #76]	@ (80030a0 <_sbrk+0x64>)
 8003052:	681b      	ldr	r3, [r3, #0]
 8003054:	2b00      	cmp	r3, #0
 8003056:	d102      	bne.n	800305e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 8003058:	4b11      	ldr	r3, [pc, #68]	@ (80030a0 <_sbrk+0x64>)
 800305a:	4a12      	ldr	r2, [pc, #72]	@ (80030a4 <_sbrk+0x68>)
 800305c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 800305e:	4b10      	ldr	r3, [pc, #64]	@ (80030a0 <_sbrk+0x64>)
 8003060:	681a      	ldr	r2, [r3, #0]
 8003062:	687b      	ldr	r3, [r7, #4]
 8003064:	18d3      	adds	r3, r2, r3
 8003066:	693a      	ldr	r2, [r7, #16]
 8003068:	429a      	cmp	r2, r3
 800306a:	d207      	bcs.n	800307c <_sbrk+0x40>
  {
    errno = ENOMEM;
 800306c:	f003 f9ee 	bl	800644c <__errno>
 8003070:	0003      	movs	r3, r0
 8003072:	220c      	movs	r2, #12
 8003074:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 8003076:	2301      	movs	r3, #1
 8003078:	425b      	negs	r3, r3
 800307a:	e009      	b.n	8003090 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 800307c:	4b08      	ldr	r3, [pc, #32]	@ (80030a0 <_sbrk+0x64>)
 800307e:	681b      	ldr	r3, [r3, #0]
 8003080:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8003082:	4b07      	ldr	r3, [pc, #28]	@ (80030a0 <_sbrk+0x64>)
 8003084:	681a      	ldr	r2, [r3, #0]
 8003086:	687b      	ldr	r3, [r7, #4]
 8003088:	18d2      	adds	r2, r2, r3
 800308a:	4b05      	ldr	r3, [pc, #20]	@ (80030a0 <_sbrk+0x64>)
 800308c:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 800308e:	68fb      	ldr	r3, [r7, #12]
}
 8003090:	0018      	movs	r0, r3
 8003092:	46bd      	mov	sp, r7
 8003094:	b006      	add	sp, #24
 8003096:	bd80      	pop	{r7, pc}
 8003098:	20002000 	.word	0x20002000
 800309c:	00000400 	.word	0x00000400
 80030a0:	2000026c 	.word	0x2000026c
 80030a4:	200003c0 	.word	0x200003c0

080030a8 <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 80030a8:	b580      	push	{r7, lr}
 80030aa:	af00      	add	r7, sp, #0
  /* Configure the Vector Table location add offset address ------------------*/
#if defined (USER_VECT_TAB_ADDRESS)
  SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#endif /* USER_VECT_TAB_ADDRESS */
}
 80030ac:	46c0      	nop			@ (mov r8, r8)
 80030ae:	46bd      	mov	sp, r7
 80030b0:	bd80      	pop	{r7, pc}
	...

080030b4 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
   ldr   r0, =_estack
 80030b4:	480d      	ldr	r0, [pc, #52]	@ (80030ec <LoopForever+0x2>)
   mov   sp, r0          /* set stack pointer */
 80030b6:	4685      	mov	sp, r0
   
/* Call the clock system initialization function.*/
  bl  SystemInit
 80030b8:	f7ff fff6 	bl	80030a8 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80030bc:	480c      	ldr	r0, [pc, #48]	@ (80030f0 <LoopForever+0x6>)
  ldr r1, =_edata
 80030be:	490d      	ldr	r1, [pc, #52]	@ (80030f4 <LoopForever+0xa>)
  ldr r2, =_sidata
 80030c0:	4a0d      	ldr	r2, [pc, #52]	@ (80030f8 <LoopForever+0xe>)
  movs r3, #0
 80030c2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80030c4:	e002      	b.n	80030cc <LoopCopyDataInit>

080030c6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80030c6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80030c8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80030ca:	3304      	adds	r3, #4

080030cc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80030cc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80030ce:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80030d0:	d3f9      	bcc.n	80030c6 <CopyDataInit>
  
/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80030d2:	4a0a      	ldr	r2, [pc, #40]	@ (80030fc <LoopForever+0x12>)
  ldr r4, =_ebss
 80030d4:	4c0a      	ldr	r4, [pc, #40]	@ (8003100 <LoopForever+0x16>)
  movs r3, #0
 80030d6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80030d8:	e001      	b.n	80030de <LoopFillZerobss>

080030da <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80030da:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80030dc:	3204      	adds	r2, #4

080030de <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80030de:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80030e0:	d3fb      	bcc.n	80030da <FillZerobss>

/* Call static constructors */
    bl __libc_init_array
 80030e2:	f003 f9b9 	bl	8006458 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80030e6:	f7ff fad5 	bl	8002694 <main>

080030ea <LoopForever>:

LoopForever:
    b LoopForever
 80030ea:	e7fe      	b.n	80030ea <LoopForever>
   ldr   r0, =_estack
 80030ec:	20002000 	.word	0x20002000
  ldr r0, =_sdata
 80030f0:	20000000 	.word	0x20000000
  ldr r1, =_edata
 80030f4:	200001dc 	.word	0x200001dc
  ldr r2, =_sidata
 80030f8:	0800a1b4 	.word	0x0800a1b4
  ldr r2, =_sbss
 80030fc:	200001dc 	.word	0x200001dc
  ldr r4, =_ebss
 8003100:	200003c0 	.word	0x200003c0

08003104 <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8003104:	e7fe      	b.n	8003104 <ADC1_COMP_IRQHandler>
	...

08003108 <HAL_Init>:
  *        In the default implementation,Systick is used as source of time base.
  *        the tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 8003108:	b580      	push	{r7, lr}
 800310a:	b082      	sub	sp, #8
 800310c:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef  status = HAL_OK;
 800310e:	1dfb      	adds	r3, r7, #7
 8003110:	2200      	movs	r2, #0
 8003112:	701a      	strb	r2, [r3, #0]
#if (BUFFER_CACHE_DISABLE != 0)
  __HAL_FLASH_BUFFER_CACHE_DISABLE();
#endif /* BUFFER_CACHE_DISABLE */

#if (PREREAD_ENABLE != 0)
  __HAL_FLASH_PREREAD_BUFFER_ENABLE();
 8003114:	4b0b      	ldr	r3, [pc, #44]	@ (8003144 <HAL_Init+0x3c>)
 8003116:	681a      	ldr	r2, [r3, #0]
 8003118:	4b0a      	ldr	r3, [pc, #40]	@ (8003144 <HAL_Init+0x3c>)
 800311a:	2140      	movs	r1, #64	@ 0x40
 800311c:	430a      	orrs	r2, r1
 800311e:	601a      	str	r2, [r3, #0]
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is MSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8003120:	2003      	movs	r0, #3
 8003122:	f000 f811 	bl	8003148 <HAL_InitTick>
 8003126:	1e03      	subs	r3, r0, #0
 8003128:	d003      	beq.n	8003132 <HAL_Init+0x2a>
  {
    status = HAL_ERROR;
 800312a:	1dfb      	adds	r3, r7, #7
 800312c:	2201      	movs	r2, #1
 800312e:	701a      	strb	r2, [r3, #0]
 8003130:	e001      	b.n	8003136 <HAL_Init+0x2e>
  }
  else
  {
    /* Init the low level hardware */
    HAL_MspInit();
 8003132:	f7ff fe89 	bl	8002e48 <HAL_MspInit>
  }

  /* Return function status */
  return status;
 8003136:	1dfb      	adds	r3, r7, #7
 8003138:	781b      	ldrb	r3, [r3, #0]
}
 800313a:	0018      	movs	r0, r3
 800313c:	46bd      	mov	sp, r7
 800313e:	b002      	add	sp, #8
 8003140:	bd80      	pop	{r7, pc}
 8003142:	46c0      	nop			@ (mov r8, r8)
 8003144:	40022000 	.word	0x40022000

08003148 <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 8003148:	b590      	push	{r4, r7, lr}
 800314a:	b083      	sub	sp, #12
 800314c:	af00      	add	r7, sp, #0
 800314e:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8003150:	4b14      	ldr	r3, [pc, #80]	@ (80031a4 <HAL_InitTick+0x5c>)
 8003152:	681c      	ldr	r4, [r3, #0]
 8003154:	4b14      	ldr	r3, [pc, #80]	@ (80031a8 <HAL_InitTick+0x60>)
 8003156:	781b      	ldrb	r3, [r3, #0]
 8003158:	0019      	movs	r1, r3
 800315a:	23fa      	movs	r3, #250	@ 0xfa
 800315c:	0098      	lsls	r0, r3, #2
 800315e:	f7fc ffef 	bl	8000140 <__udivsi3>
 8003162:	0003      	movs	r3, r0
 8003164:	0019      	movs	r1, r3
 8003166:	0020      	movs	r0, r4
 8003168:	f7fc ffea 	bl	8000140 <__udivsi3>
 800316c:	0003      	movs	r3, r0
 800316e:	0018      	movs	r0, r3
 8003170:	f000 f905 	bl	800337e <HAL_SYSTICK_Config>
 8003174:	1e03      	subs	r3, r0, #0
 8003176:	d001      	beq.n	800317c <HAL_InitTick+0x34>
  {
    return HAL_ERROR;
 8003178:	2301      	movs	r3, #1
 800317a:	e00f      	b.n	800319c <HAL_InitTick+0x54>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 800317c:	687b      	ldr	r3, [r7, #4]
 800317e:	2b03      	cmp	r3, #3
 8003180:	d80b      	bhi.n	800319a <HAL_InitTick+0x52>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8003182:	6879      	ldr	r1, [r7, #4]
 8003184:	2301      	movs	r3, #1
 8003186:	425b      	negs	r3, r3
 8003188:	2200      	movs	r2, #0
 800318a:	0018      	movs	r0, r3
 800318c:	f000 f8e2 	bl	8003354 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 8003190:	4b06      	ldr	r3, [pc, #24]	@ (80031ac <HAL_InitTick+0x64>)
 8003192:	687a      	ldr	r2, [r7, #4]
 8003194:	601a      	str	r2, [r3, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 8003196:	2300      	movs	r3, #0
 8003198:	e000      	b.n	800319c <HAL_InitTick+0x54>
    return HAL_ERROR;
 800319a:	2301      	movs	r3, #1
}
 800319c:	0018      	movs	r0, r3
 800319e:	46bd      	mov	sp, r7
 80031a0:	b003      	add	sp, #12
 80031a2:	bd90      	pop	{r4, r7, pc}
 80031a4:	20000008 	.word	0x20000008
 80031a8:	20000010 	.word	0x20000010
 80031ac:	2000000c 	.word	0x2000000c

080031b0 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80031b0:	b580      	push	{r7, lr}
 80031b2:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80031b4:	4b05      	ldr	r3, [pc, #20]	@ (80031cc <HAL_IncTick+0x1c>)
 80031b6:	781b      	ldrb	r3, [r3, #0]
 80031b8:	001a      	movs	r2, r3
 80031ba:	4b05      	ldr	r3, [pc, #20]	@ (80031d0 <HAL_IncTick+0x20>)
 80031bc:	681b      	ldr	r3, [r3, #0]
 80031be:	18d2      	adds	r2, r2, r3
 80031c0:	4b03      	ldr	r3, [pc, #12]	@ (80031d0 <HAL_IncTick+0x20>)
 80031c2:	601a      	str	r2, [r3, #0]
}
 80031c4:	46c0      	nop			@ (mov r8, r8)
 80031c6:	46bd      	mov	sp, r7
 80031c8:	bd80      	pop	{r7, pc}
 80031ca:	46c0      	nop			@ (mov r8, r8)
 80031cc:	20000010 	.word	0x20000010
 80031d0:	20000270 	.word	0x20000270

080031d4 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80031d4:	b580      	push	{r7, lr}
 80031d6:	af00      	add	r7, sp, #0
  return uwTick;
 80031d8:	4b02      	ldr	r3, [pc, #8]	@ (80031e4 <HAL_GetTick+0x10>)
 80031da:	681b      	ldr	r3, [r3, #0]
}
 80031dc:	0018      	movs	r0, r3
 80031de:	46bd      	mov	sp, r7
 80031e0:	bd80      	pop	{r7, pc}
 80031e2:	46c0      	nop			@ (mov r8, r8)
 80031e4:	20000270 	.word	0x20000270

080031e8 <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80031e8:	b580      	push	{r7, lr}
 80031ea:	b084      	sub	sp, #16
 80031ec:	af00      	add	r7, sp, #0
 80031ee:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 80031f0:	f7ff fff0 	bl	80031d4 <HAL_GetTick>
 80031f4:	0003      	movs	r3, r0
 80031f6:	60bb      	str	r3, [r7, #8]
  uint32_t wait = Delay;
 80031f8:	687b      	ldr	r3, [r7, #4]
 80031fa:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 80031fc:	68fb      	ldr	r3, [r7, #12]
 80031fe:	3301      	adds	r3, #1
 8003200:	d005      	beq.n	800320e <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8003202:	4b0a      	ldr	r3, [pc, #40]	@ (800322c <HAL_Delay+0x44>)
 8003204:	781b      	ldrb	r3, [r3, #0]
 8003206:	001a      	movs	r2, r3
 8003208:	68fb      	ldr	r3, [r7, #12]
 800320a:	189b      	adds	r3, r3, r2
 800320c:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 800320e:	46c0      	nop			@ (mov r8, r8)
 8003210:	f7ff ffe0 	bl	80031d4 <HAL_GetTick>
 8003214:	0002      	movs	r2, r0
 8003216:	68bb      	ldr	r3, [r7, #8]
 8003218:	1ad3      	subs	r3, r2, r3
 800321a:	68fa      	ldr	r2, [r7, #12]
 800321c:	429a      	cmp	r2, r3
 800321e:	d8f7      	bhi.n	8003210 <HAL_Delay+0x28>
  {
  }
}
 8003220:	46c0      	nop			@ (mov r8, r8)
 8003222:	46c0      	nop			@ (mov r8, r8)
 8003224:	46bd      	mov	sp, r7
 8003226:	b004      	add	sp, #16
 8003228:	bd80      	pop	{r7, pc}
 800322a:	46c0      	nop			@ (mov r8, r8)
 800322c:	20000010 	.word	0x20000010

08003230 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8003230:	b590      	push	{r4, r7, lr}
 8003232:	b083      	sub	sp, #12
 8003234:	af00      	add	r7, sp, #0
 8003236:	0002      	movs	r2, r0
 8003238:	6039      	str	r1, [r7, #0]
 800323a:	1dfb      	adds	r3, r7, #7
 800323c:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) >= 0)
 800323e:	1dfb      	adds	r3, r7, #7
 8003240:	781b      	ldrb	r3, [r3, #0]
 8003242:	2b7f      	cmp	r3, #127	@ 0x7f
 8003244:	d828      	bhi.n	8003298 <__NVIC_SetPriority+0x68>
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003246:	4a2f      	ldr	r2, [pc, #188]	@ (8003304 <__NVIC_SetPriority+0xd4>)
 8003248:	1dfb      	adds	r3, r7, #7
 800324a:	781b      	ldrb	r3, [r3, #0]
 800324c:	b25b      	sxtb	r3, r3
 800324e:	089b      	lsrs	r3, r3, #2
 8003250:	33c0      	adds	r3, #192	@ 0xc0
 8003252:	009b      	lsls	r3, r3, #2
 8003254:	589b      	ldr	r3, [r3, r2]
 8003256:	1dfa      	adds	r2, r7, #7
 8003258:	7812      	ldrb	r2, [r2, #0]
 800325a:	0011      	movs	r1, r2
 800325c:	2203      	movs	r2, #3
 800325e:	400a      	ands	r2, r1
 8003260:	00d2      	lsls	r2, r2, #3
 8003262:	21ff      	movs	r1, #255	@ 0xff
 8003264:	4091      	lsls	r1, r2
 8003266:	000a      	movs	r2, r1
 8003268:	43d2      	mvns	r2, r2
 800326a:	401a      	ands	r2, r3
 800326c:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 800326e:	683b      	ldr	r3, [r7, #0]
 8003270:	019b      	lsls	r3, r3, #6
 8003272:	22ff      	movs	r2, #255	@ 0xff
 8003274:	401a      	ands	r2, r3
 8003276:	1dfb      	adds	r3, r7, #7
 8003278:	781b      	ldrb	r3, [r3, #0]
 800327a:	0018      	movs	r0, r3
 800327c:	2303      	movs	r3, #3
 800327e:	4003      	ands	r3, r0
 8003280:	00db      	lsls	r3, r3, #3
 8003282:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003284:	481f      	ldr	r0, [pc, #124]	@ (8003304 <__NVIC_SetPriority+0xd4>)
 8003286:	1dfb      	adds	r3, r7, #7
 8003288:	781b      	ldrb	r3, [r3, #0]
 800328a:	b25b      	sxtb	r3, r3
 800328c:	089b      	lsrs	r3, r3, #2
 800328e:	430a      	orrs	r2, r1
 8003290:	33c0      	adds	r3, #192	@ 0xc0
 8003292:	009b      	lsls	r3, r3, #2
 8003294:	501a      	str	r2, [r3, r0]
  else
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 8003296:	e031      	b.n	80032fc <__NVIC_SetPriority+0xcc>
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003298:	4a1b      	ldr	r2, [pc, #108]	@ (8003308 <__NVIC_SetPriority+0xd8>)
 800329a:	1dfb      	adds	r3, r7, #7
 800329c:	781b      	ldrb	r3, [r3, #0]
 800329e:	0019      	movs	r1, r3
 80032a0:	230f      	movs	r3, #15
 80032a2:	400b      	ands	r3, r1
 80032a4:	3b08      	subs	r3, #8
 80032a6:	089b      	lsrs	r3, r3, #2
 80032a8:	3306      	adds	r3, #6
 80032aa:	009b      	lsls	r3, r3, #2
 80032ac:	18d3      	adds	r3, r2, r3
 80032ae:	3304      	adds	r3, #4
 80032b0:	681b      	ldr	r3, [r3, #0]
 80032b2:	1dfa      	adds	r2, r7, #7
 80032b4:	7812      	ldrb	r2, [r2, #0]
 80032b6:	0011      	movs	r1, r2
 80032b8:	2203      	movs	r2, #3
 80032ba:	400a      	ands	r2, r1
 80032bc:	00d2      	lsls	r2, r2, #3
 80032be:	21ff      	movs	r1, #255	@ 0xff
 80032c0:	4091      	lsls	r1, r2
 80032c2:	000a      	movs	r2, r1
 80032c4:	43d2      	mvns	r2, r2
 80032c6:	401a      	ands	r2, r3
 80032c8:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80032ca:	683b      	ldr	r3, [r7, #0]
 80032cc:	019b      	lsls	r3, r3, #6
 80032ce:	22ff      	movs	r2, #255	@ 0xff
 80032d0:	401a      	ands	r2, r3
 80032d2:	1dfb      	adds	r3, r7, #7
 80032d4:	781b      	ldrb	r3, [r3, #0]
 80032d6:	0018      	movs	r0, r3
 80032d8:	2303      	movs	r3, #3
 80032da:	4003      	ands	r3, r0
 80032dc:	00db      	lsls	r3, r3, #3
 80032de:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80032e0:	4809      	ldr	r0, [pc, #36]	@ (8003308 <__NVIC_SetPriority+0xd8>)
 80032e2:	1dfb      	adds	r3, r7, #7
 80032e4:	781b      	ldrb	r3, [r3, #0]
 80032e6:	001c      	movs	r4, r3
 80032e8:	230f      	movs	r3, #15
 80032ea:	4023      	ands	r3, r4
 80032ec:	3b08      	subs	r3, #8
 80032ee:	089b      	lsrs	r3, r3, #2
 80032f0:	430a      	orrs	r2, r1
 80032f2:	3306      	adds	r3, #6
 80032f4:	009b      	lsls	r3, r3, #2
 80032f6:	18c3      	adds	r3, r0, r3
 80032f8:	3304      	adds	r3, #4
 80032fa:	601a      	str	r2, [r3, #0]
}
 80032fc:	46c0      	nop			@ (mov r8, r8)
 80032fe:	46bd      	mov	sp, r7
 8003300:	b003      	add	sp, #12
 8003302:	bd90      	pop	{r4, r7, pc}
 8003304:	e000e100 	.word	0xe000e100
 8003308:	e000ed00 	.word	0xe000ed00

0800330c <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 800330c:	b580      	push	{r7, lr}
 800330e:	b082      	sub	sp, #8
 8003310:	af00      	add	r7, sp, #0
 8003312:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8003314:	687b      	ldr	r3, [r7, #4]
 8003316:	1e5a      	subs	r2, r3, #1
 8003318:	2380      	movs	r3, #128	@ 0x80
 800331a:	045b      	lsls	r3, r3, #17
 800331c:	429a      	cmp	r2, r3
 800331e:	d301      	bcc.n	8003324 <SysTick_Config+0x18>
  {
    return (1UL);                                                   /* Reload value impossible */
 8003320:	2301      	movs	r3, #1
 8003322:	e010      	b.n	8003346 <SysTick_Config+0x3a>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8003324:	4b0a      	ldr	r3, [pc, #40]	@ (8003350 <SysTick_Config+0x44>)
 8003326:	687a      	ldr	r2, [r7, #4]
 8003328:	3a01      	subs	r2, #1
 800332a:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800332c:	2301      	movs	r3, #1
 800332e:	425b      	negs	r3, r3
 8003330:	2103      	movs	r1, #3
 8003332:	0018      	movs	r0, r3
 8003334:	f7ff ff7c 	bl	8003230 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003338:	4b05      	ldr	r3, [pc, #20]	@ (8003350 <SysTick_Config+0x44>)
 800333a:	2200      	movs	r2, #0
 800333c:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800333e:	4b04      	ldr	r3, [pc, #16]	@ (8003350 <SysTick_Config+0x44>)
 8003340:	2207      	movs	r2, #7
 8003342:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8003344:	2300      	movs	r3, #0
}
 8003346:	0018      	movs	r0, r3
 8003348:	46bd      	mov	sp, r7
 800334a:	b002      	add	sp, #8
 800334c:	bd80      	pop	{r7, pc}
 800334e:	46c0      	nop			@ (mov r8, r8)
 8003350:	e000e010 	.word	0xe000e010

08003354 <HAL_NVIC_SetPriority>:
  *         with stm32l0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0+ based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003354:	b580      	push	{r7, lr}
 8003356:	b084      	sub	sp, #16
 8003358:	af00      	add	r7, sp, #0
 800335a:	60b9      	str	r1, [r7, #8]
 800335c:	607a      	str	r2, [r7, #4]
 800335e:	210f      	movs	r1, #15
 8003360:	187b      	adds	r3, r7, r1
 8003362:	1c02      	adds	r2, r0, #0
 8003364:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 8003366:	68ba      	ldr	r2, [r7, #8]
 8003368:	187b      	adds	r3, r7, r1
 800336a:	781b      	ldrb	r3, [r3, #0]
 800336c:	b25b      	sxtb	r3, r3
 800336e:	0011      	movs	r1, r2
 8003370:	0018      	movs	r0, r3
 8003372:	f7ff ff5d 	bl	8003230 <__NVIC_SetPriority>

  /* Prevent unused argument(s) compilation warning */
  UNUSED(SubPriority);

}
 8003376:	46c0      	nop			@ (mov r8, r8)
 8003378:	46bd      	mov	sp, r7
 800337a:	b004      	add	sp, #16
 800337c:	bd80      	pop	{r7, pc}

0800337e <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800337e:	b580      	push	{r7, lr}
 8003380:	b082      	sub	sp, #8
 8003382:	af00      	add	r7, sp, #0
 8003384:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 8003386:	687b      	ldr	r3, [r7, #4]
 8003388:	0018      	movs	r0, r3
 800338a:	f7ff ffbf 	bl	800330c <SysTick_Config>
 800338e:	0003      	movs	r3, r0
}
 8003390:	0018      	movs	r0, r3
 8003392:	46bd      	mov	sp, r7
 8003394:	b002      	add	sp, #8
 8003396:	bd80      	pop	{r7, pc}

08003398 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *                    the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 8003398:	b580      	push	{r7, lr}
 800339a:	b086      	sub	sp, #24
 800339c:	af00      	add	r7, sp, #0
 800339e:	6078      	str	r0, [r7, #4]
 80033a0:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00U;
 80033a2:	2300      	movs	r3, #0
 80033a4:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 80033a6:	2300      	movs	r3, #0
 80033a8:	60fb      	str	r3, [r7, #12]
  uint32_t temp = 0x00U;
 80033aa:	2300      	movs	r3, #0
 80033ac:	613b      	str	r3, [r7, #16]
  /* Check the parameters */
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx, (GPIO_Init->Pin)));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0)
 80033ae:	e14f      	b.n	8003650 <HAL_GPIO_Init+0x2b8>
  {
    /* Get the IO position */
    iocurrent = (GPIO_Init->Pin) & (1U << position);
 80033b0:	683b      	ldr	r3, [r7, #0]
 80033b2:	681b      	ldr	r3, [r3, #0]
 80033b4:	2101      	movs	r1, #1
 80033b6:	697a      	ldr	r2, [r7, #20]
 80033b8:	4091      	lsls	r1, r2
 80033ba:	000a      	movs	r2, r1
 80033bc:	4013      	ands	r3, r2
 80033be:	60fb      	str	r3, [r7, #12]

    if (iocurrent)
 80033c0:	68fb      	ldr	r3, [r7, #12]
 80033c2:	2b00      	cmp	r3, #0
 80033c4:	d100      	bne.n	80033c8 <HAL_GPIO_Init+0x30>
 80033c6:	e140      	b.n	800364a <HAL_GPIO_Init+0x2b2>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 80033c8:	683b      	ldr	r3, [r7, #0]
 80033ca:	685b      	ldr	r3, [r3, #4]
 80033cc:	2203      	movs	r2, #3
 80033ce:	4013      	ands	r3, r2
 80033d0:	2b01      	cmp	r3, #1
 80033d2:	d005      	beq.n	80033e0 <HAL_GPIO_Init+0x48>
          ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF))
 80033d4:	683b      	ldr	r3, [r7, #0]
 80033d6:	685b      	ldr	r3, [r3, #4]
 80033d8:	2203      	movs	r2, #3
 80033da:	4013      	ands	r3, r2
      if (((GPIO_Init->Mode & GPIO_MODE) == MODE_OUTPUT) ||
 80033dc:	2b02      	cmp	r3, #2
 80033de:	d130      	bne.n	8003442 <HAL_GPIO_Init+0xaa>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 80033e0:	687b      	ldr	r3, [r7, #4]
 80033e2:	689b      	ldr	r3, [r3, #8]
 80033e4:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDER_OSPEED0 << (position * 2U));
 80033e6:	697b      	ldr	r3, [r7, #20]
 80033e8:	005b      	lsls	r3, r3, #1
 80033ea:	2203      	movs	r2, #3
 80033ec:	409a      	lsls	r2, r3
 80033ee:	0013      	movs	r3, r2
 80033f0:	43da      	mvns	r2, r3
 80033f2:	693b      	ldr	r3, [r7, #16]
 80033f4:	4013      	ands	r3, r2
 80033f6:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2U));
 80033f8:	683b      	ldr	r3, [r7, #0]
 80033fa:	68da      	ldr	r2, [r3, #12]
 80033fc:	697b      	ldr	r3, [r7, #20]
 80033fe:	005b      	lsls	r3, r3, #1
 8003400:	409a      	lsls	r2, r3
 8003402:	0013      	movs	r3, r2
 8003404:	693a      	ldr	r2, [r7, #16]
 8003406:	4313      	orrs	r3, r2
 8003408:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 800340a:	687b      	ldr	r3, [r7, #4]
 800340c:	693a      	ldr	r2, [r7, #16]
 800340e:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8003410:	687b      	ldr	r3, [r7, #4]
 8003412:	685b      	ldr	r3, [r3, #4]
 8003414:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 8003416:	2201      	movs	r2, #1
 8003418:	697b      	ldr	r3, [r7, #20]
 800341a:	409a      	lsls	r2, r3
 800341c:	0013      	movs	r3, r2
 800341e:	43da      	mvns	r2, r3
 8003420:	693b      	ldr	r3, [r7, #16]
 8003422:	4013      	ands	r3, r2
 8003424:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & OUTPUT_TYPE) >> OUTPUT_TYPE_Pos) << position);
 8003426:	683b      	ldr	r3, [r7, #0]
 8003428:	685b      	ldr	r3, [r3, #4]
 800342a:	091b      	lsrs	r3, r3, #4
 800342c:	2201      	movs	r2, #1
 800342e:	401a      	ands	r2, r3
 8003430:	697b      	ldr	r3, [r7, #20]
 8003432:	409a      	lsls	r2, r3
 8003434:	0013      	movs	r3, r2
 8003436:	693a      	ldr	r2, [r7, #16]
 8003438:	4313      	orrs	r3, r2
 800343a:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 800343c:	687b      	ldr	r3, [r7, #4]
 800343e:	693a      	ldr	r2, [r7, #16]
 8003440:	605a      	str	r2, [r3, #4]
      }

      if ((GPIO_Init->Mode & GPIO_MODE) != MODE_ANALOG)
 8003442:	683b      	ldr	r3, [r7, #0]
 8003444:	685b      	ldr	r3, [r3, #4]
 8003446:	2203      	movs	r2, #3
 8003448:	4013      	ands	r3, r2
 800344a:	2b03      	cmp	r3, #3
 800344c:	d017      	beq.n	800347e <HAL_GPIO_Init+0xe6>
      {
        /* Check the Pull parameter */
        assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

        /* Activate the Pull-up or Pull down resistor for the current IO */
        temp = GPIOx->PUPDR;
 800344e:	687b      	ldr	r3, [r7, #4]
 8003450:	68db      	ldr	r3, [r3, #12]
 8003452:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8003454:	697b      	ldr	r3, [r7, #20]
 8003456:	005b      	lsls	r3, r3, #1
 8003458:	2203      	movs	r2, #3
 800345a:	409a      	lsls	r2, r3
 800345c:	0013      	movs	r3, r2
 800345e:	43da      	mvns	r2, r3
 8003460:	693b      	ldr	r3, [r7, #16]
 8003462:	4013      	ands	r3, r2
 8003464:	613b      	str	r3, [r7, #16]
        temp |= ((GPIO_Init->Pull) << (position * 2U));
 8003466:	683b      	ldr	r3, [r7, #0]
 8003468:	689a      	ldr	r2, [r3, #8]
 800346a:	697b      	ldr	r3, [r7, #20]
 800346c:	005b      	lsls	r3, r3, #1
 800346e:	409a      	lsls	r2, r3
 8003470:	0013      	movs	r3, r2
 8003472:	693a      	ldr	r2, [r7, #16]
 8003474:	4313      	orrs	r3, r2
 8003476:	613b      	str	r3, [r7, #16]
        GPIOx->PUPDR = temp;
 8003478:	687b      	ldr	r3, [r7, #4]
 800347a:	693a      	ldr	r2, [r7, #16]
 800347c:	60da      	str	r2, [r3, #12]
      }

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode & GPIO_MODE) == MODE_AF)
 800347e:	683b      	ldr	r3, [r7, #0]
 8003480:	685b      	ldr	r3, [r3, #4]
 8003482:	2203      	movs	r2, #3
 8003484:	4013      	ands	r3, r2
 8003486:	2b02      	cmp	r3, #2
 8003488:	d123      	bne.n	80034d2 <HAL_GPIO_Init+0x13a>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 800348a:	697b      	ldr	r3, [r7, #20]
 800348c:	08da      	lsrs	r2, r3, #3
 800348e:	687b      	ldr	r3, [r7, #4]
 8003490:	3208      	adds	r2, #8
 8003492:	0092      	lsls	r2, r2, #2
 8003494:	58d3      	ldr	r3, [r2, r3]
 8003496:	613b      	str	r3, [r7, #16]
        temp &= ~(0xFUL << ((uint32_t)(position & 0x07UL) * 4U));
 8003498:	697b      	ldr	r3, [r7, #20]
 800349a:	2207      	movs	r2, #7
 800349c:	4013      	ands	r3, r2
 800349e:	009b      	lsls	r3, r3, #2
 80034a0:	220f      	movs	r2, #15
 80034a2:	409a      	lsls	r2, r3
 80034a4:	0013      	movs	r3, r2
 80034a6:	43da      	mvns	r2, r3
 80034a8:	693b      	ldr	r3, [r7, #16]
 80034aa:	4013      	ands	r3, r2
 80034ac:	613b      	str	r3, [r7, #16]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07U) * 4U));
 80034ae:	683b      	ldr	r3, [r7, #0]
 80034b0:	691a      	ldr	r2, [r3, #16]
 80034b2:	697b      	ldr	r3, [r7, #20]
 80034b4:	2107      	movs	r1, #7
 80034b6:	400b      	ands	r3, r1
 80034b8:	009b      	lsls	r3, r3, #2
 80034ba:	409a      	lsls	r2, r3
 80034bc:	0013      	movs	r3, r2
 80034be:	693a      	ldr	r2, [r7, #16]
 80034c0:	4313      	orrs	r3, r2
 80034c2:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3U] = temp;
 80034c4:	697b      	ldr	r3, [r7, #20]
 80034c6:	08da      	lsrs	r2, r3, #3
 80034c8:	687b      	ldr	r3, [r7, #4]
 80034ca:	3208      	adds	r2, #8
 80034cc:	0092      	lsls	r2, r2, #2
 80034ce:	6939      	ldr	r1, [r7, #16]
 80034d0:	50d1      	str	r1, [r2, r3]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80034d2:	687b      	ldr	r3, [r7, #4]
 80034d4:	681b      	ldr	r3, [r3, #0]
 80034d6:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 80034d8:	697b      	ldr	r3, [r7, #20]
 80034da:	005b      	lsls	r3, r3, #1
 80034dc:	2203      	movs	r2, #3
 80034de:	409a      	lsls	r2, r3
 80034e0:	0013      	movs	r3, r2
 80034e2:	43da      	mvns	r2, r3
 80034e4:	693b      	ldr	r3, [r7, #16]
 80034e6:	4013      	ands	r3, r2
 80034e8:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 80034ea:	683b      	ldr	r3, [r7, #0]
 80034ec:	685b      	ldr	r3, [r3, #4]
 80034ee:	2203      	movs	r2, #3
 80034f0:	401a      	ands	r2, r3
 80034f2:	697b      	ldr	r3, [r7, #20]
 80034f4:	005b      	lsls	r3, r3, #1
 80034f6:	409a      	lsls	r2, r3
 80034f8:	0013      	movs	r3, r2
 80034fa:	693a      	ldr	r2, [r7, #16]
 80034fc:	4313      	orrs	r3, r2
 80034fe:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 8003500:	687b      	ldr	r3, [r7, #4]
 8003502:	693a      	ldr	r2, [r7, #16]
 8003504:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) != 0x00U)
 8003506:	683b      	ldr	r3, [r7, #0]
 8003508:	685a      	ldr	r2, [r3, #4]
 800350a:	23c0      	movs	r3, #192	@ 0xc0
 800350c:	029b      	lsls	r3, r3, #10
 800350e:	4013      	ands	r3, r2
 8003510:	d100      	bne.n	8003514 <HAL_GPIO_Init+0x17c>
 8003512:	e09a      	b.n	800364a <HAL_GPIO_Init+0x2b2>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003514:	4b54      	ldr	r3, [pc, #336]	@ (8003668 <HAL_GPIO_Init+0x2d0>)
 8003516:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8003518:	4b53      	ldr	r3, [pc, #332]	@ (8003668 <HAL_GPIO_Init+0x2d0>)
 800351a:	2101      	movs	r1, #1
 800351c:	430a      	orrs	r2, r1
 800351e:	635a      	str	r2, [r3, #52]	@ 0x34

        temp = SYSCFG->EXTICR[position >> 2U];
 8003520:	4a52      	ldr	r2, [pc, #328]	@ (800366c <HAL_GPIO_Init+0x2d4>)
 8003522:	697b      	ldr	r3, [r7, #20]
 8003524:	089b      	lsrs	r3, r3, #2
 8003526:	3302      	adds	r3, #2
 8003528:	009b      	lsls	r3, r3, #2
 800352a:	589b      	ldr	r3, [r3, r2]
 800352c:	613b      	str	r3, [r7, #16]
        CLEAR_BIT(temp, (0x0FUL) << (4U * (position & 0x03U)));
 800352e:	697b      	ldr	r3, [r7, #20]
 8003530:	2203      	movs	r2, #3
 8003532:	4013      	ands	r3, r2
 8003534:	009b      	lsls	r3, r3, #2
 8003536:	220f      	movs	r2, #15
 8003538:	409a      	lsls	r2, r3
 800353a:	0013      	movs	r3, r2
 800353c:	43da      	mvns	r2, r3
 800353e:	693b      	ldr	r3, [r7, #16]
 8003540:	4013      	ands	r3, r2
 8003542:	613b      	str	r3, [r7, #16]
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03U)));
 8003544:	687a      	ldr	r2, [r7, #4]
 8003546:	23a0      	movs	r3, #160	@ 0xa0
 8003548:	05db      	lsls	r3, r3, #23
 800354a:	429a      	cmp	r2, r3
 800354c:	d019      	beq.n	8003582 <HAL_GPIO_Init+0x1ea>
 800354e:	687b      	ldr	r3, [r7, #4]
 8003550:	4a47      	ldr	r2, [pc, #284]	@ (8003670 <HAL_GPIO_Init+0x2d8>)
 8003552:	4293      	cmp	r3, r2
 8003554:	d013      	beq.n	800357e <HAL_GPIO_Init+0x1e6>
 8003556:	687b      	ldr	r3, [r7, #4]
 8003558:	4a46      	ldr	r2, [pc, #280]	@ (8003674 <HAL_GPIO_Init+0x2dc>)
 800355a:	4293      	cmp	r3, r2
 800355c:	d00d      	beq.n	800357a <HAL_GPIO_Init+0x1e2>
 800355e:	687b      	ldr	r3, [r7, #4]
 8003560:	4a45      	ldr	r2, [pc, #276]	@ (8003678 <HAL_GPIO_Init+0x2e0>)
 8003562:	4293      	cmp	r3, r2
 8003564:	d007      	beq.n	8003576 <HAL_GPIO_Init+0x1de>
 8003566:	687b      	ldr	r3, [r7, #4]
 8003568:	4a44      	ldr	r2, [pc, #272]	@ (800367c <HAL_GPIO_Init+0x2e4>)
 800356a:	4293      	cmp	r3, r2
 800356c:	d101      	bne.n	8003572 <HAL_GPIO_Init+0x1da>
 800356e:	2305      	movs	r3, #5
 8003570:	e008      	b.n	8003584 <HAL_GPIO_Init+0x1ec>
 8003572:	2306      	movs	r3, #6
 8003574:	e006      	b.n	8003584 <HAL_GPIO_Init+0x1ec>
 8003576:	2303      	movs	r3, #3
 8003578:	e004      	b.n	8003584 <HAL_GPIO_Init+0x1ec>
 800357a:	2302      	movs	r3, #2
 800357c:	e002      	b.n	8003584 <HAL_GPIO_Init+0x1ec>
 800357e:	2301      	movs	r3, #1
 8003580:	e000      	b.n	8003584 <HAL_GPIO_Init+0x1ec>
 8003582:	2300      	movs	r3, #0
 8003584:	697a      	ldr	r2, [r7, #20]
 8003586:	2103      	movs	r1, #3
 8003588:	400a      	ands	r2, r1
 800358a:	0092      	lsls	r2, r2, #2
 800358c:	4093      	lsls	r3, r2
 800358e:	693a      	ldr	r2, [r7, #16]
 8003590:	4313      	orrs	r3, r2
 8003592:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2U] = temp;
 8003594:	4935      	ldr	r1, [pc, #212]	@ (800366c <HAL_GPIO_Init+0x2d4>)
 8003596:	697b      	ldr	r3, [r7, #20]
 8003598:	089b      	lsrs	r3, r3, #2
 800359a:	3302      	adds	r3, #2
 800359c:	009b      	lsls	r3, r3, #2
 800359e:	693a      	ldr	r2, [r7, #16]
 80035a0:	505a      	str	r2, [r3, r1]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 80035a2:	4b37      	ldr	r3, [pc, #220]	@ (8003680 <HAL_GPIO_Init+0x2e8>)
 80035a4:	689b      	ldr	r3, [r3, #8]
 80035a6:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 80035a8:	68fb      	ldr	r3, [r7, #12]
 80035aa:	43da      	mvns	r2, r3
 80035ac:	693b      	ldr	r3, [r7, #16]
 80035ae:	4013      	ands	r3, r2
 80035b0:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_RISING) != 0x00U)
 80035b2:	683b      	ldr	r3, [r7, #0]
 80035b4:	685a      	ldr	r2, [r3, #4]
 80035b6:	2380      	movs	r3, #128	@ 0x80
 80035b8:	035b      	lsls	r3, r3, #13
 80035ba:	4013      	ands	r3, r2
 80035bc:	d003      	beq.n	80035c6 <HAL_GPIO_Init+0x22e>
        {
          temp |= iocurrent;
 80035be:	693a      	ldr	r2, [r7, #16]
 80035c0:	68fb      	ldr	r3, [r7, #12]
 80035c2:	4313      	orrs	r3, r2
 80035c4:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR = temp;
 80035c6:	4b2e      	ldr	r3, [pc, #184]	@ (8003680 <HAL_GPIO_Init+0x2e8>)
 80035c8:	693a      	ldr	r2, [r7, #16]
 80035ca:	609a      	str	r2, [r3, #8]

        temp = EXTI->FTSR;
 80035cc:	4b2c      	ldr	r3, [pc, #176]	@ (8003680 <HAL_GPIO_Init+0x2e8>)
 80035ce:	68db      	ldr	r3, [r3, #12]
 80035d0:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 80035d2:	68fb      	ldr	r3, [r7, #12]
 80035d4:	43da      	mvns	r2, r3
 80035d6:	693b      	ldr	r3, [r7, #16]
 80035d8:	4013      	ands	r3, r2
 80035da:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & TRIGGER_FALLING) != 0x00U)
 80035dc:	683b      	ldr	r3, [r7, #0]
 80035de:	685a      	ldr	r2, [r3, #4]
 80035e0:	2380      	movs	r3, #128	@ 0x80
 80035e2:	039b      	lsls	r3, r3, #14
 80035e4:	4013      	ands	r3, r2
 80035e6:	d003      	beq.n	80035f0 <HAL_GPIO_Init+0x258>
        {
          temp |= iocurrent;
 80035e8:	693a      	ldr	r2, [r7, #16]
 80035ea:	68fb      	ldr	r3, [r7, #12]
 80035ec:	4313      	orrs	r3, r2
 80035ee:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR = temp;
 80035f0:	4b23      	ldr	r3, [pc, #140]	@ (8003680 <HAL_GPIO_Init+0x2e8>)
 80035f2:	693a      	ldr	r2, [r7, #16]
 80035f4:	60da      	str	r2, [r3, #12]

        temp = EXTI->EMR;
 80035f6:	4b22      	ldr	r3, [pc, #136]	@ (8003680 <HAL_GPIO_Init+0x2e8>)
 80035f8:	685b      	ldr	r3, [r3, #4]
 80035fa:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 80035fc:	68fb      	ldr	r3, [r7, #12]
 80035fe:	43da      	mvns	r2, r3
 8003600:	693b      	ldr	r3, [r7, #16]
 8003602:	4013      	ands	r3, r2
 8003604:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_EVT) != 0x00U)
 8003606:	683b      	ldr	r3, [r7, #0]
 8003608:	685a      	ldr	r2, [r3, #4]
 800360a:	2380      	movs	r3, #128	@ 0x80
 800360c:	029b      	lsls	r3, r3, #10
 800360e:	4013      	ands	r3, r2
 8003610:	d003      	beq.n	800361a <HAL_GPIO_Init+0x282>
        {
          temp |= iocurrent;
 8003612:	693a      	ldr	r2, [r7, #16]
 8003614:	68fb      	ldr	r3, [r7, #12]
 8003616:	4313      	orrs	r3, r2
 8003618:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR = temp;
 800361a:	4b19      	ldr	r3, [pc, #100]	@ (8003680 <HAL_GPIO_Init+0x2e8>)
 800361c:	693a      	ldr	r2, [r7, #16]
 800361e:	605a      	str	r2, [r3, #4]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 8003620:	4b17      	ldr	r3, [pc, #92]	@ (8003680 <HAL_GPIO_Init+0x2e8>)
 8003622:	681b      	ldr	r3, [r3, #0]
 8003624:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8003626:	68fb      	ldr	r3, [r7, #12]
 8003628:	43da      	mvns	r2, r3
 800362a:	693b      	ldr	r3, [r7, #16]
 800362c:	4013      	ands	r3, r2
 800362e:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & EXTI_IT) != 0x00U)
 8003630:	683b      	ldr	r3, [r7, #0]
 8003632:	685a      	ldr	r2, [r3, #4]
 8003634:	2380      	movs	r3, #128	@ 0x80
 8003636:	025b      	lsls	r3, r3, #9
 8003638:	4013      	ands	r3, r2
 800363a:	d003      	beq.n	8003644 <HAL_GPIO_Init+0x2ac>
        {
          temp |= iocurrent;
 800363c:	693a      	ldr	r2, [r7, #16]
 800363e:	68fb      	ldr	r3, [r7, #12]
 8003640:	4313      	orrs	r3, r2
 8003642:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR = temp;
 8003644:	4b0e      	ldr	r3, [pc, #56]	@ (8003680 <HAL_GPIO_Init+0x2e8>)
 8003646:	693a      	ldr	r2, [r7, #16]
 8003648:	601a      	str	r2, [r3, #0]
      }
    }
    position++;
 800364a:	697b      	ldr	r3, [r7, #20]
 800364c:	3301      	adds	r3, #1
 800364e:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0)
 8003650:	683b      	ldr	r3, [r7, #0]
 8003652:	681a      	ldr	r2, [r3, #0]
 8003654:	697b      	ldr	r3, [r7, #20]
 8003656:	40da      	lsrs	r2, r3
 8003658:	1e13      	subs	r3, r2, #0
 800365a:	d000      	beq.n	800365e <HAL_GPIO_Init+0x2c6>
 800365c:	e6a8      	b.n	80033b0 <HAL_GPIO_Init+0x18>
  }
}
 800365e:	46c0      	nop			@ (mov r8, r8)
 8003660:	46c0      	nop			@ (mov r8, r8)
 8003662:	46bd      	mov	sp, r7
 8003664:	b006      	add	sp, #24
 8003666:	bd80      	pop	{r7, pc}
 8003668:	40021000 	.word	0x40021000
 800366c:	40010000 	.word	0x40010000
 8003670:	50000400 	.word	0x50000400
 8003674:	50000800 	.word	0x50000800
 8003678:	50000c00 	.word	0x50000c00
 800367c:	50001c00 	.word	0x50001c00
 8003680:	40010400 	.word	0x40010400

08003684 <HAL_GPIO_WritePin>:
  *                        GPIO_PIN_RESET: to clear the port pin
  *                        GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 8003684:	b580      	push	{r7, lr}
 8003686:	b082      	sub	sp, #8
 8003688:	af00      	add	r7, sp, #0
 800368a:	6078      	str	r0, [r7, #4]
 800368c:	0008      	movs	r0, r1
 800368e:	0011      	movs	r1, r2
 8003690:	1cbb      	adds	r3, r7, #2
 8003692:	1c02      	adds	r2, r0, #0
 8003694:	801a      	strh	r2, [r3, #0]
 8003696:	1c7b      	adds	r3, r7, #1
 8003698:	1c0a      	adds	r2, r1, #0
 800369a:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx, GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 800369c:	1c7b      	adds	r3, r7, #1
 800369e:	781b      	ldrb	r3, [r3, #0]
 80036a0:	2b00      	cmp	r3, #0
 80036a2:	d004      	beq.n	80036ae <HAL_GPIO_WritePin+0x2a>
  {
    GPIOx->BSRR = GPIO_Pin;
 80036a4:	1cbb      	adds	r3, r7, #2
 80036a6:	881a      	ldrh	r2, [r3, #0]
 80036a8:	687b      	ldr	r3, [r7, #4]
 80036aa:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = GPIO_Pin ;
  }
}
 80036ac:	e003      	b.n	80036b6 <HAL_GPIO_WritePin+0x32>
    GPIOx->BRR = GPIO_Pin ;
 80036ae:	1cbb      	adds	r3, r7, #2
 80036b0:	881a      	ldrh	r2, [r3, #0]
 80036b2:	687b      	ldr	r3, [r7, #4]
 80036b4:	629a      	str	r2, [r3, #40]	@ 0x28
}
 80036b6:	46c0      	nop			@ (mov r8, r8)
 80036b8:	46bd      	mov	sp, r7
 80036ba:	b002      	add	sp, #8
 80036bc:	bd80      	pop	{r7, pc}

080036be <HAL_GPIO_TogglePin>:
  *                All port bits are not necessarily available on all GPIOs.
  * @param  GPIO_Pin Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 80036be:	b580      	push	{r7, lr}
 80036c0:	b084      	sub	sp, #16
 80036c2:	af00      	add	r7, sp, #0
 80036c4:	6078      	str	r0, [r7, #4]
 80036c6:	000a      	movs	r2, r1
 80036c8:	1cbb      	adds	r3, r7, #2
 80036ca:	801a      	strh	r2, [r3, #0]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx, GPIO_Pin));

  /* get current Output Data Register value */
  odr = GPIOx->ODR;
 80036cc:	687b      	ldr	r3, [r7, #4]
 80036ce:	695b      	ldr	r3, [r3, #20]
 80036d0:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 80036d2:	1cbb      	adds	r3, r7, #2
 80036d4:	881b      	ldrh	r3, [r3, #0]
 80036d6:	68fa      	ldr	r2, [r7, #12]
 80036d8:	4013      	ands	r3, r2
 80036da:	041a      	lsls	r2, r3, #16
 80036dc:	68fb      	ldr	r3, [r7, #12]
 80036de:	43db      	mvns	r3, r3
 80036e0:	1cb9      	adds	r1, r7, #2
 80036e2:	8809      	ldrh	r1, [r1, #0]
 80036e4:	400b      	ands	r3, r1
 80036e6:	431a      	orrs	r2, r3
 80036e8:	687b      	ldr	r3, [r7, #4]
 80036ea:	619a      	str	r2, [r3, #24]
}
 80036ec:	46c0      	nop			@ (mov r8, r8)
 80036ee:	46bd      	mov	sp, r7
 80036f0:	b004      	add	sp, #16
 80036f2:	bd80      	pop	{r7, pc}

080036f4 <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 80036f4:	b580      	push	{r7, lr}
 80036f6:	b082      	sub	sp, #8
 80036f8:	af00      	add	r7, sp, #0
 80036fa:	6078      	str	r0, [r7, #4]
  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 80036fc:	687b      	ldr	r3, [r7, #4]
 80036fe:	2b00      	cmp	r3, #0
 8003700:	d101      	bne.n	8003706 <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 8003702:	2301      	movs	r3, #1
 8003704:	e08f      	b.n	8003826 <HAL_I2C_Init+0x132>
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_OWN_ADDRESS2_MASK(hi2c->Init.OwnAddress2Masks));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 8003706:	687b      	ldr	r3, [r7, #4]
 8003708:	2241      	movs	r2, #65	@ 0x41
 800370a:	5c9b      	ldrb	r3, [r3, r2]
 800370c:	b2db      	uxtb	r3, r3
 800370e:	2b00      	cmp	r3, #0
 8003710:	d107      	bne.n	8003722 <HAL_I2C_Init+0x2e>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 8003712:	687b      	ldr	r3, [r7, #4]
 8003714:	2240      	movs	r2, #64	@ 0x40
 8003716:	2100      	movs	r1, #0
 8003718:	5499      	strb	r1, [r3, r2]

    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, CORTEX...etc */
    HAL_I2C_MspInit(hi2c);
 800371a:	687b      	ldr	r3, [r7, #4]
 800371c:	0018      	movs	r0, r3
 800371e:	f7ff fba7 	bl	8002e70 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 8003722:	687b      	ldr	r3, [r7, #4]
 8003724:	2241      	movs	r2, #65	@ 0x41
 8003726:	2124      	movs	r1, #36	@ 0x24
 8003728:	5499      	strb	r1, [r3, r2]

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 800372a:	687b      	ldr	r3, [r7, #4]
 800372c:	681b      	ldr	r3, [r3, #0]
 800372e:	681a      	ldr	r2, [r3, #0]
 8003730:	687b      	ldr	r3, [r7, #4]
 8003732:	681b      	ldr	r3, [r3, #0]
 8003734:	2101      	movs	r1, #1
 8003736:	438a      	bics	r2, r1
 8003738:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx TIMINGR Configuration ------------------*/
  /* Configure I2Cx: Frequency range */
  hi2c->Instance->TIMINGR = hi2c->Init.Timing & TIMING_CLEAR_MASK;
 800373a:	687b      	ldr	r3, [r7, #4]
 800373c:	685a      	ldr	r2, [r3, #4]
 800373e:	687b      	ldr	r3, [r7, #4]
 8003740:	681b      	ldr	r3, [r3, #0]
 8003742:	493b      	ldr	r1, [pc, #236]	@ (8003830 <HAL_I2C_Init+0x13c>)
 8003744:	400a      	ands	r2, r1
 8003746:	611a      	str	r2, [r3, #16]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Disable Own Address1 before set the Own Address1 configuration */
  hi2c->Instance->OAR1 &= ~I2C_OAR1_OA1EN;
 8003748:	687b      	ldr	r3, [r7, #4]
 800374a:	681b      	ldr	r3, [r3, #0]
 800374c:	689a      	ldr	r2, [r3, #8]
 800374e:	687b      	ldr	r3, [r7, #4]
 8003750:	681b      	ldr	r3, [r3, #0]
 8003752:	4938      	ldr	r1, [pc, #224]	@ (8003834 <HAL_I2C_Init+0x140>)
 8003754:	400a      	ands	r2, r1
 8003756:	609a      	str	r2, [r3, #8]

  /* Configure I2Cx: Own Address1 and ack own address1 mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 8003758:	687b      	ldr	r3, [r7, #4]
 800375a:	68db      	ldr	r3, [r3, #12]
 800375c:	2b01      	cmp	r3, #1
 800375e:	d108      	bne.n	8003772 <HAL_I2C_Init+0x7e>
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | hi2c->Init.OwnAddress1);
 8003760:	687b      	ldr	r3, [r7, #4]
 8003762:	689a      	ldr	r2, [r3, #8]
 8003764:	687b      	ldr	r3, [r7, #4]
 8003766:	681b      	ldr	r3, [r3, #0]
 8003768:	2180      	movs	r1, #128	@ 0x80
 800376a:	0209      	lsls	r1, r1, #8
 800376c:	430a      	orrs	r2, r1
 800376e:	609a      	str	r2, [r3, #8]
 8003770:	e007      	b.n	8003782 <HAL_I2C_Init+0x8e>
  }
  else /* I2C_ADDRESSINGMODE_10BIT */
  {
    hi2c->Instance->OAR1 = (I2C_OAR1_OA1EN | I2C_OAR1_OA1MODE | hi2c->Init.OwnAddress1);
 8003772:	687b      	ldr	r3, [r7, #4]
 8003774:	689a      	ldr	r2, [r3, #8]
 8003776:	687b      	ldr	r3, [r7, #4]
 8003778:	681b      	ldr	r3, [r3, #0]
 800377a:	2184      	movs	r1, #132	@ 0x84
 800377c:	0209      	lsls	r1, r1, #8
 800377e:	430a      	orrs	r2, r1
 8003780:	609a      	str	r2, [r3, #8]
  }

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Addressing Master mode */
  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_10BIT)
 8003782:	687b      	ldr	r3, [r7, #4]
 8003784:	68db      	ldr	r3, [r3, #12]
 8003786:	2b02      	cmp	r3, #2
 8003788:	d109      	bne.n	800379e <HAL_I2C_Init+0xaa>
  {
    SET_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 800378a:	687b      	ldr	r3, [r7, #4]
 800378c:	681b      	ldr	r3, [r3, #0]
 800378e:	685a      	ldr	r2, [r3, #4]
 8003790:	687b      	ldr	r3, [r7, #4]
 8003792:	681b      	ldr	r3, [r3, #0]
 8003794:	2180      	movs	r1, #128	@ 0x80
 8003796:	0109      	lsls	r1, r1, #4
 8003798:	430a      	orrs	r2, r1
 800379a:	605a      	str	r2, [r3, #4]
 800379c:	e007      	b.n	80037ae <HAL_I2C_Init+0xba>
  }
  else
  {
    /* Clear the I2C ADD10 bit */
    CLEAR_BIT(hi2c->Instance->CR2, I2C_CR2_ADD10);
 800379e:	687b      	ldr	r3, [r7, #4]
 80037a0:	681b      	ldr	r3, [r3, #0]
 80037a2:	685a      	ldr	r2, [r3, #4]
 80037a4:	687b      	ldr	r3, [r7, #4]
 80037a6:	681b      	ldr	r3, [r3, #0]
 80037a8:	4923      	ldr	r1, [pc, #140]	@ (8003838 <HAL_I2C_Init+0x144>)
 80037aa:	400a      	ands	r2, r1
 80037ac:	605a      	str	r2, [r3, #4]
  }
  /* Enable the AUTOEND by default, and enable NACK (should be disable only during Slave process */
  hi2c->Instance->CR2 |= (I2C_CR2_AUTOEND | I2C_CR2_NACK);
 80037ae:	687b      	ldr	r3, [r7, #4]
 80037b0:	681b      	ldr	r3, [r3, #0]
 80037b2:	685a      	ldr	r2, [r3, #4]
 80037b4:	687b      	ldr	r3, [r7, #4]
 80037b6:	681b      	ldr	r3, [r3, #0]
 80037b8:	4920      	ldr	r1, [pc, #128]	@ (800383c <HAL_I2C_Init+0x148>)
 80037ba:	430a      	orrs	r2, r1
 80037bc:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Disable Own Address2 before set the Own Address2 configuration */
  hi2c->Instance->OAR2 &= ~I2C_DUALADDRESS_ENABLE;
 80037be:	687b      	ldr	r3, [r7, #4]
 80037c0:	681b      	ldr	r3, [r3, #0]
 80037c2:	68da      	ldr	r2, [r3, #12]
 80037c4:	687b      	ldr	r3, [r7, #4]
 80037c6:	681b      	ldr	r3, [r3, #0]
 80037c8:	491a      	ldr	r1, [pc, #104]	@ (8003834 <HAL_I2C_Init+0x140>)
 80037ca:	400a      	ands	r2, r1
 80037cc:	60da      	str	r2, [r3, #12]

  /* Configure I2Cx: Dual mode and Own Address2 */
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 80037ce:	687b      	ldr	r3, [r7, #4]
 80037d0:	691a      	ldr	r2, [r3, #16]
 80037d2:	687b      	ldr	r3, [r7, #4]
 80037d4:	695b      	ldr	r3, [r3, #20]
 80037d6:	431a      	orrs	r2, r3
 80037d8:	0011      	movs	r1, r2
                          (hi2c->Init.OwnAddress2Masks << 8));
 80037da:	687b      	ldr	r3, [r7, #4]
 80037dc:	699b      	ldr	r3, [r3, #24]
 80037de:	021a      	lsls	r2, r3, #8
  hi2c->Instance->OAR2 = (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2 | \
 80037e0:	687b      	ldr	r3, [r7, #4]
 80037e2:	681b      	ldr	r3, [r3, #0]
 80037e4:	430a      	orrs	r2, r1
 80037e6:	60da      	str	r2, [r3, #12]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  hi2c->Instance->CR1 = (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode);
 80037e8:	687b      	ldr	r3, [r7, #4]
 80037ea:	69d9      	ldr	r1, [r3, #28]
 80037ec:	687b      	ldr	r3, [r7, #4]
 80037ee:	6a1a      	ldr	r2, [r3, #32]
 80037f0:	687b      	ldr	r3, [r7, #4]
 80037f2:	681b      	ldr	r3, [r3, #0]
 80037f4:	430a      	orrs	r2, r1
 80037f6:	601a      	str	r2, [r3, #0]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 80037f8:	687b      	ldr	r3, [r7, #4]
 80037fa:	681b      	ldr	r3, [r3, #0]
 80037fc:	681a      	ldr	r2, [r3, #0]
 80037fe:	687b      	ldr	r3, [r7, #4]
 8003800:	681b      	ldr	r3, [r3, #0]
 8003802:	2101      	movs	r1, #1
 8003804:	430a      	orrs	r2, r1
 8003806:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003808:	687b      	ldr	r3, [r7, #4]
 800380a:	2200      	movs	r2, #0
 800380c:	645a      	str	r2, [r3, #68]	@ 0x44
  hi2c->State = HAL_I2C_STATE_READY;
 800380e:	687b      	ldr	r3, [r7, #4]
 8003810:	2241      	movs	r2, #65	@ 0x41
 8003812:	2120      	movs	r1, #32
 8003814:	5499      	strb	r1, [r3, r2]
  hi2c->PreviousState = I2C_STATE_NONE;
 8003816:	687b      	ldr	r3, [r7, #4]
 8003818:	2200      	movs	r2, #0
 800381a:	631a      	str	r2, [r3, #48]	@ 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 800381c:	687b      	ldr	r3, [r7, #4]
 800381e:	2242      	movs	r2, #66	@ 0x42
 8003820:	2100      	movs	r1, #0
 8003822:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 8003824:	2300      	movs	r3, #0
}
 8003826:	0018      	movs	r0, r3
 8003828:	46bd      	mov	sp, r7
 800382a:	b002      	add	sp, #8
 800382c:	bd80      	pop	{r7, pc}
 800382e:	46c0      	nop			@ (mov r8, r8)
 8003830:	f0ffffff 	.word	0xf0ffffff
 8003834:	ffff7fff 	.word	0xffff7fff
 8003838:	fffff7ff 	.word	0xfffff7ff
 800383c:	02008000 	.word	0x02008000

08003840 <HAL_I2C_Master_Transmit>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData,
                                          uint16_t Size, uint32_t Timeout)
{
 8003840:	b590      	push	{r4, r7, lr}
 8003842:	b089      	sub	sp, #36	@ 0x24
 8003844:	af02      	add	r7, sp, #8
 8003846:	60f8      	str	r0, [r7, #12]
 8003848:	0008      	movs	r0, r1
 800384a:	607a      	str	r2, [r7, #4]
 800384c:	0019      	movs	r1, r3
 800384e:	230a      	movs	r3, #10
 8003850:	18fb      	adds	r3, r7, r3
 8003852:	1c02      	adds	r2, r0, #0
 8003854:	801a      	strh	r2, [r3, #0]
 8003856:	2308      	movs	r3, #8
 8003858:	18fb      	adds	r3, r7, r3
 800385a:	1c0a      	adds	r2, r1, #0
 800385c:	801a      	strh	r2, [r3, #0]
  uint32_t tickstart;
  uint32_t xfermode;

  if (hi2c->State == HAL_I2C_STATE_READY)
 800385e:	68fb      	ldr	r3, [r7, #12]
 8003860:	2241      	movs	r2, #65	@ 0x41
 8003862:	5c9b      	ldrb	r3, [r3, r2]
 8003864:	b2db      	uxtb	r3, r3
 8003866:	2b20      	cmp	r3, #32
 8003868:	d000      	beq.n	800386c <HAL_I2C_Master_Transmit+0x2c>
 800386a:	e10a      	b.n	8003a82 <HAL_I2C_Master_Transmit+0x242>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 800386c:	68fb      	ldr	r3, [r7, #12]
 800386e:	2240      	movs	r2, #64	@ 0x40
 8003870:	5c9b      	ldrb	r3, [r3, r2]
 8003872:	2b01      	cmp	r3, #1
 8003874:	d101      	bne.n	800387a <HAL_I2C_Master_Transmit+0x3a>
 8003876:	2302      	movs	r3, #2
 8003878:	e104      	b.n	8003a84 <HAL_I2C_Master_Transmit+0x244>
 800387a:	68fb      	ldr	r3, [r7, #12]
 800387c:	2240      	movs	r2, #64	@ 0x40
 800387e:	2101      	movs	r1, #1
 8003880:	5499      	strb	r1, [r3, r2]

    /* Init tickstart for timeout management*/
    tickstart = HAL_GetTick();
 8003882:	f7ff fca7 	bl	80031d4 <HAL_GetTick>
 8003886:	0003      	movs	r3, r0
 8003888:	613b      	str	r3, [r7, #16]

    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 800388a:	2380      	movs	r3, #128	@ 0x80
 800388c:	0219      	lsls	r1, r3, #8
 800388e:	68f8      	ldr	r0, [r7, #12]
 8003890:	693b      	ldr	r3, [r7, #16]
 8003892:	9300      	str	r3, [sp, #0]
 8003894:	2319      	movs	r3, #25
 8003896:	2201      	movs	r2, #1
 8003898:	f000 fbb8 	bl	800400c <I2C_WaitOnFlagUntilTimeout>
 800389c:	1e03      	subs	r3, r0, #0
 800389e:	d001      	beq.n	80038a4 <HAL_I2C_Master_Transmit+0x64>
    {
      return HAL_ERROR;
 80038a0:	2301      	movs	r3, #1
 80038a2:	e0ef      	b.n	8003a84 <HAL_I2C_Master_Transmit+0x244>
    }

    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 80038a4:	68fb      	ldr	r3, [r7, #12]
 80038a6:	2241      	movs	r2, #65	@ 0x41
 80038a8:	2121      	movs	r1, #33	@ 0x21
 80038aa:	5499      	strb	r1, [r3, r2]
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 80038ac:	68fb      	ldr	r3, [r7, #12]
 80038ae:	2242      	movs	r2, #66	@ 0x42
 80038b0:	2110      	movs	r1, #16
 80038b2:	5499      	strb	r1, [r3, r2]
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 80038b4:	68fb      	ldr	r3, [r7, #12]
 80038b6:	2200      	movs	r2, #0
 80038b8:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Prepare transfer parameters */
    hi2c->pBuffPtr  = pData;
 80038ba:	68fb      	ldr	r3, [r7, #12]
 80038bc:	687a      	ldr	r2, [r7, #4]
 80038be:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount = Size;
 80038c0:	68fb      	ldr	r3, [r7, #12]
 80038c2:	2208      	movs	r2, #8
 80038c4:	18ba      	adds	r2, r7, r2
 80038c6:	8812      	ldrh	r2, [r2, #0]
 80038c8:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferISR   = NULL;
 80038ca:	68fb      	ldr	r3, [r7, #12]
 80038cc:	2200      	movs	r2, #0
 80038ce:	635a      	str	r2, [r3, #52]	@ 0x34

    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80038d0:	68fb      	ldr	r3, [r7, #12]
 80038d2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80038d4:	b29b      	uxth	r3, r3
 80038d6:	2bff      	cmp	r3, #255	@ 0xff
 80038d8:	d906      	bls.n	80038e8 <HAL_I2C_Master_Transmit+0xa8>
    {
      hi2c->XferSize = MAX_NBYTE_SIZE;
 80038da:	68fb      	ldr	r3, [r7, #12]
 80038dc:	22ff      	movs	r2, #255	@ 0xff
 80038de:	851a      	strh	r2, [r3, #40]	@ 0x28
      xfermode = I2C_RELOAD_MODE;
 80038e0:	2380      	movs	r3, #128	@ 0x80
 80038e2:	045b      	lsls	r3, r3, #17
 80038e4:	617b      	str	r3, [r7, #20]
 80038e6:	e007      	b.n	80038f8 <HAL_I2C_Master_Transmit+0xb8>
    }
    else
    {
      hi2c->XferSize = hi2c->XferCount;
 80038e8:	68fb      	ldr	r3, [r7, #12]
 80038ea:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80038ec:	b29a      	uxth	r2, r3
 80038ee:	68fb      	ldr	r3, [r7, #12]
 80038f0:	851a      	strh	r2, [r3, #40]	@ 0x28
      xfermode = I2C_AUTOEND_MODE;
 80038f2:	2380      	movs	r3, #128	@ 0x80
 80038f4:	049b      	lsls	r3, r3, #18
 80038f6:	617b      	str	r3, [r7, #20]
    }

    if (hi2c->XferSize > 0U)
 80038f8:	68fb      	ldr	r3, [r7, #12]
 80038fa:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80038fc:	2b00      	cmp	r3, #0
 80038fe:	d027      	beq.n	8003950 <HAL_I2C_Master_Transmit+0x110>
    {
      /* Preload TX register */
      /* Write data to TXDR */
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8003900:	68fb      	ldr	r3, [r7, #12]
 8003902:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003904:	781a      	ldrb	r2, [r3, #0]
 8003906:	68fb      	ldr	r3, [r7, #12]
 8003908:	681b      	ldr	r3, [r3, #0]
 800390a:	629a      	str	r2, [r3, #40]	@ 0x28

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 800390c:	68fb      	ldr	r3, [r7, #12]
 800390e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003910:	1c5a      	adds	r2, r3, #1
 8003912:	68fb      	ldr	r3, [r7, #12]
 8003914:	625a      	str	r2, [r3, #36]	@ 0x24

      hi2c->XferCount--;
 8003916:	68fb      	ldr	r3, [r7, #12]
 8003918:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800391a:	b29b      	uxth	r3, r3
 800391c:	3b01      	subs	r3, #1
 800391e:	b29a      	uxth	r2, r3
 8003920:	68fb      	ldr	r3, [r7, #12]
 8003922:	855a      	strh	r2, [r3, #42]	@ 0x2a
      hi2c->XferSize--;
 8003924:	68fb      	ldr	r3, [r7, #12]
 8003926:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003928:	3b01      	subs	r3, #1
 800392a:	b29a      	uxth	r2, r3
 800392c:	68fb      	ldr	r3, [r7, #12]
 800392e:	851a      	strh	r2, [r3, #40]	@ 0x28

      /* Send Slave Address */
      /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)(hi2c->XferSize + 1U), xfermode,
 8003930:	68fb      	ldr	r3, [r7, #12]
 8003932:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003934:	b2db      	uxtb	r3, r3
 8003936:	3301      	adds	r3, #1
 8003938:	b2da      	uxtb	r2, r3
 800393a:	697c      	ldr	r4, [r7, #20]
 800393c:	230a      	movs	r3, #10
 800393e:	18fb      	adds	r3, r7, r3
 8003940:	8819      	ldrh	r1, [r3, #0]
 8003942:	68f8      	ldr	r0, [r7, #12]
 8003944:	4b51      	ldr	r3, [pc, #324]	@ (8003a8c <HAL_I2C_Master_Transmit+0x24c>)
 8003946:	9300      	str	r3, [sp, #0]
 8003948:	0023      	movs	r3, r4
 800394a:	f000 fdd7 	bl	80044fc <I2C_TransferConfig>
 800394e:	e06f      	b.n	8003a30 <HAL_I2C_Master_Transmit+0x1f0>
    }
    else
    {
      /* Send Slave Address */
      /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, xfermode,
 8003950:	68fb      	ldr	r3, [r7, #12]
 8003952:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003954:	b2da      	uxtb	r2, r3
 8003956:	697c      	ldr	r4, [r7, #20]
 8003958:	230a      	movs	r3, #10
 800395a:	18fb      	adds	r3, r7, r3
 800395c:	8819      	ldrh	r1, [r3, #0]
 800395e:	68f8      	ldr	r0, [r7, #12]
 8003960:	4b4a      	ldr	r3, [pc, #296]	@ (8003a8c <HAL_I2C_Master_Transmit+0x24c>)
 8003962:	9300      	str	r3, [sp, #0]
 8003964:	0023      	movs	r3, r4
 8003966:	f000 fdc9 	bl	80044fc <I2C_TransferConfig>
                         I2C_GENERATE_START_WRITE);
    }

    while (hi2c->XferCount > 0U)
 800396a:	e061      	b.n	8003a30 <HAL_I2C_Master_Transmit+0x1f0>
    {
      /* Wait until TXIS flag is set */
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 800396c:	693a      	ldr	r2, [r7, #16]
 800396e:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003970:	68fb      	ldr	r3, [r7, #12]
 8003972:	0018      	movs	r0, r3
 8003974:	f000 fba2 	bl	80040bc <I2C_WaitOnTXISFlagUntilTimeout>
 8003978:	1e03      	subs	r3, r0, #0
 800397a:	d001      	beq.n	8003980 <HAL_I2C_Master_Transmit+0x140>
      {
        return HAL_ERROR;
 800397c:	2301      	movs	r3, #1
 800397e:	e081      	b.n	8003a84 <HAL_I2C_Master_Transmit+0x244>
      }
      /* Write data to TXDR */
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8003980:	68fb      	ldr	r3, [r7, #12]
 8003982:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003984:	781a      	ldrb	r2, [r3, #0]
 8003986:	68fb      	ldr	r3, [r7, #12]
 8003988:	681b      	ldr	r3, [r3, #0]
 800398a:	629a      	str	r2, [r3, #40]	@ 0x28

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 800398c:	68fb      	ldr	r3, [r7, #12]
 800398e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003990:	1c5a      	adds	r2, r3, #1
 8003992:	68fb      	ldr	r3, [r7, #12]
 8003994:	625a      	str	r2, [r3, #36]	@ 0x24

      hi2c->XferCount--;
 8003996:	68fb      	ldr	r3, [r7, #12]
 8003998:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 800399a:	b29b      	uxth	r3, r3
 800399c:	3b01      	subs	r3, #1
 800399e:	b29a      	uxth	r2, r3
 80039a0:	68fb      	ldr	r3, [r7, #12]
 80039a2:	855a      	strh	r2, [r3, #42]	@ 0x2a
      hi2c->XferSize--;
 80039a4:	68fb      	ldr	r3, [r7, #12]
 80039a6:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80039a8:	3b01      	subs	r3, #1
 80039aa:	b29a      	uxth	r2, r3
 80039ac:	68fb      	ldr	r3, [r7, #12]
 80039ae:	851a      	strh	r2, [r3, #40]	@ 0x28

      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 80039b0:	68fb      	ldr	r3, [r7, #12]
 80039b2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80039b4:	b29b      	uxth	r3, r3
 80039b6:	2b00      	cmp	r3, #0
 80039b8:	d03a      	beq.n	8003a30 <HAL_I2C_Master_Transmit+0x1f0>
 80039ba:	68fb      	ldr	r3, [r7, #12]
 80039bc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80039be:	2b00      	cmp	r3, #0
 80039c0:	d136      	bne.n	8003a30 <HAL_I2C_Master_Transmit+0x1f0>
      {
        /* Wait until TCR flag is set */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 80039c2:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 80039c4:	68f8      	ldr	r0, [r7, #12]
 80039c6:	693b      	ldr	r3, [r7, #16]
 80039c8:	9300      	str	r3, [sp, #0]
 80039ca:	0013      	movs	r3, r2
 80039cc:	2200      	movs	r2, #0
 80039ce:	2180      	movs	r1, #128	@ 0x80
 80039d0:	f000 fb1c 	bl	800400c <I2C_WaitOnFlagUntilTimeout>
 80039d4:	1e03      	subs	r3, r0, #0
 80039d6:	d001      	beq.n	80039dc <HAL_I2C_Master_Transmit+0x19c>
        {
          return HAL_ERROR;
 80039d8:	2301      	movs	r3, #1
 80039da:	e053      	b.n	8003a84 <HAL_I2C_Master_Transmit+0x244>
        }

        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 80039dc:	68fb      	ldr	r3, [r7, #12]
 80039de:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 80039e0:	b29b      	uxth	r3, r3
 80039e2:	2bff      	cmp	r3, #255	@ 0xff
 80039e4:	d911      	bls.n	8003a0a <HAL_I2C_Master_Transmit+0x1ca>
        {
          hi2c->XferSize = MAX_NBYTE_SIZE;
 80039e6:	68fb      	ldr	r3, [r7, #12]
 80039e8:	22ff      	movs	r2, #255	@ 0xff
 80039ea:	851a      	strh	r2, [r3, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 80039ec:	68fb      	ldr	r3, [r7, #12]
 80039ee:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 80039f0:	b2da      	uxtb	r2, r3
 80039f2:	2380      	movs	r3, #128	@ 0x80
 80039f4:	045c      	lsls	r4, r3, #17
 80039f6:	230a      	movs	r3, #10
 80039f8:	18fb      	adds	r3, r7, r3
 80039fa:	8819      	ldrh	r1, [r3, #0]
 80039fc:	68f8      	ldr	r0, [r7, #12]
 80039fe:	2300      	movs	r3, #0
 8003a00:	9300      	str	r3, [sp, #0]
 8003a02:	0023      	movs	r3, r4
 8003a04:	f000 fd7a 	bl	80044fc <I2C_TransferConfig>
 8003a08:	e012      	b.n	8003a30 <HAL_I2C_Master_Transmit+0x1f0>
                             I2C_NO_STARTSTOP);
        }
        else
        {
          hi2c->XferSize = hi2c->XferCount;
 8003a0a:	68fb      	ldr	r3, [r7, #12]
 8003a0c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003a0e:	b29a      	uxth	r2, r3
 8003a10:	68fb      	ldr	r3, [r7, #12]
 8003a12:	851a      	strh	r2, [r3, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8003a14:	68fb      	ldr	r3, [r7, #12]
 8003a16:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003a18:	b2da      	uxtb	r2, r3
 8003a1a:	2380      	movs	r3, #128	@ 0x80
 8003a1c:	049c      	lsls	r4, r3, #18
 8003a1e:	230a      	movs	r3, #10
 8003a20:	18fb      	adds	r3, r7, r3
 8003a22:	8819      	ldrh	r1, [r3, #0]
 8003a24:	68f8      	ldr	r0, [r7, #12]
 8003a26:	2300      	movs	r3, #0
 8003a28:	9300      	str	r3, [sp, #0]
 8003a2a:	0023      	movs	r3, r4
 8003a2c:	f000 fd66 	bl	80044fc <I2C_TransferConfig>
    while (hi2c->XferCount > 0U)
 8003a30:	68fb      	ldr	r3, [r7, #12]
 8003a32:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003a34:	b29b      	uxth	r3, r3
 8003a36:	2b00      	cmp	r3, #0
 8003a38:	d198      	bne.n	800396c <HAL_I2C_Master_Transmit+0x12c>
      }
    }

    /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
    /* Wait until STOPF flag is set */
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003a3a:	693a      	ldr	r2, [r7, #16]
 8003a3c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003a3e:	68fb      	ldr	r3, [r7, #12]
 8003a40:	0018      	movs	r0, r3
 8003a42:	f000 fb81 	bl	8004148 <I2C_WaitOnSTOPFlagUntilTimeout>
 8003a46:	1e03      	subs	r3, r0, #0
 8003a48:	d001      	beq.n	8003a4e <HAL_I2C_Master_Transmit+0x20e>
    {
      return HAL_ERROR;
 8003a4a:	2301      	movs	r3, #1
 8003a4c:	e01a      	b.n	8003a84 <HAL_I2C_Master_Transmit+0x244>
    }

    /* Clear STOP Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8003a4e:	68fb      	ldr	r3, [r7, #12]
 8003a50:	681b      	ldr	r3, [r3, #0]
 8003a52:	2220      	movs	r2, #32
 8003a54:	61da      	str	r2, [r3, #28]

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 8003a56:	68fb      	ldr	r3, [r7, #12]
 8003a58:	681b      	ldr	r3, [r3, #0]
 8003a5a:	685a      	ldr	r2, [r3, #4]
 8003a5c:	68fb      	ldr	r3, [r7, #12]
 8003a5e:	681b      	ldr	r3, [r3, #0]
 8003a60:	490b      	ldr	r1, [pc, #44]	@ (8003a90 <HAL_I2C_Master_Transmit+0x250>)
 8003a62:	400a      	ands	r2, r1
 8003a64:	605a      	str	r2, [r3, #4]

    hi2c->State = HAL_I2C_STATE_READY;
 8003a66:	68fb      	ldr	r3, [r7, #12]
 8003a68:	2241      	movs	r2, #65	@ 0x41
 8003a6a:	2120      	movs	r1, #32
 8003a6c:	5499      	strb	r1, [r3, r2]
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8003a6e:	68fb      	ldr	r3, [r7, #12]
 8003a70:	2242      	movs	r2, #66	@ 0x42
 8003a72:	2100      	movs	r1, #0
 8003a74:	5499      	strb	r1, [r3, r2]

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003a76:	68fb      	ldr	r3, [r7, #12]
 8003a78:	2240      	movs	r2, #64	@ 0x40
 8003a7a:	2100      	movs	r1, #0
 8003a7c:	5499      	strb	r1, [r3, r2]

    return HAL_OK;
 8003a7e:	2300      	movs	r3, #0
 8003a80:	e000      	b.n	8003a84 <HAL_I2C_Master_Transmit+0x244>
  }
  else
  {
    return HAL_BUSY;
 8003a82:	2302      	movs	r3, #2
  }
}
 8003a84:	0018      	movs	r0, r3
 8003a86:	46bd      	mov	sp, r7
 8003a88:	b007      	add	sp, #28
 8003a8a:	bd90      	pop	{r4, r7, pc}
 8003a8c:	80002000 	.word	0x80002000
 8003a90:	fe00e800 	.word	0xfe00e800

08003a94 <HAL_I2C_Master_Receive>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Receive(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData,
                                         uint16_t Size, uint32_t Timeout)
{
 8003a94:	b590      	push	{r4, r7, lr}
 8003a96:	b089      	sub	sp, #36	@ 0x24
 8003a98:	af02      	add	r7, sp, #8
 8003a9a:	60f8      	str	r0, [r7, #12]
 8003a9c:	0008      	movs	r0, r1
 8003a9e:	607a      	str	r2, [r7, #4]
 8003aa0:	0019      	movs	r1, r3
 8003aa2:	230a      	movs	r3, #10
 8003aa4:	18fb      	adds	r3, r7, r3
 8003aa6:	1c02      	adds	r2, r0, #0
 8003aa8:	801a      	strh	r2, [r3, #0]
 8003aaa:	2308      	movs	r3, #8
 8003aac:	18fb      	adds	r3, r7, r3
 8003aae:	1c0a      	adds	r2, r1, #0
 8003ab0:	801a      	strh	r2, [r3, #0]
  uint32_t tickstart;

  if (hi2c->State == HAL_I2C_STATE_READY)
 8003ab2:	68fb      	ldr	r3, [r7, #12]
 8003ab4:	2241      	movs	r2, #65	@ 0x41
 8003ab6:	5c9b      	ldrb	r3, [r3, r2]
 8003ab8:	b2db      	uxtb	r3, r3
 8003aba:	2b20      	cmp	r3, #32
 8003abc:	d000      	beq.n	8003ac0 <HAL_I2C_Master_Receive+0x2c>
 8003abe:	e0e8      	b.n	8003c92 <HAL_I2C_Master_Receive+0x1fe>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8003ac0:	68fb      	ldr	r3, [r7, #12]
 8003ac2:	2240      	movs	r2, #64	@ 0x40
 8003ac4:	5c9b      	ldrb	r3, [r3, r2]
 8003ac6:	2b01      	cmp	r3, #1
 8003ac8:	d101      	bne.n	8003ace <HAL_I2C_Master_Receive+0x3a>
 8003aca:	2302      	movs	r3, #2
 8003acc:	e0e2      	b.n	8003c94 <HAL_I2C_Master_Receive+0x200>
 8003ace:	68fb      	ldr	r3, [r7, #12]
 8003ad0:	2240      	movs	r2, #64	@ 0x40
 8003ad2:	2101      	movs	r1, #1
 8003ad4:	5499      	strb	r1, [r3, r2]

    /* Init tickstart for timeout management*/
    tickstart = HAL_GetTick();
 8003ad6:	f7ff fb7d 	bl	80031d4 <HAL_GetTick>
 8003ada:	0003      	movs	r3, r0
 8003adc:	617b      	str	r3, [r7, #20]

    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8003ade:	2380      	movs	r3, #128	@ 0x80
 8003ae0:	0219      	lsls	r1, r3, #8
 8003ae2:	68f8      	ldr	r0, [r7, #12]
 8003ae4:	697b      	ldr	r3, [r7, #20]
 8003ae6:	9300      	str	r3, [sp, #0]
 8003ae8:	2319      	movs	r3, #25
 8003aea:	2201      	movs	r2, #1
 8003aec:	f000 fa8e 	bl	800400c <I2C_WaitOnFlagUntilTimeout>
 8003af0:	1e03      	subs	r3, r0, #0
 8003af2:	d001      	beq.n	8003af8 <HAL_I2C_Master_Receive+0x64>
    {
      return HAL_ERROR;
 8003af4:	2301      	movs	r3, #1
 8003af6:	e0cd      	b.n	8003c94 <HAL_I2C_Master_Receive+0x200>
    }

    hi2c->State     = HAL_I2C_STATE_BUSY_RX;
 8003af8:	68fb      	ldr	r3, [r7, #12]
 8003afa:	2241      	movs	r2, #65	@ 0x41
 8003afc:	2122      	movs	r1, #34	@ 0x22
 8003afe:	5499      	strb	r1, [r3, r2]
    hi2c->Mode      = HAL_I2C_MODE_MASTER;
 8003b00:	68fb      	ldr	r3, [r7, #12]
 8003b02:	2242      	movs	r2, #66	@ 0x42
 8003b04:	2110      	movs	r1, #16
 8003b06:	5499      	strb	r1, [r3, r2]
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003b08:	68fb      	ldr	r3, [r7, #12]
 8003b0a:	2200      	movs	r2, #0
 8003b0c:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Prepare transfer parameters */
    hi2c->pBuffPtr  = pData;
 8003b0e:	68fb      	ldr	r3, [r7, #12]
 8003b10:	687a      	ldr	r2, [r7, #4]
 8003b12:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount = Size;
 8003b14:	68fb      	ldr	r3, [r7, #12]
 8003b16:	2208      	movs	r2, #8
 8003b18:	18ba      	adds	r2, r7, r2
 8003b1a:	8812      	ldrh	r2, [r2, #0]
 8003b1c:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferISR   = NULL;
 8003b1e:	68fb      	ldr	r3, [r7, #12]
 8003b20:	2200      	movs	r2, #0
 8003b22:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Send Slave Address */
    /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE and generate RESTART */
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8003b24:	68fb      	ldr	r3, [r7, #12]
 8003b26:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003b28:	b29b      	uxth	r3, r3
 8003b2a:	2bff      	cmp	r3, #255	@ 0xff
 8003b2c:	d911      	bls.n	8003b52 <HAL_I2C_Master_Receive+0xbe>
    {
      hi2c->XferSize = 1U;
 8003b2e:	68fb      	ldr	r3, [r7, #12]
 8003b30:	2201      	movs	r2, #1
 8003b32:	851a      	strh	r2, [r3, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8003b34:	68fb      	ldr	r3, [r7, #12]
 8003b36:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003b38:	b2da      	uxtb	r2, r3
 8003b3a:	2380      	movs	r3, #128	@ 0x80
 8003b3c:	045c      	lsls	r4, r3, #17
 8003b3e:	230a      	movs	r3, #10
 8003b40:	18fb      	adds	r3, r7, r3
 8003b42:	8819      	ldrh	r1, [r3, #0]
 8003b44:	68f8      	ldr	r0, [r7, #12]
 8003b46:	4b55      	ldr	r3, [pc, #340]	@ (8003c9c <HAL_I2C_Master_Receive+0x208>)
 8003b48:	9300      	str	r3, [sp, #0]
 8003b4a:	0023      	movs	r3, r4
 8003b4c:	f000 fcd6 	bl	80044fc <I2C_TransferConfig>
 8003b50:	e076      	b.n	8003c40 <HAL_I2C_Master_Receive+0x1ac>
                         I2C_GENERATE_START_READ);
    }
    else
    {
      hi2c->XferSize = hi2c->XferCount;
 8003b52:	68fb      	ldr	r3, [r7, #12]
 8003b54:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003b56:	b29a      	uxth	r2, r3
 8003b58:	68fb      	ldr	r3, [r7, #12]
 8003b5a:	851a      	strh	r2, [r3, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8003b5c:	68fb      	ldr	r3, [r7, #12]
 8003b5e:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003b60:	b2da      	uxtb	r2, r3
 8003b62:	2380      	movs	r3, #128	@ 0x80
 8003b64:	049c      	lsls	r4, r3, #18
 8003b66:	230a      	movs	r3, #10
 8003b68:	18fb      	adds	r3, r7, r3
 8003b6a:	8819      	ldrh	r1, [r3, #0]
 8003b6c:	68f8      	ldr	r0, [r7, #12]
 8003b6e:	4b4b      	ldr	r3, [pc, #300]	@ (8003c9c <HAL_I2C_Master_Receive+0x208>)
 8003b70:	9300      	str	r3, [sp, #0]
 8003b72:	0023      	movs	r3, r4
 8003b74:	f000 fcc2 	bl	80044fc <I2C_TransferConfig>
                         I2C_GENERATE_START_READ);
    }

    while (hi2c->XferCount > 0U)
 8003b78:	e062      	b.n	8003c40 <HAL_I2C_Master_Receive+0x1ac>
    {
      /* Wait until RXNE flag is set */
      if (I2C_WaitOnRXNEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003b7a:	697a      	ldr	r2, [r7, #20]
 8003b7c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003b7e:	68fb      	ldr	r3, [r7, #12]
 8003b80:	0018      	movs	r0, r3
 8003b82:	f000 fb25 	bl	80041d0 <I2C_WaitOnRXNEFlagUntilTimeout>
 8003b86:	1e03      	subs	r3, r0, #0
 8003b88:	d001      	beq.n	8003b8e <HAL_I2C_Master_Receive+0xfa>
      {
        return HAL_ERROR;
 8003b8a:	2301      	movs	r3, #1
 8003b8c:	e082      	b.n	8003c94 <HAL_I2C_Master_Receive+0x200>
      }

      /* Read data from RXDR */
      *hi2c->pBuffPtr = (uint8_t)hi2c->Instance->RXDR;
 8003b8e:	68fb      	ldr	r3, [r7, #12]
 8003b90:	681b      	ldr	r3, [r3, #0]
 8003b92:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8003b94:	68fb      	ldr	r3, [r7, #12]
 8003b96:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003b98:	b2d2      	uxtb	r2, r2
 8003b9a:	701a      	strb	r2, [r3, #0]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8003b9c:	68fb      	ldr	r3, [r7, #12]
 8003b9e:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003ba0:	1c5a      	adds	r2, r3, #1
 8003ba2:	68fb      	ldr	r3, [r7, #12]
 8003ba4:	625a      	str	r2, [r3, #36]	@ 0x24

      hi2c->XferSize--;
 8003ba6:	68fb      	ldr	r3, [r7, #12]
 8003ba8:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003baa:	3b01      	subs	r3, #1
 8003bac:	b29a      	uxth	r2, r3
 8003bae:	68fb      	ldr	r3, [r7, #12]
 8003bb0:	851a      	strh	r2, [r3, #40]	@ 0x28
      hi2c->XferCount--;
 8003bb2:	68fb      	ldr	r3, [r7, #12]
 8003bb4:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003bb6:	b29b      	uxth	r3, r3
 8003bb8:	3b01      	subs	r3, #1
 8003bba:	b29a      	uxth	r2, r3
 8003bbc:	68fb      	ldr	r3, [r7, #12]
 8003bbe:	855a      	strh	r2, [r3, #42]	@ 0x2a

      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8003bc0:	68fb      	ldr	r3, [r7, #12]
 8003bc2:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003bc4:	b29b      	uxth	r3, r3
 8003bc6:	2b00      	cmp	r3, #0
 8003bc8:	d03a      	beq.n	8003c40 <HAL_I2C_Master_Receive+0x1ac>
 8003bca:	68fb      	ldr	r3, [r7, #12]
 8003bcc:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003bce:	2b00      	cmp	r3, #0
 8003bd0:	d136      	bne.n	8003c40 <HAL_I2C_Master_Receive+0x1ac>
      {
        /* Wait until TCR flag is set */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8003bd2:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8003bd4:	68f8      	ldr	r0, [r7, #12]
 8003bd6:	697b      	ldr	r3, [r7, #20]
 8003bd8:	9300      	str	r3, [sp, #0]
 8003bda:	0013      	movs	r3, r2
 8003bdc:	2200      	movs	r2, #0
 8003bde:	2180      	movs	r1, #128	@ 0x80
 8003be0:	f000 fa14 	bl	800400c <I2C_WaitOnFlagUntilTimeout>
 8003be4:	1e03      	subs	r3, r0, #0
 8003be6:	d001      	beq.n	8003bec <HAL_I2C_Master_Receive+0x158>
        {
          return HAL_ERROR;
 8003be8:	2301      	movs	r3, #1
 8003bea:	e053      	b.n	8003c94 <HAL_I2C_Master_Receive+0x200>
        }

        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8003bec:	68fb      	ldr	r3, [r7, #12]
 8003bee:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003bf0:	b29b      	uxth	r3, r3
 8003bf2:	2bff      	cmp	r3, #255	@ 0xff
 8003bf4:	d911      	bls.n	8003c1a <HAL_I2C_Master_Receive+0x186>
        {
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8003bf6:	68fb      	ldr	r3, [r7, #12]
 8003bf8:	22ff      	movs	r2, #255	@ 0xff
 8003bfa:	851a      	strh	r2, [r3, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8003bfc:	68fb      	ldr	r3, [r7, #12]
 8003bfe:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003c00:	b2da      	uxtb	r2, r3
 8003c02:	2380      	movs	r3, #128	@ 0x80
 8003c04:	045c      	lsls	r4, r3, #17
 8003c06:	230a      	movs	r3, #10
 8003c08:	18fb      	adds	r3, r7, r3
 8003c0a:	8819      	ldrh	r1, [r3, #0]
 8003c0c:	68f8      	ldr	r0, [r7, #12]
 8003c0e:	2300      	movs	r3, #0
 8003c10:	9300      	str	r3, [sp, #0]
 8003c12:	0023      	movs	r3, r4
 8003c14:	f000 fc72 	bl	80044fc <I2C_TransferConfig>
 8003c18:	e012      	b.n	8003c40 <HAL_I2C_Master_Receive+0x1ac>
                             I2C_NO_STARTSTOP);
        }
        else
        {
          hi2c->XferSize = hi2c->XferCount;
 8003c1a:	68fb      	ldr	r3, [r7, #12]
 8003c1c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003c1e:	b29a      	uxth	r2, r3
 8003c20:	68fb      	ldr	r3, [r7, #12]
 8003c22:	851a      	strh	r2, [r3, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8003c24:	68fb      	ldr	r3, [r7, #12]
 8003c26:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003c28:	b2da      	uxtb	r2, r3
 8003c2a:	2380      	movs	r3, #128	@ 0x80
 8003c2c:	049c      	lsls	r4, r3, #18
 8003c2e:	230a      	movs	r3, #10
 8003c30:	18fb      	adds	r3, r7, r3
 8003c32:	8819      	ldrh	r1, [r3, #0]
 8003c34:	68f8      	ldr	r0, [r7, #12]
 8003c36:	2300      	movs	r3, #0
 8003c38:	9300      	str	r3, [sp, #0]
 8003c3a:	0023      	movs	r3, r4
 8003c3c:	f000 fc5e 	bl	80044fc <I2C_TransferConfig>
    while (hi2c->XferCount > 0U)
 8003c40:	68fb      	ldr	r3, [r7, #12]
 8003c42:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003c44:	b29b      	uxth	r3, r3
 8003c46:	2b00      	cmp	r3, #0
 8003c48:	d197      	bne.n	8003b7a <HAL_I2C_Master_Receive+0xe6>
      }
    }

    /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
    /* Wait until STOPF flag is set */
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003c4a:	697a      	ldr	r2, [r7, #20]
 8003c4c:	6ab9      	ldr	r1, [r7, #40]	@ 0x28
 8003c4e:	68fb      	ldr	r3, [r7, #12]
 8003c50:	0018      	movs	r0, r3
 8003c52:	f000 fa79 	bl	8004148 <I2C_WaitOnSTOPFlagUntilTimeout>
 8003c56:	1e03      	subs	r3, r0, #0
 8003c58:	d001      	beq.n	8003c5e <HAL_I2C_Master_Receive+0x1ca>
    {
      return HAL_ERROR;
 8003c5a:	2301      	movs	r3, #1
 8003c5c:	e01a      	b.n	8003c94 <HAL_I2C_Master_Receive+0x200>
    }

    /* Clear STOP Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8003c5e:	68fb      	ldr	r3, [r7, #12]
 8003c60:	681b      	ldr	r3, [r3, #0]
 8003c62:	2220      	movs	r2, #32
 8003c64:	61da      	str	r2, [r3, #28]

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 8003c66:	68fb      	ldr	r3, [r7, #12]
 8003c68:	681b      	ldr	r3, [r3, #0]
 8003c6a:	685a      	ldr	r2, [r3, #4]
 8003c6c:	68fb      	ldr	r3, [r7, #12]
 8003c6e:	681b      	ldr	r3, [r3, #0]
 8003c70:	490b      	ldr	r1, [pc, #44]	@ (8003ca0 <HAL_I2C_Master_Receive+0x20c>)
 8003c72:	400a      	ands	r2, r1
 8003c74:	605a      	str	r2, [r3, #4]

    hi2c->State = HAL_I2C_STATE_READY;
 8003c76:	68fb      	ldr	r3, [r7, #12]
 8003c78:	2241      	movs	r2, #65	@ 0x41
 8003c7a:	2120      	movs	r1, #32
 8003c7c:	5499      	strb	r1, [r3, r2]
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8003c7e:	68fb      	ldr	r3, [r7, #12]
 8003c80:	2242      	movs	r2, #66	@ 0x42
 8003c82:	2100      	movs	r1, #0
 8003c84:	5499      	strb	r1, [r3, r2]

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003c86:	68fb      	ldr	r3, [r7, #12]
 8003c88:	2240      	movs	r2, #64	@ 0x40
 8003c8a:	2100      	movs	r1, #0
 8003c8c:	5499      	strb	r1, [r3, r2]

    return HAL_OK;
 8003c8e:	2300      	movs	r3, #0
 8003c90:	e000      	b.n	8003c94 <HAL_I2C_Master_Receive+0x200>
  }
  else
  {
    return HAL_BUSY;
 8003c92:	2302      	movs	r3, #2
  }
}
 8003c94:	0018      	movs	r0, r3
 8003c96:	46bd      	mov	sp, r7
 8003c98:	b007      	add	sp, #28
 8003c9a:	bd90      	pop	{r4, r7, pc}
 8003c9c:	80002400 	.word	0x80002400
 8003ca0:	fe00e800 	.word	0xfe00e800

08003ca4 <HAL_I2C_Mem_Write>:
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Mem_Write(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint16_t MemAddress,
                                    uint16_t MemAddSize, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8003ca4:	b590      	push	{r4, r7, lr}
 8003ca6:	b089      	sub	sp, #36	@ 0x24
 8003ca8:	af02      	add	r7, sp, #8
 8003caa:	60f8      	str	r0, [r7, #12]
 8003cac:	000c      	movs	r4, r1
 8003cae:	0010      	movs	r0, r2
 8003cb0:	0019      	movs	r1, r3
 8003cb2:	230a      	movs	r3, #10
 8003cb4:	18fb      	adds	r3, r7, r3
 8003cb6:	1c22      	adds	r2, r4, #0
 8003cb8:	801a      	strh	r2, [r3, #0]
 8003cba:	2308      	movs	r3, #8
 8003cbc:	18fb      	adds	r3, r7, r3
 8003cbe:	1c02      	adds	r2, r0, #0
 8003cc0:	801a      	strh	r2, [r3, #0]
 8003cc2:	1dbb      	adds	r3, r7, #6
 8003cc4:	1c0a      	adds	r2, r1, #0
 8003cc6:	801a      	strh	r2, [r3, #0]
  uint32_t tickstart;

  /* Check the parameters */
  assert_param(IS_I2C_MEMADD_SIZE(MemAddSize));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8003cc8:	68fb      	ldr	r3, [r7, #12]
 8003cca:	2241      	movs	r2, #65	@ 0x41
 8003ccc:	5c9b      	ldrb	r3, [r3, r2]
 8003cce:	b2db      	uxtb	r3, r3
 8003cd0:	2b20      	cmp	r3, #32
 8003cd2:	d000      	beq.n	8003cd6 <HAL_I2C_Mem_Write+0x32>
 8003cd4:	e10c      	b.n	8003ef0 <HAL_I2C_Mem_Write+0x24c>
  {
    if ((pData == NULL) || (Size == 0U))
 8003cd6:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8003cd8:	2b00      	cmp	r3, #0
 8003cda:	d004      	beq.n	8003ce6 <HAL_I2C_Mem_Write+0x42>
 8003cdc:	232c      	movs	r3, #44	@ 0x2c
 8003cde:	18fb      	adds	r3, r7, r3
 8003ce0:	881b      	ldrh	r3, [r3, #0]
 8003ce2:	2b00      	cmp	r3, #0
 8003ce4:	d105      	bne.n	8003cf2 <HAL_I2C_Mem_Write+0x4e>
    {
      hi2c->ErrorCode = HAL_I2C_ERROR_INVALID_PARAM;
 8003ce6:	68fb      	ldr	r3, [r7, #12]
 8003ce8:	2280      	movs	r2, #128	@ 0x80
 8003cea:	0092      	lsls	r2, r2, #2
 8003cec:	645a      	str	r2, [r3, #68]	@ 0x44
      return  HAL_ERROR;
 8003cee:	2301      	movs	r3, #1
 8003cf0:	e0ff      	b.n	8003ef2 <HAL_I2C_Mem_Write+0x24e>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 8003cf2:	68fb      	ldr	r3, [r7, #12]
 8003cf4:	2240      	movs	r2, #64	@ 0x40
 8003cf6:	5c9b      	ldrb	r3, [r3, r2]
 8003cf8:	2b01      	cmp	r3, #1
 8003cfa:	d101      	bne.n	8003d00 <HAL_I2C_Mem_Write+0x5c>
 8003cfc:	2302      	movs	r3, #2
 8003cfe:	e0f8      	b.n	8003ef2 <HAL_I2C_Mem_Write+0x24e>
 8003d00:	68fb      	ldr	r3, [r7, #12]
 8003d02:	2240      	movs	r2, #64	@ 0x40
 8003d04:	2101      	movs	r1, #1
 8003d06:	5499      	strb	r1, [r3, r2]

    /* Init tickstart for timeout management*/
    tickstart = HAL_GetTick();
 8003d08:	f7ff fa64 	bl	80031d4 <HAL_GetTick>
 8003d0c:	0003      	movs	r3, r0
 8003d0e:	617b      	str	r3, [r7, #20]

    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY, tickstart) != HAL_OK)
 8003d10:	2380      	movs	r3, #128	@ 0x80
 8003d12:	0219      	lsls	r1, r3, #8
 8003d14:	68f8      	ldr	r0, [r7, #12]
 8003d16:	697b      	ldr	r3, [r7, #20]
 8003d18:	9300      	str	r3, [sp, #0]
 8003d1a:	2319      	movs	r3, #25
 8003d1c:	2201      	movs	r2, #1
 8003d1e:	f000 f975 	bl	800400c <I2C_WaitOnFlagUntilTimeout>
 8003d22:	1e03      	subs	r3, r0, #0
 8003d24:	d001      	beq.n	8003d2a <HAL_I2C_Mem_Write+0x86>
    {
      return HAL_ERROR;
 8003d26:	2301      	movs	r3, #1
 8003d28:	e0e3      	b.n	8003ef2 <HAL_I2C_Mem_Write+0x24e>
    }

    hi2c->State     = HAL_I2C_STATE_BUSY_TX;
 8003d2a:	68fb      	ldr	r3, [r7, #12]
 8003d2c:	2241      	movs	r2, #65	@ 0x41
 8003d2e:	2121      	movs	r1, #33	@ 0x21
 8003d30:	5499      	strb	r1, [r3, r2]
    hi2c->Mode      = HAL_I2C_MODE_MEM;
 8003d32:	68fb      	ldr	r3, [r7, #12]
 8003d34:	2242      	movs	r2, #66	@ 0x42
 8003d36:	2140      	movs	r1, #64	@ 0x40
 8003d38:	5499      	strb	r1, [r3, r2]
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8003d3a:	68fb      	ldr	r3, [r7, #12]
 8003d3c:	2200      	movs	r2, #0
 8003d3e:	645a      	str	r2, [r3, #68]	@ 0x44

    /* Prepare transfer parameters */
    hi2c->pBuffPtr  = pData;
 8003d40:	68fb      	ldr	r3, [r7, #12]
 8003d42:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8003d44:	625a      	str	r2, [r3, #36]	@ 0x24
    hi2c->XferCount = Size;
 8003d46:	68fb      	ldr	r3, [r7, #12]
 8003d48:	222c      	movs	r2, #44	@ 0x2c
 8003d4a:	18ba      	adds	r2, r7, r2
 8003d4c:	8812      	ldrh	r2, [r2, #0]
 8003d4e:	855a      	strh	r2, [r3, #42]	@ 0x2a
    hi2c->XferISR   = NULL;
 8003d50:	68fb      	ldr	r3, [r7, #12]
 8003d52:	2200      	movs	r2, #0
 8003d54:	635a      	str	r2, [r3, #52]	@ 0x34

    /* Send Slave Address and Memory Address */
    if (I2C_RequestMemoryWrite(hi2c, DevAddress, MemAddress, MemAddSize, Timeout, tickstart) != HAL_OK)
 8003d56:	1dbb      	adds	r3, r7, #6
 8003d58:	881c      	ldrh	r4, [r3, #0]
 8003d5a:	2308      	movs	r3, #8
 8003d5c:	18fb      	adds	r3, r7, r3
 8003d5e:	881a      	ldrh	r2, [r3, #0]
 8003d60:	230a      	movs	r3, #10
 8003d62:	18fb      	adds	r3, r7, r3
 8003d64:	8819      	ldrh	r1, [r3, #0]
 8003d66:	68f8      	ldr	r0, [r7, #12]
 8003d68:	697b      	ldr	r3, [r7, #20]
 8003d6a:	9301      	str	r3, [sp, #4]
 8003d6c:	6b3b      	ldr	r3, [r7, #48]	@ 0x30
 8003d6e:	9300      	str	r3, [sp, #0]
 8003d70:	0023      	movs	r3, r4
 8003d72:	f000 f8c5 	bl	8003f00 <I2C_RequestMemoryWrite>
 8003d76:	1e03      	subs	r3, r0, #0
 8003d78:	d005      	beq.n	8003d86 <HAL_I2C_Mem_Write+0xe2>
    {
      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 8003d7a:	68fb      	ldr	r3, [r7, #12]
 8003d7c:	2240      	movs	r2, #64	@ 0x40
 8003d7e:	2100      	movs	r1, #0
 8003d80:	5499      	strb	r1, [r3, r2]
      return HAL_ERROR;
 8003d82:	2301      	movs	r3, #1
 8003d84:	e0b5      	b.n	8003ef2 <HAL_I2C_Mem_Write+0x24e>
    }

    /* Set NBYTES to write and reload if hi2c->XferCount > MAX_NBYTE_SIZE */
    if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8003d86:	68fb      	ldr	r3, [r7, #12]
 8003d88:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003d8a:	b29b      	uxth	r3, r3
 8003d8c:	2bff      	cmp	r3, #255	@ 0xff
 8003d8e:	d911      	bls.n	8003db4 <HAL_I2C_Mem_Write+0x110>
    {
      hi2c->XferSize = MAX_NBYTE_SIZE;
 8003d90:	68fb      	ldr	r3, [r7, #12]
 8003d92:	22ff      	movs	r2, #255	@ 0xff
 8003d94:	851a      	strh	r2, [r3, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE, I2C_NO_STARTSTOP);
 8003d96:	68fb      	ldr	r3, [r7, #12]
 8003d98:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003d9a:	b2da      	uxtb	r2, r3
 8003d9c:	2380      	movs	r3, #128	@ 0x80
 8003d9e:	045c      	lsls	r4, r3, #17
 8003da0:	230a      	movs	r3, #10
 8003da2:	18fb      	adds	r3, r7, r3
 8003da4:	8819      	ldrh	r1, [r3, #0]
 8003da6:	68f8      	ldr	r0, [r7, #12]
 8003da8:	2300      	movs	r3, #0
 8003daa:	9300      	str	r3, [sp, #0]
 8003dac:	0023      	movs	r3, r4
 8003dae:	f000 fba5 	bl	80044fc <I2C_TransferConfig>
 8003db2:	e012      	b.n	8003dda <HAL_I2C_Mem_Write+0x136>
    }
    else
    {
      hi2c->XferSize = hi2c->XferCount;
 8003db4:	68fb      	ldr	r3, [r7, #12]
 8003db6:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003db8:	b29a      	uxth	r2, r3
 8003dba:	68fb      	ldr	r3, [r7, #12]
 8003dbc:	851a      	strh	r2, [r3, #40]	@ 0x28
      I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE, I2C_NO_STARTSTOP);
 8003dbe:	68fb      	ldr	r3, [r7, #12]
 8003dc0:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003dc2:	b2da      	uxtb	r2, r3
 8003dc4:	2380      	movs	r3, #128	@ 0x80
 8003dc6:	049c      	lsls	r4, r3, #18
 8003dc8:	230a      	movs	r3, #10
 8003dca:	18fb      	adds	r3, r7, r3
 8003dcc:	8819      	ldrh	r1, [r3, #0]
 8003dce:	68f8      	ldr	r0, [r7, #12]
 8003dd0:	2300      	movs	r3, #0
 8003dd2:	9300      	str	r3, [sp, #0]
 8003dd4:	0023      	movs	r3, r4
 8003dd6:	f000 fb91 	bl	80044fc <I2C_TransferConfig>
    }

    do
    {
      /* Wait until TXIS flag is set */
      if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003dda:	697a      	ldr	r2, [r7, #20]
 8003ddc:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8003dde:	68fb      	ldr	r3, [r7, #12]
 8003de0:	0018      	movs	r0, r3
 8003de2:	f000 f96b 	bl	80040bc <I2C_WaitOnTXISFlagUntilTimeout>
 8003de6:	1e03      	subs	r3, r0, #0
 8003de8:	d001      	beq.n	8003dee <HAL_I2C_Mem_Write+0x14a>
      {
        return HAL_ERROR;
 8003dea:	2301      	movs	r3, #1
 8003dec:	e081      	b.n	8003ef2 <HAL_I2C_Mem_Write+0x24e>
      }

      /* Write data to TXDR */
      hi2c->Instance->TXDR = *hi2c->pBuffPtr;
 8003dee:	68fb      	ldr	r3, [r7, #12]
 8003df0:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003df2:	781a      	ldrb	r2, [r3, #0]
 8003df4:	68fb      	ldr	r3, [r7, #12]
 8003df6:	681b      	ldr	r3, [r3, #0]
 8003df8:	629a      	str	r2, [r3, #40]	@ 0x28

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 8003dfa:	68fb      	ldr	r3, [r7, #12]
 8003dfc:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 8003dfe:	1c5a      	adds	r2, r3, #1
 8003e00:	68fb      	ldr	r3, [r7, #12]
 8003e02:	625a      	str	r2, [r3, #36]	@ 0x24

      hi2c->XferCount--;
 8003e04:	68fb      	ldr	r3, [r7, #12]
 8003e06:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003e08:	b29b      	uxth	r3, r3
 8003e0a:	3b01      	subs	r3, #1
 8003e0c:	b29a      	uxth	r2, r3
 8003e0e:	68fb      	ldr	r3, [r7, #12]
 8003e10:	855a      	strh	r2, [r3, #42]	@ 0x2a
      hi2c->XferSize--;
 8003e12:	68fb      	ldr	r3, [r7, #12]
 8003e14:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003e16:	3b01      	subs	r3, #1
 8003e18:	b29a      	uxth	r2, r3
 8003e1a:	68fb      	ldr	r3, [r7, #12]
 8003e1c:	851a      	strh	r2, [r3, #40]	@ 0x28

      if ((hi2c->XferCount != 0U) && (hi2c->XferSize == 0U))
 8003e1e:	68fb      	ldr	r3, [r7, #12]
 8003e20:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003e22:	b29b      	uxth	r3, r3
 8003e24:	2b00      	cmp	r3, #0
 8003e26:	d03a      	beq.n	8003e9e <HAL_I2C_Mem_Write+0x1fa>
 8003e28:	68fb      	ldr	r3, [r7, #12]
 8003e2a:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003e2c:	2b00      	cmp	r3, #0
 8003e2e:	d136      	bne.n	8003e9e <HAL_I2C_Mem_Write+0x1fa>
      {
        /* Wait until TCR flag is set */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, tickstart) != HAL_OK)
 8003e30:	6b3a      	ldr	r2, [r7, #48]	@ 0x30
 8003e32:	68f8      	ldr	r0, [r7, #12]
 8003e34:	697b      	ldr	r3, [r7, #20]
 8003e36:	9300      	str	r3, [sp, #0]
 8003e38:	0013      	movs	r3, r2
 8003e3a:	2200      	movs	r2, #0
 8003e3c:	2180      	movs	r1, #128	@ 0x80
 8003e3e:	f000 f8e5 	bl	800400c <I2C_WaitOnFlagUntilTimeout>
 8003e42:	1e03      	subs	r3, r0, #0
 8003e44:	d001      	beq.n	8003e4a <HAL_I2C_Mem_Write+0x1a6>
        {
          return HAL_ERROR;
 8003e46:	2301      	movs	r3, #1
 8003e48:	e053      	b.n	8003ef2 <HAL_I2C_Mem_Write+0x24e>
        }

        if (hi2c->XferCount > MAX_NBYTE_SIZE)
 8003e4a:	68fb      	ldr	r3, [r7, #12]
 8003e4c:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003e4e:	b29b      	uxth	r3, r3
 8003e50:	2bff      	cmp	r3, #255	@ 0xff
 8003e52:	d911      	bls.n	8003e78 <HAL_I2C_Mem_Write+0x1d4>
        {
          hi2c->XferSize = MAX_NBYTE_SIZE;
 8003e54:	68fb      	ldr	r3, [r7, #12]
 8003e56:	22ff      	movs	r2, #255	@ 0xff
 8003e58:	851a      	strh	r2, [r3, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_RELOAD_MODE,
 8003e5a:	68fb      	ldr	r3, [r7, #12]
 8003e5c:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003e5e:	b2da      	uxtb	r2, r3
 8003e60:	2380      	movs	r3, #128	@ 0x80
 8003e62:	045c      	lsls	r4, r3, #17
 8003e64:	230a      	movs	r3, #10
 8003e66:	18fb      	adds	r3, r7, r3
 8003e68:	8819      	ldrh	r1, [r3, #0]
 8003e6a:	68f8      	ldr	r0, [r7, #12]
 8003e6c:	2300      	movs	r3, #0
 8003e6e:	9300      	str	r3, [sp, #0]
 8003e70:	0023      	movs	r3, r4
 8003e72:	f000 fb43 	bl	80044fc <I2C_TransferConfig>
 8003e76:	e012      	b.n	8003e9e <HAL_I2C_Mem_Write+0x1fa>
                             I2C_NO_STARTSTOP);
        }
        else
        {
          hi2c->XferSize = hi2c->XferCount;
 8003e78:	68fb      	ldr	r3, [r7, #12]
 8003e7a:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003e7c:	b29a      	uxth	r2, r3
 8003e7e:	68fb      	ldr	r3, [r7, #12]
 8003e80:	851a      	strh	r2, [r3, #40]	@ 0x28
          I2C_TransferConfig(hi2c, DevAddress, (uint8_t)hi2c->XferSize, I2C_AUTOEND_MODE,
 8003e82:	68fb      	ldr	r3, [r7, #12]
 8003e84:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8003e86:	b2da      	uxtb	r2, r3
 8003e88:	2380      	movs	r3, #128	@ 0x80
 8003e8a:	049c      	lsls	r4, r3, #18
 8003e8c:	230a      	movs	r3, #10
 8003e8e:	18fb      	adds	r3, r7, r3
 8003e90:	8819      	ldrh	r1, [r3, #0]
 8003e92:	68f8      	ldr	r0, [r7, #12]
 8003e94:	2300      	movs	r3, #0
 8003e96:	9300      	str	r3, [sp, #0]
 8003e98:	0023      	movs	r3, r4
 8003e9a:	f000 fb2f 	bl	80044fc <I2C_TransferConfig>
                             I2C_NO_STARTSTOP);
        }
      }

    } while (hi2c->XferCount > 0U);
 8003e9e:	68fb      	ldr	r3, [r7, #12]
 8003ea0:	8d5b      	ldrh	r3, [r3, #42]	@ 0x2a
 8003ea2:	b29b      	uxth	r3, r3
 8003ea4:	2b00      	cmp	r3, #0
 8003ea6:	d198      	bne.n	8003dda <HAL_I2C_Mem_Write+0x136>

    /* No need to Check TC flag, with AUTOEND mode the stop is automatically generated */
    /* Wait until STOPF flag is reset */
    if (I2C_WaitOnSTOPFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 8003ea8:	697a      	ldr	r2, [r7, #20]
 8003eaa:	6b39      	ldr	r1, [r7, #48]	@ 0x30
 8003eac:	68fb      	ldr	r3, [r7, #12]
 8003eae:	0018      	movs	r0, r3
 8003eb0:	f000 f94a 	bl	8004148 <I2C_WaitOnSTOPFlagUntilTimeout>
 8003eb4:	1e03      	subs	r3, r0, #0
 8003eb6:	d001      	beq.n	8003ebc <HAL_I2C_Mem_Write+0x218>
    {
      return HAL_ERROR;
 8003eb8:	2301      	movs	r3, #1
 8003eba:	e01a      	b.n	8003ef2 <HAL_I2C_Mem_Write+0x24e>
    }

    /* Clear STOP Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8003ebc:	68fb      	ldr	r3, [r7, #12]
 8003ebe:	681b      	ldr	r3, [r3, #0]
 8003ec0:	2220      	movs	r2, #32
 8003ec2:	61da      	str	r2, [r3, #28]

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 8003ec4:	68fb      	ldr	r3, [r7, #12]
 8003ec6:	681b      	ldr	r3, [r3, #0]
 8003ec8:	685a      	ldr	r2, [r3, #4]
 8003eca:	68fb      	ldr	r3, [r7, #12]
 8003ecc:	681b      	ldr	r3, [r3, #0]
 8003ece:	490b      	ldr	r1, [pc, #44]	@ (8003efc <HAL_I2C_Mem_Write+0x258>)
 8003ed0:	400a      	ands	r2, r1
 8003ed2:	605a      	str	r2, [r3, #4]

    hi2c->State = HAL_I2C_STATE_READY;
 8003ed4:	68fb      	ldr	r3, [r7, #12]
 8003ed6:	2241      	movs	r2, #65	@ 0x41
 8003ed8:	2120      	movs	r1, #32
 8003eda:	5499      	strb	r1, [r3, r2]
    hi2c->Mode  = HAL_I2C_MODE_NONE;
 8003edc:	68fb      	ldr	r3, [r7, #12]
 8003ede:	2242      	movs	r2, #66	@ 0x42
 8003ee0:	2100      	movs	r1, #0
 8003ee2:	5499      	strb	r1, [r3, r2]

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8003ee4:	68fb      	ldr	r3, [r7, #12]
 8003ee6:	2240      	movs	r2, #64	@ 0x40
 8003ee8:	2100      	movs	r1, #0
 8003eea:	5499      	strb	r1, [r3, r2]

    return HAL_OK;
 8003eec:	2300      	movs	r3, #0
 8003eee:	e000      	b.n	8003ef2 <HAL_I2C_Mem_Write+0x24e>
  }
  else
  {
    return HAL_BUSY;
 8003ef0:	2302      	movs	r3, #2
  }
}
 8003ef2:	0018      	movs	r0, r3
 8003ef4:	46bd      	mov	sp, r7
 8003ef6:	b007      	add	sp, #28
 8003ef8:	bd90      	pop	{r4, r7, pc}
 8003efa:	46c0      	nop			@ (mov r8, r8)
 8003efc:	fe00e800 	.word	0xfe00e800

08003f00 <I2C_RequestMemoryWrite>:
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_RequestMemoryWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress,
                                                uint16_t MemAddress, uint16_t MemAddSize, uint32_t Timeout,
                                                uint32_t Tickstart)
{
 8003f00:	b5b0      	push	{r4, r5, r7, lr}
 8003f02:	b086      	sub	sp, #24
 8003f04:	af02      	add	r7, sp, #8
 8003f06:	60f8      	str	r0, [r7, #12]
 8003f08:	000c      	movs	r4, r1
 8003f0a:	0010      	movs	r0, r2
 8003f0c:	0019      	movs	r1, r3
 8003f0e:	250a      	movs	r5, #10
 8003f10:	197b      	adds	r3, r7, r5
 8003f12:	1c22      	adds	r2, r4, #0
 8003f14:	801a      	strh	r2, [r3, #0]
 8003f16:	2308      	movs	r3, #8
 8003f18:	18fb      	adds	r3, r7, r3
 8003f1a:	1c02      	adds	r2, r0, #0
 8003f1c:	801a      	strh	r2, [r3, #0]
 8003f1e:	1dbb      	adds	r3, r7, #6
 8003f20:	1c0a      	adds	r2, r1, #0
 8003f22:	801a      	strh	r2, [r3, #0]
  I2C_TransferConfig(hi2c, DevAddress, (uint8_t)MemAddSize, I2C_RELOAD_MODE, I2C_GENERATE_START_WRITE);
 8003f24:	1dbb      	adds	r3, r7, #6
 8003f26:	881b      	ldrh	r3, [r3, #0]
 8003f28:	b2da      	uxtb	r2, r3
 8003f2a:	2380      	movs	r3, #128	@ 0x80
 8003f2c:	045c      	lsls	r4, r3, #17
 8003f2e:	197b      	adds	r3, r7, r5
 8003f30:	8819      	ldrh	r1, [r3, #0]
 8003f32:	68f8      	ldr	r0, [r7, #12]
 8003f34:	4b23      	ldr	r3, [pc, #140]	@ (8003fc4 <I2C_RequestMemoryWrite+0xc4>)
 8003f36:	9300      	str	r3, [sp, #0]
 8003f38:	0023      	movs	r3, r4
 8003f3a:	f000 fadf 	bl	80044fc <I2C_TransferConfig>

  /* Wait until TXIS flag is set */
  if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003f3e:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003f40:	6a39      	ldr	r1, [r7, #32]
 8003f42:	68fb      	ldr	r3, [r7, #12]
 8003f44:	0018      	movs	r0, r3
 8003f46:	f000 f8b9 	bl	80040bc <I2C_WaitOnTXISFlagUntilTimeout>
 8003f4a:	1e03      	subs	r3, r0, #0
 8003f4c:	d001      	beq.n	8003f52 <I2C_RequestMemoryWrite+0x52>
  {
    return HAL_ERROR;
 8003f4e:	2301      	movs	r3, #1
 8003f50:	e033      	b.n	8003fba <I2C_RequestMemoryWrite+0xba>
  }

  /* If Memory address size is 8Bit */
  if (MemAddSize == I2C_MEMADD_SIZE_8BIT)
 8003f52:	1dbb      	adds	r3, r7, #6
 8003f54:	881b      	ldrh	r3, [r3, #0]
 8003f56:	2b01      	cmp	r3, #1
 8003f58:	d107      	bne.n	8003f6a <I2C_RequestMemoryWrite+0x6a>
  {
    /* Send Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8003f5a:	2308      	movs	r3, #8
 8003f5c:	18fb      	adds	r3, r7, r3
 8003f5e:	881b      	ldrh	r3, [r3, #0]
 8003f60:	b2da      	uxtb	r2, r3
 8003f62:	68fb      	ldr	r3, [r7, #12]
 8003f64:	681b      	ldr	r3, [r3, #0]
 8003f66:	629a      	str	r2, [r3, #40]	@ 0x28
 8003f68:	e019      	b.n	8003f9e <I2C_RequestMemoryWrite+0x9e>
  }
  /* If Memory address size is 16Bit */
  else
  {
    /* Send MSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_MSB(MemAddress);
 8003f6a:	2308      	movs	r3, #8
 8003f6c:	18fb      	adds	r3, r7, r3
 8003f6e:	881b      	ldrh	r3, [r3, #0]
 8003f70:	0a1b      	lsrs	r3, r3, #8
 8003f72:	b29b      	uxth	r3, r3
 8003f74:	b2da      	uxtb	r2, r3
 8003f76:	68fb      	ldr	r3, [r7, #12]
 8003f78:	681b      	ldr	r3, [r3, #0]
 8003f7a:	629a      	str	r2, [r3, #40]	@ 0x28

    /* Wait until TXIS flag is set */
    if (I2C_WaitOnTXISFlagUntilTimeout(hi2c, Timeout, Tickstart) != HAL_OK)
 8003f7c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8003f7e:	6a39      	ldr	r1, [r7, #32]
 8003f80:	68fb      	ldr	r3, [r7, #12]
 8003f82:	0018      	movs	r0, r3
 8003f84:	f000 f89a 	bl	80040bc <I2C_WaitOnTXISFlagUntilTimeout>
 8003f88:	1e03      	subs	r3, r0, #0
 8003f8a:	d001      	beq.n	8003f90 <I2C_RequestMemoryWrite+0x90>
    {
      return HAL_ERROR;
 8003f8c:	2301      	movs	r3, #1
 8003f8e:	e014      	b.n	8003fba <I2C_RequestMemoryWrite+0xba>
    }

    /* Send LSB of Memory Address */
    hi2c->Instance->TXDR = I2C_MEM_ADD_LSB(MemAddress);
 8003f90:	2308      	movs	r3, #8
 8003f92:	18fb      	adds	r3, r7, r3
 8003f94:	881b      	ldrh	r3, [r3, #0]
 8003f96:	b2da      	uxtb	r2, r3
 8003f98:	68fb      	ldr	r3, [r7, #12]
 8003f9a:	681b      	ldr	r3, [r3, #0]
 8003f9c:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /* Wait until TCR flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_TCR, RESET, Timeout, Tickstart) != HAL_OK)
 8003f9e:	6a3a      	ldr	r2, [r7, #32]
 8003fa0:	68f8      	ldr	r0, [r7, #12]
 8003fa2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8003fa4:	9300      	str	r3, [sp, #0]
 8003fa6:	0013      	movs	r3, r2
 8003fa8:	2200      	movs	r2, #0
 8003faa:	2180      	movs	r1, #128	@ 0x80
 8003fac:	f000 f82e 	bl	800400c <I2C_WaitOnFlagUntilTimeout>
 8003fb0:	1e03      	subs	r3, r0, #0
 8003fb2:	d001      	beq.n	8003fb8 <I2C_RequestMemoryWrite+0xb8>
  {
    return HAL_ERROR;
 8003fb4:	2301      	movs	r3, #1
 8003fb6:	e000      	b.n	8003fba <I2C_RequestMemoryWrite+0xba>
  }

  return HAL_OK;
 8003fb8:	2300      	movs	r3, #0
}
 8003fba:	0018      	movs	r0, r3
 8003fbc:	46bd      	mov	sp, r7
 8003fbe:	b004      	add	sp, #16
 8003fc0:	bdb0      	pop	{r4, r5, r7, pc}
 8003fc2:	46c0      	nop			@ (mov r8, r8)
 8003fc4:	80002000 	.word	0x80002000

08003fc8 <I2C_Flush_TXDR>:
  * @brief  I2C Tx data register flush process.
  * @param  hi2c I2C handle.
  * @retval None
  */
static void I2C_Flush_TXDR(I2C_HandleTypeDef *hi2c)
{
 8003fc8:	b580      	push	{r7, lr}
 8003fca:	b082      	sub	sp, #8
 8003fcc:	af00      	add	r7, sp, #0
 8003fce:	6078      	str	r0, [r7, #4]
  /* If a pending TXIS flag is set */
  /* Write a dummy data in TXDR to clear it */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) != RESET)
 8003fd0:	687b      	ldr	r3, [r7, #4]
 8003fd2:	681b      	ldr	r3, [r3, #0]
 8003fd4:	699b      	ldr	r3, [r3, #24]
 8003fd6:	2202      	movs	r2, #2
 8003fd8:	4013      	ands	r3, r2
 8003fda:	2b02      	cmp	r3, #2
 8003fdc:	d103      	bne.n	8003fe6 <I2C_Flush_TXDR+0x1e>
  {
    hi2c->Instance->TXDR = 0x00U;
 8003fde:	687b      	ldr	r3, [r7, #4]
 8003fe0:	681b      	ldr	r3, [r3, #0]
 8003fe2:	2200      	movs	r2, #0
 8003fe4:	629a      	str	r2, [r3, #40]	@ 0x28
  }

  /* Flush TX register if not empty */
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 8003fe6:	687b      	ldr	r3, [r7, #4]
 8003fe8:	681b      	ldr	r3, [r3, #0]
 8003fea:	699b      	ldr	r3, [r3, #24]
 8003fec:	2201      	movs	r2, #1
 8003fee:	4013      	ands	r3, r2
 8003ff0:	2b01      	cmp	r3, #1
 8003ff2:	d007      	beq.n	8004004 <I2C_Flush_TXDR+0x3c>
  {
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_TXE);
 8003ff4:	687b      	ldr	r3, [r7, #4]
 8003ff6:	681b      	ldr	r3, [r3, #0]
 8003ff8:	699a      	ldr	r2, [r3, #24]
 8003ffa:	687b      	ldr	r3, [r7, #4]
 8003ffc:	681b      	ldr	r3, [r3, #0]
 8003ffe:	2101      	movs	r1, #1
 8004000:	430a      	orrs	r2, r1
 8004002:	619a      	str	r2, [r3, #24]
  }
}
 8004004:	46c0      	nop			@ (mov r8, r8)
 8004006:	46bd      	mov	sp, r7
 8004008:	b002      	add	sp, #8
 800400a:	bd80      	pop	{r7, pc}

0800400c <I2C_WaitOnFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status,
                                                    uint32_t Timeout, uint32_t Tickstart)
{
 800400c:	b580      	push	{r7, lr}
 800400e:	b084      	sub	sp, #16
 8004010:	af00      	add	r7, sp, #0
 8004012:	60f8      	str	r0, [r7, #12]
 8004014:	60b9      	str	r1, [r7, #8]
 8004016:	603b      	str	r3, [r7, #0]
 8004018:	1dfb      	adds	r3, r7, #7
 800401a:	701a      	strb	r2, [r3, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 800401c:	e03a      	b.n	8004094 <I2C_WaitOnFlagUntilTimeout+0x88>
  {
    /* Check if an error is detected */
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 800401e:	69ba      	ldr	r2, [r7, #24]
 8004020:	6839      	ldr	r1, [r7, #0]
 8004022:	68fb      	ldr	r3, [r7, #12]
 8004024:	0018      	movs	r0, r3
 8004026:	f000 f971 	bl	800430c <I2C_IsErrorOccurred>
 800402a:	1e03      	subs	r3, r0, #0
 800402c:	d001      	beq.n	8004032 <I2C_WaitOnFlagUntilTimeout+0x26>
    {
      return HAL_ERROR;
 800402e:	2301      	movs	r3, #1
 8004030:	e040      	b.n	80040b4 <I2C_WaitOnFlagUntilTimeout+0xa8>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8004032:	683b      	ldr	r3, [r7, #0]
 8004034:	3301      	adds	r3, #1
 8004036:	d02d      	beq.n	8004094 <I2C_WaitOnFlagUntilTimeout+0x88>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 8004038:	f7ff f8cc 	bl	80031d4 <HAL_GetTick>
 800403c:	0002      	movs	r2, r0
 800403e:	69bb      	ldr	r3, [r7, #24]
 8004040:	1ad3      	subs	r3, r2, r3
 8004042:	683a      	ldr	r2, [r7, #0]
 8004044:	429a      	cmp	r2, r3
 8004046:	d302      	bcc.n	800404e <I2C_WaitOnFlagUntilTimeout+0x42>
 8004048:	683b      	ldr	r3, [r7, #0]
 800404a:	2b00      	cmp	r3, #0
 800404c:	d122      	bne.n	8004094 <I2C_WaitOnFlagUntilTimeout+0x88>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, Flag) == Status))
 800404e:	68fb      	ldr	r3, [r7, #12]
 8004050:	681b      	ldr	r3, [r3, #0]
 8004052:	699b      	ldr	r3, [r3, #24]
 8004054:	68ba      	ldr	r2, [r7, #8]
 8004056:	4013      	ands	r3, r2
 8004058:	68ba      	ldr	r2, [r7, #8]
 800405a:	1ad3      	subs	r3, r2, r3
 800405c:	425a      	negs	r2, r3
 800405e:	4153      	adcs	r3, r2
 8004060:	b2db      	uxtb	r3, r3
 8004062:	001a      	movs	r2, r3
 8004064:	1dfb      	adds	r3, r7, #7
 8004066:	781b      	ldrb	r3, [r3, #0]
 8004068:	429a      	cmp	r2, r3
 800406a:	d113      	bne.n	8004094 <I2C_WaitOnFlagUntilTimeout+0x88>
        {
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800406c:	68fb      	ldr	r3, [r7, #12]
 800406e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004070:	2220      	movs	r2, #32
 8004072:	431a      	orrs	r2, r3
 8004074:	68fb      	ldr	r3, [r7, #12]
 8004076:	645a      	str	r2, [r3, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8004078:	68fb      	ldr	r3, [r7, #12]
 800407a:	2241      	movs	r2, #65	@ 0x41
 800407c:	2120      	movs	r1, #32
 800407e:	5499      	strb	r1, [r3, r2]
          hi2c->Mode = HAL_I2C_MODE_NONE;
 8004080:	68fb      	ldr	r3, [r7, #12]
 8004082:	2242      	movs	r2, #66	@ 0x42
 8004084:	2100      	movs	r1, #0
 8004086:	5499      	strb	r1, [r3, r2]

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8004088:	68fb      	ldr	r3, [r7, #12]
 800408a:	2240      	movs	r2, #64	@ 0x40
 800408c:	2100      	movs	r1, #0
 800408e:	5499      	strb	r1, [r3, r2]
          return HAL_ERROR;
 8004090:	2301      	movs	r3, #1
 8004092:	e00f      	b.n	80040b4 <I2C_WaitOnFlagUntilTimeout+0xa8>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 8004094:	68fb      	ldr	r3, [r7, #12]
 8004096:	681b      	ldr	r3, [r3, #0]
 8004098:	699b      	ldr	r3, [r3, #24]
 800409a:	68ba      	ldr	r2, [r7, #8]
 800409c:	4013      	ands	r3, r2
 800409e:	68ba      	ldr	r2, [r7, #8]
 80040a0:	1ad3      	subs	r3, r2, r3
 80040a2:	425a      	negs	r2, r3
 80040a4:	4153      	adcs	r3, r2
 80040a6:	b2db      	uxtb	r3, r3
 80040a8:	001a      	movs	r2, r3
 80040aa:	1dfb      	adds	r3, r7, #7
 80040ac:	781b      	ldrb	r3, [r3, #0]
 80040ae:	429a      	cmp	r2, r3
 80040b0:	d0b5      	beq.n	800401e <I2C_WaitOnFlagUntilTimeout+0x12>
        }
      }
    }
  }
  return HAL_OK;
 80040b2:	2300      	movs	r3, #0
}
 80040b4:	0018      	movs	r0, r3
 80040b6:	46bd      	mov	sp, r7
 80040b8:	b004      	add	sp, #16
 80040ba:	bd80      	pop	{r7, pc}

080040bc <I2C_WaitOnTXISFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXISFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
 80040bc:	b580      	push	{r7, lr}
 80040be:	b084      	sub	sp, #16
 80040c0:	af00      	add	r7, sp, #0
 80040c2:	60f8      	str	r0, [r7, #12]
 80040c4:	60b9      	str	r1, [r7, #8]
 80040c6:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 80040c8:	e032      	b.n	8004130 <I2C_WaitOnTXISFlagUntilTimeout+0x74>
  {
    /* Check if an error is detected */
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 80040ca:	687a      	ldr	r2, [r7, #4]
 80040cc:	68b9      	ldr	r1, [r7, #8]
 80040ce:	68fb      	ldr	r3, [r7, #12]
 80040d0:	0018      	movs	r0, r3
 80040d2:	f000 f91b 	bl	800430c <I2C_IsErrorOccurred>
 80040d6:	1e03      	subs	r3, r0, #0
 80040d8:	d001      	beq.n	80040de <I2C_WaitOnTXISFlagUntilTimeout+0x22>
    {
      return HAL_ERROR;
 80040da:	2301      	movs	r3, #1
 80040dc:	e030      	b.n	8004140 <I2C_WaitOnTXISFlagUntilTimeout+0x84>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 80040de:	68bb      	ldr	r3, [r7, #8]
 80040e0:	3301      	adds	r3, #1
 80040e2:	d025      	beq.n	8004130 <I2C_WaitOnTXISFlagUntilTimeout+0x74>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 80040e4:	f7ff f876 	bl	80031d4 <HAL_GetTick>
 80040e8:	0002      	movs	r2, r0
 80040ea:	687b      	ldr	r3, [r7, #4]
 80040ec:	1ad3      	subs	r3, r2, r3
 80040ee:	68ba      	ldr	r2, [r7, #8]
 80040f0:	429a      	cmp	r2, r3
 80040f2:	d302      	bcc.n	80040fa <I2C_WaitOnTXISFlagUntilTimeout+0x3e>
 80040f4:	68bb      	ldr	r3, [r7, #8]
 80040f6:	2b00      	cmp	r3, #0
 80040f8:	d11a      	bne.n	8004130 <I2C_WaitOnTXISFlagUntilTimeout+0x74>
      {
        if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET))
 80040fa:	68fb      	ldr	r3, [r7, #12]
 80040fc:	681b      	ldr	r3, [r3, #0]
 80040fe:	699b      	ldr	r3, [r3, #24]
 8004100:	2202      	movs	r2, #2
 8004102:	4013      	ands	r3, r2
 8004104:	2b02      	cmp	r3, #2
 8004106:	d013      	beq.n	8004130 <I2C_WaitOnTXISFlagUntilTimeout+0x74>
        {
          hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 8004108:	68fb      	ldr	r3, [r7, #12]
 800410a:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 800410c:	2220      	movs	r2, #32
 800410e:	431a      	orrs	r2, r3
 8004110:	68fb      	ldr	r3, [r7, #12]
 8004112:	645a      	str	r2, [r3, #68]	@ 0x44
          hi2c->State = HAL_I2C_STATE_READY;
 8004114:	68fb      	ldr	r3, [r7, #12]
 8004116:	2241      	movs	r2, #65	@ 0x41
 8004118:	2120      	movs	r1, #32
 800411a:	5499      	strb	r1, [r3, r2]
          hi2c->Mode = HAL_I2C_MODE_NONE;
 800411c:	68fb      	ldr	r3, [r7, #12]
 800411e:	2242      	movs	r2, #66	@ 0x42
 8004120:	2100      	movs	r1, #0
 8004122:	5499      	strb	r1, [r3, r2]

          /* Process Unlocked */
          __HAL_UNLOCK(hi2c);
 8004124:	68fb      	ldr	r3, [r7, #12]
 8004126:	2240      	movs	r2, #64	@ 0x40
 8004128:	2100      	movs	r1, #0
 800412a:	5499      	strb	r1, [r3, r2]

          return HAL_ERROR;
 800412c:	2301      	movs	r3, #1
 800412e:	e007      	b.n	8004140 <I2C_WaitOnTXISFlagUntilTimeout+0x84>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXIS) == RESET)
 8004130:	68fb      	ldr	r3, [r7, #12]
 8004132:	681b      	ldr	r3, [r3, #0]
 8004134:	699b      	ldr	r3, [r3, #24]
 8004136:	2202      	movs	r2, #2
 8004138:	4013      	ands	r3, r2
 800413a:	2b02      	cmp	r3, #2
 800413c:	d1c5      	bne.n	80040ca <I2C_WaitOnTXISFlagUntilTimeout+0xe>
        }
      }
    }
  }
  return HAL_OK;
 800413e:	2300      	movs	r3, #0
}
 8004140:	0018      	movs	r0, r3
 8004142:	46bd      	mov	sp, r7
 8004144:	b004      	add	sp, #16
 8004146:	bd80      	pop	{r7, pc}

08004148 <I2C_WaitOnSTOPFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnSTOPFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
 8004148:	b580      	push	{r7, lr}
 800414a:	b084      	sub	sp, #16
 800414c:	af00      	add	r7, sp, #0
 800414e:	60f8      	str	r0, [r7, #12]
 8004150:	60b9      	str	r1, [r7, #8]
 8004152:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 8004154:	e02f      	b.n	80041b6 <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
  {
    /* Check if an error is detected */
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 8004156:	687a      	ldr	r2, [r7, #4]
 8004158:	68b9      	ldr	r1, [r7, #8]
 800415a:	68fb      	ldr	r3, [r7, #12]
 800415c:	0018      	movs	r0, r3
 800415e:	f000 f8d5 	bl	800430c <I2C_IsErrorOccurred>
 8004162:	1e03      	subs	r3, r0, #0
 8004164:	d001      	beq.n	800416a <I2C_WaitOnSTOPFlagUntilTimeout+0x22>
    {
      return HAL_ERROR;
 8004166:	2301      	movs	r3, #1
 8004168:	e02d      	b.n	80041c6 <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
    }

    /* Check for the Timeout */
    if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800416a:	f7ff f833 	bl	80031d4 <HAL_GetTick>
 800416e:	0002      	movs	r2, r0
 8004170:	687b      	ldr	r3, [r7, #4]
 8004172:	1ad3      	subs	r3, r2, r3
 8004174:	68ba      	ldr	r2, [r7, #8]
 8004176:	429a      	cmp	r2, r3
 8004178:	d302      	bcc.n	8004180 <I2C_WaitOnSTOPFlagUntilTimeout+0x38>
 800417a:	68bb      	ldr	r3, [r7, #8]
 800417c:	2b00      	cmp	r3, #0
 800417e:	d11a      	bne.n	80041b6 <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
    {
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET))
 8004180:	68fb      	ldr	r3, [r7, #12]
 8004182:	681b      	ldr	r3, [r3, #0]
 8004184:	699b      	ldr	r3, [r3, #24]
 8004186:	2220      	movs	r2, #32
 8004188:	4013      	ands	r3, r2
 800418a:	2b20      	cmp	r3, #32
 800418c:	d013      	beq.n	80041b6 <I2C_WaitOnSTOPFlagUntilTimeout+0x6e>
      {
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 800418e:	68fb      	ldr	r3, [r7, #12]
 8004190:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 8004192:	2220      	movs	r2, #32
 8004194:	431a      	orrs	r2, r3
 8004196:	68fb      	ldr	r3, [r7, #12]
 8004198:	645a      	str	r2, [r3, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 800419a:	68fb      	ldr	r3, [r7, #12]
 800419c:	2241      	movs	r2, #65	@ 0x41
 800419e:	2120      	movs	r1, #32
 80041a0:	5499      	strb	r1, [r3, r2]
        hi2c->Mode = HAL_I2C_MODE_NONE;
 80041a2:	68fb      	ldr	r3, [r7, #12]
 80041a4:	2242      	movs	r2, #66	@ 0x42
 80041a6:	2100      	movs	r1, #0
 80041a8:	5499      	strb	r1, [r3, r2]

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80041aa:	68fb      	ldr	r3, [r7, #12]
 80041ac:	2240      	movs	r2, #64	@ 0x40
 80041ae:	2100      	movs	r1, #0
 80041b0:	5499      	strb	r1, [r3, r2]

        return HAL_ERROR;
 80041b2:	2301      	movs	r3, #1
 80041b4:	e007      	b.n	80041c6 <I2C_WaitOnSTOPFlagUntilTimeout+0x7e>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80041b6:	68fb      	ldr	r3, [r7, #12]
 80041b8:	681b      	ldr	r3, [r3, #0]
 80041ba:	699b      	ldr	r3, [r3, #24]
 80041bc:	2220      	movs	r2, #32
 80041be:	4013      	ands	r3, r2
 80041c0:	2b20      	cmp	r3, #32
 80041c2:	d1c8      	bne.n	8004156 <I2C_WaitOnSTOPFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 80041c4:	2300      	movs	r3, #0
}
 80041c6:	0018      	movs	r0, r3
 80041c8:	46bd      	mov	sp, r7
 80041ca:	b004      	add	sp, #16
 80041cc:	bd80      	pop	{r7, pc}
	...

080041d0 <I2C_WaitOnRXNEFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnRXNEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout,
                                                        uint32_t Tickstart)
{
 80041d0:	b580      	push	{r7, lr}
 80041d2:	b086      	sub	sp, #24
 80041d4:	af00      	add	r7, sp, #0
 80041d6:	60f8      	str	r0, [r7, #12]
 80041d8:	60b9      	str	r1, [r7, #8]
 80041da:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 80041dc:	2317      	movs	r3, #23
 80041de:	18fb      	adds	r3, r7, r3
 80041e0:	2200      	movs	r2, #0
 80041e2:	701a      	strb	r2, [r3, #0]

  while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET) && (status == HAL_OK))
 80041e4:	e07b      	b.n	80042de <I2C_WaitOnRXNEFlagUntilTimeout+0x10e>
  {
    /* Check if an error is detected */
    if (I2C_IsErrorOccurred(hi2c, Timeout, Tickstart) != HAL_OK)
 80041e6:	687a      	ldr	r2, [r7, #4]
 80041e8:	68b9      	ldr	r1, [r7, #8]
 80041ea:	68fb      	ldr	r3, [r7, #12]
 80041ec:	0018      	movs	r0, r3
 80041ee:	f000 f88d 	bl	800430c <I2C_IsErrorOccurred>
 80041f2:	1e03      	subs	r3, r0, #0
 80041f4:	d003      	beq.n	80041fe <I2C_WaitOnRXNEFlagUntilTimeout+0x2e>
    {
      status = HAL_ERROR;
 80041f6:	2317      	movs	r3, #23
 80041f8:	18fb      	adds	r3, r7, r3
 80041fa:	2201      	movs	r2, #1
 80041fc:	701a      	strb	r2, [r3, #0]
    }

    /* Check if a STOPF is detected */
    if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == SET) && (status == HAL_OK))
 80041fe:	68fb      	ldr	r3, [r7, #12]
 8004200:	681b      	ldr	r3, [r3, #0]
 8004202:	699b      	ldr	r3, [r3, #24]
 8004204:	2220      	movs	r2, #32
 8004206:	4013      	ands	r3, r2
 8004208:	2b20      	cmp	r3, #32
 800420a:	d140      	bne.n	800428e <I2C_WaitOnRXNEFlagUntilTimeout+0xbe>
 800420c:	2117      	movs	r1, #23
 800420e:	187b      	adds	r3, r7, r1
 8004210:	781b      	ldrb	r3, [r3, #0]
 8004212:	2b00      	cmp	r3, #0
 8004214:	d13b      	bne.n	800428e <I2C_WaitOnRXNEFlagUntilTimeout+0xbe>
    {
      /* Check if an RXNE is pending */
      /* Store Last receive data if any */
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == SET) && (hi2c->XferSize > 0U))
 8004216:	68fb      	ldr	r3, [r7, #12]
 8004218:	681b      	ldr	r3, [r3, #0]
 800421a:	699b      	ldr	r3, [r3, #24]
 800421c:	2204      	movs	r2, #4
 800421e:	4013      	ands	r3, r2
 8004220:	2b04      	cmp	r3, #4
 8004222:	d106      	bne.n	8004232 <I2C_WaitOnRXNEFlagUntilTimeout+0x62>
 8004224:	68fb      	ldr	r3, [r7, #12]
 8004226:	8d1b      	ldrh	r3, [r3, #40]	@ 0x28
 8004228:	2b00      	cmp	r3, #0
 800422a:	d002      	beq.n	8004232 <I2C_WaitOnRXNEFlagUntilTimeout+0x62>
      {
        /* Return HAL_OK */
        /* The Reading of data from RXDR will be done in caller function */
        status = HAL_OK;
 800422c:	187b      	adds	r3, r7, r1
 800422e:	2200      	movs	r2, #0
 8004230:	701a      	strb	r2, [r3, #0]
      }

      /* Check a no-acknowledge have been detected */
      if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 8004232:	68fb      	ldr	r3, [r7, #12]
 8004234:	681b      	ldr	r3, [r3, #0]
 8004236:	699b      	ldr	r3, [r3, #24]
 8004238:	2210      	movs	r2, #16
 800423a:	4013      	ands	r3, r2
 800423c:	2b10      	cmp	r3, #16
 800423e:	d123      	bne.n	8004288 <I2C_WaitOnRXNEFlagUntilTimeout+0xb8>
      {
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 8004240:	68fb      	ldr	r3, [r7, #12]
 8004242:	681b      	ldr	r3, [r3, #0]
 8004244:	2210      	movs	r2, #16
 8004246:	61da      	str	r2, [r3, #28]
        hi2c->ErrorCode = HAL_I2C_ERROR_AF;
 8004248:	68fb      	ldr	r3, [r7, #12]
 800424a:	2204      	movs	r2, #4
 800424c:	645a      	str	r2, [r3, #68]	@ 0x44

        /* Clear STOP Flag */
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 800424e:	68fb      	ldr	r3, [r7, #12]
 8004250:	681b      	ldr	r3, [r3, #0]
 8004252:	2220      	movs	r2, #32
 8004254:	61da      	str	r2, [r3, #28]

        /* Clear Configuration Register 2 */
        I2C_RESET_CR2(hi2c);
 8004256:	68fb      	ldr	r3, [r7, #12]
 8004258:	681b      	ldr	r3, [r3, #0]
 800425a:	685a      	ldr	r2, [r3, #4]
 800425c:	68fb      	ldr	r3, [r7, #12]
 800425e:	681b      	ldr	r3, [r3, #0]
 8004260:	4929      	ldr	r1, [pc, #164]	@ (8004308 <I2C_WaitOnRXNEFlagUntilTimeout+0x138>)
 8004262:	400a      	ands	r2, r1
 8004264:	605a      	str	r2, [r3, #4]

        hi2c->State = HAL_I2C_STATE_READY;
 8004266:	68fb      	ldr	r3, [r7, #12]
 8004268:	2241      	movs	r2, #65	@ 0x41
 800426a:	2120      	movs	r1, #32
 800426c:	5499      	strb	r1, [r3, r2]
        hi2c->Mode = HAL_I2C_MODE_NONE;
 800426e:	68fb      	ldr	r3, [r7, #12]
 8004270:	2242      	movs	r2, #66	@ 0x42
 8004272:	2100      	movs	r1, #0
 8004274:	5499      	strb	r1, [r3, r2]

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 8004276:	68fb      	ldr	r3, [r7, #12]
 8004278:	2240      	movs	r2, #64	@ 0x40
 800427a:	2100      	movs	r1, #0
 800427c:	5499      	strb	r1, [r3, r2]

        status = HAL_ERROR;
 800427e:	2317      	movs	r3, #23
 8004280:	18fb      	adds	r3, r7, r3
 8004282:	2201      	movs	r2, #1
 8004284:	701a      	strb	r2, [r3, #0]
 8004286:	e002      	b.n	800428e <I2C_WaitOnRXNEFlagUntilTimeout+0xbe>
      }
      else
      {
        hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 8004288:	68fb      	ldr	r3, [r7, #12]
 800428a:	2200      	movs	r2, #0
 800428c:	645a      	str	r2, [r3, #68]	@ 0x44
      }
    }

    /* Check for the Timeout */
    if ((((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U)) && (status == HAL_OK))
 800428e:	f7fe ffa1 	bl	80031d4 <HAL_GetTick>
 8004292:	0002      	movs	r2, r0
 8004294:	687b      	ldr	r3, [r7, #4]
 8004296:	1ad3      	subs	r3, r2, r3
 8004298:	68ba      	ldr	r2, [r7, #8]
 800429a:	429a      	cmp	r2, r3
 800429c:	d302      	bcc.n	80042a4 <I2C_WaitOnRXNEFlagUntilTimeout+0xd4>
 800429e:	68bb      	ldr	r3, [r7, #8]
 80042a0:	2b00      	cmp	r3, #0
 80042a2:	d11c      	bne.n	80042de <I2C_WaitOnRXNEFlagUntilTimeout+0x10e>
 80042a4:	2017      	movs	r0, #23
 80042a6:	183b      	adds	r3, r7, r0
 80042a8:	781b      	ldrb	r3, [r3, #0]
 80042aa:	2b00      	cmp	r3, #0
 80042ac:	d117      	bne.n	80042de <I2C_WaitOnRXNEFlagUntilTimeout+0x10e>
    {
      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET))
 80042ae:	68fb      	ldr	r3, [r7, #12]
 80042b0:	681b      	ldr	r3, [r3, #0]
 80042b2:	699b      	ldr	r3, [r3, #24]
 80042b4:	2204      	movs	r2, #4
 80042b6:	4013      	ands	r3, r2
 80042b8:	2b04      	cmp	r3, #4
 80042ba:	d010      	beq.n	80042de <I2C_WaitOnRXNEFlagUntilTimeout+0x10e>
      {
        hi2c->ErrorCode |= HAL_I2C_ERROR_TIMEOUT;
 80042bc:	68fb      	ldr	r3, [r7, #12]
 80042be:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80042c0:	2220      	movs	r2, #32
 80042c2:	431a      	orrs	r2, r3
 80042c4:	68fb      	ldr	r3, [r7, #12]
 80042c6:	645a      	str	r2, [r3, #68]	@ 0x44
        hi2c->State = HAL_I2C_STATE_READY;
 80042c8:	68fb      	ldr	r3, [r7, #12]
 80042ca:	2241      	movs	r2, #65	@ 0x41
 80042cc:	2120      	movs	r1, #32
 80042ce:	5499      	strb	r1, [r3, r2]

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 80042d0:	68fb      	ldr	r3, [r7, #12]
 80042d2:	2240      	movs	r2, #64	@ 0x40
 80042d4:	2100      	movs	r1, #0
 80042d6:	5499      	strb	r1, [r3, r2]

        status = HAL_ERROR;
 80042d8:	183b      	adds	r3, r7, r0
 80042da:	2201      	movs	r2, #1
 80042dc:	701a      	strb	r2, [r3, #0]
  while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_RXNE) == RESET) && (status == HAL_OK))
 80042de:	68fb      	ldr	r3, [r7, #12]
 80042e0:	681b      	ldr	r3, [r3, #0]
 80042e2:	699b      	ldr	r3, [r3, #24]
 80042e4:	2204      	movs	r2, #4
 80042e6:	4013      	ands	r3, r2
 80042e8:	2b04      	cmp	r3, #4
 80042ea:	d005      	beq.n	80042f8 <I2C_WaitOnRXNEFlagUntilTimeout+0x128>
 80042ec:	2317      	movs	r3, #23
 80042ee:	18fb      	adds	r3, r7, r3
 80042f0:	781b      	ldrb	r3, [r3, #0]
 80042f2:	2b00      	cmp	r3, #0
 80042f4:	d100      	bne.n	80042f8 <I2C_WaitOnRXNEFlagUntilTimeout+0x128>
 80042f6:	e776      	b.n	80041e6 <I2C_WaitOnRXNEFlagUntilTimeout+0x16>
      }
    }
  }
  return status;
 80042f8:	2317      	movs	r3, #23
 80042fa:	18fb      	adds	r3, r7, r3
 80042fc:	781b      	ldrb	r3, [r3, #0]
}
 80042fe:	0018      	movs	r0, r3
 8004300:	46bd      	mov	sp, r7
 8004302:	b006      	add	sp, #24
 8004304:	bd80      	pop	{r7, pc}
 8004306:	46c0      	nop			@ (mov r8, r8)
 8004308:	fe00e800 	.word	0xfe00e800

0800430c <I2C_IsErrorOccurred>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsErrorOccurred(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 800430c:	b580      	push	{r7, lr}
 800430e:	b08a      	sub	sp, #40	@ 0x28
 8004310:	af00      	add	r7, sp, #0
 8004312:	60f8      	str	r0, [r7, #12]
 8004314:	60b9      	str	r1, [r7, #8]
 8004316:	607a      	str	r2, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 8004318:	2327      	movs	r3, #39	@ 0x27
 800431a:	18fb      	adds	r3, r7, r3
 800431c:	2200      	movs	r2, #0
 800431e:	701a      	strb	r2, [r3, #0]
  uint32_t itflag   = hi2c->Instance->ISR;
 8004320:	68fb      	ldr	r3, [r7, #12]
 8004322:	681b      	ldr	r3, [r3, #0]
 8004324:	699b      	ldr	r3, [r3, #24]
 8004326:	61bb      	str	r3, [r7, #24]
  uint32_t error_code = 0;
 8004328:	2300      	movs	r3, #0
 800432a:	623b      	str	r3, [r7, #32]
  uint32_t tickstart = Tickstart;
 800432c:	687b      	ldr	r3, [r7, #4]
 800432e:	61fb      	str	r3, [r7, #28]
  uint32_t tmp1;
  HAL_I2C_ModeTypeDef tmp2;

  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_AF))
 8004330:	69bb      	ldr	r3, [r7, #24]
 8004332:	2210      	movs	r2, #16
 8004334:	4013      	ands	r3, r2
 8004336:	d100      	bne.n	800433a <I2C_IsErrorOccurred+0x2e>
 8004338:	e079      	b.n	800442e <I2C_IsErrorOccurred+0x122>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 800433a:	68fb      	ldr	r3, [r7, #12]
 800433c:	681b      	ldr	r3, [r3, #0]
 800433e:	2210      	movs	r2, #16
 8004340:	61da      	str	r2, [r3, #28]

    /* Wait until STOP Flag is set or timeout occurred */
    /* AutoEnd should be initiate after AF */
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 8004342:	e057      	b.n	80043f4 <I2C_IsErrorOccurred+0xe8>
 8004344:	2227      	movs	r2, #39	@ 0x27
 8004346:	18bb      	adds	r3, r7, r2
 8004348:	18ba      	adds	r2, r7, r2
 800434a:	7812      	ldrb	r2, [r2, #0]
 800434c:	701a      	strb	r2, [r3, #0]
    {
      /* Check for the Timeout */
      if (Timeout != HAL_MAX_DELAY)
 800434e:	68bb      	ldr	r3, [r7, #8]
 8004350:	3301      	adds	r3, #1
 8004352:	d04f      	beq.n	80043f4 <I2C_IsErrorOccurred+0xe8>
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 8004354:	f7fe ff3e 	bl	80031d4 <HAL_GetTick>
 8004358:	0002      	movs	r2, r0
 800435a:	69fb      	ldr	r3, [r7, #28]
 800435c:	1ad3      	subs	r3, r2, r3
 800435e:	68ba      	ldr	r2, [r7, #8]
 8004360:	429a      	cmp	r2, r3
 8004362:	d302      	bcc.n	800436a <I2C_IsErrorOccurred+0x5e>
 8004364:	68bb      	ldr	r3, [r7, #8]
 8004366:	2b00      	cmp	r3, #0
 8004368:	d144      	bne.n	80043f4 <I2C_IsErrorOccurred+0xe8>
        {
          tmp1 = (uint32_t)(hi2c->Instance->CR2 & I2C_CR2_STOP);
 800436a:	68fb      	ldr	r3, [r7, #12]
 800436c:	681b      	ldr	r3, [r3, #0]
 800436e:	685a      	ldr	r2, [r3, #4]
 8004370:	2380      	movs	r3, #128	@ 0x80
 8004372:	01db      	lsls	r3, r3, #7
 8004374:	4013      	ands	r3, r2
 8004376:	617b      	str	r3, [r7, #20]
          tmp2 = hi2c->Mode;
 8004378:	2013      	movs	r0, #19
 800437a:	183b      	adds	r3, r7, r0
 800437c:	68fa      	ldr	r2, [r7, #12]
 800437e:	2142      	movs	r1, #66	@ 0x42
 8004380:	5c52      	ldrb	r2, [r2, r1]
 8004382:	701a      	strb	r2, [r3, #0]

          /* In case of I2C still busy, try to regenerate a STOP manually */
          if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BUSY) != RESET) && \
 8004384:	68fb      	ldr	r3, [r7, #12]
 8004386:	681b      	ldr	r3, [r3, #0]
 8004388:	699a      	ldr	r2, [r3, #24]
 800438a:	2380      	movs	r3, #128	@ 0x80
 800438c:	021b      	lsls	r3, r3, #8
 800438e:	401a      	ands	r2, r3
 8004390:	2380      	movs	r3, #128	@ 0x80
 8004392:	021b      	lsls	r3, r3, #8
 8004394:	429a      	cmp	r2, r3
 8004396:	d126      	bne.n	80043e6 <I2C_IsErrorOccurred+0xda>
 8004398:	697a      	ldr	r2, [r7, #20]
 800439a:	2380      	movs	r3, #128	@ 0x80
 800439c:	01db      	lsls	r3, r3, #7
 800439e:	429a      	cmp	r2, r3
 80043a0:	d021      	beq.n	80043e6 <I2C_IsErrorOccurred+0xda>
              (tmp1 != I2C_CR2_STOP) && \
 80043a2:	183b      	adds	r3, r7, r0
 80043a4:	781b      	ldrb	r3, [r3, #0]
 80043a6:	2b20      	cmp	r3, #32
 80043a8:	d01d      	beq.n	80043e6 <I2C_IsErrorOccurred+0xda>
              (tmp2 != HAL_I2C_MODE_SLAVE))
          {
            /* Generate Stop */
            hi2c->Instance->CR2 |= I2C_CR2_STOP;
 80043aa:	68fb      	ldr	r3, [r7, #12]
 80043ac:	681b      	ldr	r3, [r3, #0]
 80043ae:	685a      	ldr	r2, [r3, #4]
 80043b0:	68fb      	ldr	r3, [r7, #12]
 80043b2:	681b      	ldr	r3, [r3, #0]
 80043b4:	2180      	movs	r1, #128	@ 0x80
 80043b6:	01c9      	lsls	r1, r1, #7
 80043b8:	430a      	orrs	r2, r1
 80043ba:	605a      	str	r2, [r3, #4]

            /* Update Tick with new reference */
            tickstart = HAL_GetTick();
 80043bc:	f7fe ff0a 	bl	80031d4 <HAL_GetTick>
 80043c0:	0003      	movs	r3, r0
 80043c2:	61fb      	str	r3, [r7, #28]
          }

          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80043c4:	e00f      	b.n	80043e6 <I2C_IsErrorOccurred+0xda>
          {
            /* Check for the Timeout */
            if ((HAL_GetTick() - tickstart) > I2C_TIMEOUT_STOPF)
 80043c6:	f7fe ff05 	bl	80031d4 <HAL_GetTick>
 80043ca:	0002      	movs	r2, r0
 80043cc:	69fb      	ldr	r3, [r7, #28]
 80043ce:	1ad3      	subs	r3, r2, r3
 80043d0:	2b19      	cmp	r3, #25
 80043d2:	d908      	bls.n	80043e6 <I2C_IsErrorOccurred+0xda>
            {
              error_code |= HAL_I2C_ERROR_TIMEOUT;
 80043d4:	6a3b      	ldr	r3, [r7, #32]
 80043d6:	2220      	movs	r2, #32
 80043d8:	4313      	orrs	r3, r2
 80043da:	623b      	str	r3, [r7, #32]

              status = HAL_ERROR;
 80043dc:	2327      	movs	r3, #39	@ 0x27
 80043de:	18fb      	adds	r3, r7, r3
 80043e0:	2201      	movs	r2, #1
 80043e2:	701a      	strb	r2, [r3, #0]

              break;
 80043e4:	e006      	b.n	80043f4 <I2C_IsErrorOccurred+0xe8>
          while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET)
 80043e6:	68fb      	ldr	r3, [r7, #12]
 80043e8:	681b      	ldr	r3, [r3, #0]
 80043ea:	699b      	ldr	r3, [r3, #24]
 80043ec:	2220      	movs	r2, #32
 80043ee:	4013      	ands	r3, r2
 80043f0:	2b20      	cmp	r3, #32
 80043f2:	d1e8      	bne.n	80043c6 <I2C_IsErrorOccurred+0xba>
    while ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_STOPF) == RESET) && (status == HAL_OK))
 80043f4:	68fb      	ldr	r3, [r7, #12]
 80043f6:	681b      	ldr	r3, [r3, #0]
 80043f8:	699b      	ldr	r3, [r3, #24]
 80043fa:	2220      	movs	r2, #32
 80043fc:	4013      	ands	r3, r2
 80043fe:	2b20      	cmp	r3, #32
 8004400:	d004      	beq.n	800440c <I2C_IsErrorOccurred+0x100>
 8004402:	2327      	movs	r3, #39	@ 0x27
 8004404:	18fb      	adds	r3, r7, r3
 8004406:	781b      	ldrb	r3, [r3, #0]
 8004408:	2b00      	cmp	r3, #0
 800440a:	d09b      	beq.n	8004344 <I2C_IsErrorOccurred+0x38>
        }
      }
    }

    /* In case STOP Flag is detected, clear it */
    if (status == HAL_OK)
 800440c:	2327      	movs	r3, #39	@ 0x27
 800440e:	18fb      	adds	r3, r7, r3
 8004410:	781b      	ldrb	r3, [r3, #0]
 8004412:	2b00      	cmp	r3, #0
 8004414:	d103      	bne.n	800441e <I2C_IsErrorOccurred+0x112>
    {
      /* Clear STOP Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_STOPF);
 8004416:	68fb      	ldr	r3, [r7, #12]
 8004418:	681b      	ldr	r3, [r3, #0]
 800441a:	2220      	movs	r2, #32
 800441c:	61da      	str	r2, [r3, #28]
    }

    error_code |= HAL_I2C_ERROR_AF;
 800441e:	6a3b      	ldr	r3, [r7, #32]
 8004420:	2204      	movs	r2, #4
 8004422:	4313      	orrs	r3, r2
 8004424:	623b      	str	r3, [r7, #32]

    status = HAL_ERROR;
 8004426:	2327      	movs	r3, #39	@ 0x27
 8004428:	18fb      	adds	r3, r7, r3
 800442a:	2201      	movs	r2, #1
 800442c:	701a      	strb	r2, [r3, #0]
  }

  /* Refresh Content of Status register */
  itflag = hi2c->Instance->ISR;
 800442e:	68fb      	ldr	r3, [r7, #12]
 8004430:	681b      	ldr	r3, [r3, #0]
 8004432:	699b      	ldr	r3, [r3, #24]
 8004434:	61bb      	str	r3, [r7, #24]

  /* Then verify if an additional errors occurs */
  /* Check if a Bus error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_BERR))
 8004436:	69ba      	ldr	r2, [r7, #24]
 8004438:	2380      	movs	r3, #128	@ 0x80
 800443a:	005b      	lsls	r3, r3, #1
 800443c:	4013      	ands	r3, r2
 800443e:	d00c      	beq.n	800445a <I2C_IsErrorOccurred+0x14e>
  {
    error_code |= HAL_I2C_ERROR_BERR;
 8004440:	6a3b      	ldr	r3, [r7, #32]
 8004442:	2201      	movs	r2, #1
 8004444:	4313      	orrs	r3, r2
 8004446:	623b      	str	r3, [r7, #32]

    /* Clear BERR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_BERR);
 8004448:	68fb      	ldr	r3, [r7, #12]
 800444a:	681b      	ldr	r3, [r3, #0]
 800444c:	2280      	movs	r2, #128	@ 0x80
 800444e:	0052      	lsls	r2, r2, #1
 8004450:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 8004452:	2327      	movs	r3, #39	@ 0x27
 8004454:	18fb      	adds	r3, r7, r3
 8004456:	2201      	movs	r2, #1
 8004458:	701a      	strb	r2, [r3, #0]
  }

  /* Check if an Over-Run/Under-Run error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_OVR))
 800445a:	69ba      	ldr	r2, [r7, #24]
 800445c:	2380      	movs	r3, #128	@ 0x80
 800445e:	00db      	lsls	r3, r3, #3
 8004460:	4013      	ands	r3, r2
 8004462:	d00c      	beq.n	800447e <I2C_IsErrorOccurred+0x172>
  {
    error_code |= HAL_I2C_ERROR_OVR;
 8004464:	6a3b      	ldr	r3, [r7, #32]
 8004466:	2208      	movs	r2, #8
 8004468:	4313      	orrs	r3, r2
 800446a:	623b      	str	r3, [r7, #32]

    /* Clear OVR flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_OVR);
 800446c:	68fb      	ldr	r3, [r7, #12]
 800446e:	681b      	ldr	r3, [r3, #0]
 8004470:	2280      	movs	r2, #128	@ 0x80
 8004472:	00d2      	lsls	r2, r2, #3
 8004474:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 8004476:	2327      	movs	r3, #39	@ 0x27
 8004478:	18fb      	adds	r3, r7, r3
 800447a:	2201      	movs	r2, #1
 800447c:	701a      	strb	r2, [r3, #0]
  }

  /* Check if an Arbitration Loss error occurred */
  if (HAL_IS_BIT_SET(itflag, I2C_FLAG_ARLO))
 800447e:	69ba      	ldr	r2, [r7, #24]
 8004480:	2380      	movs	r3, #128	@ 0x80
 8004482:	009b      	lsls	r3, r3, #2
 8004484:	4013      	ands	r3, r2
 8004486:	d00c      	beq.n	80044a2 <I2C_IsErrorOccurred+0x196>
  {
    error_code |= HAL_I2C_ERROR_ARLO;
 8004488:	6a3b      	ldr	r3, [r7, #32]
 800448a:	2202      	movs	r2, #2
 800448c:	4313      	orrs	r3, r2
 800448e:	623b      	str	r3, [r7, #32]

    /* Clear ARLO flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_ARLO);
 8004490:	68fb      	ldr	r3, [r7, #12]
 8004492:	681b      	ldr	r3, [r3, #0]
 8004494:	2280      	movs	r2, #128	@ 0x80
 8004496:	0092      	lsls	r2, r2, #2
 8004498:	61da      	str	r2, [r3, #28]

    status = HAL_ERROR;
 800449a:	2327      	movs	r3, #39	@ 0x27
 800449c:	18fb      	adds	r3, r7, r3
 800449e:	2201      	movs	r2, #1
 80044a0:	701a      	strb	r2, [r3, #0]
  }

  if (status != HAL_OK)
 80044a2:	2327      	movs	r3, #39	@ 0x27
 80044a4:	18fb      	adds	r3, r7, r3
 80044a6:	781b      	ldrb	r3, [r3, #0]
 80044a8:	2b00      	cmp	r3, #0
 80044aa:	d01d      	beq.n	80044e8 <I2C_IsErrorOccurred+0x1dc>
  {
    /* Flush TX register */
    I2C_Flush_TXDR(hi2c);
 80044ac:	68fb      	ldr	r3, [r7, #12]
 80044ae:	0018      	movs	r0, r3
 80044b0:	f7ff fd8a 	bl	8003fc8 <I2C_Flush_TXDR>

    /* Clear Configuration Register 2 */
    I2C_RESET_CR2(hi2c);
 80044b4:	68fb      	ldr	r3, [r7, #12]
 80044b6:	681b      	ldr	r3, [r3, #0]
 80044b8:	685a      	ldr	r2, [r3, #4]
 80044ba:	68fb      	ldr	r3, [r7, #12]
 80044bc:	681b      	ldr	r3, [r3, #0]
 80044be:	490e      	ldr	r1, [pc, #56]	@ (80044f8 <I2C_IsErrorOccurred+0x1ec>)
 80044c0:	400a      	ands	r2, r1
 80044c2:	605a      	str	r2, [r3, #4]

    hi2c->ErrorCode |= error_code;
 80044c4:	68fb      	ldr	r3, [r7, #12]
 80044c6:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 80044c8:	6a3b      	ldr	r3, [r7, #32]
 80044ca:	431a      	orrs	r2, r3
 80044cc:	68fb      	ldr	r3, [r7, #12]
 80044ce:	645a      	str	r2, [r3, #68]	@ 0x44
    hi2c->State = HAL_I2C_STATE_READY;
 80044d0:	68fb      	ldr	r3, [r7, #12]
 80044d2:	2241      	movs	r2, #65	@ 0x41
 80044d4:	2120      	movs	r1, #32
 80044d6:	5499      	strb	r1, [r3, r2]
    hi2c->Mode = HAL_I2C_MODE_NONE;
 80044d8:	68fb      	ldr	r3, [r7, #12]
 80044da:	2242      	movs	r2, #66	@ 0x42
 80044dc:	2100      	movs	r1, #0
 80044de:	5499      	strb	r1, [r3, r2]

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80044e0:	68fb      	ldr	r3, [r7, #12]
 80044e2:	2240      	movs	r2, #64	@ 0x40
 80044e4:	2100      	movs	r1, #0
 80044e6:	5499      	strb	r1, [r3, r2]
  }

  return status;
 80044e8:	2327      	movs	r3, #39	@ 0x27
 80044ea:	18fb      	adds	r3, r7, r3
 80044ec:	781b      	ldrb	r3, [r3, #0]
}
 80044ee:	0018      	movs	r0, r3
 80044f0:	46bd      	mov	sp, r7
 80044f2:	b00a      	add	sp, #40	@ 0x28
 80044f4:	bd80      	pop	{r7, pc}
 80044f6:	46c0      	nop			@ (mov r8, r8)
 80044f8:	fe00e800 	.word	0xfe00e800

080044fc <I2C_TransferConfig>:
  *     @arg @ref I2C_GENERATE_START_WRITE Generate Restart for write request.
  * @retval None
  */
static void I2C_TransferConfig(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t Size, uint32_t Mode,
                               uint32_t Request)
{
 80044fc:	b590      	push	{r4, r7, lr}
 80044fe:	b087      	sub	sp, #28
 8004500:	af00      	add	r7, sp, #0
 8004502:	60f8      	str	r0, [r7, #12]
 8004504:	0008      	movs	r0, r1
 8004506:	0011      	movs	r1, r2
 8004508:	607b      	str	r3, [r7, #4]
 800450a:	240a      	movs	r4, #10
 800450c:	193b      	adds	r3, r7, r4
 800450e:	1c02      	adds	r2, r0, #0
 8004510:	801a      	strh	r2, [r3, #0]
 8004512:	2009      	movs	r0, #9
 8004514:	183b      	adds	r3, r7, r0
 8004516:	1c0a      	adds	r2, r1, #0
 8004518:	701a      	strb	r2, [r3, #0]
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_TRANSFER_MODE(Mode));
  assert_param(IS_TRANSFER_REQUEST(Request));

  /* Declaration of tmp to prevent undefined behavior of volatile usage */
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 800451a:	193b      	adds	r3, r7, r4
 800451c:	881b      	ldrh	r3, [r3, #0]
 800451e:	059b      	lsls	r3, r3, #22
 8004520:	0d9a      	lsrs	r2, r3, #22
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 8004522:	183b      	adds	r3, r7, r0
 8004524:	781b      	ldrb	r3, [r3, #0]
 8004526:	0419      	lsls	r1, r3, #16
 8004528:	23ff      	movs	r3, #255	@ 0xff
 800452a:	041b      	lsls	r3, r3, #16
 800452c:	400b      	ands	r3, r1
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 800452e:	431a      	orrs	r2, r3
                             (((uint32_t)Size << I2C_CR2_NBYTES_Pos) & I2C_CR2_NBYTES) | \
 8004530:	687b      	ldr	r3, [r7, #4]
 8004532:	431a      	orrs	r2, r3
  uint32_t tmp = ((uint32_t)(((uint32_t)DevAddress & I2C_CR2_SADD) | \
 8004534:	6abb      	ldr	r3, [r7, #40]	@ 0x28
 8004536:	4313      	orrs	r3, r2
 8004538:	005b      	lsls	r3, r3, #1
 800453a:	085b      	lsrs	r3, r3, #1
 800453c:	617b      	str	r3, [r7, #20]
                             (uint32_t)Mode | (uint32_t)Request) & (~0x80000000U));

  /* update CR2 register */
  MODIFY_REG(hi2c->Instance->CR2, \
 800453e:	68fb      	ldr	r3, [r7, #12]
 8004540:	681b      	ldr	r3, [r3, #0]
 8004542:	685b      	ldr	r3, [r3, #4]
 8004544:	6aba      	ldr	r2, [r7, #40]	@ 0x28
 8004546:	0d51      	lsrs	r1, r2, #21
 8004548:	2280      	movs	r2, #128	@ 0x80
 800454a:	00d2      	lsls	r2, r2, #3
 800454c:	400a      	ands	r2, r1
 800454e:	4907      	ldr	r1, [pc, #28]	@ (800456c <I2C_TransferConfig+0x70>)
 8004550:	430a      	orrs	r2, r1
 8004552:	43d2      	mvns	r2, r2
 8004554:	401a      	ands	r2, r3
 8004556:	0011      	movs	r1, r2
 8004558:	68fb      	ldr	r3, [r7, #12]
 800455a:	681b      	ldr	r3, [r3, #0]
 800455c:	697a      	ldr	r2, [r7, #20]
 800455e:	430a      	orrs	r2, r1
 8004560:	605a      	str	r2, [r3, #4]
             ((I2C_CR2_SADD | I2C_CR2_NBYTES | I2C_CR2_RELOAD | I2C_CR2_AUTOEND | \
               (I2C_CR2_RD_WRN & (uint32_t)(Request >> (31U - I2C_CR2_RD_WRN_Pos))) | \
               I2C_CR2_START | I2C_CR2_STOP)), tmp);
}
 8004562:	46c0      	nop			@ (mov r8, r8)
 8004564:	46bd      	mov	sp, r7
 8004566:	b007      	add	sp, #28
 8004568:	bd90      	pop	{r4, r7, pc}
 800456a:	46c0      	nop			@ (mov r8, r8)
 800456c:	03ff63ff 	.word	0x03ff63ff

08004570 <HAL_I2CEx_ConfigAnalogFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  AnalogFilter New state of the Analog filter.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigAnalogFilter(I2C_HandleTypeDef *hi2c, uint32_t AnalogFilter)
{
 8004570:	b580      	push	{r7, lr}
 8004572:	b082      	sub	sp, #8
 8004574:	af00      	add	r7, sp, #0
 8004576:	6078      	str	r0, [r7, #4]
 8004578:	6039      	str	r1, [r7, #0]
  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_ANALOG_FILTER(AnalogFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 800457a:	687b      	ldr	r3, [r7, #4]
 800457c:	2241      	movs	r2, #65	@ 0x41
 800457e:	5c9b      	ldrb	r3, [r3, r2]
 8004580:	b2db      	uxtb	r3, r3
 8004582:	2b20      	cmp	r3, #32
 8004584:	d138      	bne.n	80045f8 <HAL_I2CEx_ConfigAnalogFilter+0x88>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 8004586:	687b      	ldr	r3, [r7, #4]
 8004588:	2240      	movs	r2, #64	@ 0x40
 800458a:	5c9b      	ldrb	r3, [r3, r2]
 800458c:	2b01      	cmp	r3, #1
 800458e:	d101      	bne.n	8004594 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 8004590:	2302      	movs	r3, #2
 8004592:	e032      	b.n	80045fa <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8004594:	687b      	ldr	r3, [r7, #4]
 8004596:	2240      	movs	r2, #64	@ 0x40
 8004598:	2101      	movs	r1, #1
 800459a:	5499      	strb	r1, [r3, r2]

    hi2c->State = HAL_I2C_STATE_BUSY;
 800459c:	687b      	ldr	r3, [r7, #4]
 800459e:	2241      	movs	r2, #65	@ 0x41
 80045a0:	2124      	movs	r1, #36	@ 0x24
 80045a2:	5499      	strb	r1, [r3, r2]

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 80045a4:	687b      	ldr	r3, [r7, #4]
 80045a6:	681b      	ldr	r3, [r3, #0]
 80045a8:	681a      	ldr	r2, [r3, #0]
 80045aa:	687b      	ldr	r3, [r7, #4]
 80045ac:	681b      	ldr	r3, [r3, #0]
 80045ae:	2101      	movs	r1, #1
 80045b0:	438a      	bics	r2, r1
 80045b2:	601a      	str	r2, [r3, #0]

    /* Reset I2Cx ANOFF bit */
    hi2c->Instance->CR1 &= ~(I2C_CR1_ANFOFF);
 80045b4:	687b      	ldr	r3, [r7, #4]
 80045b6:	681b      	ldr	r3, [r3, #0]
 80045b8:	681a      	ldr	r2, [r3, #0]
 80045ba:	687b      	ldr	r3, [r7, #4]
 80045bc:	681b      	ldr	r3, [r3, #0]
 80045be:	4911      	ldr	r1, [pc, #68]	@ (8004604 <HAL_I2CEx_ConfigAnalogFilter+0x94>)
 80045c0:	400a      	ands	r2, r1
 80045c2:	601a      	str	r2, [r3, #0]

    /* Set analog filter bit*/
    hi2c->Instance->CR1 |= AnalogFilter;
 80045c4:	687b      	ldr	r3, [r7, #4]
 80045c6:	681b      	ldr	r3, [r3, #0]
 80045c8:	6819      	ldr	r1, [r3, #0]
 80045ca:	687b      	ldr	r3, [r7, #4]
 80045cc:	681b      	ldr	r3, [r3, #0]
 80045ce:	683a      	ldr	r2, [r7, #0]
 80045d0:	430a      	orrs	r2, r1
 80045d2:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 80045d4:	687b      	ldr	r3, [r7, #4]
 80045d6:	681b      	ldr	r3, [r3, #0]
 80045d8:	681a      	ldr	r2, [r3, #0]
 80045da:	687b      	ldr	r3, [r7, #4]
 80045dc:	681b      	ldr	r3, [r3, #0]
 80045de:	2101      	movs	r1, #1
 80045e0:	430a      	orrs	r2, r1
 80045e2:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 80045e4:	687b      	ldr	r3, [r7, #4]
 80045e6:	2241      	movs	r2, #65	@ 0x41
 80045e8:	2120      	movs	r1, #32
 80045ea:	5499      	strb	r1, [r3, r2]

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 80045ec:	687b      	ldr	r3, [r7, #4]
 80045ee:	2240      	movs	r2, #64	@ 0x40
 80045f0:	2100      	movs	r1, #0
 80045f2:	5499      	strb	r1, [r3, r2]

    return HAL_OK;
 80045f4:	2300      	movs	r3, #0
 80045f6:	e000      	b.n	80045fa <HAL_I2CEx_ConfigAnalogFilter+0x8a>
  }
  else
  {
    return HAL_BUSY;
 80045f8:	2302      	movs	r3, #2
  }
}
 80045fa:	0018      	movs	r0, r3
 80045fc:	46bd      	mov	sp, r7
 80045fe:	b002      	add	sp, #8
 8004600:	bd80      	pop	{r7, pc}
 8004602:	46c0      	nop			@ (mov r8, r8)
 8004604:	ffffefff 	.word	0xffffefff

08004608 <HAL_I2CEx_ConfigDigitalFilter>:
  *                the configuration information for the specified I2Cx peripheral.
  * @param  DigitalFilter Coefficient of digital noise filter between Min_Data=0x00 and Max_Data=0x0F.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2CEx_ConfigDigitalFilter(I2C_HandleTypeDef *hi2c, uint32_t DigitalFilter)
{
 8004608:	b580      	push	{r7, lr}
 800460a:	b084      	sub	sp, #16
 800460c:	af00      	add	r7, sp, #0
 800460e:	6078      	str	r0, [r7, #4]
 8004610:	6039      	str	r1, [r7, #0]

  /* Check the parameters */
  assert_param(IS_I2C_ALL_INSTANCE(hi2c->Instance));
  assert_param(IS_I2C_DIGITAL_FILTER(DigitalFilter));

  if (hi2c->State == HAL_I2C_STATE_READY)
 8004612:	687b      	ldr	r3, [r7, #4]
 8004614:	2241      	movs	r2, #65	@ 0x41
 8004616:	5c9b      	ldrb	r3, [r3, r2]
 8004618:	b2db      	uxtb	r3, r3
 800461a:	2b20      	cmp	r3, #32
 800461c:	d139      	bne.n	8004692 <HAL_I2CEx_ConfigDigitalFilter+0x8a>
  {
    /* Process Locked */
    __HAL_LOCK(hi2c);
 800461e:	687b      	ldr	r3, [r7, #4]
 8004620:	2240      	movs	r2, #64	@ 0x40
 8004622:	5c9b      	ldrb	r3, [r3, r2]
 8004624:	2b01      	cmp	r3, #1
 8004626:	d101      	bne.n	800462c <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8004628:	2302      	movs	r3, #2
 800462a:	e033      	b.n	8004694 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 800462c:	687b      	ldr	r3, [r7, #4]
 800462e:	2240      	movs	r2, #64	@ 0x40
 8004630:	2101      	movs	r1, #1
 8004632:	5499      	strb	r1, [r3, r2]

    hi2c->State = HAL_I2C_STATE_BUSY;
 8004634:	687b      	ldr	r3, [r7, #4]
 8004636:	2241      	movs	r2, #65	@ 0x41
 8004638:	2124      	movs	r1, #36	@ 0x24
 800463a:	5499      	strb	r1, [r3, r2]

    /* Disable the selected I2C peripheral */
    __HAL_I2C_DISABLE(hi2c);
 800463c:	687b      	ldr	r3, [r7, #4]
 800463e:	681b      	ldr	r3, [r3, #0]
 8004640:	681a      	ldr	r2, [r3, #0]
 8004642:	687b      	ldr	r3, [r7, #4]
 8004644:	681b      	ldr	r3, [r3, #0]
 8004646:	2101      	movs	r1, #1
 8004648:	438a      	bics	r2, r1
 800464a:	601a      	str	r2, [r3, #0]

    /* Get the old register value */
    tmpreg = hi2c->Instance->CR1;
 800464c:	687b      	ldr	r3, [r7, #4]
 800464e:	681b      	ldr	r3, [r3, #0]
 8004650:	681b      	ldr	r3, [r3, #0]
 8004652:	60fb      	str	r3, [r7, #12]

    /* Reset I2Cx DNF bits [11:8] */
    tmpreg &= ~(I2C_CR1_DNF);
 8004654:	68fb      	ldr	r3, [r7, #12]
 8004656:	4a11      	ldr	r2, [pc, #68]	@ (800469c <HAL_I2CEx_ConfigDigitalFilter+0x94>)
 8004658:	4013      	ands	r3, r2
 800465a:	60fb      	str	r3, [r7, #12]

    /* Set I2Cx DNF coefficient */
    tmpreg |= DigitalFilter << 8U;
 800465c:	683b      	ldr	r3, [r7, #0]
 800465e:	021b      	lsls	r3, r3, #8
 8004660:	68fa      	ldr	r2, [r7, #12]
 8004662:	4313      	orrs	r3, r2
 8004664:	60fb      	str	r3, [r7, #12]

    /* Store the new register value */
    hi2c->Instance->CR1 = tmpreg;
 8004666:	687b      	ldr	r3, [r7, #4]
 8004668:	681b      	ldr	r3, [r3, #0]
 800466a:	68fa      	ldr	r2, [r7, #12]
 800466c:	601a      	str	r2, [r3, #0]

    __HAL_I2C_ENABLE(hi2c);
 800466e:	687b      	ldr	r3, [r7, #4]
 8004670:	681b      	ldr	r3, [r3, #0]
 8004672:	681a      	ldr	r2, [r3, #0]
 8004674:	687b      	ldr	r3, [r7, #4]
 8004676:	681b      	ldr	r3, [r3, #0]
 8004678:	2101      	movs	r1, #1
 800467a:	430a      	orrs	r2, r1
 800467c:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 800467e:	687b      	ldr	r3, [r7, #4]
 8004680:	2241      	movs	r2, #65	@ 0x41
 8004682:	2120      	movs	r1, #32
 8004684:	5499      	strb	r1, [r3, r2]

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 8004686:	687b      	ldr	r3, [r7, #4]
 8004688:	2240      	movs	r2, #64	@ 0x40
 800468a:	2100      	movs	r1, #0
 800468c:	5499      	strb	r1, [r3, r2]

    return HAL_OK;
 800468e:	2300      	movs	r3, #0
 8004690:	e000      	b.n	8004694 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
  }
  else
  {
    return HAL_BUSY;
 8004692:	2302      	movs	r3, #2
  }
}
 8004694:	0018      	movs	r0, r3
 8004696:	46bd      	mov	sp, r7
 8004698:	b004      	add	sp, #16
 800469a:	bd80      	pop	{r7, pc}
 800469c:	fffff0ff 	.word	0xfffff0ff

080046a0 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(const RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80046a0:	b5b0      	push	{r4, r5, r7, lr}
 80046a2:	b08a      	sub	sp, #40	@ 0x28
 80046a4:	af00      	add	r7, sp, #0
 80046a6:	6078      	str	r0, [r7, #4]
  uint32_t hsi_state;
  HAL_StatusTypeDef status;
  uint32_t sysclk_source, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 80046a8:	687b      	ldr	r3, [r7, #4]
 80046aa:	2b00      	cmp	r3, #0
 80046ac:	d102      	bne.n	80046b4 <HAL_RCC_OscConfig+0x14>
  {
    return HAL_ERROR;
 80046ae:	2301      	movs	r3, #1
 80046b0:	f000 fbaf 	bl	8004e12 <HAL_RCC_OscConfig+0x772>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 80046b4:	4bcf      	ldr	r3, [pc, #828]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 80046b6:	68db      	ldr	r3, [r3, #12]
 80046b8:	220c      	movs	r2, #12
 80046ba:	4013      	ands	r3, r2
 80046bc:	623b      	str	r3, [r7, #32]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 80046be:	4bcd      	ldr	r3, [pc, #820]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 80046c0:	68da      	ldr	r2, [r3, #12]
 80046c2:	2380      	movs	r3, #128	@ 0x80
 80046c4:	025b      	lsls	r3, r3, #9
 80046c6:	4013      	ands	r3, r2
 80046c8:	61fb      	str	r3, [r7, #28]

  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80046ca:	687b      	ldr	r3, [r7, #4]
 80046cc:	681b      	ldr	r3, [r3, #0]
 80046ce:	2201      	movs	r2, #1
 80046d0:	4013      	ands	r3, r2
 80046d2:	d100      	bne.n	80046d6 <HAL_RCC_OscConfig+0x36>
 80046d4:	e07e      	b.n	80047d4 <HAL_RCC_OscConfig+0x134>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE)
 80046d6:	6a3b      	ldr	r3, [r7, #32]
 80046d8:	2b08      	cmp	r3, #8
 80046da:	d007      	beq.n	80046ec <HAL_RCC_OscConfig+0x4c>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSE)))
 80046dc:	6a3b      	ldr	r3, [r7, #32]
 80046de:	2b0c      	cmp	r3, #12
 80046e0:	d112      	bne.n	8004708 <HAL_RCC_OscConfig+0x68>
 80046e2:	69fa      	ldr	r2, [r7, #28]
 80046e4:	2380      	movs	r3, #128	@ 0x80
 80046e6:	025b      	lsls	r3, r3, #9
 80046e8:	429a      	cmp	r2, r3
 80046ea:	d10d      	bne.n	8004708 <HAL_RCC_OscConfig+0x68>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80046ec:	4bc1      	ldr	r3, [pc, #772]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 80046ee:	681a      	ldr	r2, [r3, #0]
 80046f0:	2380      	movs	r3, #128	@ 0x80
 80046f2:	029b      	lsls	r3, r3, #10
 80046f4:	4013      	ands	r3, r2
 80046f6:	d100      	bne.n	80046fa <HAL_RCC_OscConfig+0x5a>
 80046f8:	e06b      	b.n	80047d2 <HAL_RCC_OscConfig+0x132>
 80046fa:	687b      	ldr	r3, [r7, #4]
 80046fc:	685b      	ldr	r3, [r3, #4]
 80046fe:	2b00      	cmp	r3, #0
 8004700:	d167      	bne.n	80047d2 <HAL_RCC_OscConfig+0x132>
      {
        return HAL_ERROR;
 8004702:	2301      	movs	r3, #1
 8004704:	f000 fb85 	bl	8004e12 <HAL_RCC_OscConfig+0x772>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8004708:	687b      	ldr	r3, [r7, #4]
 800470a:	685a      	ldr	r2, [r3, #4]
 800470c:	2380      	movs	r3, #128	@ 0x80
 800470e:	025b      	lsls	r3, r3, #9
 8004710:	429a      	cmp	r2, r3
 8004712:	d107      	bne.n	8004724 <HAL_RCC_OscConfig+0x84>
 8004714:	4bb7      	ldr	r3, [pc, #732]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 8004716:	681a      	ldr	r2, [r3, #0]
 8004718:	4bb6      	ldr	r3, [pc, #728]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 800471a:	2180      	movs	r1, #128	@ 0x80
 800471c:	0249      	lsls	r1, r1, #9
 800471e:	430a      	orrs	r2, r1
 8004720:	601a      	str	r2, [r3, #0]
 8004722:	e027      	b.n	8004774 <HAL_RCC_OscConfig+0xd4>
 8004724:	687b      	ldr	r3, [r7, #4]
 8004726:	685a      	ldr	r2, [r3, #4]
 8004728:	23a0      	movs	r3, #160	@ 0xa0
 800472a:	02db      	lsls	r3, r3, #11
 800472c:	429a      	cmp	r2, r3
 800472e:	d10e      	bne.n	800474e <HAL_RCC_OscConfig+0xae>
 8004730:	4bb0      	ldr	r3, [pc, #704]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 8004732:	681a      	ldr	r2, [r3, #0]
 8004734:	4baf      	ldr	r3, [pc, #700]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 8004736:	2180      	movs	r1, #128	@ 0x80
 8004738:	02c9      	lsls	r1, r1, #11
 800473a:	430a      	orrs	r2, r1
 800473c:	601a      	str	r2, [r3, #0]
 800473e:	4bad      	ldr	r3, [pc, #692]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 8004740:	681a      	ldr	r2, [r3, #0]
 8004742:	4bac      	ldr	r3, [pc, #688]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 8004744:	2180      	movs	r1, #128	@ 0x80
 8004746:	0249      	lsls	r1, r1, #9
 8004748:	430a      	orrs	r2, r1
 800474a:	601a      	str	r2, [r3, #0]
 800474c:	e012      	b.n	8004774 <HAL_RCC_OscConfig+0xd4>
 800474e:	4ba9      	ldr	r3, [pc, #676]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 8004750:	681a      	ldr	r2, [r3, #0]
 8004752:	4ba8      	ldr	r3, [pc, #672]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 8004754:	49a8      	ldr	r1, [pc, #672]	@ (80049f8 <HAL_RCC_OscConfig+0x358>)
 8004756:	400a      	ands	r2, r1
 8004758:	601a      	str	r2, [r3, #0]
 800475a:	4ba6      	ldr	r3, [pc, #664]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 800475c:	681a      	ldr	r2, [r3, #0]
 800475e:	2380      	movs	r3, #128	@ 0x80
 8004760:	025b      	lsls	r3, r3, #9
 8004762:	4013      	ands	r3, r2
 8004764:	60fb      	str	r3, [r7, #12]
 8004766:	68fb      	ldr	r3, [r7, #12]
 8004768:	4ba2      	ldr	r3, [pc, #648]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 800476a:	681a      	ldr	r2, [r3, #0]
 800476c:	4ba1      	ldr	r3, [pc, #644]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 800476e:	49a3      	ldr	r1, [pc, #652]	@ (80049fc <HAL_RCC_OscConfig+0x35c>)
 8004770:	400a      	ands	r2, r1
 8004772:	601a      	str	r2, [r3, #0]

      /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 8004774:	687b      	ldr	r3, [r7, #4]
 8004776:	685b      	ldr	r3, [r3, #4]
 8004778:	2b00      	cmp	r3, #0
 800477a:	d015      	beq.n	80047a8 <HAL_RCC_OscConfig+0x108>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 800477c:	f7fe fd2a 	bl	80031d4 <HAL_GetTick>
 8004780:	0003      	movs	r3, r0
 8004782:	61bb      	str	r3, [r7, #24]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8004784:	e009      	b.n	800479a <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 8004786:	f7fe fd25 	bl	80031d4 <HAL_GetTick>
 800478a:	0002      	movs	r2, r0
 800478c:	69bb      	ldr	r3, [r7, #24]
 800478e:	1ad3      	subs	r3, r2, r3
 8004790:	2b64      	cmp	r3, #100	@ 0x64
 8004792:	d902      	bls.n	800479a <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 8004794:	2303      	movs	r3, #3
 8004796:	f000 fb3c 	bl	8004e12 <HAL_RCC_OscConfig+0x772>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 800479a:	4b96      	ldr	r3, [pc, #600]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 800479c:	681a      	ldr	r2, [r3, #0]
 800479e:	2380      	movs	r3, #128	@ 0x80
 80047a0:	029b      	lsls	r3, r3, #10
 80047a2:	4013      	ands	r3, r2
 80047a4:	d0ef      	beq.n	8004786 <HAL_RCC_OscConfig+0xe6>
 80047a6:	e015      	b.n	80047d4 <HAL_RCC_OscConfig+0x134>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80047a8:	f7fe fd14 	bl	80031d4 <HAL_GetTick>
 80047ac:	0003      	movs	r3, r0
 80047ae:	61bb      	str	r3, [r7, #24]

        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 80047b0:	e008      	b.n	80047c4 <HAL_RCC_OscConfig+0x124>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80047b2:	f7fe fd0f 	bl	80031d4 <HAL_GetTick>
 80047b6:	0002      	movs	r2, r0
 80047b8:	69bb      	ldr	r3, [r7, #24]
 80047ba:	1ad3      	subs	r3, r2, r3
 80047bc:	2b64      	cmp	r3, #100	@ 0x64
 80047be:	d901      	bls.n	80047c4 <HAL_RCC_OscConfig+0x124>
          {
            return HAL_TIMEOUT;
 80047c0:	2303      	movs	r3, #3
 80047c2:	e326      	b.n	8004e12 <HAL_RCC_OscConfig+0x772>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 80047c4:	4b8b      	ldr	r3, [pc, #556]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 80047c6:	681a      	ldr	r2, [r3, #0]
 80047c8:	2380      	movs	r3, #128	@ 0x80
 80047ca:	029b      	lsls	r3, r3, #10
 80047cc:	4013      	ands	r3, r2
 80047ce:	d1f0      	bne.n	80047b2 <HAL_RCC_OscConfig+0x112>
 80047d0:	e000      	b.n	80047d4 <HAL_RCC_OscConfig+0x134>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 80047d2:	46c0      	nop			@ (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 80047d4:	687b      	ldr	r3, [r7, #4]
 80047d6:	681b      	ldr	r3, [r3, #0]
 80047d8:	2202      	movs	r2, #2
 80047da:	4013      	ands	r3, r2
 80047dc:	d100      	bne.n	80047e0 <HAL_RCC_OscConfig+0x140>
 80047de:	e08b      	b.n	80048f8 <HAL_RCC_OscConfig+0x258>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    hsi_state = RCC_OscInitStruct->HSIState;
 80047e0:	687b      	ldr	r3, [r7, #4]
 80047e2:	68db      	ldr	r3, [r3, #12]
 80047e4:	617b      	str	r3, [r7, #20]
      hsi_state &= ~RCC_CR_HSIOUTEN;
    }
#endif

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI)
 80047e6:	6a3b      	ldr	r3, [r7, #32]
 80047e8:	2b04      	cmp	r3, #4
 80047ea:	d005      	beq.n	80047f8 <HAL_RCC_OscConfig+0x158>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSI)))
 80047ec:	6a3b      	ldr	r3, [r7, #32]
 80047ee:	2b0c      	cmp	r3, #12
 80047f0:	d13e      	bne.n	8004870 <HAL_RCC_OscConfig+0x1d0>
 80047f2:	69fb      	ldr	r3, [r7, #28]
 80047f4:	2b00      	cmp	r3, #0
 80047f6:	d13b      	bne.n	8004870 <HAL_RCC_OscConfig+0x1d0>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (hsi_state == RCC_HSI_OFF))
 80047f8:	4b7e      	ldr	r3, [pc, #504]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 80047fa:	681b      	ldr	r3, [r3, #0]
 80047fc:	2204      	movs	r2, #4
 80047fe:	4013      	ands	r3, r2
 8004800:	d004      	beq.n	800480c <HAL_RCC_OscConfig+0x16c>
 8004802:	697b      	ldr	r3, [r7, #20]
 8004804:	2b00      	cmp	r3, #0
 8004806:	d101      	bne.n	800480c <HAL_RCC_OscConfig+0x16c>
      {
        return HAL_ERROR;
 8004808:	2301      	movs	r3, #1
 800480a:	e302      	b.n	8004e12 <HAL_RCC_OscConfig+0x772>
      }
      /* Otherwise, just the calibration and HSI or HSIdiv4 are allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 800480c:	4b79      	ldr	r3, [pc, #484]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 800480e:	685b      	ldr	r3, [r3, #4]
 8004810:	4a7b      	ldr	r2, [pc, #492]	@ (8004a00 <HAL_RCC_OscConfig+0x360>)
 8004812:	4013      	ands	r3, r2
 8004814:	0019      	movs	r1, r3
 8004816:	687b      	ldr	r3, [r7, #4]
 8004818:	691b      	ldr	r3, [r3, #16]
 800481a:	021a      	lsls	r2, r3, #8
 800481c:	4b75      	ldr	r3, [pc, #468]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 800481e:	430a      	orrs	r2, r1
 8004820:	605a      	str	r2, [r3, #4]

        /* Enable the Internal High Speed oscillator (HSI or HSIdiv4) */
        __HAL_RCC_HSI_CONFIG(hsi_state);
 8004822:	4b74      	ldr	r3, [pc, #464]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 8004824:	681b      	ldr	r3, [r3, #0]
 8004826:	2209      	movs	r2, #9
 8004828:	4393      	bics	r3, r2
 800482a:	0019      	movs	r1, r3
 800482c:	4b71      	ldr	r3, [pc, #452]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 800482e:	697a      	ldr	r2, [r7, #20]
 8004830:	430a      	orrs	r2, r1
 8004832:	601a      	str	r2, [r3, #0]
      }

      /* Update the SystemCoreClock global variable */
      SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8004834:	f000 fc40 	bl	80050b8 <HAL_RCC_GetSysClockFreq>
 8004838:	0001      	movs	r1, r0
 800483a:	4b6e      	ldr	r3, [pc, #440]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 800483c:	68db      	ldr	r3, [r3, #12]
 800483e:	091b      	lsrs	r3, r3, #4
 8004840:	220f      	movs	r2, #15
 8004842:	4013      	ands	r3, r2
 8004844:	4a6f      	ldr	r2, [pc, #444]	@ (8004a04 <HAL_RCC_OscConfig+0x364>)
 8004846:	5cd3      	ldrb	r3, [r2, r3]
 8004848:	000a      	movs	r2, r1
 800484a:	40da      	lsrs	r2, r3
 800484c:	4b6e      	ldr	r3, [pc, #440]	@ (8004a08 <HAL_RCC_OscConfig+0x368>)
 800484e:	601a      	str	r2, [r3, #0]

      /* Configure the source of time base considering new system clocks settings*/
      status = HAL_InitTick (uwTickPrio);
 8004850:	4b6e      	ldr	r3, [pc, #440]	@ (8004a0c <HAL_RCC_OscConfig+0x36c>)
 8004852:	681b      	ldr	r3, [r3, #0]
 8004854:	2513      	movs	r5, #19
 8004856:	197c      	adds	r4, r7, r5
 8004858:	0018      	movs	r0, r3
 800485a:	f7fe fc75 	bl	8003148 <HAL_InitTick>
 800485e:	0003      	movs	r3, r0
 8004860:	7023      	strb	r3, [r4, #0]
      if(status != HAL_OK)
 8004862:	197b      	adds	r3, r7, r5
 8004864:	781b      	ldrb	r3, [r3, #0]
 8004866:	2b00      	cmp	r3, #0
 8004868:	d046      	beq.n	80048f8 <HAL_RCC_OscConfig+0x258>
      {
        return status;
 800486a:	197b      	adds	r3, r7, r5
 800486c:	781b      	ldrb	r3, [r3, #0]
 800486e:	e2d0      	b.n	8004e12 <HAL_RCC_OscConfig+0x772>
      }
    }
    else
    {
      /* Check the HSI State */
      if(hsi_state != RCC_HSI_OFF)
 8004870:	697b      	ldr	r3, [r7, #20]
 8004872:	2b00      	cmp	r3, #0
 8004874:	d027      	beq.n	80048c6 <HAL_RCC_OscConfig+0x226>
      {
        /* Enable the Internal High Speed oscillator (HSI or HSIdiv4) */
        __HAL_RCC_HSI_CONFIG(hsi_state);
 8004876:	4b5f      	ldr	r3, [pc, #380]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 8004878:	681b      	ldr	r3, [r3, #0]
 800487a:	2209      	movs	r2, #9
 800487c:	4393      	bics	r3, r2
 800487e:	0019      	movs	r1, r3
 8004880:	4b5c      	ldr	r3, [pc, #368]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 8004882:	697a      	ldr	r2, [r7, #20]
 8004884:	430a      	orrs	r2, r1
 8004886:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004888:	f7fe fca4 	bl	80031d4 <HAL_GetTick>
 800488c:	0003      	movs	r3, r0
 800488e:	61bb      	str	r3, [r7, #24]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8004890:	e008      	b.n	80048a4 <HAL_RCC_OscConfig+0x204>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8004892:	f7fe fc9f 	bl	80031d4 <HAL_GetTick>
 8004896:	0002      	movs	r2, r0
 8004898:	69bb      	ldr	r3, [r7, #24]
 800489a:	1ad3      	subs	r3, r2, r3
 800489c:	2b02      	cmp	r3, #2
 800489e:	d901      	bls.n	80048a4 <HAL_RCC_OscConfig+0x204>
          {
            return HAL_TIMEOUT;
 80048a0:	2303      	movs	r3, #3
 80048a2:	e2b6      	b.n	8004e12 <HAL_RCC_OscConfig+0x772>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 80048a4:	4b53      	ldr	r3, [pc, #332]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 80048a6:	681b      	ldr	r3, [r3, #0]
 80048a8:	2204      	movs	r2, #4
 80048aa:	4013      	ands	r3, r2
 80048ac:	d0f1      	beq.n	8004892 <HAL_RCC_OscConfig+0x1f2>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80048ae:	4b51      	ldr	r3, [pc, #324]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 80048b0:	685b      	ldr	r3, [r3, #4]
 80048b2:	4a53      	ldr	r2, [pc, #332]	@ (8004a00 <HAL_RCC_OscConfig+0x360>)
 80048b4:	4013      	ands	r3, r2
 80048b6:	0019      	movs	r1, r3
 80048b8:	687b      	ldr	r3, [r7, #4]
 80048ba:	691b      	ldr	r3, [r3, #16]
 80048bc:	021a      	lsls	r2, r3, #8
 80048be:	4b4d      	ldr	r3, [pc, #308]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 80048c0:	430a      	orrs	r2, r1
 80048c2:	605a      	str	r2, [r3, #4]
 80048c4:	e018      	b.n	80048f8 <HAL_RCC_OscConfig+0x258>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 80048c6:	4b4b      	ldr	r3, [pc, #300]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 80048c8:	681a      	ldr	r2, [r3, #0]
 80048ca:	4b4a      	ldr	r3, [pc, #296]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 80048cc:	2101      	movs	r1, #1
 80048ce:	438a      	bics	r2, r1
 80048d0:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80048d2:	f7fe fc7f 	bl	80031d4 <HAL_GetTick>
 80048d6:	0003      	movs	r3, r0
 80048d8:	61bb      	str	r3, [r7, #24]

        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 80048da:	e008      	b.n	80048ee <HAL_RCC_OscConfig+0x24e>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 80048dc:	f7fe fc7a 	bl	80031d4 <HAL_GetTick>
 80048e0:	0002      	movs	r2, r0
 80048e2:	69bb      	ldr	r3, [r7, #24]
 80048e4:	1ad3      	subs	r3, r2, r3
 80048e6:	2b02      	cmp	r3, #2
 80048e8:	d901      	bls.n	80048ee <HAL_RCC_OscConfig+0x24e>
          {
            return HAL_TIMEOUT;
 80048ea:	2303      	movs	r3, #3
 80048ec:	e291      	b.n	8004e12 <HAL_RCC_OscConfig+0x772>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 80048ee:	4b41      	ldr	r3, [pc, #260]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 80048f0:	681b      	ldr	r3, [r3, #0]
 80048f2:	2204      	movs	r2, #4
 80048f4:	4013      	ands	r3, r2
 80048f6:	d1f1      	bne.n	80048dc <HAL_RCC_OscConfig+0x23c>
        }
      }
    }
  }
  /*----------------------------- MSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 80048f8:	687b      	ldr	r3, [r7, #4]
 80048fa:	681b      	ldr	r3, [r3, #0]
 80048fc:	2210      	movs	r2, #16
 80048fe:	4013      	ands	r3, r2
 8004900:	d100      	bne.n	8004904 <HAL_RCC_OscConfig+0x264>
 8004902:	e0a1      	b.n	8004a48 <HAL_RCC_OscConfig+0x3a8>
  {
    /* When the MSI is used as system clock it will not be disabled */
    if(sysclk_source == RCC_CFGR_SWS_MSI)
 8004904:	6a3b      	ldr	r3, [r7, #32]
 8004906:	2b00      	cmp	r3, #0
 8004908:	d140      	bne.n	800498c <HAL_RCC_OscConfig+0x2ec>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 800490a:	4b3a      	ldr	r3, [pc, #232]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 800490c:	681a      	ldr	r2, [r3, #0]
 800490e:	2380      	movs	r3, #128	@ 0x80
 8004910:	009b      	lsls	r3, r3, #2
 8004912:	4013      	ands	r3, r2
 8004914:	d005      	beq.n	8004922 <HAL_RCC_OscConfig+0x282>
 8004916:	687b      	ldr	r3, [r7, #4]
 8004918:	69db      	ldr	r3, [r3, #28]
 800491a:	2b00      	cmp	r3, #0
 800491c:	d101      	bne.n	8004922 <HAL_RCC_OscConfig+0x282>
      {
        return HAL_ERROR;
 800491e:	2301      	movs	r3, #1
 8004920:	e277      	b.n	8004e12 <HAL_RCC_OscConfig+0x772>
        /* Check MSICalibrationValue and MSIClockRange input parameters */
        assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
        assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));

        /* Selects the Multiple Speed oscillator (MSI) clock range .*/
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8004922:	4b34      	ldr	r3, [pc, #208]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 8004924:	685b      	ldr	r3, [r3, #4]
 8004926:	4a3a      	ldr	r2, [pc, #232]	@ (8004a10 <HAL_RCC_OscConfig+0x370>)
 8004928:	4013      	ands	r3, r2
 800492a:	0019      	movs	r1, r3
 800492c:	687b      	ldr	r3, [r7, #4]
 800492e:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 8004930:	4b30      	ldr	r3, [pc, #192]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 8004932:	430a      	orrs	r2, r1
 8004934:	605a      	str	r2, [r3, #4]
        /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8004936:	4b2f      	ldr	r3, [pc, #188]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 8004938:	685b      	ldr	r3, [r3, #4]
 800493a:	021b      	lsls	r3, r3, #8
 800493c:	0a19      	lsrs	r1, r3, #8
 800493e:	687b      	ldr	r3, [r7, #4]
 8004940:	6a1b      	ldr	r3, [r3, #32]
 8004942:	061a      	lsls	r2, r3, #24
 8004944:	4b2b      	ldr	r3, [pc, #172]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 8004946:	430a      	orrs	r2, r1
 8004948:	605a      	str	r2, [r3, #4]


        /* Update the SystemCoreClock global variable */
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 800494a:	687b      	ldr	r3, [r7, #4]
 800494c:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 800494e:	0b5b      	lsrs	r3, r3, #13
 8004950:	3301      	adds	r3, #1
 8004952:	2280      	movs	r2, #128	@ 0x80
 8004954:	0212      	lsls	r2, r2, #8
 8004956:	409a      	lsls	r2, r3
                           >> AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 8004958:	4b26      	ldr	r3, [pc, #152]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 800495a:	68db      	ldr	r3, [r3, #12]
 800495c:	091b      	lsrs	r3, r3, #4
 800495e:	210f      	movs	r1, #15
 8004960:	400b      	ands	r3, r1
 8004962:	4928      	ldr	r1, [pc, #160]	@ (8004a04 <HAL_RCC_OscConfig+0x364>)
 8004964:	5ccb      	ldrb	r3, [r1, r3]
 8004966:	40da      	lsrs	r2, r3
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 8004968:	4b27      	ldr	r3, [pc, #156]	@ (8004a08 <HAL_RCC_OscConfig+0x368>)
 800496a:	601a      	str	r2, [r3, #0]

        /* Configure the source of time base considering new system clocks settings*/
        status = HAL_InitTick (uwTickPrio);
 800496c:	4b27      	ldr	r3, [pc, #156]	@ (8004a0c <HAL_RCC_OscConfig+0x36c>)
 800496e:	681b      	ldr	r3, [r3, #0]
 8004970:	2513      	movs	r5, #19
 8004972:	197c      	adds	r4, r7, r5
 8004974:	0018      	movs	r0, r3
 8004976:	f7fe fbe7 	bl	8003148 <HAL_InitTick>
 800497a:	0003      	movs	r3, r0
 800497c:	7023      	strb	r3, [r4, #0]
        if(status != HAL_OK)
 800497e:	197b      	adds	r3, r7, r5
 8004980:	781b      	ldrb	r3, [r3, #0]
 8004982:	2b00      	cmp	r3, #0
 8004984:	d060      	beq.n	8004a48 <HAL_RCC_OscConfig+0x3a8>
        {
          return status;
 8004986:	197b      	adds	r3, r7, r5
 8004988:	781b      	ldrb	r3, [r3, #0]
 800498a:	e242      	b.n	8004e12 <HAL_RCC_OscConfig+0x772>
    {
      /* Check MSI State */
      assert_param(IS_RCC_MSI(RCC_OscInitStruct->MSIState));

      /* Check the MSI State */
      if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 800498c:	687b      	ldr	r3, [r7, #4]
 800498e:	69db      	ldr	r3, [r3, #28]
 8004990:	2b00      	cmp	r3, #0
 8004992:	d03f      	beq.n	8004a14 <HAL_RCC_OscConfig+0x374>
      {
        /* Enable the Multi Speed oscillator (MSI). */
        __HAL_RCC_MSI_ENABLE();
 8004994:	4b17      	ldr	r3, [pc, #92]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 8004996:	681a      	ldr	r2, [r3, #0]
 8004998:	4b16      	ldr	r3, [pc, #88]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 800499a:	2180      	movs	r1, #128	@ 0x80
 800499c:	0049      	lsls	r1, r1, #1
 800499e:	430a      	orrs	r2, r1
 80049a0:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80049a2:	f7fe fc17 	bl	80031d4 <HAL_GetTick>
 80049a6:	0003      	movs	r3, r0
 80049a8:	61bb      	str	r3, [r7, #24]

        /* Wait till MSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 80049aa:	e008      	b.n	80049be <HAL_RCC_OscConfig+0x31e>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 80049ac:	f7fe fc12 	bl	80031d4 <HAL_GetTick>
 80049b0:	0002      	movs	r2, r0
 80049b2:	69bb      	ldr	r3, [r7, #24]
 80049b4:	1ad3      	subs	r3, r2, r3
 80049b6:	2b02      	cmp	r3, #2
 80049b8:	d901      	bls.n	80049be <HAL_RCC_OscConfig+0x31e>
          {
            return HAL_TIMEOUT;
 80049ba:	2303      	movs	r3, #3
 80049bc:	e229      	b.n	8004e12 <HAL_RCC_OscConfig+0x772>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 80049be:	4b0d      	ldr	r3, [pc, #52]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 80049c0:	681a      	ldr	r2, [r3, #0]
 80049c2:	2380      	movs	r3, #128	@ 0x80
 80049c4:	009b      	lsls	r3, r3, #2
 80049c6:	4013      	ands	r3, r2
 80049c8:	d0f0      	beq.n	80049ac <HAL_RCC_OscConfig+0x30c>
        /* Check MSICalibrationValue and MSIClockRange input parameters */
        assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
        assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));

        /* Selects the Multiple Speed oscillator (MSI) clock range .*/
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 80049ca:	4b0a      	ldr	r3, [pc, #40]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 80049cc:	685b      	ldr	r3, [r3, #4]
 80049ce:	4a10      	ldr	r2, [pc, #64]	@ (8004a10 <HAL_RCC_OscConfig+0x370>)
 80049d0:	4013      	ands	r3, r2
 80049d2:	0019      	movs	r1, r3
 80049d4:	687b      	ldr	r3, [r7, #4]
 80049d6:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80049d8:	4b06      	ldr	r3, [pc, #24]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 80049da:	430a      	orrs	r2, r1
 80049dc:	605a      	str	r2, [r3, #4]
         /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 80049de:	4b05      	ldr	r3, [pc, #20]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 80049e0:	685b      	ldr	r3, [r3, #4]
 80049e2:	021b      	lsls	r3, r3, #8
 80049e4:	0a19      	lsrs	r1, r3, #8
 80049e6:	687b      	ldr	r3, [r7, #4]
 80049e8:	6a1b      	ldr	r3, [r3, #32]
 80049ea:	061a      	lsls	r2, r3, #24
 80049ec:	4b01      	ldr	r3, [pc, #4]	@ (80049f4 <HAL_RCC_OscConfig+0x354>)
 80049ee:	430a      	orrs	r2, r1
 80049f0:	605a      	str	r2, [r3, #4]
 80049f2:	e029      	b.n	8004a48 <HAL_RCC_OscConfig+0x3a8>
 80049f4:	40021000 	.word	0x40021000
 80049f8:	fffeffff 	.word	0xfffeffff
 80049fc:	fffbffff 	.word	0xfffbffff
 8004a00:	ffffe0ff 	.word	0xffffe0ff
 8004a04:	08009d6c 	.word	0x08009d6c
 8004a08:	20000008 	.word	0x20000008
 8004a0c:	2000000c 	.word	0x2000000c
 8004a10:	ffff1fff 	.word	0xffff1fff
      }
      else
      {
        /* Disable the Multi Speed oscillator (MSI). */
        __HAL_RCC_MSI_DISABLE();
 8004a14:	4bbd      	ldr	r3, [pc, #756]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004a16:	681a      	ldr	r2, [r3, #0]
 8004a18:	4bbc      	ldr	r3, [pc, #752]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004a1a:	49bd      	ldr	r1, [pc, #756]	@ (8004d10 <HAL_RCC_OscConfig+0x670>)
 8004a1c:	400a      	ands	r2, r1
 8004a1e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004a20:	f7fe fbd8 	bl	80031d4 <HAL_GetTick>
 8004a24:	0003      	movs	r3, r0
 8004a26:	61bb      	str	r3, [r7, #24]

        /* Wait till MSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U)
 8004a28:	e008      	b.n	8004a3c <HAL_RCC_OscConfig+0x39c>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8004a2a:	f7fe fbd3 	bl	80031d4 <HAL_GetTick>
 8004a2e:	0002      	movs	r2, r0
 8004a30:	69bb      	ldr	r3, [r7, #24]
 8004a32:	1ad3      	subs	r3, r2, r3
 8004a34:	2b02      	cmp	r3, #2
 8004a36:	d901      	bls.n	8004a3c <HAL_RCC_OscConfig+0x39c>
          {
            return HAL_TIMEOUT;
 8004a38:	2303      	movs	r3, #3
 8004a3a:	e1ea      	b.n	8004e12 <HAL_RCC_OscConfig+0x772>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U)
 8004a3c:	4bb3      	ldr	r3, [pc, #716]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004a3e:	681a      	ldr	r2, [r3, #0]
 8004a40:	2380      	movs	r3, #128	@ 0x80
 8004a42:	009b      	lsls	r3, r3, #2
 8004a44:	4013      	ands	r3, r2
 8004a46:	d1f0      	bne.n	8004a2a <HAL_RCC_OscConfig+0x38a>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8004a48:	687b      	ldr	r3, [r7, #4]
 8004a4a:	681b      	ldr	r3, [r3, #0]
 8004a4c:	2208      	movs	r2, #8
 8004a4e:	4013      	ands	r3, r2
 8004a50:	d036      	beq.n	8004ac0 <HAL_RCC_OscConfig+0x420>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8004a52:	687b      	ldr	r3, [r7, #4]
 8004a54:	695b      	ldr	r3, [r3, #20]
 8004a56:	2b00      	cmp	r3, #0
 8004a58:	d019      	beq.n	8004a8e <HAL_RCC_OscConfig+0x3ee>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8004a5a:	4bac      	ldr	r3, [pc, #688]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004a5c:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8004a5e:	4bab      	ldr	r3, [pc, #684]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004a60:	2101      	movs	r1, #1
 8004a62:	430a      	orrs	r2, r1
 8004a64:	651a      	str	r2, [r3, #80]	@ 0x50

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004a66:	f7fe fbb5 	bl	80031d4 <HAL_GetTick>
 8004a6a:	0003      	movs	r3, r0
 8004a6c:	61bb      	str	r3, [r7, #24]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8004a6e:	e008      	b.n	8004a82 <HAL_RCC_OscConfig+0x3e2>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8004a70:	f7fe fbb0 	bl	80031d4 <HAL_GetTick>
 8004a74:	0002      	movs	r2, r0
 8004a76:	69bb      	ldr	r3, [r7, #24]
 8004a78:	1ad3      	subs	r3, r2, r3
 8004a7a:	2b02      	cmp	r3, #2
 8004a7c:	d901      	bls.n	8004a82 <HAL_RCC_OscConfig+0x3e2>
        {
          return HAL_TIMEOUT;
 8004a7e:	2303      	movs	r3, #3
 8004a80:	e1c7      	b.n	8004e12 <HAL_RCC_OscConfig+0x772>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8004a82:	4ba2      	ldr	r3, [pc, #648]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004a84:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004a86:	2202      	movs	r2, #2
 8004a88:	4013      	ands	r3, r2
 8004a8a:	d0f1      	beq.n	8004a70 <HAL_RCC_OscConfig+0x3d0>
 8004a8c:	e018      	b.n	8004ac0 <HAL_RCC_OscConfig+0x420>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8004a8e:	4b9f      	ldr	r3, [pc, #636]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004a90:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8004a92:	4b9e      	ldr	r3, [pc, #632]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004a94:	2101      	movs	r1, #1
 8004a96:	438a      	bics	r2, r1
 8004a98:	651a      	str	r2, [r3, #80]	@ 0x50

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004a9a:	f7fe fb9b 	bl	80031d4 <HAL_GetTick>
 8004a9e:	0003      	movs	r3, r0
 8004aa0:	61bb      	str	r3, [r7, #24]

      /* Wait till LSI is disabled */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8004aa2:	e008      	b.n	8004ab6 <HAL_RCC_OscConfig+0x416>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8004aa4:	f7fe fb96 	bl	80031d4 <HAL_GetTick>
 8004aa8:	0002      	movs	r2, r0
 8004aaa:	69bb      	ldr	r3, [r7, #24]
 8004aac:	1ad3      	subs	r3, r2, r3
 8004aae:	2b02      	cmp	r3, #2
 8004ab0:	d901      	bls.n	8004ab6 <HAL_RCC_OscConfig+0x416>
        {
          return HAL_TIMEOUT;
 8004ab2:	2303      	movs	r3, #3
 8004ab4:	e1ad      	b.n	8004e12 <HAL_RCC_OscConfig+0x772>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8004ab6:	4b95      	ldr	r3, [pc, #596]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004ab8:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 8004aba:	2202      	movs	r2, #2
 8004abc:	4013      	ands	r3, r2
 8004abe:	d1f1      	bne.n	8004aa4 <HAL_RCC_OscConfig+0x404>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8004ac0:	687b      	ldr	r3, [r7, #4]
 8004ac2:	681b      	ldr	r3, [r3, #0]
 8004ac4:	2204      	movs	r2, #4
 8004ac6:	4013      	ands	r3, r2
 8004ac8:	d100      	bne.n	8004acc <HAL_RCC_OscConfig+0x42c>
 8004aca:	e0ae      	b.n	8004c2a <HAL_RCC_OscConfig+0x58a>
  {
    FlagStatus       pwrclkchanged = RESET;
 8004acc:	2027      	movs	r0, #39	@ 0x27
 8004ace:	183b      	adds	r3, r7, r0
 8004ad0:	2200      	movs	r2, #0
 8004ad2:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8004ad4:	4b8d      	ldr	r3, [pc, #564]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004ad6:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8004ad8:	2380      	movs	r3, #128	@ 0x80
 8004ada:	055b      	lsls	r3, r3, #21
 8004adc:	4013      	ands	r3, r2
 8004ade:	d109      	bne.n	8004af4 <HAL_RCC_OscConfig+0x454>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8004ae0:	4b8a      	ldr	r3, [pc, #552]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004ae2:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8004ae4:	4b89      	ldr	r3, [pc, #548]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004ae6:	2180      	movs	r1, #128	@ 0x80
 8004ae8:	0549      	lsls	r1, r1, #21
 8004aea:	430a      	orrs	r2, r1
 8004aec:	639a      	str	r2, [r3, #56]	@ 0x38
      pwrclkchanged = SET;
 8004aee:	183b      	adds	r3, r7, r0
 8004af0:	2201      	movs	r2, #1
 8004af2:	701a      	strb	r2, [r3, #0]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004af4:	4b87      	ldr	r3, [pc, #540]	@ (8004d14 <HAL_RCC_OscConfig+0x674>)
 8004af6:	681a      	ldr	r2, [r3, #0]
 8004af8:	2380      	movs	r3, #128	@ 0x80
 8004afa:	005b      	lsls	r3, r3, #1
 8004afc:	4013      	ands	r3, r2
 8004afe:	d11a      	bne.n	8004b36 <HAL_RCC_OscConfig+0x496>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8004b00:	4b84      	ldr	r3, [pc, #528]	@ (8004d14 <HAL_RCC_OscConfig+0x674>)
 8004b02:	681a      	ldr	r2, [r3, #0]
 8004b04:	4b83      	ldr	r3, [pc, #524]	@ (8004d14 <HAL_RCC_OscConfig+0x674>)
 8004b06:	2180      	movs	r1, #128	@ 0x80
 8004b08:	0049      	lsls	r1, r1, #1
 8004b0a:	430a      	orrs	r2, r1
 8004b0c:	601a      	str	r2, [r3, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8004b0e:	f7fe fb61 	bl	80031d4 <HAL_GetTick>
 8004b12:	0003      	movs	r3, r0
 8004b14:	61bb      	str	r3, [r7, #24]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004b16:	e008      	b.n	8004b2a <HAL_RCC_OscConfig+0x48a>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8004b18:	f7fe fb5c 	bl	80031d4 <HAL_GetTick>
 8004b1c:	0002      	movs	r2, r0
 8004b1e:	69bb      	ldr	r3, [r7, #24]
 8004b20:	1ad3      	subs	r3, r2, r3
 8004b22:	2b64      	cmp	r3, #100	@ 0x64
 8004b24:	d901      	bls.n	8004b2a <HAL_RCC_OscConfig+0x48a>
        {
          return HAL_TIMEOUT;
 8004b26:	2303      	movs	r3, #3
 8004b28:	e173      	b.n	8004e12 <HAL_RCC_OscConfig+0x772>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004b2a:	4b7a      	ldr	r3, [pc, #488]	@ (8004d14 <HAL_RCC_OscConfig+0x674>)
 8004b2c:	681a      	ldr	r2, [r3, #0]
 8004b2e:	2380      	movs	r3, #128	@ 0x80
 8004b30:	005b      	lsls	r3, r3, #1
 8004b32:	4013      	ands	r3, r2
 8004b34:	d0f0      	beq.n	8004b18 <HAL_RCC_OscConfig+0x478>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8004b36:	687b      	ldr	r3, [r7, #4]
 8004b38:	689a      	ldr	r2, [r3, #8]
 8004b3a:	2380      	movs	r3, #128	@ 0x80
 8004b3c:	005b      	lsls	r3, r3, #1
 8004b3e:	429a      	cmp	r2, r3
 8004b40:	d107      	bne.n	8004b52 <HAL_RCC_OscConfig+0x4b2>
 8004b42:	4b72      	ldr	r3, [pc, #456]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004b44:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8004b46:	4b71      	ldr	r3, [pc, #452]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004b48:	2180      	movs	r1, #128	@ 0x80
 8004b4a:	0049      	lsls	r1, r1, #1
 8004b4c:	430a      	orrs	r2, r1
 8004b4e:	651a      	str	r2, [r3, #80]	@ 0x50
 8004b50:	e031      	b.n	8004bb6 <HAL_RCC_OscConfig+0x516>
 8004b52:	687b      	ldr	r3, [r7, #4]
 8004b54:	689b      	ldr	r3, [r3, #8]
 8004b56:	2b00      	cmp	r3, #0
 8004b58:	d10c      	bne.n	8004b74 <HAL_RCC_OscConfig+0x4d4>
 8004b5a:	4b6c      	ldr	r3, [pc, #432]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004b5c:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8004b5e:	4b6b      	ldr	r3, [pc, #428]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004b60:	496b      	ldr	r1, [pc, #428]	@ (8004d10 <HAL_RCC_OscConfig+0x670>)
 8004b62:	400a      	ands	r2, r1
 8004b64:	651a      	str	r2, [r3, #80]	@ 0x50
 8004b66:	4b69      	ldr	r3, [pc, #420]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004b68:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8004b6a:	4b68      	ldr	r3, [pc, #416]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004b6c:	496a      	ldr	r1, [pc, #424]	@ (8004d18 <HAL_RCC_OscConfig+0x678>)
 8004b6e:	400a      	ands	r2, r1
 8004b70:	651a      	str	r2, [r3, #80]	@ 0x50
 8004b72:	e020      	b.n	8004bb6 <HAL_RCC_OscConfig+0x516>
 8004b74:	687b      	ldr	r3, [r7, #4]
 8004b76:	689a      	ldr	r2, [r3, #8]
 8004b78:	23a0      	movs	r3, #160	@ 0xa0
 8004b7a:	00db      	lsls	r3, r3, #3
 8004b7c:	429a      	cmp	r2, r3
 8004b7e:	d10e      	bne.n	8004b9e <HAL_RCC_OscConfig+0x4fe>
 8004b80:	4b62      	ldr	r3, [pc, #392]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004b82:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8004b84:	4b61      	ldr	r3, [pc, #388]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004b86:	2180      	movs	r1, #128	@ 0x80
 8004b88:	00c9      	lsls	r1, r1, #3
 8004b8a:	430a      	orrs	r2, r1
 8004b8c:	651a      	str	r2, [r3, #80]	@ 0x50
 8004b8e:	4b5f      	ldr	r3, [pc, #380]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004b90:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8004b92:	4b5e      	ldr	r3, [pc, #376]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004b94:	2180      	movs	r1, #128	@ 0x80
 8004b96:	0049      	lsls	r1, r1, #1
 8004b98:	430a      	orrs	r2, r1
 8004b9a:	651a      	str	r2, [r3, #80]	@ 0x50
 8004b9c:	e00b      	b.n	8004bb6 <HAL_RCC_OscConfig+0x516>
 8004b9e:	4b5b      	ldr	r3, [pc, #364]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004ba0:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8004ba2:	4b5a      	ldr	r3, [pc, #360]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004ba4:	495a      	ldr	r1, [pc, #360]	@ (8004d10 <HAL_RCC_OscConfig+0x670>)
 8004ba6:	400a      	ands	r2, r1
 8004ba8:	651a      	str	r2, [r3, #80]	@ 0x50
 8004baa:	4b58      	ldr	r3, [pc, #352]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004bac:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8004bae:	4b57      	ldr	r3, [pc, #348]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004bb0:	4959      	ldr	r1, [pc, #356]	@ (8004d18 <HAL_RCC_OscConfig+0x678>)
 8004bb2:	400a      	ands	r2, r1
 8004bb4:	651a      	str	r2, [r3, #80]	@ 0x50

    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8004bb6:	687b      	ldr	r3, [r7, #4]
 8004bb8:	689b      	ldr	r3, [r3, #8]
 8004bba:	2b00      	cmp	r3, #0
 8004bbc:	d015      	beq.n	8004bea <HAL_RCC_OscConfig+0x54a>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004bbe:	f7fe fb09 	bl	80031d4 <HAL_GetTick>
 8004bc2:	0003      	movs	r3, r0
 8004bc4:	61bb      	str	r3, [r7, #24]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8004bc6:	e009      	b.n	8004bdc <HAL_RCC_OscConfig+0x53c>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004bc8:	f7fe fb04 	bl	80031d4 <HAL_GetTick>
 8004bcc:	0002      	movs	r2, r0
 8004bce:	69bb      	ldr	r3, [r7, #24]
 8004bd0:	1ad3      	subs	r3, r2, r3
 8004bd2:	4a52      	ldr	r2, [pc, #328]	@ (8004d1c <HAL_RCC_OscConfig+0x67c>)
 8004bd4:	4293      	cmp	r3, r2
 8004bd6:	d901      	bls.n	8004bdc <HAL_RCC_OscConfig+0x53c>
        {
          return HAL_TIMEOUT;
 8004bd8:	2303      	movs	r3, #3
 8004bda:	e11a      	b.n	8004e12 <HAL_RCC_OscConfig+0x772>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8004bdc:	4b4b      	ldr	r3, [pc, #300]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004bde:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8004be0:	2380      	movs	r3, #128	@ 0x80
 8004be2:	009b      	lsls	r3, r3, #2
 8004be4:	4013      	ands	r3, r2
 8004be6:	d0ef      	beq.n	8004bc8 <HAL_RCC_OscConfig+0x528>
 8004be8:	e014      	b.n	8004c14 <HAL_RCC_OscConfig+0x574>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8004bea:	f7fe faf3 	bl	80031d4 <HAL_GetTick>
 8004bee:	0003      	movs	r3, r0
 8004bf0:	61bb      	str	r3, [r7, #24]

      /* Wait till LSE is disabled */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8004bf2:	e009      	b.n	8004c08 <HAL_RCC_OscConfig+0x568>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8004bf4:	f7fe faee 	bl	80031d4 <HAL_GetTick>
 8004bf8:	0002      	movs	r2, r0
 8004bfa:	69bb      	ldr	r3, [r7, #24]
 8004bfc:	1ad3      	subs	r3, r2, r3
 8004bfe:	4a47      	ldr	r2, [pc, #284]	@ (8004d1c <HAL_RCC_OscConfig+0x67c>)
 8004c00:	4293      	cmp	r3, r2
 8004c02:	d901      	bls.n	8004c08 <HAL_RCC_OscConfig+0x568>
        {
          return HAL_TIMEOUT;
 8004c04:	2303      	movs	r3, #3
 8004c06:	e104      	b.n	8004e12 <HAL_RCC_OscConfig+0x772>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8004c08:	4b40      	ldr	r3, [pc, #256]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004c0a:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8004c0c:	2380      	movs	r3, #128	@ 0x80
 8004c0e:	009b      	lsls	r3, r3, #2
 8004c10:	4013      	ands	r3, r2
 8004c12:	d1ef      	bne.n	8004bf4 <HAL_RCC_OscConfig+0x554>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8004c14:	2327      	movs	r3, #39	@ 0x27
 8004c16:	18fb      	adds	r3, r7, r3
 8004c18:	781b      	ldrb	r3, [r3, #0]
 8004c1a:	2b01      	cmp	r3, #1
 8004c1c:	d105      	bne.n	8004c2a <HAL_RCC_OscConfig+0x58a>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8004c1e:	4b3b      	ldr	r3, [pc, #236]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004c20:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8004c22:	4b3a      	ldr	r3, [pc, #232]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004c24:	493e      	ldr	r1, [pc, #248]	@ (8004d20 <HAL_RCC_OscConfig+0x680>)
 8004c26:	400a      	ands	r2, r1
 8004c28:	639a      	str	r2, [r3, #56]	@ 0x38
    }
  }

#if defined(RCC_HSI48_SUPPORT)
  /*----------------------------- HSI48 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8004c2a:	687b      	ldr	r3, [r7, #4]
 8004c2c:	681b      	ldr	r3, [r3, #0]
 8004c2e:	2220      	movs	r2, #32
 8004c30:	4013      	ands	r3, r2
 8004c32:	d049      	beq.n	8004cc8 <HAL_RCC_OscConfig+0x628>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));

      /* Check the HSI48 State */
      if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 8004c34:	687b      	ldr	r3, [r7, #4]
 8004c36:	699b      	ldr	r3, [r3, #24]
 8004c38:	2b00      	cmp	r3, #0
 8004c3a:	d026      	beq.n	8004c8a <HAL_RCC_OscConfig+0x5ea>
      {
        /* Enable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI48_ENABLE();
 8004c3c:	4b33      	ldr	r3, [pc, #204]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004c3e:	689a      	ldr	r2, [r3, #8]
 8004c40:	4b32      	ldr	r3, [pc, #200]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004c42:	2101      	movs	r1, #1
 8004c44:	430a      	orrs	r2, r1
 8004c46:	609a      	str	r2, [r3, #8]
 8004c48:	4b30      	ldr	r3, [pc, #192]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004c4a:	6b5a      	ldr	r2, [r3, #52]	@ 0x34
 8004c4c:	4b2f      	ldr	r3, [pc, #188]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004c4e:	2101      	movs	r1, #1
 8004c50:	430a      	orrs	r2, r1
 8004c52:	635a      	str	r2, [r3, #52]	@ 0x34
 8004c54:	4b33      	ldr	r3, [pc, #204]	@ (8004d24 <HAL_RCC_OscConfig+0x684>)
 8004c56:	6a1a      	ldr	r2, [r3, #32]
 8004c58:	4b32      	ldr	r3, [pc, #200]	@ (8004d24 <HAL_RCC_OscConfig+0x684>)
 8004c5a:	2180      	movs	r1, #128	@ 0x80
 8004c5c:	0189      	lsls	r1, r1, #6
 8004c5e:	430a      	orrs	r2, r1
 8004c60:	621a      	str	r2, [r3, #32]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004c62:	f7fe fab7 	bl	80031d4 <HAL_GetTick>
 8004c66:	0003      	movs	r3, r0
 8004c68:	61bb      	str	r3, [r7, #24]

        /* Wait till HSI48 is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8004c6a:	e008      	b.n	8004c7e <HAL_RCC_OscConfig+0x5de>
        {
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8004c6c:	f7fe fab2 	bl	80031d4 <HAL_GetTick>
 8004c70:	0002      	movs	r2, r0
 8004c72:	69bb      	ldr	r3, [r7, #24]
 8004c74:	1ad3      	subs	r3, r2, r3
 8004c76:	2b02      	cmp	r3, #2
 8004c78:	d901      	bls.n	8004c7e <HAL_RCC_OscConfig+0x5de>
          {
            return HAL_TIMEOUT;
 8004c7a:	2303      	movs	r3, #3
 8004c7c:	e0c9      	b.n	8004e12 <HAL_RCC_OscConfig+0x772>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8004c7e:	4b23      	ldr	r3, [pc, #140]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004c80:	689b      	ldr	r3, [r3, #8]
 8004c82:	2202      	movs	r2, #2
 8004c84:	4013      	ands	r3, r2
 8004c86:	d0f1      	beq.n	8004c6c <HAL_RCC_OscConfig+0x5cc>
 8004c88:	e01e      	b.n	8004cc8 <HAL_RCC_OscConfig+0x628>
        }
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI48_DISABLE();
 8004c8a:	4b20      	ldr	r3, [pc, #128]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004c8c:	689a      	ldr	r2, [r3, #8]
 8004c8e:	4b1f      	ldr	r3, [pc, #124]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004c90:	2101      	movs	r1, #1
 8004c92:	438a      	bics	r2, r1
 8004c94:	609a      	str	r2, [r3, #8]
 8004c96:	4b23      	ldr	r3, [pc, #140]	@ (8004d24 <HAL_RCC_OscConfig+0x684>)
 8004c98:	6a1a      	ldr	r2, [r3, #32]
 8004c9a:	4b22      	ldr	r3, [pc, #136]	@ (8004d24 <HAL_RCC_OscConfig+0x684>)
 8004c9c:	4922      	ldr	r1, [pc, #136]	@ (8004d28 <HAL_RCC_OscConfig+0x688>)
 8004c9e:	400a      	ands	r2, r1
 8004ca0:	621a      	str	r2, [r3, #32]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004ca2:	f7fe fa97 	bl	80031d4 <HAL_GetTick>
 8004ca6:	0003      	movs	r3, r0
 8004ca8:	61bb      	str	r3, [r7, #24]

        /* Wait till HSI48 is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8004caa:	e008      	b.n	8004cbe <HAL_RCC_OscConfig+0x61e>
        {
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8004cac:	f7fe fa92 	bl	80031d4 <HAL_GetTick>
 8004cb0:	0002      	movs	r2, r0
 8004cb2:	69bb      	ldr	r3, [r7, #24]
 8004cb4:	1ad3      	subs	r3, r2, r3
 8004cb6:	2b02      	cmp	r3, #2
 8004cb8:	d901      	bls.n	8004cbe <HAL_RCC_OscConfig+0x61e>
          {
            return HAL_TIMEOUT;
 8004cba:	2303      	movs	r3, #3
 8004cbc:	e0a9      	b.n	8004e12 <HAL_RCC_OscConfig+0x772>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8004cbe:	4b13      	ldr	r3, [pc, #76]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004cc0:	689b      	ldr	r3, [r3, #8]
 8004cc2:	2202      	movs	r2, #2
 8004cc4:	4013      	ands	r3, r2
 8004cc6:	d1f1      	bne.n	8004cac <HAL_RCC_OscConfig+0x60c>
#endif /* RCC_HSI48_SUPPORT */

  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8004cc8:	687b      	ldr	r3, [r7, #4]
 8004cca:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004ccc:	2b00      	cmp	r3, #0
 8004cce:	d100      	bne.n	8004cd2 <HAL_RCC_OscConfig+0x632>
 8004cd0:	e09e      	b.n	8004e10 <HAL_RCC_OscConfig+0x770>
  {
    /* Check if the PLL is used as system clock or not */
    if(sysclk_source != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8004cd2:	6a3b      	ldr	r3, [r7, #32]
 8004cd4:	2b0c      	cmp	r3, #12
 8004cd6:	d100      	bne.n	8004cda <HAL_RCC_OscConfig+0x63a>
 8004cd8:	e077      	b.n	8004dca <HAL_RCC_OscConfig+0x72a>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8004cda:	687b      	ldr	r3, [r7, #4]
 8004cdc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004cde:	2b02      	cmp	r3, #2
 8004ce0:	d158      	bne.n	8004d94 <HAL_RCC_OscConfig+0x6f4>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PLL_DIV(RCC_OscInitStruct->PLL.PLLDIV));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8004ce2:	4b0a      	ldr	r3, [pc, #40]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004ce4:	681a      	ldr	r2, [r3, #0]
 8004ce6:	4b09      	ldr	r3, [pc, #36]	@ (8004d0c <HAL_RCC_OscConfig+0x66c>)
 8004ce8:	4910      	ldr	r1, [pc, #64]	@ (8004d2c <HAL_RCC_OscConfig+0x68c>)
 8004cea:	400a      	ands	r2, r1
 8004cec:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004cee:	f7fe fa71 	bl	80031d4 <HAL_GetTick>
 8004cf2:	0003      	movs	r3, r0
 8004cf4:	61bb      	str	r3, [r7, #24]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8004cf6:	e01b      	b.n	8004d30 <HAL_RCC_OscConfig+0x690>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004cf8:	f7fe fa6c 	bl	80031d4 <HAL_GetTick>
 8004cfc:	0002      	movs	r2, r0
 8004cfe:	69bb      	ldr	r3, [r7, #24]
 8004d00:	1ad3      	subs	r3, r2, r3
 8004d02:	2b02      	cmp	r3, #2
 8004d04:	d914      	bls.n	8004d30 <HAL_RCC_OscConfig+0x690>
          {
            return HAL_TIMEOUT;
 8004d06:	2303      	movs	r3, #3
 8004d08:	e083      	b.n	8004e12 <HAL_RCC_OscConfig+0x772>
 8004d0a:	46c0      	nop			@ (mov r8, r8)
 8004d0c:	40021000 	.word	0x40021000
 8004d10:	fffffeff 	.word	0xfffffeff
 8004d14:	40007000 	.word	0x40007000
 8004d18:	fffffbff 	.word	0xfffffbff
 8004d1c:	00001388 	.word	0x00001388
 8004d20:	efffffff 	.word	0xefffffff
 8004d24:	40010000 	.word	0x40010000
 8004d28:	ffffdfff 	.word	0xffffdfff
 8004d2c:	feffffff 	.word	0xfeffffff
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8004d30:	4b3a      	ldr	r3, [pc, #232]	@ (8004e1c <HAL_RCC_OscConfig+0x77c>)
 8004d32:	681a      	ldr	r2, [r3, #0]
 8004d34:	2380      	movs	r3, #128	@ 0x80
 8004d36:	049b      	lsls	r3, r3, #18
 8004d38:	4013      	ands	r3, r2
 8004d3a:	d1dd      	bne.n	8004cf8 <HAL_RCC_OscConfig+0x658>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8004d3c:	4b37      	ldr	r3, [pc, #220]	@ (8004e1c <HAL_RCC_OscConfig+0x77c>)
 8004d3e:	68db      	ldr	r3, [r3, #12]
 8004d40:	4a37      	ldr	r2, [pc, #220]	@ (8004e20 <HAL_RCC_OscConfig+0x780>)
 8004d42:	4013      	ands	r3, r2
 8004d44:	0019      	movs	r1, r3
 8004d46:	687b      	ldr	r3, [r7, #4]
 8004d48:	6ada      	ldr	r2, [r3, #44]	@ 0x2c
 8004d4a:	687b      	ldr	r3, [r7, #4]
 8004d4c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8004d4e:	431a      	orrs	r2, r3
 8004d50:	687b      	ldr	r3, [r7, #4]
 8004d52:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
 8004d54:	431a      	orrs	r2, r3
 8004d56:	4b31      	ldr	r3, [pc, #196]	@ (8004e1c <HAL_RCC_OscConfig+0x77c>)
 8004d58:	430a      	orrs	r2, r1
 8004d5a:	60da      	str	r2, [r3, #12]
                             RCC_OscInitStruct->PLL.PLLMUL,
                             RCC_OscInitStruct->PLL.PLLDIV);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8004d5c:	4b2f      	ldr	r3, [pc, #188]	@ (8004e1c <HAL_RCC_OscConfig+0x77c>)
 8004d5e:	681a      	ldr	r2, [r3, #0]
 8004d60:	4b2e      	ldr	r3, [pc, #184]	@ (8004e1c <HAL_RCC_OscConfig+0x77c>)
 8004d62:	2180      	movs	r1, #128	@ 0x80
 8004d64:	0449      	lsls	r1, r1, #17
 8004d66:	430a      	orrs	r2, r1
 8004d68:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004d6a:	f7fe fa33 	bl	80031d4 <HAL_GetTick>
 8004d6e:	0003      	movs	r3, r0
 8004d70:	61bb      	str	r3, [r7, #24]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 8004d72:	e008      	b.n	8004d86 <HAL_RCC_OscConfig+0x6e6>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004d74:	f7fe fa2e 	bl	80031d4 <HAL_GetTick>
 8004d78:	0002      	movs	r2, r0
 8004d7a:	69bb      	ldr	r3, [r7, #24]
 8004d7c:	1ad3      	subs	r3, r2, r3
 8004d7e:	2b02      	cmp	r3, #2
 8004d80:	d901      	bls.n	8004d86 <HAL_RCC_OscConfig+0x6e6>
          {
            return HAL_TIMEOUT;
 8004d82:	2303      	movs	r3, #3
 8004d84:	e045      	b.n	8004e12 <HAL_RCC_OscConfig+0x772>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 8004d86:	4b25      	ldr	r3, [pc, #148]	@ (8004e1c <HAL_RCC_OscConfig+0x77c>)
 8004d88:	681a      	ldr	r2, [r3, #0]
 8004d8a:	2380      	movs	r3, #128	@ 0x80
 8004d8c:	049b      	lsls	r3, r3, #18
 8004d8e:	4013      	ands	r3, r2
 8004d90:	d0f0      	beq.n	8004d74 <HAL_RCC_OscConfig+0x6d4>
 8004d92:	e03d      	b.n	8004e10 <HAL_RCC_OscConfig+0x770>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8004d94:	4b21      	ldr	r3, [pc, #132]	@ (8004e1c <HAL_RCC_OscConfig+0x77c>)
 8004d96:	681a      	ldr	r2, [r3, #0]
 8004d98:	4b20      	ldr	r3, [pc, #128]	@ (8004e1c <HAL_RCC_OscConfig+0x77c>)
 8004d9a:	4922      	ldr	r1, [pc, #136]	@ (8004e24 <HAL_RCC_OscConfig+0x784>)
 8004d9c:	400a      	ands	r2, r1
 8004d9e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004da0:	f7fe fa18 	bl	80031d4 <HAL_GetTick>
 8004da4:	0003      	movs	r3, r0
 8004da6:	61bb      	str	r3, [r7, #24]

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8004da8:	e008      	b.n	8004dbc <HAL_RCC_OscConfig+0x71c>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8004daa:	f7fe fa13 	bl	80031d4 <HAL_GetTick>
 8004dae:	0002      	movs	r2, r0
 8004db0:	69bb      	ldr	r3, [r7, #24]
 8004db2:	1ad3      	subs	r3, r2, r3
 8004db4:	2b02      	cmp	r3, #2
 8004db6:	d901      	bls.n	8004dbc <HAL_RCC_OscConfig+0x71c>
          {
            return HAL_TIMEOUT;
 8004db8:	2303      	movs	r3, #3
 8004dba:	e02a      	b.n	8004e12 <HAL_RCC_OscConfig+0x772>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8004dbc:	4b17      	ldr	r3, [pc, #92]	@ (8004e1c <HAL_RCC_OscConfig+0x77c>)
 8004dbe:	681a      	ldr	r2, [r3, #0]
 8004dc0:	2380      	movs	r3, #128	@ 0x80
 8004dc2:	049b      	lsls	r3, r3, #18
 8004dc4:	4013      	ands	r3, r2
 8004dc6:	d1f0      	bne.n	8004daa <HAL_RCC_OscConfig+0x70a>
 8004dc8:	e022      	b.n	8004e10 <HAL_RCC_OscConfig+0x770>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8004dca:	687b      	ldr	r3, [r7, #4]
 8004dcc:	6a9b      	ldr	r3, [r3, #40]	@ 0x28
 8004dce:	2b01      	cmp	r3, #1
 8004dd0:	d101      	bne.n	8004dd6 <HAL_RCC_OscConfig+0x736>
      {
        return HAL_ERROR;
 8004dd2:	2301      	movs	r3, #1
 8004dd4:	e01d      	b.n	8004e12 <HAL_RCC_OscConfig+0x772>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 8004dd6:	4b11      	ldr	r3, [pc, #68]	@ (8004e1c <HAL_RCC_OscConfig+0x77c>)
 8004dd8:	68db      	ldr	r3, [r3, #12]
 8004dda:	61fb      	str	r3, [r7, #28]
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004ddc:	69fa      	ldr	r2, [r7, #28]
 8004dde:	2380      	movs	r3, #128	@ 0x80
 8004de0:	025b      	lsls	r3, r3, #9
 8004de2:	401a      	ands	r2, r3
 8004de4:	687b      	ldr	r3, [r7, #4]
 8004de6:	6adb      	ldr	r3, [r3, #44]	@ 0x2c
 8004de8:	429a      	cmp	r2, r3
 8004dea:	d10f      	bne.n	8004e0c <HAL_RCC_OscConfig+0x76c>
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 8004dec:	69fa      	ldr	r2, [r7, #28]
 8004dee:	23f0      	movs	r3, #240	@ 0xf0
 8004df0:	039b      	lsls	r3, r3, #14
 8004df2:	401a      	ands	r2, r3
 8004df4:	687b      	ldr	r3, [r7, #4]
 8004df6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004df8:	429a      	cmp	r2, r3
 8004dfa:	d107      	bne.n	8004e0c <HAL_RCC_OscConfig+0x76c>
           (READ_BIT(pll_config, RCC_CFGR_PLLDIV) != RCC_OscInitStruct->PLL.PLLDIV))
 8004dfc:	69fa      	ldr	r2, [r7, #28]
 8004dfe:	23c0      	movs	r3, #192	@ 0xc0
 8004e00:	041b      	lsls	r3, r3, #16
 8004e02:	401a      	ands	r2, r3
 8004e04:	687b      	ldr	r3, [r7, #4]
 8004e06:	6b5b      	ldr	r3, [r3, #52]	@ 0x34
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 8004e08:	429a      	cmp	r2, r3
 8004e0a:	d001      	beq.n	8004e10 <HAL_RCC_OscConfig+0x770>
        {
          return HAL_ERROR;
 8004e0c:	2301      	movs	r3, #1
 8004e0e:	e000      	b.n	8004e12 <HAL_RCC_OscConfig+0x772>
        }
      }
    }
  }
  return HAL_OK;
 8004e10:	2300      	movs	r3, #0
}
 8004e12:	0018      	movs	r0, r3
 8004e14:	46bd      	mov	sp, r7
 8004e16:	b00a      	add	sp, #40	@ 0x28
 8004e18:	bdb0      	pop	{r4, r5, r7, pc}
 8004e1a:	46c0      	nop			@ (mov r8, r8)
 8004e1c:	40021000 	.word	0x40021000
 8004e20:	ff02ffff 	.word	0xff02ffff
 8004e24:	feffffff 	.word	0xfeffffff

08004e28 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(const RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8004e28:	b5b0      	push	{r4, r5, r7, lr}
 8004e2a:	b084      	sub	sp, #16
 8004e2c:	af00      	add	r7, sp, #0
 8004e2e:	6078      	str	r0, [r7, #4]
 8004e30:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 8004e32:	687b      	ldr	r3, [r7, #4]
 8004e34:	2b00      	cmp	r3, #0
 8004e36:	d101      	bne.n	8004e3c <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8004e38:	2301      	movs	r3, #1
 8004e3a:	e128      	b.n	800508e <HAL_RCC_ClockConfig+0x266>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
  must be correctly programmed according to the frequency of the CPU clock
  (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8004e3c:	4b96      	ldr	r3, [pc, #600]	@ (8005098 <HAL_RCC_ClockConfig+0x270>)
 8004e3e:	681b      	ldr	r3, [r3, #0]
 8004e40:	2201      	movs	r2, #1
 8004e42:	4013      	ands	r3, r2
 8004e44:	683a      	ldr	r2, [r7, #0]
 8004e46:	429a      	cmp	r2, r3
 8004e48:	d91e      	bls.n	8004e88 <HAL_RCC_ClockConfig+0x60>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004e4a:	4b93      	ldr	r3, [pc, #588]	@ (8005098 <HAL_RCC_ClockConfig+0x270>)
 8004e4c:	681b      	ldr	r3, [r3, #0]
 8004e4e:	2201      	movs	r2, #1
 8004e50:	4393      	bics	r3, r2
 8004e52:	0019      	movs	r1, r3
 8004e54:	4b90      	ldr	r3, [pc, #576]	@ (8005098 <HAL_RCC_ClockConfig+0x270>)
 8004e56:	683a      	ldr	r2, [r7, #0]
 8004e58:	430a      	orrs	r2, r1
 8004e5a:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by polling the FLASH_ACR register */
    tickstart = HAL_GetTick();
 8004e5c:	f7fe f9ba 	bl	80031d4 <HAL_GetTick>
 8004e60:	0003      	movs	r3, r0
 8004e62:	60fb      	str	r3, [r7, #12]

    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 8004e64:	e009      	b.n	8004e7a <HAL_RCC_ClockConfig+0x52>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004e66:	f7fe f9b5 	bl	80031d4 <HAL_GetTick>
 8004e6a:	0002      	movs	r2, r0
 8004e6c:	68fb      	ldr	r3, [r7, #12]
 8004e6e:	1ad3      	subs	r3, r2, r3
 8004e70:	4a8a      	ldr	r2, [pc, #552]	@ (800509c <HAL_RCC_ClockConfig+0x274>)
 8004e72:	4293      	cmp	r3, r2
 8004e74:	d901      	bls.n	8004e7a <HAL_RCC_ClockConfig+0x52>
      {
        return HAL_TIMEOUT;
 8004e76:	2303      	movs	r3, #3
 8004e78:	e109      	b.n	800508e <HAL_RCC_ClockConfig+0x266>
    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 8004e7a:	4b87      	ldr	r3, [pc, #540]	@ (8005098 <HAL_RCC_ClockConfig+0x270>)
 8004e7c:	681b      	ldr	r3, [r3, #0]
 8004e7e:	2201      	movs	r2, #1
 8004e80:	4013      	ands	r3, r2
 8004e82:	683a      	ldr	r2, [r7, #0]
 8004e84:	429a      	cmp	r2, r3
 8004e86:	d1ee      	bne.n	8004e66 <HAL_RCC_ClockConfig+0x3e>
      }
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 8004e88:	687b      	ldr	r3, [r7, #4]
 8004e8a:	681b      	ldr	r3, [r3, #0]
 8004e8c:	2202      	movs	r2, #2
 8004e8e:	4013      	ands	r3, r2
 8004e90:	d009      	beq.n	8004ea6 <HAL_RCC_ClockConfig+0x7e>
  {
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8004e92:	4b83      	ldr	r3, [pc, #524]	@ (80050a0 <HAL_RCC_ClockConfig+0x278>)
 8004e94:	68db      	ldr	r3, [r3, #12]
 8004e96:	22f0      	movs	r2, #240	@ 0xf0
 8004e98:	4393      	bics	r3, r2
 8004e9a:	0019      	movs	r1, r3
 8004e9c:	687b      	ldr	r3, [r7, #4]
 8004e9e:	689a      	ldr	r2, [r3, #8]
 8004ea0:	4b7f      	ldr	r3, [pc, #508]	@ (80050a0 <HAL_RCC_ClockConfig+0x278>)
 8004ea2:	430a      	orrs	r2, r1
 8004ea4:	60da      	str	r2, [r3, #12]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 8004ea6:	687b      	ldr	r3, [r7, #4]
 8004ea8:	681b      	ldr	r3, [r3, #0]
 8004eaa:	2201      	movs	r2, #1
 8004eac:	4013      	ands	r3, r2
 8004eae:	d100      	bne.n	8004eb2 <HAL_RCC_ClockConfig+0x8a>
 8004eb0:	e089      	b.n	8004fc6 <HAL_RCC_ClockConfig+0x19e>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8004eb2:	687b      	ldr	r3, [r7, #4]
 8004eb4:	685b      	ldr	r3, [r3, #4]
 8004eb6:	2b02      	cmp	r3, #2
 8004eb8:	d107      	bne.n	8004eca <HAL_RCC_ClockConfig+0xa2>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8004eba:	4b79      	ldr	r3, [pc, #484]	@ (80050a0 <HAL_RCC_ClockConfig+0x278>)
 8004ebc:	681a      	ldr	r2, [r3, #0]
 8004ebe:	2380      	movs	r3, #128	@ 0x80
 8004ec0:	029b      	lsls	r3, r3, #10
 8004ec2:	4013      	ands	r3, r2
 8004ec4:	d120      	bne.n	8004f08 <HAL_RCC_ClockConfig+0xe0>
      {
        return HAL_ERROR;
 8004ec6:	2301      	movs	r3, #1
 8004ec8:	e0e1      	b.n	800508e <HAL_RCC_ClockConfig+0x266>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8004eca:	687b      	ldr	r3, [r7, #4]
 8004ecc:	685b      	ldr	r3, [r3, #4]
 8004ece:	2b03      	cmp	r3, #3
 8004ed0:	d107      	bne.n	8004ee2 <HAL_RCC_ClockConfig+0xba>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8004ed2:	4b73      	ldr	r3, [pc, #460]	@ (80050a0 <HAL_RCC_ClockConfig+0x278>)
 8004ed4:	681a      	ldr	r2, [r3, #0]
 8004ed6:	2380      	movs	r3, #128	@ 0x80
 8004ed8:	049b      	lsls	r3, r3, #18
 8004eda:	4013      	ands	r3, r2
 8004edc:	d114      	bne.n	8004f08 <HAL_RCC_ClockConfig+0xe0>
      {
        return HAL_ERROR;
 8004ede:	2301      	movs	r3, #1
 8004ee0:	e0d5      	b.n	800508e <HAL_RCC_ClockConfig+0x266>
      }
    }
    /* HSI is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 8004ee2:	687b      	ldr	r3, [r7, #4]
 8004ee4:	685b      	ldr	r3, [r3, #4]
 8004ee6:	2b01      	cmp	r3, #1
 8004ee8:	d106      	bne.n	8004ef8 <HAL_RCC_ClockConfig+0xd0>
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8004eea:	4b6d      	ldr	r3, [pc, #436]	@ (80050a0 <HAL_RCC_ClockConfig+0x278>)
 8004eec:	681b      	ldr	r3, [r3, #0]
 8004eee:	2204      	movs	r2, #4
 8004ef0:	4013      	ands	r3, r2
 8004ef2:	d109      	bne.n	8004f08 <HAL_RCC_ClockConfig+0xe0>
      {
        return HAL_ERROR;
 8004ef4:	2301      	movs	r3, #1
 8004ef6:	e0ca      	b.n	800508e <HAL_RCC_ClockConfig+0x266>
    }
    /* MSI is selected as System Clock Source */
    else
    {
      /* Check the MSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 8004ef8:	4b69      	ldr	r3, [pc, #420]	@ (80050a0 <HAL_RCC_ClockConfig+0x278>)
 8004efa:	681a      	ldr	r2, [r3, #0]
 8004efc:	2380      	movs	r3, #128	@ 0x80
 8004efe:	009b      	lsls	r3, r3, #2
 8004f00:	4013      	ands	r3, r2
 8004f02:	d101      	bne.n	8004f08 <HAL_RCC_ClockConfig+0xe0>
      {
        return HAL_ERROR;
 8004f04:	2301      	movs	r3, #1
 8004f06:	e0c2      	b.n	800508e <HAL_RCC_ClockConfig+0x266>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 8004f08:	4b65      	ldr	r3, [pc, #404]	@ (80050a0 <HAL_RCC_ClockConfig+0x278>)
 8004f0a:	68db      	ldr	r3, [r3, #12]
 8004f0c:	2203      	movs	r2, #3
 8004f0e:	4393      	bics	r3, r2
 8004f10:	0019      	movs	r1, r3
 8004f12:	687b      	ldr	r3, [r7, #4]
 8004f14:	685a      	ldr	r2, [r3, #4]
 8004f16:	4b62      	ldr	r3, [pc, #392]	@ (80050a0 <HAL_RCC_ClockConfig+0x278>)
 8004f18:	430a      	orrs	r2, r1
 8004f1a:	60da      	str	r2, [r3, #12]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 8004f1c:	f7fe f95a 	bl	80031d4 <HAL_GetTick>
 8004f20:	0003      	movs	r3, r0
 8004f22:	60fb      	str	r3, [r7, #12]

    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8004f24:	687b      	ldr	r3, [r7, #4]
 8004f26:	685b      	ldr	r3, [r3, #4]
 8004f28:	2b02      	cmp	r3, #2
 8004f2a:	d111      	bne.n	8004f50 <HAL_RCC_ClockConfig+0x128>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8004f2c:	e009      	b.n	8004f42 <HAL_RCC_ClockConfig+0x11a>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004f2e:	f7fe f951 	bl	80031d4 <HAL_GetTick>
 8004f32:	0002      	movs	r2, r0
 8004f34:	68fb      	ldr	r3, [r7, #12]
 8004f36:	1ad3      	subs	r3, r2, r3
 8004f38:	4a58      	ldr	r2, [pc, #352]	@ (800509c <HAL_RCC_ClockConfig+0x274>)
 8004f3a:	4293      	cmp	r3, r2
 8004f3c:	d901      	bls.n	8004f42 <HAL_RCC_ClockConfig+0x11a>
        {
          return HAL_TIMEOUT;
 8004f3e:	2303      	movs	r3, #3
 8004f40:	e0a5      	b.n	800508e <HAL_RCC_ClockConfig+0x266>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8004f42:	4b57      	ldr	r3, [pc, #348]	@ (80050a0 <HAL_RCC_ClockConfig+0x278>)
 8004f44:	68db      	ldr	r3, [r3, #12]
 8004f46:	220c      	movs	r2, #12
 8004f48:	4013      	ands	r3, r2
 8004f4a:	2b08      	cmp	r3, #8
 8004f4c:	d1ef      	bne.n	8004f2e <HAL_RCC_ClockConfig+0x106>
 8004f4e:	e03a      	b.n	8004fc6 <HAL_RCC_ClockConfig+0x19e>
        }
      }
    }
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8004f50:	687b      	ldr	r3, [r7, #4]
 8004f52:	685b      	ldr	r3, [r3, #4]
 8004f54:	2b03      	cmp	r3, #3
 8004f56:	d111      	bne.n	8004f7c <HAL_RCC_ClockConfig+0x154>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8004f58:	e009      	b.n	8004f6e <HAL_RCC_ClockConfig+0x146>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004f5a:	f7fe f93b 	bl	80031d4 <HAL_GetTick>
 8004f5e:	0002      	movs	r2, r0
 8004f60:	68fb      	ldr	r3, [r7, #12]
 8004f62:	1ad3      	subs	r3, r2, r3
 8004f64:	4a4d      	ldr	r2, [pc, #308]	@ (800509c <HAL_RCC_ClockConfig+0x274>)
 8004f66:	4293      	cmp	r3, r2
 8004f68:	d901      	bls.n	8004f6e <HAL_RCC_ClockConfig+0x146>
        {
          return HAL_TIMEOUT;
 8004f6a:	2303      	movs	r3, #3
 8004f6c:	e08f      	b.n	800508e <HAL_RCC_ClockConfig+0x266>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8004f6e:	4b4c      	ldr	r3, [pc, #304]	@ (80050a0 <HAL_RCC_ClockConfig+0x278>)
 8004f70:	68db      	ldr	r3, [r3, #12]
 8004f72:	220c      	movs	r2, #12
 8004f74:	4013      	ands	r3, r2
 8004f76:	2b0c      	cmp	r3, #12
 8004f78:	d1ef      	bne.n	8004f5a <HAL_RCC_ClockConfig+0x132>
 8004f7a:	e024      	b.n	8004fc6 <HAL_RCC_ClockConfig+0x19e>
        }
      }
    }
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 8004f7c:	687b      	ldr	r3, [r7, #4]
 8004f7e:	685b      	ldr	r3, [r3, #4]
 8004f80:	2b01      	cmp	r3, #1
 8004f82:	d11b      	bne.n	8004fbc <HAL_RCC_ClockConfig+0x194>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8004f84:	e009      	b.n	8004f9a <HAL_RCC_ClockConfig+0x172>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004f86:	f7fe f925 	bl	80031d4 <HAL_GetTick>
 8004f8a:	0002      	movs	r2, r0
 8004f8c:	68fb      	ldr	r3, [r7, #12]
 8004f8e:	1ad3      	subs	r3, r2, r3
 8004f90:	4a42      	ldr	r2, [pc, #264]	@ (800509c <HAL_RCC_ClockConfig+0x274>)
 8004f92:	4293      	cmp	r3, r2
 8004f94:	d901      	bls.n	8004f9a <HAL_RCC_ClockConfig+0x172>
        {
          return HAL_TIMEOUT;
 8004f96:	2303      	movs	r3, #3
 8004f98:	e079      	b.n	800508e <HAL_RCC_ClockConfig+0x266>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8004f9a:	4b41      	ldr	r3, [pc, #260]	@ (80050a0 <HAL_RCC_ClockConfig+0x278>)
 8004f9c:	68db      	ldr	r3, [r3, #12]
 8004f9e:	220c      	movs	r2, #12
 8004fa0:	4013      	ands	r3, r2
 8004fa2:	2b04      	cmp	r3, #4
 8004fa4:	d1ef      	bne.n	8004f86 <HAL_RCC_ClockConfig+0x15e>
 8004fa6:	e00e      	b.n	8004fc6 <HAL_RCC_ClockConfig+0x19e>
    }
    else
    {
      while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004fa8:	f7fe f914 	bl	80031d4 <HAL_GetTick>
 8004fac:	0002      	movs	r2, r0
 8004fae:	68fb      	ldr	r3, [r7, #12]
 8004fb0:	1ad3      	subs	r3, r2, r3
 8004fb2:	4a3a      	ldr	r2, [pc, #232]	@ (800509c <HAL_RCC_ClockConfig+0x274>)
 8004fb4:	4293      	cmp	r3, r2
 8004fb6:	d901      	bls.n	8004fbc <HAL_RCC_ClockConfig+0x194>
        {
          return HAL_TIMEOUT;
 8004fb8:	2303      	movs	r3, #3
 8004fba:	e068      	b.n	800508e <HAL_RCC_ClockConfig+0x266>
      while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 8004fbc:	4b38      	ldr	r3, [pc, #224]	@ (80050a0 <HAL_RCC_ClockConfig+0x278>)
 8004fbe:	68db      	ldr	r3, [r3, #12]
 8004fc0:	220c      	movs	r2, #12
 8004fc2:	4013      	ands	r3, r2
 8004fc4:	d1f0      	bne.n	8004fa8 <HAL_RCC_ClockConfig+0x180>
        }
      }
    }
  }
  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 8004fc6:	4b34      	ldr	r3, [pc, #208]	@ (8005098 <HAL_RCC_ClockConfig+0x270>)
 8004fc8:	681b      	ldr	r3, [r3, #0]
 8004fca:	2201      	movs	r2, #1
 8004fcc:	4013      	ands	r3, r2
 8004fce:	683a      	ldr	r2, [r7, #0]
 8004fd0:	429a      	cmp	r2, r3
 8004fd2:	d21e      	bcs.n	8005012 <HAL_RCC_ClockConfig+0x1ea>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004fd4:	4b30      	ldr	r3, [pc, #192]	@ (8005098 <HAL_RCC_ClockConfig+0x270>)
 8004fd6:	681b      	ldr	r3, [r3, #0]
 8004fd8:	2201      	movs	r2, #1
 8004fda:	4393      	bics	r3, r2
 8004fdc:	0019      	movs	r1, r3
 8004fde:	4b2e      	ldr	r3, [pc, #184]	@ (8005098 <HAL_RCC_ClockConfig+0x270>)
 8004fe0:	683a      	ldr	r2, [r7, #0]
 8004fe2:	430a      	orrs	r2, r1
 8004fe4:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by polling the FLASH_ACR register */
    tickstart = HAL_GetTick();
 8004fe6:	f7fe f8f5 	bl	80031d4 <HAL_GetTick>
 8004fea:	0003      	movs	r3, r0
 8004fec:	60fb      	str	r3, [r7, #12]

    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 8004fee:	e009      	b.n	8005004 <HAL_RCC_ClockConfig+0x1dc>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004ff0:	f7fe f8f0 	bl	80031d4 <HAL_GetTick>
 8004ff4:	0002      	movs	r2, r0
 8004ff6:	68fb      	ldr	r3, [r7, #12]
 8004ff8:	1ad3      	subs	r3, r2, r3
 8004ffa:	4a28      	ldr	r2, [pc, #160]	@ (800509c <HAL_RCC_ClockConfig+0x274>)
 8004ffc:	4293      	cmp	r3, r2
 8004ffe:	d901      	bls.n	8005004 <HAL_RCC_ClockConfig+0x1dc>
      {
        return HAL_TIMEOUT;
 8005000:	2303      	movs	r3, #3
 8005002:	e044      	b.n	800508e <HAL_RCC_ClockConfig+0x266>
    while (__HAL_FLASH_GET_LATENCY() != FLatency)
 8005004:	4b24      	ldr	r3, [pc, #144]	@ (8005098 <HAL_RCC_ClockConfig+0x270>)
 8005006:	681b      	ldr	r3, [r3, #0]
 8005008:	2201      	movs	r2, #1
 800500a:	4013      	ands	r3, r2
 800500c:	683a      	ldr	r2, [r7, #0]
 800500e:	429a      	cmp	r2, r3
 8005010:	d1ee      	bne.n	8004ff0 <HAL_RCC_ClockConfig+0x1c8>
      }
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 8005012:	687b      	ldr	r3, [r7, #4]
 8005014:	681b      	ldr	r3, [r3, #0]
 8005016:	2204      	movs	r2, #4
 8005018:	4013      	ands	r3, r2
 800501a:	d009      	beq.n	8005030 <HAL_RCC_ClockConfig+0x208>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 800501c:	4b20      	ldr	r3, [pc, #128]	@ (80050a0 <HAL_RCC_ClockConfig+0x278>)
 800501e:	68db      	ldr	r3, [r3, #12]
 8005020:	4a20      	ldr	r2, [pc, #128]	@ (80050a4 <HAL_RCC_ClockConfig+0x27c>)
 8005022:	4013      	ands	r3, r2
 8005024:	0019      	movs	r1, r3
 8005026:	687b      	ldr	r3, [r7, #4]
 8005028:	68da      	ldr	r2, [r3, #12]
 800502a:	4b1d      	ldr	r3, [pc, #116]	@ (80050a0 <HAL_RCC_ClockConfig+0x278>)
 800502c:	430a      	orrs	r2, r1
 800502e:	60da      	str	r2, [r3, #12]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8005030:	687b      	ldr	r3, [r7, #4]
 8005032:	681b      	ldr	r3, [r3, #0]
 8005034:	2208      	movs	r2, #8
 8005036:	4013      	ands	r3, r2
 8005038:	d00a      	beq.n	8005050 <HAL_RCC_ClockConfig+0x228>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 800503a:	4b19      	ldr	r3, [pc, #100]	@ (80050a0 <HAL_RCC_ClockConfig+0x278>)
 800503c:	68db      	ldr	r3, [r3, #12]
 800503e:	4a1a      	ldr	r2, [pc, #104]	@ (80050a8 <HAL_RCC_ClockConfig+0x280>)
 8005040:	4013      	ands	r3, r2
 8005042:	0019      	movs	r1, r3
 8005044:	687b      	ldr	r3, [r7, #4]
 8005046:	691b      	ldr	r3, [r3, #16]
 8005048:	00da      	lsls	r2, r3, #3
 800504a:	4b15      	ldr	r3, [pc, #84]	@ (80050a0 <HAL_RCC_ClockConfig+0x278>)
 800504c:	430a      	orrs	r2, r1
 800504e:	60da      	str	r2, [r3, #12]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8005050:	f000 f832 	bl	80050b8 <HAL_RCC_GetSysClockFreq>
 8005054:	0001      	movs	r1, r0
 8005056:	4b12      	ldr	r3, [pc, #72]	@ (80050a0 <HAL_RCC_ClockConfig+0x278>)
 8005058:	68db      	ldr	r3, [r3, #12]
 800505a:	091b      	lsrs	r3, r3, #4
 800505c:	220f      	movs	r2, #15
 800505e:	4013      	ands	r3, r2
 8005060:	4a12      	ldr	r2, [pc, #72]	@ (80050ac <HAL_RCC_ClockConfig+0x284>)
 8005062:	5cd3      	ldrb	r3, [r2, r3]
 8005064:	000a      	movs	r2, r1
 8005066:	40da      	lsrs	r2, r3
 8005068:	4b11      	ldr	r3, [pc, #68]	@ (80050b0 <HAL_RCC_ClockConfig+0x288>)
 800506a:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  status = HAL_InitTick(uwTickPrio);
 800506c:	4b11      	ldr	r3, [pc, #68]	@ (80050b4 <HAL_RCC_ClockConfig+0x28c>)
 800506e:	681b      	ldr	r3, [r3, #0]
 8005070:	250b      	movs	r5, #11
 8005072:	197c      	adds	r4, r7, r5
 8005074:	0018      	movs	r0, r3
 8005076:	f7fe f867 	bl	8003148 <HAL_InitTick>
 800507a:	0003      	movs	r3, r0
 800507c:	7023      	strb	r3, [r4, #0]
  if(status != HAL_OK)
 800507e:	197b      	adds	r3, r7, r5
 8005080:	781b      	ldrb	r3, [r3, #0]
 8005082:	2b00      	cmp	r3, #0
 8005084:	d002      	beq.n	800508c <HAL_RCC_ClockConfig+0x264>
  {
    return status;
 8005086:	197b      	adds	r3, r7, r5
 8005088:	781b      	ldrb	r3, [r3, #0]
 800508a:	e000      	b.n	800508e <HAL_RCC_ClockConfig+0x266>
  }

  return HAL_OK;
 800508c:	2300      	movs	r3, #0
}
 800508e:	0018      	movs	r0, r3
 8005090:	46bd      	mov	sp, r7
 8005092:	b004      	add	sp, #16
 8005094:	bdb0      	pop	{r4, r5, r7, pc}
 8005096:	46c0      	nop			@ (mov r8, r8)
 8005098:	40022000 	.word	0x40022000
 800509c:	00001388 	.word	0x00001388
 80050a0:	40021000 	.word	0x40021000
 80050a4:	fffff8ff 	.word	0xfffff8ff
 80050a8:	ffffc7ff 	.word	0xffffc7ff
 80050ac:	08009d6c 	.word	0x08009d6c
 80050b0:	20000008 	.word	0x20000008
 80050b4:	2000000c 	.word	0x2000000c

080050b8 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80050b8:	b580      	push	{r7, lr}
 80050ba:	b086      	sub	sp, #24
 80050bc:	af00      	add	r7, sp, #0
  uint32_t tmpreg, pllm, plld, pllvco, msiclkrange;    /* no init needed */
  uint32_t sysclockfreq;

  tmpreg = RCC->CFGR;
 80050be:	4b3c      	ldr	r3, [pc, #240]	@ (80051b0 <HAL_RCC_GetSysClockFreq+0xf8>)
 80050c0:	68db      	ldr	r3, [r3, #12]
 80050c2:	60fb      	str	r3, [r7, #12]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 80050c4:	68fb      	ldr	r3, [r7, #12]
 80050c6:	220c      	movs	r2, #12
 80050c8:	4013      	ands	r3, r2
 80050ca:	2b0c      	cmp	r3, #12
 80050cc:	d013      	beq.n	80050f6 <HAL_RCC_GetSysClockFreq+0x3e>
 80050ce:	d85c      	bhi.n	800518a <HAL_RCC_GetSysClockFreq+0xd2>
 80050d0:	2b04      	cmp	r3, #4
 80050d2:	d002      	beq.n	80050da <HAL_RCC_GetSysClockFreq+0x22>
 80050d4:	2b08      	cmp	r3, #8
 80050d6:	d00b      	beq.n	80050f0 <HAL_RCC_GetSysClockFreq+0x38>
 80050d8:	e057      	b.n	800518a <HAL_RCC_GetSysClockFreq+0xd2>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 80050da:	4b35      	ldr	r3, [pc, #212]	@ (80051b0 <HAL_RCC_GetSysClockFreq+0xf8>)
 80050dc:	681b      	ldr	r3, [r3, #0]
 80050de:	2210      	movs	r2, #16
 80050e0:	4013      	ands	r3, r2
 80050e2:	d002      	beq.n	80050ea <HAL_RCC_GetSysClockFreq+0x32>
      {
        sysclockfreq =  (HSI_VALUE >> 2);
 80050e4:	4b33      	ldr	r3, [pc, #204]	@ (80051b4 <HAL_RCC_GetSysClockFreq+0xfc>)
 80050e6:	613b      	str	r3, [r7, #16]
      }
      else
      {
        sysclockfreq =  HSI_VALUE;
      }
      break;
 80050e8:	e05d      	b.n	80051a6 <HAL_RCC_GetSysClockFreq+0xee>
        sysclockfreq =  HSI_VALUE;
 80050ea:	4b33      	ldr	r3, [pc, #204]	@ (80051b8 <HAL_RCC_GetSysClockFreq+0x100>)
 80050ec:	613b      	str	r3, [r7, #16]
      break;
 80050ee:	e05a      	b.n	80051a6 <HAL_RCC_GetSysClockFreq+0xee>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 80050f0:	4b32      	ldr	r3, [pc, #200]	@ (80051bc <HAL_RCC_GetSysClockFreq+0x104>)
 80050f2:	613b      	str	r3, [r7, #16]
      break;
 80050f4:	e057      	b.n	80051a6 <HAL_RCC_GetSysClockFreq+0xee>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllm = PLLMulTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_Pos];
 80050f6:	68fb      	ldr	r3, [r7, #12]
 80050f8:	0c9b      	lsrs	r3, r3, #18
 80050fa:	220f      	movs	r2, #15
 80050fc:	4013      	ands	r3, r2
 80050fe:	4a30      	ldr	r2, [pc, #192]	@ (80051c0 <HAL_RCC_GetSysClockFreq+0x108>)
 8005100:	5cd3      	ldrb	r3, [r2, r3]
 8005102:	60bb      	str	r3, [r7, #8]
      plld = ((uint32_t)(tmpreg & RCC_CFGR_PLLDIV) >> RCC_CFGR_PLLDIV_Pos) + 1U;
 8005104:	68fb      	ldr	r3, [r7, #12]
 8005106:	0d9b      	lsrs	r3, r3, #22
 8005108:	2203      	movs	r2, #3
 800510a:	4013      	ands	r3, r2
 800510c:	3301      	adds	r3, #1
 800510e:	607b      	str	r3, [r7, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8005110:	4b27      	ldr	r3, [pc, #156]	@ (80051b0 <HAL_RCC_GetSysClockFreq+0xf8>)
 8005112:	68da      	ldr	r2, [r3, #12]
 8005114:	2380      	movs	r3, #128	@ 0x80
 8005116:	025b      	lsls	r3, r3, #9
 8005118:	4013      	ands	r3, r2
 800511a:	d00f      	beq.n	800513c <HAL_RCC_GetSysClockFreq+0x84>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t)((HSE_VALUE * pllm) / plld);
 800511c:	68b9      	ldr	r1, [r7, #8]
 800511e:	000a      	movs	r2, r1
 8005120:	0152      	lsls	r2, r2, #5
 8005122:	1a52      	subs	r2, r2, r1
 8005124:	0193      	lsls	r3, r2, #6
 8005126:	1a9b      	subs	r3, r3, r2
 8005128:	00db      	lsls	r3, r3, #3
 800512a:	185b      	adds	r3, r3, r1
 800512c:	025b      	lsls	r3, r3, #9
 800512e:	6879      	ldr	r1, [r7, #4]
 8005130:	0018      	movs	r0, r3
 8005132:	f7fb f805 	bl	8000140 <__udivsi3>
 8005136:	0003      	movs	r3, r0
 8005138:	617b      	str	r3, [r7, #20]
 800513a:	e023      	b.n	8005184 <HAL_RCC_GetSysClockFreq+0xcc>
      }
      else
      {
        if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 800513c:	4b1c      	ldr	r3, [pc, #112]	@ (80051b0 <HAL_RCC_GetSysClockFreq+0xf8>)
 800513e:	681b      	ldr	r3, [r3, #0]
 8005140:	2210      	movs	r2, #16
 8005142:	4013      	ands	r3, r2
 8005144:	d00f      	beq.n	8005166 <HAL_RCC_GetSysClockFreq+0xae>
        {
          pllvco = (uint32_t)((((HSI_VALUE >> 2)) * pllm) / plld);
 8005146:	68b9      	ldr	r1, [r7, #8]
 8005148:	000a      	movs	r2, r1
 800514a:	0152      	lsls	r2, r2, #5
 800514c:	1a52      	subs	r2, r2, r1
 800514e:	0193      	lsls	r3, r2, #6
 8005150:	1a9b      	subs	r3, r3, r2
 8005152:	00db      	lsls	r3, r3, #3
 8005154:	185b      	adds	r3, r3, r1
 8005156:	021b      	lsls	r3, r3, #8
 8005158:	6879      	ldr	r1, [r7, #4]
 800515a:	0018      	movs	r0, r3
 800515c:	f7fa fff0 	bl	8000140 <__udivsi3>
 8005160:	0003      	movs	r3, r0
 8005162:	617b      	str	r3, [r7, #20]
 8005164:	e00e      	b.n	8005184 <HAL_RCC_GetSysClockFreq+0xcc>
        }
        else
        {
         pllvco = (uint32_t)((HSI_VALUE * pllm) / plld);
 8005166:	68b9      	ldr	r1, [r7, #8]
 8005168:	000a      	movs	r2, r1
 800516a:	0152      	lsls	r2, r2, #5
 800516c:	1a52      	subs	r2, r2, r1
 800516e:	0193      	lsls	r3, r2, #6
 8005170:	1a9b      	subs	r3, r3, r2
 8005172:	00db      	lsls	r3, r3, #3
 8005174:	185b      	adds	r3, r3, r1
 8005176:	029b      	lsls	r3, r3, #10
 8005178:	6879      	ldr	r1, [r7, #4]
 800517a:	0018      	movs	r0, r3
 800517c:	f7fa ffe0 	bl	8000140 <__udivsi3>
 8005180:	0003      	movs	r3, r0
 8005182:	617b      	str	r3, [r7, #20]
        }
      }
      sysclockfreq = pllvco;
 8005184:	697b      	ldr	r3, [r7, #20]
 8005186:	613b      	str	r3, [r7, #16]
      break;
 8005188:	e00d      	b.n	80051a6 <HAL_RCC_GetSysClockFreq+0xee>
    }
    case RCC_SYSCLKSOURCE_STATUS_MSI:  /* MSI used as system clock source */
    default: /* MSI used as system clock */
    {
      msiclkrange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE ) >> RCC_ICSCR_MSIRANGE_Pos;
 800518a:	4b09      	ldr	r3, [pc, #36]	@ (80051b0 <HAL_RCC_GetSysClockFreq+0xf8>)
 800518c:	685b      	ldr	r3, [r3, #4]
 800518e:	0b5b      	lsrs	r3, r3, #13
 8005190:	2207      	movs	r2, #7
 8005192:	4013      	ands	r3, r2
 8005194:	603b      	str	r3, [r7, #0]
      sysclockfreq = (32768U * (1UL << (msiclkrange + 1U)));
 8005196:	683b      	ldr	r3, [r7, #0]
 8005198:	3301      	adds	r3, #1
 800519a:	2280      	movs	r2, #128	@ 0x80
 800519c:	0212      	lsls	r2, r2, #8
 800519e:	409a      	lsls	r2, r3
 80051a0:	0013      	movs	r3, r2
 80051a2:	613b      	str	r3, [r7, #16]
      break;
 80051a4:	46c0      	nop			@ (mov r8, r8)
    }
  }
  return sysclockfreq;
 80051a6:	693b      	ldr	r3, [r7, #16]
}
 80051a8:	0018      	movs	r0, r3
 80051aa:	46bd      	mov	sp, r7
 80051ac:	b006      	add	sp, #24
 80051ae:	bd80      	pop	{r7, pc}
 80051b0:	40021000 	.word	0x40021000
 80051b4:	003d0900 	.word	0x003d0900
 80051b8:	00f42400 	.word	0x00f42400
 80051bc:	007a1200 	.word	0x007a1200
 80051c0:	08009d7c 	.word	0x08009d7c

080051c4 <HAL_RCCEx_PeriphCLKConfig>:
  * @retval HAL status
  * @note   If HAL_ERROR returned, first switch-OFF HSE clock oscillator with @ref HAL_RCC_OscConfig()
  *         to possibly update HSE divider.
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 80051c4:	b580      	push	{r7, lr}
 80051c6:	b086      	sub	sp, #24
 80051c8:	af00      	add	r7, sp, #0
 80051ca:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;
  uint32_t temp_reg;
  FlagStatus       pwrclkchanged = RESET;
 80051cc:	2017      	movs	r0, #23
 80051ce:	183b      	adds	r3, r7, r0
 80051d0:	2200      	movs	r2, #0
 80051d2:	701a      	strb	r2, [r3, #0]

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*------------------------------- RTC/LCD Configuration ------------------------*/
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 80051d4:	687b      	ldr	r3, [r7, #4]
 80051d6:	681b      	ldr	r3, [r3, #0]
 80051d8:	2220      	movs	r2, #32
 80051da:	4013      	ands	r3, r2
 80051dc:	d100      	bne.n	80051e0 <HAL_RCCEx_PeriphCLKConfig+0x1c>
 80051de:	e0c7      	b.n	8005370 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
#endif /* LCD */

    /* As soon as function is called to change RTC clock source, activation of the
       power domain is done. */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 80051e0:	4b93      	ldr	r3, [pc, #588]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 80051e2:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80051e4:	2380      	movs	r3, #128	@ 0x80
 80051e6:	055b      	lsls	r3, r3, #21
 80051e8:	4013      	ands	r3, r2
 80051ea:	d109      	bne.n	8005200 <HAL_RCCEx_PeriphCLKConfig+0x3c>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 80051ec:	4b90      	ldr	r3, [pc, #576]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 80051ee:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 80051f0:	4b8f      	ldr	r3, [pc, #572]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 80051f2:	2180      	movs	r1, #128	@ 0x80
 80051f4:	0549      	lsls	r1, r1, #21
 80051f6:	430a      	orrs	r2, r1
 80051f8:	639a      	str	r2, [r3, #56]	@ 0x38
      pwrclkchanged = SET;
 80051fa:	183b      	adds	r3, r7, r0
 80051fc:	2201      	movs	r2, #1
 80051fe:	701a      	strb	r2, [r3, #0]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005200:	4b8c      	ldr	r3, [pc, #560]	@ (8005434 <HAL_RCCEx_PeriphCLKConfig+0x270>)
 8005202:	681a      	ldr	r2, [r3, #0]
 8005204:	2380      	movs	r3, #128	@ 0x80
 8005206:	005b      	lsls	r3, r3, #1
 8005208:	4013      	ands	r3, r2
 800520a:	d11a      	bne.n	8005242 <HAL_RCCEx_PeriphCLKConfig+0x7e>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 800520c:	4b89      	ldr	r3, [pc, #548]	@ (8005434 <HAL_RCCEx_PeriphCLKConfig+0x270>)
 800520e:	681a      	ldr	r2, [r3, #0]
 8005210:	4b88      	ldr	r3, [pc, #544]	@ (8005434 <HAL_RCCEx_PeriphCLKConfig+0x270>)
 8005212:	2180      	movs	r1, #128	@ 0x80
 8005214:	0049      	lsls	r1, r1, #1
 8005216:	430a      	orrs	r2, r1
 8005218:	601a      	str	r2, [r3, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 800521a:	f7fd ffdb 	bl	80031d4 <HAL_GetTick>
 800521e:	0003      	movs	r3, r0
 8005220:	613b      	str	r3, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005222:	e008      	b.n	8005236 <HAL_RCCEx_PeriphCLKConfig+0x72>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8005224:	f7fd ffd6 	bl	80031d4 <HAL_GetTick>
 8005228:	0002      	movs	r2, r0
 800522a:	693b      	ldr	r3, [r7, #16]
 800522c:	1ad3      	subs	r3, r2, r3
 800522e:	2b64      	cmp	r3, #100	@ 0x64
 8005230:	d901      	bls.n	8005236 <HAL_RCCEx_PeriphCLKConfig+0x72>
        {
          return HAL_TIMEOUT;
 8005232:	2303      	movs	r3, #3
 8005234:	e0f7      	b.n	8005426 <HAL_RCCEx_PeriphCLKConfig+0x262>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8005236:	4b7f      	ldr	r3, [pc, #508]	@ (8005434 <HAL_RCCEx_PeriphCLKConfig+0x270>)
 8005238:	681a      	ldr	r2, [r3, #0]
 800523a:	2380      	movs	r3, #128	@ 0x80
 800523c:	005b      	lsls	r3, r3, #1
 800523e:	4013      	ands	r3, r2
 8005240:	d0f0      	beq.n	8005224 <HAL_RCCEx_PeriphCLKConfig+0x60>
        }
      }
    }

    /* Check if user wants to change HSE RTC prescaler whereas HSE is enabled */
    temp_reg = (RCC->CR & RCC_CR_RTCPRE);
 8005242:	4b7b      	ldr	r3, [pc, #492]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 8005244:	681a      	ldr	r2, [r3, #0]
 8005246:	23c0      	movs	r3, #192	@ 0xc0
 8005248:	039b      	lsls	r3, r3, #14
 800524a:	4013      	ands	r3, r2
 800524c:	60fb      	str	r3, [r7, #12]
    if ((temp_reg != (PeriphClkInit->RTCClockSelection & RCC_CR_RTCPRE))
 800524e:	687b      	ldr	r3, [r7, #4]
 8005250:	685a      	ldr	r2, [r3, #4]
 8005252:	23c0      	movs	r3, #192	@ 0xc0
 8005254:	039b      	lsls	r3, r3, #14
 8005256:	4013      	ands	r3, r2
 8005258:	68fa      	ldr	r2, [r7, #12]
 800525a:	429a      	cmp	r2, r3
 800525c:	d013      	beq.n	8005286 <HAL_RCCEx_PeriphCLKConfig+0xc2>
#if defined (LCD)
     || (temp_reg != (PeriphClkInit->LCDClockSelection & RCC_CR_RTCPRE))
#endif /* LCD */
       )
    { /* Check HSE State */
      if ((PeriphClkInit->RTCClockSelection & RCC_CSR_RTCSEL) == RCC_CSR_RTCSEL_HSE)
 800525e:	687b      	ldr	r3, [r7, #4]
 8005260:	685a      	ldr	r2, [r3, #4]
 8005262:	23c0      	movs	r3, #192	@ 0xc0
 8005264:	029b      	lsls	r3, r3, #10
 8005266:	401a      	ands	r2, r3
 8005268:	23c0      	movs	r3, #192	@ 0xc0
 800526a:	029b      	lsls	r3, r3, #10
 800526c:	429a      	cmp	r2, r3
 800526e:	d10a      	bne.n	8005286 <HAL_RCCEx_PeriphCLKConfig+0xc2>
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
 8005270:	4b6f      	ldr	r3, [pc, #444]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 8005272:	681a      	ldr	r2, [r3, #0]
 8005274:	2380      	movs	r3, #128	@ 0x80
 8005276:	029b      	lsls	r3, r3, #10
 8005278:	401a      	ands	r2, r3
 800527a:	2380      	movs	r3, #128	@ 0x80
 800527c:	029b      	lsls	r3, r3, #10
 800527e:	429a      	cmp	r2, r3
 8005280:	d101      	bne.n	8005286 <HAL_RCCEx_PeriphCLKConfig+0xc2>
        {
          /* To update HSE divider, first switch-OFF HSE clock oscillator*/
          return HAL_ERROR;
 8005282:	2301      	movs	r3, #1
 8005284:	e0cf      	b.n	8005426 <HAL_RCCEx_PeriphCLKConfig+0x262>
        }
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    temp_reg = (RCC->CSR & RCC_CSR_RTCSEL);
 8005286:	4b6a      	ldr	r3, [pc, #424]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 8005288:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 800528a:	23c0      	movs	r3, #192	@ 0xc0
 800528c:	029b      	lsls	r3, r3, #10
 800528e:	4013      	ands	r3, r2
 8005290:	60fb      	str	r3, [r7, #12]

    if((temp_reg != 0x00000000U) && (((temp_reg != (PeriphClkInit->RTCClockSelection & RCC_CSR_RTCSEL)) \
 8005292:	68fb      	ldr	r3, [r7, #12]
 8005294:	2b00      	cmp	r3, #0
 8005296:	d03b      	beq.n	8005310 <HAL_RCCEx_PeriphCLKConfig+0x14c>
 8005298:	687b      	ldr	r3, [r7, #4]
 800529a:	685a      	ldr	r2, [r3, #4]
 800529c:	23c0      	movs	r3, #192	@ 0xc0
 800529e:	029b      	lsls	r3, r3, #10
 80052a0:	4013      	ands	r3, r2
 80052a2:	68fa      	ldr	r2, [r7, #12]
 80052a4:	429a      	cmp	r2, r3
 80052a6:	d033      	beq.n	8005310 <HAL_RCCEx_PeriphCLKConfig+0x14c>
      && (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC))
 80052a8:	687b      	ldr	r3, [r7, #4]
 80052aa:	681b      	ldr	r3, [r3, #0]
 80052ac:	2220      	movs	r2, #32
 80052ae:	4013      	ands	r3, r2
 80052b0:	d02e      	beq.n	8005310 <HAL_RCCEx_PeriphCLKConfig+0x14c>
       && (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LCD) == RCC_PERIPHCLK_LCD))
#endif /* LCD */
     ))
    {
      /* Store the content of CSR register before the reset of Backup Domain */
      temp_reg = (RCC->CSR & ~(RCC_CSR_RTCSEL));
 80052b2:	4b5f      	ldr	r3, [pc, #380]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 80052b4:	6d1b      	ldr	r3, [r3, #80]	@ 0x50
 80052b6:	4a60      	ldr	r2, [pc, #384]	@ (8005438 <HAL_RCCEx_PeriphCLKConfig+0x274>)
 80052b8:	4013      	ands	r3, r2
 80052ba:	60fb      	str	r3, [r7, #12]

      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 80052bc:	4b5c      	ldr	r3, [pc, #368]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 80052be:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 80052c0:	4b5b      	ldr	r3, [pc, #364]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 80052c2:	2180      	movs	r1, #128	@ 0x80
 80052c4:	0309      	lsls	r1, r1, #12
 80052c6:	430a      	orrs	r2, r1
 80052c8:	651a      	str	r2, [r3, #80]	@ 0x50
      __HAL_RCC_BACKUPRESET_RELEASE();
 80052ca:	4b59      	ldr	r3, [pc, #356]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 80052cc:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 80052ce:	4b58      	ldr	r3, [pc, #352]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 80052d0:	495a      	ldr	r1, [pc, #360]	@ (800543c <HAL_RCCEx_PeriphCLKConfig+0x278>)
 80052d2:	400a      	ands	r2, r1
 80052d4:	651a      	str	r2, [r3, #80]	@ 0x50

      /* Restore the Content of CSR register */
      RCC->CSR = temp_reg;
 80052d6:	4b56      	ldr	r3, [pc, #344]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 80052d8:	68fa      	ldr	r2, [r7, #12]
 80052da:	651a      	str	r2, [r3, #80]	@ 0x50

       /* Wait for LSERDY if LSE was enabled */
      if (HAL_IS_BIT_SET(temp_reg, RCC_CSR_LSEON))
 80052dc:	68fa      	ldr	r2, [r7, #12]
 80052de:	2380      	movs	r3, #128	@ 0x80
 80052e0:	005b      	lsls	r3, r3, #1
 80052e2:	4013      	ands	r3, r2
 80052e4:	d014      	beq.n	8005310 <HAL_RCCEx_PeriphCLKConfig+0x14c>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80052e6:	f7fd ff75 	bl	80031d4 <HAL_GetTick>
 80052ea:	0003      	movs	r3, r0
 80052ec:	613b      	str	r3, [r7, #16]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 80052ee:	e009      	b.n	8005304 <HAL_RCCEx_PeriphCLKConfig+0x140>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80052f0:	f7fd ff70 	bl	80031d4 <HAL_GetTick>
 80052f4:	0002      	movs	r2, r0
 80052f6:	693b      	ldr	r3, [r7, #16]
 80052f8:	1ad3      	subs	r3, r2, r3
 80052fa:	4a51      	ldr	r2, [pc, #324]	@ (8005440 <HAL_RCCEx_PeriphCLKConfig+0x27c>)
 80052fc:	4293      	cmp	r3, r2
 80052fe:	d901      	bls.n	8005304 <HAL_RCCEx_PeriphCLKConfig+0x140>
          {
            return HAL_TIMEOUT;
 8005300:	2303      	movs	r3, #3
 8005302:	e090      	b.n	8005426 <HAL_RCCEx_PeriphCLKConfig+0x262>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8005304:	4b4a      	ldr	r3, [pc, #296]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 8005306:	6d1a      	ldr	r2, [r3, #80]	@ 0x50
 8005308:	2380      	movs	r3, #128	@ 0x80
 800530a:	009b      	lsls	r3, r3, #2
 800530c:	4013      	ands	r3, r2
 800530e:	d0ef      	beq.n	80052f0 <HAL_RCCEx_PeriphCLKConfig+0x12c>
    {
      __HAL_RCC_LCD_CONFIG(PeriphClkInit->LCDClockSelection);
    } 
#endif /* LCD */

    if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8005310:	687b      	ldr	r3, [r7, #4]
 8005312:	681b      	ldr	r3, [r3, #0]
 8005314:	2220      	movs	r2, #32
 8005316:	4013      	ands	r3, r2
 8005318:	d01f      	beq.n	800535a <HAL_RCCEx_PeriphCLKConfig+0x196>
    {
      __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 800531a:	687b      	ldr	r3, [r7, #4]
 800531c:	685a      	ldr	r2, [r3, #4]
 800531e:	23c0      	movs	r3, #192	@ 0xc0
 8005320:	029b      	lsls	r3, r3, #10
 8005322:	401a      	ands	r2, r3
 8005324:	23c0      	movs	r3, #192	@ 0xc0
 8005326:	029b      	lsls	r3, r3, #10
 8005328:	429a      	cmp	r2, r3
 800532a:	d10c      	bne.n	8005346 <HAL_RCCEx_PeriphCLKConfig+0x182>
 800532c:	4b40      	ldr	r3, [pc, #256]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 800532e:	681b      	ldr	r3, [r3, #0]
 8005330:	4a44      	ldr	r2, [pc, #272]	@ (8005444 <HAL_RCCEx_PeriphCLKConfig+0x280>)
 8005332:	4013      	ands	r3, r2
 8005334:	0019      	movs	r1, r3
 8005336:	687b      	ldr	r3, [r7, #4]
 8005338:	685a      	ldr	r2, [r3, #4]
 800533a:	23c0      	movs	r3, #192	@ 0xc0
 800533c:	039b      	lsls	r3, r3, #14
 800533e:	401a      	ands	r2, r3
 8005340:	4b3b      	ldr	r3, [pc, #236]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 8005342:	430a      	orrs	r2, r1
 8005344:	601a      	str	r2, [r3, #0]
 8005346:	4b3a      	ldr	r3, [pc, #232]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 8005348:	6d19      	ldr	r1, [r3, #80]	@ 0x50
 800534a:	687b      	ldr	r3, [r7, #4]
 800534c:	685a      	ldr	r2, [r3, #4]
 800534e:	23c0      	movs	r3, #192	@ 0xc0
 8005350:	029b      	lsls	r3, r3, #10
 8005352:	401a      	ands	r2, r3
 8005354:	4b36      	ldr	r3, [pc, #216]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 8005356:	430a      	orrs	r2, r1
 8005358:	651a      	str	r2, [r3, #80]	@ 0x50
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 800535a:	2317      	movs	r3, #23
 800535c:	18fb      	adds	r3, r7, r3
 800535e:	781b      	ldrb	r3, [r3, #0]
 8005360:	2b01      	cmp	r3, #1
 8005362:	d105      	bne.n	8005370 <HAL_RCCEx_PeriphCLKConfig+0x1ac>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8005364:	4b32      	ldr	r3, [pc, #200]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 8005366:	6b9a      	ldr	r2, [r3, #56]	@ 0x38
 8005368:	4b31      	ldr	r3, [pc, #196]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 800536a:	4937      	ldr	r1, [pc, #220]	@ (8005448 <HAL_RCCEx_PeriphCLKConfig+0x284>)
 800536c:	400a      	ands	r2, r1
 800536e:	639a      	str	r2, [r3, #56]	@ 0x38
    }
  }

#if defined (RCC_CCIPR_USART1SEL)
  /*------------------------------- USART1 Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8005370:	687b      	ldr	r3, [r7, #4]
 8005372:	681b      	ldr	r3, [r3, #0]
 8005374:	2201      	movs	r2, #1
 8005376:	4013      	ands	r3, r2
 8005378:	d009      	beq.n	800538e <HAL_RCCEx_PeriphCLKConfig+0x1ca>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 800537a:	4b2d      	ldr	r3, [pc, #180]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 800537c:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800537e:	2203      	movs	r2, #3
 8005380:	4393      	bics	r3, r2
 8005382:	0019      	movs	r1, r3
 8005384:	687b      	ldr	r3, [r7, #4]
 8005386:	689a      	ldr	r2, [r3, #8]
 8005388:	4b29      	ldr	r3, [pc, #164]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 800538a:	430a      	orrs	r2, r1
 800538c:	64da      	str	r2, [r3, #76]	@ 0x4c
  }
#endif /* RCC_CCIPR_USART1SEL */

  /*----------------------------- USART2 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 800538e:	687b      	ldr	r3, [r7, #4]
 8005390:	681b      	ldr	r3, [r3, #0]
 8005392:	2202      	movs	r2, #2
 8005394:	4013      	ands	r3, r2
 8005396:	d009      	beq.n	80053ac <HAL_RCCEx_PeriphCLKConfig+0x1e8>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8005398:	4b25      	ldr	r3, [pc, #148]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 800539a:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 800539c:	220c      	movs	r2, #12
 800539e:	4393      	bics	r3, r2
 80053a0:	0019      	movs	r1, r3
 80053a2:	687b      	ldr	r3, [r7, #4]
 80053a4:	68da      	ldr	r2, [r3, #12]
 80053a6:	4b22      	ldr	r3, [pc, #136]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 80053a8:	430a      	orrs	r2, r1
 80053aa:	64da      	str	r2, [r3, #76]	@ 0x4c
  }

  /*------------------------------ LPUART1 Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 80053ac:	687b      	ldr	r3, [r7, #4]
 80053ae:	681b      	ldr	r3, [r3, #0]
 80053b0:	2204      	movs	r2, #4
 80053b2:	4013      	ands	r3, r2
 80053b4:	d009      	beq.n	80053ca <HAL_RCCEx_PeriphCLKConfig+0x206>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPUART1CLKSOURCE(PeriphClkInit->Lpuart1ClockSelection));

    /* Configure the LPUAR1 clock source */
    __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 80053b6:	4b1e      	ldr	r3, [pc, #120]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 80053b8:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80053ba:	4a24      	ldr	r2, [pc, #144]	@ (800544c <HAL_RCCEx_PeriphCLKConfig+0x288>)
 80053bc:	4013      	ands	r3, r2
 80053be:	0019      	movs	r1, r3
 80053c0:	687b      	ldr	r3, [r7, #4]
 80053c2:	691a      	ldr	r2, [r3, #16]
 80053c4:	4b1a      	ldr	r3, [pc, #104]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 80053c6:	430a      	orrs	r2, r1
 80053c8:	64da      	str	r2, [r3, #76]	@ 0x4c
  }

  /*------------------------------ I2C1 Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 80053ca:	687b      	ldr	r3, [r7, #4]
 80053cc:	681b      	ldr	r3, [r3, #0]
 80053ce:	2208      	movs	r2, #8
 80053d0:	4013      	ands	r3, r2
 80053d2:	d009      	beq.n	80053e8 <HAL_RCCEx_PeriphCLKConfig+0x224>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 80053d4:	4b16      	ldr	r3, [pc, #88]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 80053d6:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80053d8:	4a1d      	ldr	r2, [pc, #116]	@ (8005450 <HAL_RCCEx_PeriphCLKConfig+0x28c>)
 80053da:	4013      	ands	r3, r2
 80053dc:	0019      	movs	r1, r3
 80053de:	687b      	ldr	r3, [r7, #4]
 80053e0:	695a      	ldr	r2, [r3, #20]
 80053e2:	4b13      	ldr	r3, [pc, #76]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 80053e4:	430a      	orrs	r2, r1
 80053e6:	64da      	str	r2, [r3, #76]	@ 0x4c
  }
#endif /* RCC_CCIPR_I2C3SEL */

#if defined(USB)
 /*---------------------------- USB and RNG configuration --------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == (RCC_PERIPHCLK_USB))
 80053e8:	687b      	ldr	r3, [r7, #4]
 80053ea:	681b      	ldr	r3, [r3, #0]
 80053ec:	2240      	movs	r2, #64	@ 0x40
 80053ee:	4013      	ands	r3, r2
 80053f0:	d009      	beq.n	8005406 <HAL_RCCEx_PeriphCLKConfig+0x242>
  {
    assert_param(IS_RCC_USBCLKSOURCE(PeriphClkInit->UsbClockSelection));
    __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 80053f2:	4b0f      	ldr	r3, [pc, #60]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 80053f4:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 80053f6:	4a17      	ldr	r2, [pc, #92]	@ (8005454 <HAL_RCCEx_PeriphCLKConfig+0x290>)
 80053f8:	4013      	ands	r3, r2
 80053fa:	0019      	movs	r1, r3
 80053fc:	687b      	ldr	r3, [r7, #4]
 80053fe:	69da      	ldr	r2, [r3, #28]
 8005400:	4b0b      	ldr	r3, [pc, #44]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 8005402:	430a      	orrs	r2, r1
 8005404:	64da      	str	r2, [r3, #76]	@ 0x4c
  }
#endif /* USB */

  /*---------------------------- LPTIM1 configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 8005406:	687b      	ldr	r3, [r7, #4]
 8005408:	681b      	ldr	r3, [r3, #0]
 800540a:	2280      	movs	r2, #128	@ 0x80
 800540c:	4013      	ands	r3, r2
 800540e:	d009      	beq.n	8005424 <HAL_RCCEx_PeriphCLKConfig+0x260>
  {
    assert_param(IS_RCC_LPTIMCLK(PeriphClkInit->LptimClockSelection));
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->LptimClockSelection);
 8005410:	4b07      	ldr	r3, [pc, #28]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 8005412:	6cdb      	ldr	r3, [r3, #76]	@ 0x4c
 8005414:	4a10      	ldr	r2, [pc, #64]	@ (8005458 <HAL_RCCEx_PeriphCLKConfig+0x294>)
 8005416:	4013      	ands	r3, r2
 8005418:	0019      	movs	r1, r3
 800541a:	687b      	ldr	r3, [r7, #4]
 800541c:	699a      	ldr	r2, [r3, #24]
 800541e:	4b04      	ldr	r3, [pc, #16]	@ (8005430 <HAL_RCCEx_PeriphCLKConfig+0x26c>)
 8005420:	430a      	orrs	r2, r1
 8005422:	64da      	str	r2, [r3, #76]	@ 0x4c
  }

  return HAL_OK;
 8005424:	2300      	movs	r3, #0
}
 8005426:	0018      	movs	r0, r3
 8005428:	46bd      	mov	sp, r7
 800542a:	b006      	add	sp, #24
 800542c:	bd80      	pop	{r7, pc}
 800542e:	46c0      	nop			@ (mov r8, r8)
 8005430:	40021000 	.word	0x40021000
 8005434:	40007000 	.word	0x40007000
 8005438:	fffcffff 	.word	0xfffcffff
 800543c:	fff7ffff 	.word	0xfff7ffff
 8005440:	00001388 	.word	0x00001388
 8005444:	ffcfffff 	.word	0xffcfffff
 8005448:	efffffff 	.word	0xefffffff
 800544c:	fffff3ff 	.word	0xfffff3ff
 8005450:	ffffcfff 	.word	0xffffcfff
 8005454:	fbffffff 	.word	0xfbffffff
 8005458:	fff3ffff 	.word	0xfff3ffff

0800545c <__cvt>:
 800545c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800545e:	001f      	movs	r7, r3
 8005460:	2300      	movs	r3, #0
 8005462:	0016      	movs	r6, r2
 8005464:	b08b      	sub	sp, #44	@ 0x2c
 8005466:	429f      	cmp	r7, r3
 8005468:	da04      	bge.n	8005474 <__cvt+0x18>
 800546a:	2180      	movs	r1, #128	@ 0x80
 800546c:	0609      	lsls	r1, r1, #24
 800546e:	187b      	adds	r3, r7, r1
 8005470:	001f      	movs	r7, r3
 8005472:	232d      	movs	r3, #45	@ 0x2d
 8005474:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 8005476:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8005478:	7013      	strb	r3, [r2, #0]
 800547a:	2320      	movs	r3, #32
 800547c:	2203      	movs	r2, #3
 800547e:	439d      	bics	r5, r3
 8005480:	2d46      	cmp	r5, #70	@ 0x46
 8005482:	d007      	beq.n	8005494 <__cvt+0x38>
 8005484:	002b      	movs	r3, r5
 8005486:	3b45      	subs	r3, #69	@ 0x45
 8005488:	4259      	negs	r1, r3
 800548a:	414b      	adcs	r3, r1
 800548c:	9910      	ldr	r1, [sp, #64]	@ 0x40
 800548e:	3a01      	subs	r2, #1
 8005490:	18cb      	adds	r3, r1, r3
 8005492:	9310      	str	r3, [sp, #64]	@ 0x40
 8005494:	ab09      	add	r3, sp, #36	@ 0x24
 8005496:	9304      	str	r3, [sp, #16]
 8005498:	ab08      	add	r3, sp, #32
 800549a:	9303      	str	r3, [sp, #12]
 800549c:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800549e:	9200      	str	r2, [sp, #0]
 80054a0:	9302      	str	r3, [sp, #8]
 80054a2:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80054a4:	0032      	movs	r2, r6
 80054a6:	9301      	str	r3, [sp, #4]
 80054a8:	003b      	movs	r3, r7
 80054aa:	f001 f891 	bl	80065d0 <_dtoa_r>
 80054ae:	0004      	movs	r4, r0
 80054b0:	2d47      	cmp	r5, #71	@ 0x47
 80054b2:	d11b      	bne.n	80054ec <__cvt+0x90>
 80054b4:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80054b6:	07db      	lsls	r3, r3, #31
 80054b8:	d511      	bpl.n	80054de <__cvt+0x82>
 80054ba:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80054bc:	18c3      	adds	r3, r0, r3
 80054be:	9307      	str	r3, [sp, #28]
 80054c0:	2200      	movs	r2, #0
 80054c2:	2300      	movs	r3, #0
 80054c4:	0030      	movs	r0, r6
 80054c6:	0039      	movs	r1, r7
 80054c8:	f7fa ffc0 	bl	800044c <__aeabi_dcmpeq>
 80054cc:	2800      	cmp	r0, #0
 80054ce:	d001      	beq.n	80054d4 <__cvt+0x78>
 80054d0:	9b07      	ldr	r3, [sp, #28]
 80054d2:	9309      	str	r3, [sp, #36]	@ 0x24
 80054d4:	2230      	movs	r2, #48	@ 0x30
 80054d6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80054d8:	9907      	ldr	r1, [sp, #28]
 80054da:	428b      	cmp	r3, r1
 80054dc:	d320      	bcc.n	8005520 <__cvt+0xc4>
 80054de:	0020      	movs	r0, r4
 80054e0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80054e2:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80054e4:	1b1b      	subs	r3, r3, r4
 80054e6:	6013      	str	r3, [r2, #0]
 80054e8:	b00b      	add	sp, #44	@ 0x2c
 80054ea:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80054ec:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80054ee:	18c3      	adds	r3, r0, r3
 80054f0:	9307      	str	r3, [sp, #28]
 80054f2:	2d46      	cmp	r5, #70	@ 0x46
 80054f4:	d1e4      	bne.n	80054c0 <__cvt+0x64>
 80054f6:	7803      	ldrb	r3, [r0, #0]
 80054f8:	2b30      	cmp	r3, #48	@ 0x30
 80054fa:	d10c      	bne.n	8005516 <__cvt+0xba>
 80054fc:	2200      	movs	r2, #0
 80054fe:	2300      	movs	r3, #0
 8005500:	0030      	movs	r0, r6
 8005502:	0039      	movs	r1, r7
 8005504:	f7fa ffa2 	bl	800044c <__aeabi_dcmpeq>
 8005508:	2800      	cmp	r0, #0
 800550a:	d104      	bne.n	8005516 <__cvt+0xba>
 800550c:	2301      	movs	r3, #1
 800550e:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 8005510:	1a9b      	subs	r3, r3, r2
 8005512:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8005514:	6013      	str	r3, [r2, #0]
 8005516:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8005518:	9a07      	ldr	r2, [sp, #28]
 800551a:	681b      	ldr	r3, [r3, #0]
 800551c:	18d3      	adds	r3, r2, r3
 800551e:	e7ce      	b.n	80054be <__cvt+0x62>
 8005520:	1c59      	adds	r1, r3, #1
 8005522:	9109      	str	r1, [sp, #36]	@ 0x24
 8005524:	701a      	strb	r2, [r3, #0]
 8005526:	e7d6      	b.n	80054d6 <__cvt+0x7a>

08005528 <__exponent>:
 8005528:	b5f0      	push	{r4, r5, r6, r7, lr}
 800552a:	232b      	movs	r3, #43	@ 0x2b
 800552c:	b085      	sub	sp, #20
 800552e:	0005      	movs	r5, r0
 8005530:	1e0c      	subs	r4, r1, #0
 8005532:	7002      	strb	r2, [r0, #0]
 8005534:	da01      	bge.n	800553a <__exponent+0x12>
 8005536:	424c      	negs	r4, r1
 8005538:	3302      	adds	r3, #2
 800553a:	706b      	strb	r3, [r5, #1]
 800553c:	2c09      	cmp	r4, #9
 800553e:	dd2c      	ble.n	800559a <__exponent+0x72>
 8005540:	ab02      	add	r3, sp, #8
 8005542:	1dde      	adds	r6, r3, #7
 8005544:	0020      	movs	r0, r4
 8005546:	210a      	movs	r1, #10
 8005548:	f7fa ff6a 	bl	8000420 <__aeabi_idivmod>
 800554c:	0037      	movs	r7, r6
 800554e:	3130      	adds	r1, #48	@ 0x30
 8005550:	3e01      	subs	r6, #1
 8005552:	0020      	movs	r0, r4
 8005554:	7031      	strb	r1, [r6, #0]
 8005556:	210a      	movs	r1, #10
 8005558:	9401      	str	r4, [sp, #4]
 800555a:	f7fa fe7b 	bl	8000254 <__divsi3>
 800555e:	9b01      	ldr	r3, [sp, #4]
 8005560:	0004      	movs	r4, r0
 8005562:	2b63      	cmp	r3, #99	@ 0x63
 8005564:	dcee      	bgt.n	8005544 <__exponent+0x1c>
 8005566:	1eba      	subs	r2, r7, #2
 8005568:	1ca8      	adds	r0, r5, #2
 800556a:	0001      	movs	r1, r0
 800556c:	0013      	movs	r3, r2
 800556e:	3430      	adds	r4, #48	@ 0x30
 8005570:	7014      	strb	r4, [r2, #0]
 8005572:	ac02      	add	r4, sp, #8
 8005574:	3407      	adds	r4, #7
 8005576:	429c      	cmp	r4, r3
 8005578:	d80a      	bhi.n	8005590 <__exponent+0x68>
 800557a:	2300      	movs	r3, #0
 800557c:	4294      	cmp	r4, r2
 800557e:	d303      	bcc.n	8005588 <__exponent+0x60>
 8005580:	3309      	adds	r3, #9
 8005582:	aa02      	add	r2, sp, #8
 8005584:	189b      	adds	r3, r3, r2
 8005586:	1bdb      	subs	r3, r3, r7
 8005588:	18c0      	adds	r0, r0, r3
 800558a:	1b40      	subs	r0, r0, r5
 800558c:	b005      	add	sp, #20
 800558e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005590:	781c      	ldrb	r4, [r3, #0]
 8005592:	3301      	adds	r3, #1
 8005594:	700c      	strb	r4, [r1, #0]
 8005596:	3101      	adds	r1, #1
 8005598:	e7eb      	b.n	8005572 <__exponent+0x4a>
 800559a:	2330      	movs	r3, #48	@ 0x30
 800559c:	18e4      	adds	r4, r4, r3
 800559e:	70ab      	strb	r3, [r5, #2]
 80055a0:	1d28      	adds	r0, r5, #4
 80055a2:	70ec      	strb	r4, [r5, #3]
 80055a4:	e7f1      	b.n	800558a <__exponent+0x62>
	...

080055a8 <_printf_float>:
 80055a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80055aa:	b097      	sub	sp, #92	@ 0x5c
 80055ac:	000d      	movs	r5, r1
 80055ae:	920a      	str	r2, [sp, #40]	@ 0x28
 80055b0:	9c1c      	ldr	r4, [sp, #112]	@ 0x70
 80055b2:	930b      	str	r3, [sp, #44]	@ 0x2c
 80055b4:	9009      	str	r0, [sp, #36]	@ 0x24
 80055b6:	f000 fef7 	bl	80063a8 <_localeconv_r>
 80055ba:	6803      	ldr	r3, [r0, #0]
 80055bc:	0018      	movs	r0, r3
 80055be:	930d      	str	r3, [sp, #52]	@ 0x34
 80055c0:	f7fa fda2 	bl	8000108 <strlen>
 80055c4:	2300      	movs	r3, #0
 80055c6:	900f      	str	r0, [sp, #60]	@ 0x3c
 80055c8:	9314      	str	r3, [sp, #80]	@ 0x50
 80055ca:	7e2b      	ldrb	r3, [r5, #24]
 80055cc:	2207      	movs	r2, #7
 80055ce:	930c      	str	r3, [sp, #48]	@ 0x30
 80055d0:	682b      	ldr	r3, [r5, #0]
 80055d2:	930e      	str	r3, [sp, #56]	@ 0x38
 80055d4:	990e      	ldr	r1, [sp, #56]	@ 0x38
 80055d6:	6823      	ldr	r3, [r4, #0]
 80055d8:	05c9      	lsls	r1, r1, #23
 80055da:	d545      	bpl.n	8005668 <_printf_float+0xc0>
 80055dc:	189b      	adds	r3, r3, r2
 80055de:	4393      	bics	r3, r2
 80055e0:	001a      	movs	r2, r3
 80055e2:	3208      	adds	r2, #8
 80055e4:	6022      	str	r2, [r4, #0]
 80055e6:	2201      	movs	r2, #1
 80055e8:	681e      	ldr	r6, [r3, #0]
 80055ea:	685f      	ldr	r7, [r3, #4]
 80055ec:	007b      	lsls	r3, r7, #1
 80055ee:	085b      	lsrs	r3, r3, #1
 80055f0:	9311      	str	r3, [sp, #68]	@ 0x44
 80055f2:	9610      	str	r6, [sp, #64]	@ 0x40
 80055f4:	64ae      	str	r6, [r5, #72]	@ 0x48
 80055f6:	64ef      	str	r7, [r5, #76]	@ 0x4c
 80055f8:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80055fa:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80055fc:	4ba7      	ldr	r3, [pc, #668]	@ (800589c <_printf_float+0x2f4>)
 80055fe:	4252      	negs	r2, r2
 8005600:	f7fc feb0 	bl	8002364 <__aeabi_dcmpun>
 8005604:	2800      	cmp	r0, #0
 8005606:	d131      	bne.n	800566c <_printf_float+0xc4>
 8005608:	9810      	ldr	r0, [sp, #64]	@ 0x40
 800560a:	9911      	ldr	r1, [sp, #68]	@ 0x44
 800560c:	2201      	movs	r2, #1
 800560e:	4ba3      	ldr	r3, [pc, #652]	@ (800589c <_printf_float+0x2f4>)
 8005610:	4252      	negs	r2, r2
 8005612:	f7fa ff2b 	bl	800046c <__aeabi_dcmple>
 8005616:	2800      	cmp	r0, #0
 8005618:	d128      	bne.n	800566c <_printf_float+0xc4>
 800561a:	2200      	movs	r2, #0
 800561c:	2300      	movs	r3, #0
 800561e:	0030      	movs	r0, r6
 8005620:	0039      	movs	r1, r7
 8005622:	f7fa ff19 	bl	8000458 <__aeabi_dcmplt>
 8005626:	2800      	cmp	r0, #0
 8005628:	d003      	beq.n	8005632 <_printf_float+0x8a>
 800562a:	002b      	movs	r3, r5
 800562c:	222d      	movs	r2, #45	@ 0x2d
 800562e:	3343      	adds	r3, #67	@ 0x43
 8005630:	701a      	strb	r2, [r3, #0]
 8005632:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005634:	4f9a      	ldr	r7, [pc, #616]	@ (80058a0 <_printf_float+0x2f8>)
 8005636:	2b47      	cmp	r3, #71	@ 0x47
 8005638:	d800      	bhi.n	800563c <_printf_float+0x94>
 800563a:	4f9a      	ldr	r7, [pc, #616]	@ (80058a4 <_printf_float+0x2fc>)
 800563c:	2303      	movs	r3, #3
 800563e:	2400      	movs	r4, #0
 8005640:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8005642:	612b      	str	r3, [r5, #16]
 8005644:	3301      	adds	r3, #1
 8005646:	439a      	bics	r2, r3
 8005648:	602a      	str	r2, [r5, #0]
 800564a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800564c:	0029      	movs	r1, r5
 800564e:	9300      	str	r3, [sp, #0]
 8005650:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005652:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8005654:	aa15      	add	r2, sp, #84	@ 0x54
 8005656:	f000 f9e5 	bl	8005a24 <_printf_common>
 800565a:	3001      	adds	r0, #1
 800565c:	d000      	beq.n	8005660 <_printf_float+0xb8>
 800565e:	e09e      	b.n	800579e <_printf_float+0x1f6>
 8005660:	2001      	movs	r0, #1
 8005662:	4240      	negs	r0, r0
 8005664:	b017      	add	sp, #92	@ 0x5c
 8005666:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005668:	3307      	adds	r3, #7
 800566a:	e7b8      	b.n	80055de <_printf_float+0x36>
 800566c:	0032      	movs	r2, r6
 800566e:	003b      	movs	r3, r7
 8005670:	0030      	movs	r0, r6
 8005672:	0039      	movs	r1, r7
 8005674:	f7fc fe76 	bl	8002364 <__aeabi_dcmpun>
 8005678:	2800      	cmp	r0, #0
 800567a:	d00b      	beq.n	8005694 <_printf_float+0xec>
 800567c:	2f00      	cmp	r7, #0
 800567e:	da03      	bge.n	8005688 <_printf_float+0xe0>
 8005680:	002b      	movs	r3, r5
 8005682:	222d      	movs	r2, #45	@ 0x2d
 8005684:	3343      	adds	r3, #67	@ 0x43
 8005686:	701a      	strb	r2, [r3, #0]
 8005688:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800568a:	4f87      	ldr	r7, [pc, #540]	@ (80058a8 <_printf_float+0x300>)
 800568c:	2b47      	cmp	r3, #71	@ 0x47
 800568e:	d8d5      	bhi.n	800563c <_printf_float+0x94>
 8005690:	4f86      	ldr	r7, [pc, #536]	@ (80058ac <_printf_float+0x304>)
 8005692:	e7d3      	b.n	800563c <_printf_float+0x94>
 8005694:	2220      	movs	r2, #32
 8005696:	9c0c      	ldr	r4, [sp, #48]	@ 0x30
 8005698:	686b      	ldr	r3, [r5, #4]
 800569a:	4394      	bics	r4, r2
 800569c:	1c5a      	adds	r2, r3, #1
 800569e:	d146      	bne.n	800572e <_printf_float+0x186>
 80056a0:	3307      	adds	r3, #7
 80056a2:	606b      	str	r3, [r5, #4]
 80056a4:	2380      	movs	r3, #128	@ 0x80
 80056a6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80056a8:	00db      	lsls	r3, r3, #3
 80056aa:	4313      	orrs	r3, r2
 80056ac:	2200      	movs	r2, #0
 80056ae:	602b      	str	r3, [r5, #0]
 80056b0:	9206      	str	r2, [sp, #24]
 80056b2:	aa14      	add	r2, sp, #80	@ 0x50
 80056b4:	9205      	str	r2, [sp, #20]
 80056b6:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80056b8:	a90a      	add	r1, sp, #40	@ 0x28
 80056ba:	9204      	str	r2, [sp, #16]
 80056bc:	aa13      	add	r2, sp, #76	@ 0x4c
 80056be:	9203      	str	r2, [sp, #12]
 80056c0:	2223      	movs	r2, #35	@ 0x23
 80056c2:	1852      	adds	r2, r2, r1
 80056c4:	9202      	str	r2, [sp, #8]
 80056c6:	9301      	str	r3, [sp, #4]
 80056c8:	686b      	ldr	r3, [r5, #4]
 80056ca:	0032      	movs	r2, r6
 80056cc:	9300      	str	r3, [sp, #0]
 80056ce:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80056d0:	003b      	movs	r3, r7
 80056d2:	f7ff fec3 	bl	800545c <__cvt>
 80056d6:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 80056d8:	0007      	movs	r7, r0
 80056da:	2c47      	cmp	r4, #71	@ 0x47
 80056dc:	d12d      	bne.n	800573a <_printf_float+0x192>
 80056de:	1cd3      	adds	r3, r2, #3
 80056e0:	db02      	blt.n	80056e8 <_printf_float+0x140>
 80056e2:	686b      	ldr	r3, [r5, #4]
 80056e4:	429a      	cmp	r2, r3
 80056e6:	dd47      	ble.n	8005778 <_printf_float+0x1d0>
 80056e8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80056ea:	3b02      	subs	r3, #2
 80056ec:	b2db      	uxtb	r3, r3
 80056ee:	930c      	str	r3, [sp, #48]	@ 0x30
 80056f0:	0028      	movs	r0, r5
 80056f2:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80056f4:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80056f6:	3901      	subs	r1, #1
 80056f8:	3050      	adds	r0, #80	@ 0x50
 80056fa:	9113      	str	r1, [sp, #76]	@ 0x4c
 80056fc:	f7ff ff14 	bl	8005528 <__exponent>
 8005700:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8005702:	0004      	movs	r4, r0
 8005704:	1813      	adds	r3, r2, r0
 8005706:	612b      	str	r3, [r5, #16]
 8005708:	2a01      	cmp	r2, #1
 800570a:	dc02      	bgt.n	8005712 <_printf_float+0x16a>
 800570c:	682a      	ldr	r2, [r5, #0]
 800570e:	07d2      	lsls	r2, r2, #31
 8005710:	d501      	bpl.n	8005716 <_printf_float+0x16e>
 8005712:	3301      	adds	r3, #1
 8005714:	612b      	str	r3, [r5, #16]
 8005716:	2323      	movs	r3, #35	@ 0x23
 8005718:	aa0a      	add	r2, sp, #40	@ 0x28
 800571a:	189b      	adds	r3, r3, r2
 800571c:	781b      	ldrb	r3, [r3, #0]
 800571e:	2b00      	cmp	r3, #0
 8005720:	d100      	bne.n	8005724 <_printf_float+0x17c>
 8005722:	e792      	b.n	800564a <_printf_float+0xa2>
 8005724:	002b      	movs	r3, r5
 8005726:	222d      	movs	r2, #45	@ 0x2d
 8005728:	3343      	adds	r3, #67	@ 0x43
 800572a:	701a      	strb	r2, [r3, #0]
 800572c:	e78d      	b.n	800564a <_printf_float+0xa2>
 800572e:	2c47      	cmp	r4, #71	@ 0x47
 8005730:	d1b8      	bne.n	80056a4 <_printf_float+0xfc>
 8005732:	2b00      	cmp	r3, #0
 8005734:	d1b6      	bne.n	80056a4 <_printf_float+0xfc>
 8005736:	3301      	adds	r3, #1
 8005738:	e7b3      	b.n	80056a2 <_printf_float+0xfa>
 800573a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800573c:	2b65      	cmp	r3, #101	@ 0x65
 800573e:	d9d7      	bls.n	80056f0 <_printf_float+0x148>
 8005740:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005742:	2b66      	cmp	r3, #102	@ 0x66
 8005744:	d11a      	bne.n	800577c <_printf_float+0x1d4>
 8005746:	686b      	ldr	r3, [r5, #4]
 8005748:	2a00      	cmp	r2, #0
 800574a:	dd09      	ble.n	8005760 <_printf_float+0x1b8>
 800574c:	612a      	str	r2, [r5, #16]
 800574e:	2b00      	cmp	r3, #0
 8005750:	d102      	bne.n	8005758 <_printf_float+0x1b0>
 8005752:	6829      	ldr	r1, [r5, #0]
 8005754:	07c9      	lsls	r1, r1, #31
 8005756:	d50b      	bpl.n	8005770 <_printf_float+0x1c8>
 8005758:	3301      	adds	r3, #1
 800575a:	189b      	adds	r3, r3, r2
 800575c:	612b      	str	r3, [r5, #16]
 800575e:	e007      	b.n	8005770 <_printf_float+0x1c8>
 8005760:	2b00      	cmp	r3, #0
 8005762:	d103      	bne.n	800576c <_printf_float+0x1c4>
 8005764:	2201      	movs	r2, #1
 8005766:	6829      	ldr	r1, [r5, #0]
 8005768:	4211      	tst	r1, r2
 800576a:	d000      	beq.n	800576e <_printf_float+0x1c6>
 800576c:	1c9a      	adds	r2, r3, #2
 800576e:	612a      	str	r2, [r5, #16]
 8005770:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8005772:	2400      	movs	r4, #0
 8005774:	65ab      	str	r3, [r5, #88]	@ 0x58
 8005776:	e7ce      	b.n	8005716 <_printf_float+0x16e>
 8005778:	2367      	movs	r3, #103	@ 0x67
 800577a:	930c      	str	r3, [sp, #48]	@ 0x30
 800577c:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 800577e:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8005780:	4299      	cmp	r1, r3
 8005782:	db06      	blt.n	8005792 <_printf_float+0x1ea>
 8005784:	682b      	ldr	r3, [r5, #0]
 8005786:	6129      	str	r1, [r5, #16]
 8005788:	07db      	lsls	r3, r3, #31
 800578a:	d5f1      	bpl.n	8005770 <_printf_float+0x1c8>
 800578c:	3101      	adds	r1, #1
 800578e:	6129      	str	r1, [r5, #16]
 8005790:	e7ee      	b.n	8005770 <_printf_float+0x1c8>
 8005792:	2201      	movs	r2, #1
 8005794:	2900      	cmp	r1, #0
 8005796:	dce0      	bgt.n	800575a <_printf_float+0x1b2>
 8005798:	1892      	adds	r2, r2, r2
 800579a:	1a52      	subs	r2, r2, r1
 800579c:	e7dd      	b.n	800575a <_printf_float+0x1b2>
 800579e:	682a      	ldr	r2, [r5, #0]
 80057a0:	0553      	lsls	r3, r2, #21
 80057a2:	d408      	bmi.n	80057b6 <_printf_float+0x20e>
 80057a4:	692b      	ldr	r3, [r5, #16]
 80057a6:	003a      	movs	r2, r7
 80057a8:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80057aa:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80057ac:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80057ae:	47a0      	blx	r4
 80057b0:	3001      	adds	r0, #1
 80057b2:	d129      	bne.n	8005808 <_printf_float+0x260>
 80057b4:	e754      	b.n	8005660 <_printf_float+0xb8>
 80057b6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80057b8:	2b65      	cmp	r3, #101	@ 0x65
 80057ba:	d800      	bhi.n	80057be <_printf_float+0x216>
 80057bc:	e0db      	b.n	8005976 <_printf_float+0x3ce>
 80057be:	6ca8      	ldr	r0, [r5, #72]	@ 0x48
 80057c0:	6ce9      	ldr	r1, [r5, #76]	@ 0x4c
 80057c2:	2200      	movs	r2, #0
 80057c4:	2300      	movs	r3, #0
 80057c6:	f7fa fe41 	bl	800044c <__aeabi_dcmpeq>
 80057ca:	2800      	cmp	r0, #0
 80057cc:	d033      	beq.n	8005836 <_printf_float+0x28e>
 80057ce:	2301      	movs	r3, #1
 80057d0:	4a37      	ldr	r2, [pc, #220]	@ (80058b0 <_printf_float+0x308>)
 80057d2:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80057d4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80057d6:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80057d8:	47a0      	blx	r4
 80057da:	3001      	adds	r0, #1
 80057dc:	d100      	bne.n	80057e0 <_printf_float+0x238>
 80057de:	e73f      	b.n	8005660 <_printf_float+0xb8>
 80057e0:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 80057e2:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80057e4:	42b3      	cmp	r3, r6
 80057e6:	db02      	blt.n	80057ee <_printf_float+0x246>
 80057e8:	682b      	ldr	r3, [r5, #0]
 80057ea:	07db      	lsls	r3, r3, #31
 80057ec:	d50c      	bpl.n	8005808 <_printf_float+0x260>
 80057ee:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 80057f0:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80057f2:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 80057f4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80057f6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80057f8:	47a0      	blx	r4
 80057fa:	2400      	movs	r4, #0
 80057fc:	3001      	adds	r0, #1
 80057fe:	d100      	bne.n	8005802 <_printf_float+0x25a>
 8005800:	e72e      	b.n	8005660 <_printf_float+0xb8>
 8005802:	1e73      	subs	r3, r6, #1
 8005804:	42a3      	cmp	r3, r4
 8005806:	dc0a      	bgt.n	800581e <_printf_float+0x276>
 8005808:	682b      	ldr	r3, [r5, #0]
 800580a:	079b      	lsls	r3, r3, #30
 800580c:	d500      	bpl.n	8005810 <_printf_float+0x268>
 800580e:	e106      	b.n	8005a1e <_printf_float+0x476>
 8005810:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8005812:	68e8      	ldr	r0, [r5, #12]
 8005814:	4298      	cmp	r0, r3
 8005816:	db00      	blt.n	800581a <_printf_float+0x272>
 8005818:	e724      	b.n	8005664 <_printf_float+0xbc>
 800581a:	0018      	movs	r0, r3
 800581c:	e722      	b.n	8005664 <_printf_float+0xbc>
 800581e:	002a      	movs	r2, r5
 8005820:	2301      	movs	r3, #1
 8005822:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005824:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005826:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8005828:	321a      	adds	r2, #26
 800582a:	47b8      	blx	r7
 800582c:	3001      	adds	r0, #1
 800582e:	d100      	bne.n	8005832 <_printf_float+0x28a>
 8005830:	e716      	b.n	8005660 <_printf_float+0xb8>
 8005832:	3401      	adds	r4, #1
 8005834:	e7e5      	b.n	8005802 <_printf_float+0x25a>
 8005836:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8005838:	2b00      	cmp	r3, #0
 800583a:	dc3b      	bgt.n	80058b4 <_printf_float+0x30c>
 800583c:	2301      	movs	r3, #1
 800583e:	4a1c      	ldr	r2, [pc, #112]	@ (80058b0 <_printf_float+0x308>)
 8005840:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005842:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005844:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8005846:	47a0      	blx	r4
 8005848:	3001      	adds	r0, #1
 800584a:	d100      	bne.n	800584e <_printf_float+0x2a6>
 800584c:	e708      	b.n	8005660 <_printf_float+0xb8>
 800584e:	9e14      	ldr	r6, [sp, #80]	@ 0x50
 8005850:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8005852:	4333      	orrs	r3, r6
 8005854:	d102      	bne.n	800585c <_printf_float+0x2b4>
 8005856:	682b      	ldr	r3, [r5, #0]
 8005858:	07db      	lsls	r3, r3, #31
 800585a:	d5d5      	bpl.n	8005808 <_printf_float+0x260>
 800585c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800585e:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8005860:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005862:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005864:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8005866:	47a0      	blx	r4
 8005868:	2300      	movs	r3, #0
 800586a:	3001      	adds	r0, #1
 800586c:	d100      	bne.n	8005870 <_printf_float+0x2c8>
 800586e:	e6f7      	b.n	8005660 <_printf_float+0xb8>
 8005870:	930c      	str	r3, [sp, #48]	@ 0x30
 8005872:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8005874:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8005876:	425b      	negs	r3, r3
 8005878:	4293      	cmp	r3, r2
 800587a:	dc01      	bgt.n	8005880 <_printf_float+0x2d8>
 800587c:	0033      	movs	r3, r6
 800587e:	e792      	b.n	80057a6 <_printf_float+0x1fe>
 8005880:	002a      	movs	r2, r5
 8005882:	2301      	movs	r3, #1
 8005884:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005886:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005888:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 800588a:	321a      	adds	r2, #26
 800588c:	47a0      	blx	r4
 800588e:	3001      	adds	r0, #1
 8005890:	d100      	bne.n	8005894 <_printf_float+0x2ec>
 8005892:	e6e5      	b.n	8005660 <_printf_float+0xb8>
 8005894:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8005896:	3301      	adds	r3, #1
 8005898:	e7ea      	b.n	8005870 <_printf_float+0x2c8>
 800589a:	46c0      	nop			@ (mov r8, r8)
 800589c:	7fefffff 	.word	0x7fefffff
 80058a0:	08009d89 	.word	0x08009d89
 80058a4:	08009d85 	.word	0x08009d85
 80058a8:	08009d91 	.word	0x08009d91
 80058ac:	08009d8d 	.word	0x08009d8d
 80058b0:	08009d95 	.word	0x08009d95
 80058b4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80058b6:	6dae      	ldr	r6, [r5, #88]	@ 0x58
 80058b8:	930c      	str	r3, [sp, #48]	@ 0x30
 80058ba:	429e      	cmp	r6, r3
 80058bc:	dd00      	ble.n	80058c0 <_printf_float+0x318>
 80058be:	001e      	movs	r6, r3
 80058c0:	2e00      	cmp	r6, #0
 80058c2:	dc31      	bgt.n	8005928 <_printf_float+0x380>
 80058c4:	43f3      	mvns	r3, r6
 80058c6:	2400      	movs	r4, #0
 80058c8:	17db      	asrs	r3, r3, #31
 80058ca:	4033      	ands	r3, r6
 80058cc:	930e      	str	r3, [sp, #56]	@ 0x38
 80058ce:	6dae      	ldr	r6, [r5, #88]	@ 0x58
 80058d0:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80058d2:	1af3      	subs	r3, r6, r3
 80058d4:	42a3      	cmp	r3, r4
 80058d6:	dc30      	bgt.n	800593a <_printf_float+0x392>
 80058d8:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80058da:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80058dc:	429a      	cmp	r2, r3
 80058de:	dc38      	bgt.n	8005952 <_printf_float+0x3aa>
 80058e0:	682b      	ldr	r3, [r5, #0]
 80058e2:	07db      	lsls	r3, r3, #31
 80058e4:	d435      	bmi.n	8005952 <_printf_float+0x3aa>
 80058e6:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 80058e8:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80058ea:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 80058ec:	1b9b      	subs	r3, r3, r6
 80058ee:	1b14      	subs	r4, r2, r4
 80058f0:	429c      	cmp	r4, r3
 80058f2:	dd00      	ble.n	80058f6 <_printf_float+0x34e>
 80058f4:	001c      	movs	r4, r3
 80058f6:	2c00      	cmp	r4, #0
 80058f8:	dc34      	bgt.n	8005964 <_printf_float+0x3bc>
 80058fa:	43e3      	mvns	r3, r4
 80058fc:	2600      	movs	r6, #0
 80058fe:	17db      	asrs	r3, r3, #31
 8005900:	401c      	ands	r4, r3
 8005902:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8005904:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8005906:	1ad3      	subs	r3, r2, r3
 8005908:	1b1b      	subs	r3, r3, r4
 800590a:	42b3      	cmp	r3, r6
 800590c:	dc00      	bgt.n	8005910 <_printf_float+0x368>
 800590e:	e77b      	b.n	8005808 <_printf_float+0x260>
 8005910:	002a      	movs	r2, r5
 8005912:	2301      	movs	r3, #1
 8005914:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005916:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005918:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 800591a:	321a      	adds	r2, #26
 800591c:	47b8      	blx	r7
 800591e:	3001      	adds	r0, #1
 8005920:	d100      	bne.n	8005924 <_printf_float+0x37c>
 8005922:	e69d      	b.n	8005660 <_printf_float+0xb8>
 8005924:	3601      	adds	r6, #1
 8005926:	e7ec      	b.n	8005902 <_printf_float+0x35a>
 8005928:	0033      	movs	r3, r6
 800592a:	003a      	movs	r2, r7
 800592c:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800592e:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005930:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 8005932:	47a0      	blx	r4
 8005934:	3001      	adds	r0, #1
 8005936:	d1c5      	bne.n	80058c4 <_printf_float+0x31c>
 8005938:	e692      	b.n	8005660 <_printf_float+0xb8>
 800593a:	002a      	movs	r2, r5
 800593c:	2301      	movs	r3, #1
 800593e:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005940:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005942:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8005944:	321a      	adds	r2, #26
 8005946:	47b0      	blx	r6
 8005948:	3001      	adds	r0, #1
 800594a:	d100      	bne.n	800594e <_printf_float+0x3a6>
 800594c:	e688      	b.n	8005660 <_printf_float+0xb8>
 800594e:	3401      	adds	r4, #1
 8005950:	e7bd      	b.n	80058ce <_printf_float+0x326>
 8005952:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005954:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8005956:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005958:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800595a:	9c0b      	ldr	r4, [sp, #44]	@ 0x2c
 800595c:	47a0      	blx	r4
 800595e:	3001      	adds	r0, #1
 8005960:	d1c1      	bne.n	80058e6 <_printf_float+0x33e>
 8005962:	e67d      	b.n	8005660 <_printf_float+0xb8>
 8005964:	19ba      	adds	r2, r7, r6
 8005966:	0023      	movs	r3, r4
 8005968:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800596a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800596c:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 800596e:	47b0      	blx	r6
 8005970:	3001      	adds	r0, #1
 8005972:	d1c2      	bne.n	80058fa <_printf_float+0x352>
 8005974:	e674      	b.n	8005660 <_printf_float+0xb8>
 8005976:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8005978:	930c      	str	r3, [sp, #48]	@ 0x30
 800597a:	2b01      	cmp	r3, #1
 800597c:	dc02      	bgt.n	8005984 <_printf_float+0x3dc>
 800597e:	2301      	movs	r3, #1
 8005980:	421a      	tst	r2, r3
 8005982:	d039      	beq.n	80059f8 <_printf_float+0x450>
 8005984:	2301      	movs	r3, #1
 8005986:	003a      	movs	r2, r7
 8005988:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800598a:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800598c:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 800598e:	47b0      	blx	r6
 8005990:	3001      	adds	r0, #1
 8005992:	d100      	bne.n	8005996 <_printf_float+0x3ee>
 8005994:	e664      	b.n	8005660 <_printf_float+0xb8>
 8005996:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8005998:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 800599a:	990a      	ldr	r1, [sp, #40]	@ 0x28
 800599c:	9809      	ldr	r0, [sp, #36]	@ 0x24
 800599e:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 80059a0:	47b0      	blx	r6
 80059a2:	3001      	adds	r0, #1
 80059a4:	d100      	bne.n	80059a8 <_printf_float+0x400>
 80059a6:	e65b      	b.n	8005660 <_printf_float+0xb8>
 80059a8:	6ca8      	ldr	r0, [r5, #72]	@ 0x48
 80059aa:	6ce9      	ldr	r1, [r5, #76]	@ 0x4c
 80059ac:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80059ae:	2200      	movs	r2, #0
 80059b0:	3b01      	subs	r3, #1
 80059b2:	930c      	str	r3, [sp, #48]	@ 0x30
 80059b4:	2300      	movs	r3, #0
 80059b6:	f7fa fd49 	bl	800044c <__aeabi_dcmpeq>
 80059ba:	2800      	cmp	r0, #0
 80059bc:	d11a      	bne.n	80059f4 <_printf_float+0x44c>
 80059be:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80059c0:	1c7a      	adds	r2, r7, #1
 80059c2:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80059c4:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80059c6:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 80059c8:	47b0      	blx	r6
 80059ca:	3001      	adds	r0, #1
 80059cc:	d10e      	bne.n	80059ec <_printf_float+0x444>
 80059ce:	e647      	b.n	8005660 <_printf_float+0xb8>
 80059d0:	002a      	movs	r2, r5
 80059d2:	2301      	movs	r3, #1
 80059d4:	990a      	ldr	r1, [sp, #40]	@ 0x28
 80059d6:	9809      	ldr	r0, [sp, #36]	@ 0x24
 80059d8:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80059da:	321a      	adds	r2, #26
 80059dc:	47b8      	blx	r7
 80059de:	3001      	adds	r0, #1
 80059e0:	d100      	bne.n	80059e4 <_printf_float+0x43c>
 80059e2:	e63d      	b.n	8005660 <_printf_float+0xb8>
 80059e4:	3601      	adds	r6, #1
 80059e6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80059e8:	429e      	cmp	r6, r3
 80059ea:	dbf1      	blt.n	80059d0 <_printf_float+0x428>
 80059ec:	002a      	movs	r2, r5
 80059ee:	0023      	movs	r3, r4
 80059f0:	3250      	adds	r2, #80	@ 0x50
 80059f2:	e6d9      	b.n	80057a8 <_printf_float+0x200>
 80059f4:	2600      	movs	r6, #0
 80059f6:	e7f6      	b.n	80059e6 <_printf_float+0x43e>
 80059f8:	003a      	movs	r2, r7
 80059fa:	e7e2      	b.n	80059c2 <_printf_float+0x41a>
 80059fc:	002a      	movs	r2, r5
 80059fe:	2301      	movs	r3, #1
 8005a00:	990a      	ldr	r1, [sp, #40]	@ 0x28
 8005a02:	9809      	ldr	r0, [sp, #36]	@ 0x24
 8005a04:	9e0b      	ldr	r6, [sp, #44]	@ 0x2c
 8005a06:	3219      	adds	r2, #25
 8005a08:	47b0      	blx	r6
 8005a0a:	3001      	adds	r0, #1
 8005a0c:	d100      	bne.n	8005a10 <_printf_float+0x468>
 8005a0e:	e627      	b.n	8005660 <_printf_float+0xb8>
 8005a10:	3401      	adds	r4, #1
 8005a12:	68eb      	ldr	r3, [r5, #12]
 8005a14:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8005a16:	1a9b      	subs	r3, r3, r2
 8005a18:	42a3      	cmp	r3, r4
 8005a1a:	dcef      	bgt.n	80059fc <_printf_float+0x454>
 8005a1c:	e6f8      	b.n	8005810 <_printf_float+0x268>
 8005a1e:	2400      	movs	r4, #0
 8005a20:	e7f7      	b.n	8005a12 <_printf_float+0x46a>
 8005a22:	46c0      	nop			@ (mov r8, r8)

08005a24 <_printf_common>:
 8005a24:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8005a26:	0016      	movs	r6, r2
 8005a28:	9301      	str	r3, [sp, #4]
 8005a2a:	688a      	ldr	r2, [r1, #8]
 8005a2c:	690b      	ldr	r3, [r1, #16]
 8005a2e:	000c      	movs	r4, r1
 8005a30:	9000      	str	r0, [sp, #0]
 8005a32:	4293      	cmp	r3, r2
 8005a34:	da00      	bge.n	8005a38 <_printf_common+0x14>
 8005a36:	0013      	movs	r3, r2
 8005a38:	0022      	movs	r2, r4
 8005a3a:	6033      	str	r3, [r6, #0]
 8005a3c:	3243      	adds	r2, #67	@ 0x43
 8005a3e:	7812      	ldrb	r2, [r2, #0]
 8005a40:	2a00      	cmp	r2, #0
 8005a42:	d001      	beq.n	8005a48 <_printf_common+0x24>
 8005a44:	3301      	adds	r3, #1
 8005a46:	6033      	str	r3, [r6, #0]
 8005a48:	6823      	ldr	r3, [r4, #0]
 8005a4a:	069b      	lsls	r3, r3, #26
 8005a4c:	d502      	bpl.n	8005a54 <_printf_common+0x30>
 8005a4e:	6833      	ldr	r3, [r6, #0]
 8005a50:	3302      	adds	r3, #2
 8005a52:	6033      	str	r3, [r6, #0]
 8005a54:	6822      	ldr	r2, [r4, #0]
 8005a56:	2306      	movs	r3, #6
 8005a58:	0015      	movs	r5, r2
 8005a5a:	401d      	ands	r5, r3
 8005a5c:	421a      	tst	r2, r3
 8005a5e:	d027      	beq.n	8005ab0 <_printf_common+0x8c>
 8005a60:	0023      	movs	r3, r4
 8005a62:	3343      	adds	r3, #67	@ 0x43
 8005a64:	781b      	ldrb	r3, [r3, #0]
 8005a66:	1e5a      	subs	r2, r3, #1
 8005a68:	4193      	sbcs	r3, r2
 8005a6a:	6822      	ldr	r2, [r4, #0]
 8005a6c:	0692      	lsls	r2, r2, #26
 8005a6e:	d430      	bmi.n	8005ad2 <_printf_common+0xae>
 8005a70:	0022      	movs	r2, r4
 8005a72:	9901      	ldr	r1, [sp, #4]
 8005a74:	9800      	ldr	r0, [sp, #0]
 8005a76:	9d08      	ldr	r5, [sp, #32]
 8005a78:	3243      	adds	r2, #67	@ 0x43
 8005a7a:	47a8      	blx	r5
 8005a7c:	3001      	adds	r0, #1
 8005a7e:	d025      	beq.n	8005acc <_printf_common+0xa8>
 8005a80:	2206      	movs	r2, #6
 8005a82:	6823      	ldr	r3, [r4, #0]
 8005a84:	2500      	movs	r5, #0
 8005a86:	4013      	ands	r3, r2
 8005a88:	2b04      	cmp	r3, #4
 8005a8a:	d105      	bne.n	8005a98 <_printf_common+0x74>
 8005a8c:	6833      	ldr	r3, [r6, #0]
 8005a8e:	68e5      	ldr	r5, [r4, #12]
 8005a90:	1aed      	subs	r5, r5, r3
 8005a92:	43eb      	mvns	r3, r5
 8005a94:	17db      	asrs	r3, r3, #31
 8005a96:	401d      	ands	r5, r3
 8005a98:	68a3      	ldr	r3, [r4, #8]
 8005a9a:	6922      	ldr	r2, [r4, #16]
 8005a9c:	4293      	cmp	r3, r2
 8005a9e:	dd01      	ble.n	8005aa4 <_printf_common+0x80>
 8005aa0:	1a9b      	subs	r3, r3, r2
 8005aa2:	18ed      	adds	r5, r5, r3
 8005aa4:	2600      	movs	r6, #0
 8005aa6:	42b5      	cmp	r5, r6
 8005aa8:	d120      	bne.n	8005aec <_printf_common+0xc8>
 8005aaa:	2000      	movs	r0, #0
 8005aac:	e010      	b.n	8005ad0 <_printf_common+0xac>
 8005aae:	3501      	adds	r5, #1
 8005ab0:	68e3      	ldr	r3, [r4, #12]
 8005ab2:	6832      	ldr	r2, [r6, #0]
 8005ab4:	1a9b      	subs	r3, r3, r2
 8005ab6:	42ab      	cmp	r3, r5
 8005ab8:	ddd2      	ble.n	8005a60 <_printf_common+0x3c>
 8005aba:	0022      	movs	r2, r4
 8005abc:	2301      	movs	r3, #1
 8005abe:	9901      	ldr	r1, [sp, #4]
 8005ac0:	9800      	ldr	r0, [sp, #0]
 8005ac2:	9f08      	ldr	r7, [sp, #32]
 8005ac4:	3219      	adds	r2, #25
 8005ac6:	47b8      	blx	r7
 8005ac8:	3001      	adds	r0, #1
 8005aca:	d1f0      	bne.n	8005aae <_printf_common+0x8a>
 8005acc:	2001      	movs	r0, #1
 8005ace:	4240      	negs	r0, r0
 8005ad0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8005ad2:	2030      	movs	r0, #48	@ 0x30
 8005ad4:	18e1      	adds	r1, r4, r3
 8005ad6:	3143      	adds	r1, #67	@ 0x43
 8005ad8:	7008      	strb	r0, [r1, #0]
 8005ada:	0021      	movs	r1, r4
 8005adc:	1c5a      	adds	r2, r3, #1
 8005ade:	3145      	adds	r1, #69	@ 0x45
 8005ae0:	7809      	ldrb	r1, [r1, #0]
 8005ae2:	18a2      	adds	r2, r4, r2
 8005ae4:	3243      	adds	r2, #67	@ 0x43
 8005ae6:	3302      	adds	r3, #2
 8005ae8:	7011      	strb	r1, [r2, #0]
 8005aea:	e7c1      	b.n	8005a70 <_printf_common+0x4c>
 8005aec:	0022      	movs	r2, r4
 8005aee:	2301      	movs	r3, #1
 8005af0:	9901      	ldr	r1, [sp, #4]
 8005af2:	9800      	ldr	r0, [sp, #0]
 8005af4:	9f08      	ldr	r7, [sp, #32]
 8005af6:	321a      	adds	r2, #26
 8005af8:	47b8      	blx	r7
 8005afa:	3001      	adds	r0, #1
 8005afc:	d0e6      	beq.n	8005acc <_printf_common+0xa8>
 8005afe:	3601      	adds	r6, #1
 8005b00:	e7d1      	b.n	8005aa6 <_printf_common+0x82>
	...

08005b04 <_printf_i>:
 8005b04:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005b06:	b08b      	sub	sp, #44	@ 0x2c
 8005b08:	9206      	str	r2, [sp, #24]
 8005b0a:	000a      	movs	r2, r1
 8005b0c:	3243      	adds	r2, #67	@ 0x43
 8005b0e:	9307      	str	r3, [sp, #28]
 8005b10:	9005      	str	r0, [sp, #20]
 8005b12:	9203      	str	r2, [sp, #12]
 8005b14:	7e0a      	ldrb	r2, [r1, #24]
 8005b16:	000c      	movs	r4, r1
 8005b18:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8005b1a:	2a78      	cmp	r2, #120	@ 0x78
 8005b1c:	d809      	bhi.n	8005b32 <_printf_i+0x2e>
 8005b1e:	2a62      	cmp	r2, #98	@ 0x62
 8005b20:	d80b      	bhi.n	8005b3a <_printf_i+0x36>
 8005b22:	2a00      	cmp	r2, #0
 8005b24:	d100      	bne.n	8005b28 <_printf_i+0x24>
 8005b26:	e0ba      	b.n	8005c9e <_printf_i+0x19a>
 8005b28:	497a      	ldr	r1, [pc, #488]	@ (8005d14 <_printf_i+0x210>)
 8005b2a:	9104      	str	r1, [sp, #16]
 8005b2c:	2a58      	cmp	r2, #88	@ 0x58
 8005b2e:	d100      	bne.n	8005b32 <_printf_i+0x2e>
 8005b30:	e08e      	b.n	8005c50 <_printf_i+0x14c>
 8005b32:	0025      	movs	r5, r4
 8005b34:	3542      	adds	r5, #66	@ 0x42
 8005b36:	702a      	strb	r2, [r5, #0]
 8005b38:	e022      	b.n	8005b80 <_printf_i+0x7c>
 8005b3a:	0010      	movs	r0, r2
 8005b3c:	3863      	subs	r0, #99	@ 0x63
 8005b3e:	2815      	cmp	r0, #21
 8005b40:	d8f7      	bhi.n	8005b32 <_printf_i+0x2e>
 8005b42:	f7fa faf3 	bl	800012c <__gnu_thumb1_case_shi>
 8005b46:	0016      	.short	0x0016
 8005b48:	fff6001f 	.word	0xfff6001f
 8005b4c:	fff6fff6 	.word	0xfff6fff6
 8005b50:	001ffff6 	.word	0x001ffff6
 8005b54:	fff6fff6 	.word	0xfff6fff6
 8005b58:	fff6fff6 	.word	0xfff6fff6
 8005b5c:	0036009f 	.word	0x0036009f
 8005b60:	fff6007e 	.word	0xfff6007e
 8005b64:	00b0fff6 	.word	0x00b0fff6
 8005b68:	0036fff6 	.word	0x0036fff6
 8005b6c:	fff6fff6 	.word	0xfff6fff6
 8005b70:	0082      	.short	0x0082
 8005b72:	0025      	movs	r5, r4
 8005b74:	681a      	ldr	r2, [r3, #0]
 8005b76:	3542      	adds	r5, #66	@ 0x42
 8005b78:	1d11      	adds	r1, r2, #4
 8005b7a:	6019      	str	r1, [r3, #0]
 8005b7c:	6813      	ldr	r3, [r2, #0]
 8005b7e:	702b      	strb	r3, [r5, #0]
 8005b80:	2301      	movs	r3, #1
 8005b82:	e09e      	b.n	8005cc2 <_printf_i+0x1be>
 8005b84:	6818      	ldr	r0, [r3, #0]
 8005b86:	6809      	ldr	r1, [r1, #0]
 8005b88:	1d02      	adds	r2, r0, #4
 8005b8a:	060d      	lsls	r5, r1, #24
 8005b8c:	d50b      	bpl.n	8005ba6 <_printf_i+0xa2>
 8005b8e:	6806      	ldr	r6, [r0, #0]
 8005b90:	601a      	str	r2, [r3, #0]
 8005b92:	2e00      	cmp	r6, #0
 8005b94:	da03      	bge.n	8005b9e <_printf_i+0x9a>
 8005b96:	232d      	movs	r3, #45	@ 0x2d
 8005b98:	9a03      	ldr	r2, [sp, #12]
 8005b9a:	4276      	negs	r6, r6
 8005b9c:	7013      	strb	r3, [r2, #0]
 8005b9e:	4b5d      	ldr	r3, [pc, #372]	@ (8005d14 <_printf_i+0x210>)
 8005ba0:	270a      	movs	r7, #10
 8005ba2:	9304      	str	r3, [sp, #16]
 8005ba4:	e018      	b.n	8005bd8 <_printf_i+0xd4>
 8005ba6:	6806      	ldr	r6, [r0, #0]
 8005ba8:	601a      	str	r2, [r3, #0]
 8005baa:	0649      	lsls	r1, r1, #25
 8005bac:	d5f1      	bpl.n	8005b92 <_printf_i+0x8e>
 8005bae:	b236      	sxth	r6, r6
 8005bb0:	e7ef      	b.n	8005b92 <_printf_i+0x8e>
 8005bb2:	6808      	ldr	r0, [r1, #0]
 8005bb4:	6819      	ldr	r1, [r3, #0]
 8005bb6:	c940      	ldmia	r1!, {r6}
 8005bb8:	0605      	lsls	r5, r0, #24
 8005bba:	d402      	bmi.n	8005bc2 <_printf_i+0xbe>
 8005bbc:	0640      	lsls	r0, r0, #25
 8005bbe:	d500      	bpl.n	8005bc2 <_printf_i+0xbe>
 8005bc0:	b2b6      	uxth	r6, r6
 8005bc2:	6019      	str	r1, [r3, #0]
 8005bc4:	4b53      	ldr	r3, [pc, #332]	@ (8005d14 <_printf_i+0x210>)
 8005bc6:	270a      	movs	r7, #10
 8005bc8:	9304      	str	r3, [sp, #16]
 8005bca:	2a6f      	cmp	r2, #111	@ 0x6f
 8005bcc:	d100      	bne.n	8005bd0 <_printf_i+0xcc>
 8005bce:	3f02      	subs	r7, #2
 8005bd0:	0023      	movs	r3, r4
 8005bd2:	2200      	movs	r2, #0
 8005bd4:	3343      	adds	r3, #67	@ 0x43
 8005bd6:	701a      	strb	r2, [r3, #0]
 8005bd8:	6863      	ldr	r3, [r4, #4]
 8005bda:	60a3      	str	r3, [r4, #8]
 8005bdc:	2b00      	cmp	r3, #0
 8005bde:	db06      	blt.n	8005bee <_printf_i+0xea>
 8005be0:	2104      	movs	r1, #4
 8005be2:	6822      	ldr	r2, [r4, #0]
 8005be4:	9d03      	ldr	r5, [sp, #12]
 8005be6:	438a      	bics	r2, r1
 8005be8:	6022      	str	r2, [r4, #0]
 8005bea:	4333      	orrs	r3, r6
 8005bec:	d00c      	beq.n	8005c08 <_printf_i+0x104>
 8005bee:	9d03      	ldr	r5, [sp, #12]
 8005bf0:	0030      	movs	r0, r6
 8005bf2:	0039      	movs	r1, r7
 8005bf4:	f7fa fb2a 	bl	800024c <__aeabi_uidivmod>
 8005bf8:	9b04      	ldr	r3, [sp, #16]
 8005bfa:	3d01      	subs	r5, #1
 8005bfc:	5c5b      	ldrb	r3, [r3, r1]
 8005bfe:	702b      	strb	r3, [r5, #0]
 8005c00:	0033      	movs	r3, r6
 8005c02:	0006      	movs	r6, r0
 8005c04:	429f      	cmp	r7, r3
 8005c06:	d9f3      	bls.n	8005bf0 <_printf_i+0xec>
 8005c08:	2f08      	cmp	r7, #8
 8005c0a:	d109      	bne.n	8005c20 <_printf_i+0x11c>
 8005c0c:	6823      	ldr	r3, [r4, #0]
 8005c0e:	07db      	lsls	r3, r3, #31
 8005c10:	d506      	bpl.n	8005c20 <_printf_i+0x11c>
 8005c12:	6862      	ldr	r2, [r4, #4]
 8005c14:	6923      	ldr	r3, [r4, #16]
 8005c16:	429a      	cmp	r2, r3
 8005c18:	dc02      	bgt.n	8005c20 <_printf_i+0x11c>
 8005c1a:	2330      	movs	r3, #48	@ 0x30
 8005c1c:	3d01      	subs	r5, #1
 8005c1e:	702b      	strb	r3, [r5, #0]
 8005c20:	9b03      	ldr	r3, [sp, #12]
 8005c22:	1b5b      	subs	r3, r3, r5
 8005c24:	6123      	str	r3, [r4, #16]
 8005c26:	9b07      	ldr	r3, [sp, #28]
 8005c28:	0021      	movs	r1, r4
 8005c2a:	9300      	str	r3, [sp, #0]
 8005c2c:	9805      	ldr	r0, [sp, #20]
 8005c2e:	9b06      	ldr	r3, [sp, #24]
 8005c30:	aa09      	add	r2, sp, #36	@ 0x24
 8005c32:	f7ff fef7 	bl	8005a24 <_printf_common>
 8005c36:	3001      	adds	r0, #1
 8005c38:	d148      	bne.n	8005ccc <_printf_i+0x1c8>
 8005c3a:	2001      	movs	r0, #1
 8005c3c:	4240      	negs	r0, r0
 8005c3e:	b00b      	add	sp, #44	@ 0x2c
 8005c40:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005c42:	2220      	movs	r2, #32
 8005c44:	6809      	ldr	r1, [r1, #0]
 8005c46:	430a      	orrs	r2, r1
 8005c48:	6022      	str	r2, [r4, #0]
 8005c4a:	2278      	movs	r2, #120	@ 0x78
 8005c4c:	4932      	ldr	r1, [pc, #200]	@ (8005d18 <_printf_i+0x214>)
 8005c4e:	9104      	str	r1, [sp, #16]
 8005c50:	0021      	movs	r1, r4
 8005c52:	3145      	adds	r1, #69	@ 0x45
 8005c54:	700a      	strb	r2, [r1, #0]
 8005c56:	6819      	ldr	r1, [r3, #0]
 8005c58:	6822      	ldr	r2, [r4, #0]
 8005c5a:	c940      	ldmia	r1!, {r6}
 8005c5c:	0610      	lsls	r0, r2, #24
 8005c5e:	d402      	bmi.n	8005c66 <_printf_i+0x162>
 8005c60:	0650      	lsls	r0, r2, #25
 8005c62:	d500      	bpl.n	8005c66 <_printf_i+0x162>
 8005c64:	b2b6      	uxth	r6, r6
 8005c66:	6019      	str	r1, [r3, #0]
 8005c68:	07d3      	lsls	r3, r2, #31
 8005c6a:	d502      	bpl.n	8005c72 <_printf_i+0x16e>
 8005c6c:	2320      	movs	r3, #32
 8005c6e:	4313      	orrs	r3, r2
 8005c70:	6023      	str	r3, [r4, #0]
 8005c72:	2e00      	cmp	r6, #0
 8005c74:	d001      	beq.n	8005c7a <_printf_i+0x176>
 8005c76:	2710      	movs	r7, #16
 8005c78:	e7aa      	b.n	8005bd0 <_printf_i+0xcc>
 8005c7a:	2220      	movs	r2, #32
 8005c7c:	6823      	ldr	r3, [r4, #0]
 8005c7e:	4393      	bics	r3, r2
 8005c80:	6023      	str	r3, [r4, #0]
 8005c82:	e7f8      	b.n	8005c76 <_printf_i+0x172>
 8005c84:	681a      	ldr	r2, [r3, #0]
 8005c86:	680d      	ldr	r5, [r1, #0]
 8005c88:	1d10      	adds	r0, r2, #4
 8005c8a:	6949      	ldr	r1, [r1, #20]
 8005c8c:	6018      	str	r0, [r3, #0]
 8005c8e:	6813      	ldr	r3, [r2, #0]
 8005c90:	062e      	lsls	r6, r5, #24
 8005c92:	d501      	bpl.n	8005c98 <_printf_i+0x194>
 8005c94:	6019      	str	r1, [r3, #0]
 8005c96:	e002      	b.n	8005c9e <_printf_i+0x19a>
 8005c98:	066d      	lsls	r5, r5, #25
 8005c9a:	d5fb      	bpl.n	8005c94 <_printf_i+0x190>
 8005c9c:	8019      	strh	r1, [r3, #0]
 8005c9e:	2300      	movs	r3, #0
 8005ca0:	9d03      	ldr	r5, [sp, #12]
 8005ca2:	6123      	str	r3, [r4, #16]
 8005ca4:	e7bf      	b.n	8005c26 <_printf_i+0x122>
 8005ca6:	681a      	ldr	r2, [r3, #0]
 8005ca8:	1d11      	adds	r1, r2, #4
 8005caa:	6019      	str	r1, [r3, #0]
 8005cac:	6815      	ldr	r5, [r2, #0]
 8005cae:	2100      	movs	r1, #0
 8005cb0:	0028      	movs	r0, r5
 8005cb2:	6862      	ldr	r2, [r4, #4]
 8005cb4:	f000 fbf7 	bl	80064a6 <memchr>
 8005cb8:	2800      	cmp	r0, #0
 8005cba:	d001      	beq.n	8005cc0 <_printf_i+0x1bc>
 8005cbc:	1b40      	subs	r0, r0, r5
 8005cbe:	6060      	str	r0, [r4, #4]
 8005cc0:	6863      	ldr	r3, [r4, #4]
 8005cc2:	6123      	str	r3, [r4, #16]
 8005cc4:	2300      	movs	r3, #0
 8005cc6:	9a03      	ldr	r2, [sp, #12]
 8005cc8:	7013      	strb	r3, [r2, #0]
 8005cca:	e7ac      	b.n	8005c26 <_printf_i+0x122>
 8005ccc:	002a      	movs	r2, r5
 8005cce:	6923      	ldr	r3, [r4, #16]
 8005cd0:	9906      	ldr	r1, [sp, #24]
 8005cd2:	9805      	ldr	r0, [sp, #20]
 8005cd4:	9d07      	ldr	r5, [sp, #28]
 8005cd6:	47a8      	blx	r5
 8005cd8:	3001      	adds	r0, #1
 8005cda:	d0ae      	beq.n	8005c3a <_printf_i+0x136>
 8005cdc:	6823      	ldr	r3, [r4, #0]
 8005cde:	079b      	lsls	r3, r3, #30
 8005ce0:	d415      	bmi.n	8005d0e <_printf_i+0x20a>
 8005ce2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8005ce4:	68e0      	ldr	r0, [r4, #12]
 8005ce6:	4298      	cmp	r0, r3
 8005ce8:	daa9      	bge.n	8005c3e <_printf_i+0x13a>
 8005cea:	0018      	movs	r0, r3
 8005cec:	e7a7      	b.n	8005c3e <_printf_i+0x13a>
 8005cee:	0022      	movs	r2, r4
 8005cf0:	2301      	movs	r3, #1
 8005cf2:	9906      	ldr	r1, [sp, #24]
 8005cf4:	9805      	ldr	r0, [sp, #20]
 8005cf6:	9e07      	ldr	r6, [sp, #28]
 8005cf8:	3219      	adds	r2, #25
 8005cfa:	47b0      	blx	r6
 8005cfc:	3001      	adds	r0, #1
 8005cfe:	d09c      	beq.n	8005c3a <_printf_i+0x136>
 8005d00:	3501      	adds	r5, #1
 8005d02:	68e3      	ldr	r3, [r4, #12]
 8005d04:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8005d06:	1a9b      	subs	r3, r3, r2
 8005d08:	42ab      	cmp	r3, r5
 8005d0a:	dcf0      	bgt.n	8005cee <_printf_i+0x1ea>
 8005d0c:	e7e9      	b.n	8005ce2 <_printf_i+0x1de>
 8005d0e:	2500      	movs	r5, #0
 8005d10:	e7f7      	b.n	8005d02 <_printf_i+0x1fe>
 8005d12:	46c0      	nop			@ (mov r8, r8)
 8005d14:	08009d97 	.word	0x08009d97
 8005d18:	08009da8 	.word	0x08009da8

08005d1c <_scanf_float>:
 8005d1c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8005d1e:	b08b      	sub	sp, #44	@ 0x2c
 8005d20:	0016      	movs	r6, r2
 8005d22:	9003      	str	r0, [sp, #12]
 8005d24:	22ae      	movs	r2, #174	@ 0xae
 8005d26:	2000      	movs	r0, #0
 8005d28:	9307      	str	r3, [sp, #28]
 8005d2a:	688b      	ldr	r3, [r1, #8]
 8005d2c:	000c      	movs	r4, r1
 8005d2e:	1e59      	subs	r1, r3, #1
 8005d30:	0052      	lsls	r2, r2, #1
 8005d32:	9006      	str	r0, [sp, #24]
 8005d34:	4291      	cmp	r1, r2
 8005d36:	d905      	bls.n	8005d44 <_scanf_float+0x28>
 8005d38:	3b5e      	subs	r3, #94	@ 0x5e
 8005d3a:	3bff      	subs	r3, #255	@ 0xff
 8005d3c:	9306      	str	r3, [sp, #24]
 8005d3e:	235e      	movs	r3, #94	@ 0x5e
 8005d40:	33ff      	adds	r3, #255	@ 0xff
 8005d42:	60a3      	str	r3, [r4, #8]
 8005d44:	23f0      	movs	r3, #240	@ 0xf0
 8005d46:	6822      	ldr	r2, [r4, #0]
 8005d48:	00db      	lsls	r3, r3, #3
 8005d4a:	4313      	orrs	r3, r2
 8005d4c:	6023      	str	r3, [r4, #0]
 8005d4e:	0023      	movs	r3, r4
 8005d50:	2500      	movs	r5, #0
 8005d52:	331c      	adds	r3, #28
 8005d54:	001f      	movs	r7, r3
 8005d56:	9304      	str	r3, [sp, #16]
 8005d58:	9502      	str	r5, [sp, #8]
 8005d5a:	9509      	str	r5, [sp, #36]	@ 0x24
 8005d5c:	9508      	str	r5, [sp, #32]
 8005d5e:	9501      	str	r5, [sp, #4]
 8005d60:	9505      	str	r5, [sp, #20]
 8005d62:	68a2      	ldr	r2, [r4, #8]
 8005d64:	2a00      	cmp	r2, #0
 8005d66:	d00a      	beq.n	8005d7e <_scanf_float+0x62>
 8005d68:	6833      	ldr	r3, [r6, #0]
 8005d6a:	781b      	ldrb	r3, [r3, #0]
 8005d6c:	2b4e      	cmp	r3, #78	@ 0x4e
 8005d6e:	d844      	bhi.n	8005dfa <_scanf_float+0xde>
 8005d70:	0018      	movs	r0, r3
 8005d72:	2b40      	cmp	r3, #64	@ 0x40
 8005d74:	d82c      	bhi.n	8005dd0 <_scanf_float+0xb4>
 8005d76:	382b      	subs	r0, #43	@ 0x2b
 8005d78:	b2c1      	uxtb	r1, r0
 8005d7a:	290e      	cmp	r1, #14
 8005d7c:	d92a      	bls.n	8005dd4 <_scanf_float+0xb8>
 8005d7e:	9b01      	ldr	r3, [sp, #4]
 8005d80:	2b00      	cmp	r3, #0
 8005d82:	d003      	beq.n	8005d8c <_scanf_float+0x70>
 8005d84:	6823      	ldr	r3, [r4, #0]
 8005d86:	4aa6      	ldr	r2, [pc, #664]	@ (8006020 <_scanf_float+0x304>)
 8005d88:	4013      	ands	r3, r2
 8005d8a:	6023      	str	r3, [r4, #0]
 8005d8c:	9b02      	ldr	r3, [sp, #8]
 8005d8e:	3b01      	subs	r3, #1
 8005d90:	2b01      	cmp	r3, #1
 8005d92:	d900      	bls.n	8005d96 <_scanf_float+0x7a>
 8005d94:	e0fe      	b.n	8005f94 <_scanf_float+0x278>
 8005d96:	25be      	movs	r5, #190	@ 0xbe
 8005d98:	006d      	lsls	r5, r5, #1
 8005d9a:	9b04      	ldr	r3, [sp, #16]
 8005d9c:	429f      	cmp	r7, r3
 8005d9e:	d900      	bls.n	8005da2 <_scanf_float+0x86>
 8005da0:	e0ee      	b.n	8005f80 <_scanf_float+0x264>
 8005da2:	2001      	movs	r0, #1
 8005da4:	b00b      	add	sp, #44	@ 0x2c
 8005da6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005da8:	0018      	movs	r0, r3
 8005daa:	3861      	subs	r0, #97	@ 0x61
 8005dac:	280d      	cmp	r0, #13
 8005dae:	d8e6      	bhi.n	8005d7e <_scanf_float+0x62>
 8005db0:	f7fa f9bc 	bl	800012c <__gnu_thumb1_case_shi>
 8005db4:	ffe50089 	.word	0xffe50089
 8005db8:	ffe5ffe5 	.word	0xffe5ffe5
 8005dbc:	00a700bb 	.word	0x00a700bb
 8005dc0:	ffe5ffe5 	.word	0xffe5ffe5
 8005dc4:	ffe5008f 	.word	0xffe5008f
 8005dc8:	ffe5ffe5 	.word	0xffe5ffe5
 8005dcc:	006bffe5 	.word	0x006bffe5
 8005dd0:	3841      	subs	r0, #65	@ 0x41
 8005dd2:	e7eb      	b.n	8005dac <_scanf_float+0x90>
 8005dd4:	280e      	cmp	r0, #14
 8005dd6:	d8d2      	bhi.n	8005d7e <_scanf_float+0x62>
 8005dd8:	f7fa f9a8 	bl	800012c <__gnu_thumb1_case_shi>
 8005ddc:	ffd1004f 	.word	0xffd1004f
 8005de0:	009d004f 	.word	0x009d004f
 8005de4:	0021ffd1 	.word	0x0021ffd1
 8005de8:	00410041 	.word	0x00410041
 8005dec:	00410041 	.word	0x00410041
 8005df0:	00410041 	.word	0x00410041
 8005df4:	00410041 	.word	0x00410041
 8005df8:	0041      	.short	0x0041
 8005dfa:	2b6e      	cmp	r3, #110	@ 0x6e
 8005dfc:	d80a      	bhi.n	8005e14 <_scanf_float+0xf8>
 8005dfe:	2b60      	cmp	r3, #96	@ 0x60
 8005e00:	d8d2      	bhi.n	8005da8 <_scanf_float+0x8c>
 8005e02:	2b54      	cmp	r3, #84	@ 0x54
 8005e04:	d100      	bne.n	8005e08 <_scanf_float+0xec>
 8005e06:	e081      	b.n	8005f0c <_scanf_float+0x1f0>
 8005e08:	2b59      	cmp	r3, #89	@ 0x59
 8005e0a:	d1b8      	bne.n	8005d7e <_scanf_float+0x62>
 8005e0c:	2d07      	cmp	r5, #7
 8005e0e:	d1b6      	bne.n	8005d7e <_scanf_float+0x62>
 8005e10:	2508      	movs	r5, #8
 8005e12:	e02f      	b.n	8005e74 <_scanf_float+0x158>
 8005e14:	2b74      	cmp	r3, #116	@ 0x74
 8005e16:	d079      	beq.n	8005f0c <_scanf_float+0x1f0>
 8005e18:	2b79      	cmp	r3, #121	@ 0x79
 8005e1a:	d0f7      	beq.n	8005e0c <_scanf_float+0xf0>
 8005e1c:	e7af      	b.n	8005d7e <_scanf_float+0x62>
 8005e1e:	6821      	ldr	r1, [r4, #0]
 8005e20:	05c8      	lsls	r0, r1, #23
 8005e22:	d51c      	bpl.n	8005e5e <_scanf_float+0x142>
 8005e24:	2380      	movs	r3, #128	@ 0x80
 8005e26:	4399      	bics	r1, r3
 8005e28:	9b01      	ldr	r3, [sp, #4]
 8005e2a:	6021      	str	r1, [r4, #0]
 8005e2c:	3301      	adds	r3, #1
 8005e2e:	9301      	str	r3, [sp, #4]
 8005e30:	9b06      	ldr	r3, [sp, #24]
 8005e32:	2b00      	cmp	r3, #0
 8005e34:	d003      	beq.n	8005e3e <_scanf_float+0x122>
 8005e36:	3b01      	subs	r3, #1
 8005e38:	3201      	adds	r2, #1
 8005e3a:	9306      	str	r3, [sp, #24]
 8005e3c:	60a2      	str	r2, [r4, #8]
 8005e3e:	68a3      	ldr	r3, [r4, #8]
 8005e40:	3b01      	subs	r3, #1
 8005e42:	60a3      	str	r3, [r4, #8]
 8005e44:	6923      	ldr	r3, [r4, #16]
 8005e46:	3301      	adds	r3, #1
 8005e48:	6123      	str	r3, [r4, #16]
 8005e4a:	6873      	ldr	r3, [r6, #4]
 8005e4c:	3b01      	subs	r3, #1
 8005e4e:	6073      	str	r3, [r6, #4]
 8005e50:	2b00      	cmp	r3, #0
 8005e52:	dc00      	bgt.n	8005e56 <_scanf_float+0x13a>
 8005e54:	e08a      	b.n	8005f6c <_scanf_float+0x250>
 8005e56:	6833      	ldr	r3, [r6, #0]
 8005e58:	3301      	adds	r3, #1
 8005e5a:	6033      	str	r3, [r6, #0]
 8005e5c:	e781      	b.n	8005d62 <_scanf_float+0x46>
 8005e5e:	9a02      	ldr	r2, [sp, #8]
 8005e60:	1951      	adds	r1, r2, r5
 8005e62:	2900      	cmp	r1, #0
 8005e64:	d000      	beq.n	8005e68 <_scanf_float+0x14c>
 8005e66:	e78a      	b.n	8005d7e <_scanf_float+0x62>
 8005e68:	000d      	movs	r5, r1
 8005e6a:	6822      	ldr	r2, [r4, #0]
 8005e6c:	486d      	ldr	r0, [pc, #436]	@ (8006024 <_scanf_float+0x308>)
 8005e6e:	9102      	str	r1, [sp, #8]
 8005e70:	4002      	ands	r2, r0
 8005e72:	6022      	str	r2, [r4, #0]
 8005e74:	703b      	strb	r3, [r7, #0]
 8005e76:	3701      	adds	r7, #1
 8005e78:	e7e1      	b.n	8005e3e <_scanf_float+0x122>
 8005e7a:	2180      	movs	r1, #128	@ 0x80
 8005e7c:	6822      	ldr	r2, [r4, #0]
 8005e7e:	420a      	tst	r2, r1
 8005e80:	d100      	bne.n	8005e84 <_scanf_float+0x168>
 8005e82:	e77c      	b.n	8005d7e <_scanf_float+0x62>
 8005e84:	438a      	bics	r2, r1
 8005e86:	6022      	str	r2, [r4, #0]
 8005e88:	e7f4      	b.n	8005e74 <_scanf_float+0x158>
 8005e8a:	9a02      	ldr	r2, [sp, #8]
 8005e8c:	2a00      	cmp	r2, #0
 8005e8e:	d10f      	bne.n	8005eb0 <_scanf_float+0x194>
 8005e90:	9a01      	ldr	r2, [sp, #4]
 8005e92:	2a00      	cmp	r2, #0
 8005e94:	d10f      	bne.n	8005eb6 <_scanf_float+0x19a>
 8005e96:	6822      	ldr	r2, [r4, #0]
 8005e98:	21e0      	movs	r1, #224	@ 0xe0
 8005e9a:	0010      	movs	r0, r2
 8005e9c:	00c9      	lsls	r1, r1, #3
 8005e9e:	4008      	ands	r0, r1
 8005ea0:	4288      	cmp	r0, r1
 8005ea2:	d108      	bne.n	8005eb6 <_scanf_float+0x19a>
 8005ea4:	4960      	ldr	r1, [pc, #384]	@ (8006028 <_scanf_float+0x30c>)
 8005ea6:	400a      	ands	r2, r1
 8005ea8:	6022      	str	r2, [r4, #0]
 8005eaa:	2201      	movs	r2, #1
 8005eac:	9202      	str	r2, [sp, #8]
 8005eae:	e7e1      	b.n	8005e74 <_scanf_float+0x158>
 8005eb0:	9a02      	ldr	r2, [sp, #8]
 8005eb2:	2a02      	cmp	r2, #2
 8005eb4:	d058      	beq.n	8005f68 <_scanf_float+0x24c>
 8005eb6:	2d01      	cmp	r5, #1
 8005eb8:	d002      	beq.n	8005ec0 <_scanf_float+0x1a4>
 8005eba:	2d04      	cmp	r5, #4
 8005ebc:	d000      	beq.n	8005ec0 <_scanf_float+0x1a4>
 8005ebe:	e75e      	b.n	8005d7e <_scanf_float+0x62>
 8005ec0:	3501      	adds	r5, #1
 8005ec2:	b2ed      	uxtb	r5, r5
 8005ec4:	e7d6      	b.n	8005e74 <_scanf_float+0x158>
 8005ec6:	9a02      	ldr	r2, [sp, #8]
 8005ec8:	2a01      	cmp	r2, #1
 8005eca:	d000      	beq.n	8005ece <_scanf_float+0x1b2>
 8005ecc:	e757      	b.n	8005d7e <_scanf_float+0x62>
 8005ece:	2202      	movs	r2, #2
 8005ed0:	e7ec      	b.n	8005eac <_scanf_float+0x190>
 8005ed2:	2d00      	cmp	r5, #0
 8005ed4:	d110      	bne.n	8005ef8 <_scanf_float+0x1dc>
 8005ed6:	9a01      	ldr	r2, [sp, #4]
 8005ed8:	2a00      	cmp	r2, #0
 8005eda:	d000      	beq.n	8005ede <_scanf_float+0x1c2>
 8005edc:	e752      	b.n	8005d84 <_scanf_float+0x68>
 8005ede:	6822      	ldr	r2, [r4, #0]
 8005ee0:	21e0      	movs	r1, #224	@ 0xe0
 8005ee2:	0010      	movs	r0, r2
 8005ee4:	00c9      	lsls	r1, r1, #3
 8005ee6:	4008      	ands	r0, r1
 8005ee8:	4288      	cmp	r0, r1
 8005eea:	d000      	beq.n	8005eee <_scanf_float+0x1d2>
 8005eec:	e11b      	b.n	8006126 <_scanf_float+0x40a>
 8005eee:	494e      	ldr	r1, [pc, #312]	@ (8006028 <_scanf_float+0x30c>)
 8005ef0:	3501      	adds	r5, #1
 8005ef2:	400a      	ands	r2, r1
 8005ef4:	6022      	str	r2, [r4, #0]
 8005ef6:	e7bd      	b.n	8005e74 <_scanf_float+0x158>
 8005ef8:	21fd      	movs	r1, #253	@ 0xfd
 8005efa:	1eea      	subs	r2, r5, #3
 8005efc:	420a      	tst	r2, r1
 8005efe:	d0df      	beq.n	8005ec0 <_scanf_float+0x1a4>
 8005f00:	e73d      	b.n	8005d7e <_scanf_float+0x62>
 8005f02:	2d02      	cmp	r5, #2
 8005f04:	d000      	beq.n	8005f08 <_scanf_float+0x1ec>
 8005f06:	e73a      	b.n	8005d7e <_scanf_float+0x62>
 8005f08:	2503      	movs	r5, #3
 8005f0a:	e7b3      	b.n	8005e74 <_scanf_float+0x158>
 8005f0c:	2d06      	cmp	r5, #6
 8005f0e:	d000      	beq.n	8005f12 <_scanf_float+0x1f6>
 8005f10:	e735      	b.n	8005d7e <_scanf_float+0x62>
 8005f12:	2507      	movs	r5, #7
 8005f14:	e7ae      	b.n	8005e74 <_scanf_float+0x158>
 8005f16:	6822      	ldr	r2, [r4, #0]
 8005f18:	0591      	lsls	r1, r2, #22
 8005f1a:	d400      	bmi.n	8005f1e <_scanf_float+0x202>
 8005f1c:	e72f      	b.n	8005d7e <_scanf_float+0x62>
 8005f1e:	4943      	ldr	r1, [pc, #268]	@ (800602c <_scanf_float+0x310>)
 8005f20:	400a      	ands	r2, r1
 8005f22:	6022      	str	r2, [r4, #0]
 8005f24:	9a01      	ldr	r2, [sp, #4]
 8005f26:	9205      	str	r2, [sp, #20]
 8005f28:	e7a4      	b.n	8005e74 <_scanf_float+0x158>
 8005f2a:	21a0      	movs	r1, #160	@ 0xa0
 8005f2c:	2080      	movs	r0, #128	@ 0x80
 8005f2e:	6822      	ldr	r2, [r4, #0]
 8005f30:	00c9      	lsls	r1, r1, #3
 8005f32:	4011      	ands	r1, r2
 8005f34:	00c0      	lsls	r0, r0, #3
 8005f36:	4281      	cmp	r1, r0
 8005f38:	d006      	beq.n	8005f48 <_scanf_float+0x22c>
 8005f3a:	4202      	tst	r2, r0
 8005f3c:	d100      	bne.n	8005f40 <_scanf_float+0x224>
 8005f3e:	e71e      	b.n	8005d7e <_scanf_float+0x62>
 8005f40:	9901      	ldr	r1, [sp, #4]
 8005f42:	2900      	cmp	r1, #0
 8005f44:	d100      	bne.n	8005f48 <_scanf_float+0x22c>
 8005f46:	e0ee      	b.n	8006126 <_scanf_float+0x40a>
 8005f48:	0591      	lsls	r1, r2, #22
 8005f4a:	d404      	bmi.n	8005f56 <_scanf_float+0x23a>
 8005f4c:	9901      	ldr	r1, [sp, #4]
 8005f4e:	9805      	ldr	r0, [sp, #20]
 8005f50:	9709      	str	r7, [sp, #36]	@ 0x24
 8005f52:	1a09      	subs	r1, r1, r0
 8005f54:	9108      	str	r1, [sp, #32]
 8005f56:	4934      	ldr	r1, [pc, #208]	@ (8006028 <_scanf_float+0x30c>)
 8005f58:	400a      	ands	r2, r1
 8005f5a:	21c0      	movs	r1, #192	@ 0xc0
 8005f5c:	0049      	lsls	r1, r1, #1
 8005f5e:	430a      	orrs	r2, r1
 8005f60:	6022      	str	r2, [r4, #0]
 8005f62:	2200      	movs	r2, #0
 8005f64:	9201      	str	r2, [sp, #4]
 8005f66:	e785      	b.n	8005e74 <_scanf_float+0x158>
 8005f68:	2203      	movs	r2, #3
 8005f6a:	e79f      	b.n	8005eac <_scanf_float+0x190>
 8005f6c:	23c0      	movs	r3, #192	@ 0xc0
 8005f6e:	005b      	lsls	r3, r3, #1
 8005f70:	0031      	movs	r1, r6
 8005f72:	58e3      	ldr	r3, [r4, r3]
 8005f74:	9803      	ldr	r0, [sp, #12]
 8005f76:	4798      	blx	r3
 8005f78:	2800      	cmp	r0, #0
 8005f7a:	d100      	bne.n	8005f7e <_scanf_float+0x262>
 8005f7c:	e6f1      	b.n	8005d62 <_scanf_float+0x46>
 8005f7e:	e6fe      	b.n	8005d7e <_scanf_float+0x62>
 8005f80:	3f01      	subs	r7, #1
 8005f82:	5963      	ldr	r3, [r4, r5]
 8005f84:	0032      	movs	r2, r6
 8005f86:	7839      	ldrb	r1, [r7, #0]
 8005f88:	9803      	ldr	r0, [sp, #12]
 8005f8a:	4798      	blx	r3
 8005f8c:	6923      	ldr	r3, [r4, #16]
 8005f8e:	3b01      	subs	r3, #1
 8005f90:	6123      	str	r3, [r4, #16]
 8005f92:	e702      	b.n	8005d9a <_scanf_float+0x7e>
 8005f94:	1e6b      	subs	r3, r5, #1
 8005f96:	2b06      	cmp	r3, #6
 8005f98:	d80e      	bhi.n	8005fb8 <_scanf_float+0x29c>
 8005f9a:	9702      	str	r7, [sp, #8]
 8005f9c:	2d02      	cmp	r5, #2
 8005f9e:	d920      	bls.n	8005fe2 <_scanf_float+0x2c6>
 8005fa0:	1beb      	subs	r3, r5, r7
 8005fa2:	b2db      	uxtb	r3, r3
 8005fa4:	9306      	str	r3, [sp, #24]
 8005fa6:	9b02      	ldr	r3, [sp, #8]
 8005fa8:	9a06      	ldr	r2, [sp, #24]
 8005faa:	189b      	adds	r3, r3, r2
 8005fac:	b2db      	uxtb	r3, r3
 8005fae:	2b03      	cmp	r3, #3
 8005fb0:	d127      	bne.n	8006002 <_scanf_float+0x2e6>
 8005fb2:	3d03      	subs	r5, #3
 8005fb4:	b2ed      	uxtb	r5, r5
 8005fb6:	1b7f      	subs	r7, r7, r5
 8005fb8:	6823      	ldr	r3, [r4, #0]
 8005fba:	05da      	lsls	r2, r3, #23
 8005fbc:	d553      	bpl.n	8006066 <_scanf_float+0x34a>
 8005fbe:	055b      	lsls	r3, r3, #21
 8005fc0:	d536      	bpl.n	8006030 <_scanf_float+0x314>
 8005fc2:	25be      	movs	r5, #190	@ 0xbe
 8005fc4:	006d      	lsls	r5, r5, #1
 8005fc6:	9b04      	ldr	r3, [sp, #16]
 8005fc8:	429f      	cmp	r7, r3
 8005fca:	d800      	bhi.n	8005fce <_scanf_float+0x2b2>
 8005fcc:	e6e9      	b.n	8005da2 <_scanf_float+0x86>
 8005fce:	3f01      	subs	r7, #1
 8005fd0:	5963      	ldr	r3, [r4, r5]
 8005fd2:	0032      	movs	r2, r6
 8005fd4:	7839      	ldrb	r1, [r7, #0]
 8005fd6:	9803      	ldr	r0, [sp, #12]
 8005fd8:	4798      	blx	r3
 8005fda:	6923      	ldr	r3, [r4, #16]
 8005fdc:	3b01      	subs	r3, #1
 8005fde:	6123      	str	r3, [r4, #16]
 8005fe0:	e7f1      	b.n	8005fc6 <_scanf_float+0x2aa>
 8005fe2:	25be      	movs	r5, #190	@ 0xbe
 8005fe4:	006d      	lsls	r5, r5, #1
 8005fe6:	9b04      	ldr	r3, [sp, #16]
 8005fe8:	429f      	cmp	r7, r3
 8005fea:	d800      	bhi.n	8005fee <_scanf_float+0x2d2>
 8005fec:	e6d9      	b.n	8005da2 <_scanf_float+0x86>
 8005fee:	3f01      	subs	r7, #1
 8005ff0:	5963      	ldr	r3, [r4, r5]
 8005ff2:	0032      	movs	r2, r6
 8005ff4:	7839      	ldrb	r1, [r7, #0]
 8005ff6:	9803      	ldr	r0, [sp, #12]
 8005ff8:	4798      	blx	r3
 8005ffa:	6923      	ldr	r3, [r4, #16]
 8005ffc:	3b01      	subs	r3, #1
 8005ffe:	6123      	str	r3, [r4, #16]
 8006000:	e7f1      	b.n	8005fe6 <_scanf_float+0x2ca>
 8006002:	9b02      	ldr	r3, [sp, #8]
 8006004:	0032      	movs	r2, r6
 8006006:	3b01      	subs	r3, #1
 8006008:	7819      	ldrb	r1, [r3, #0]
 800600a:	9302      	str	r3, [sp, #8]
 800600c:	23be      	movs	r3, #190	@ 0xbe
 800600e:	005b      	lsls	r3, r3, #1
 8006010:	58e3      	ldr	r3, [r4, r3]
 8006012:	9803      	ldr	r0, [sp, #12]
 8006014:	4798      	blx	r3
 8006016:	6923      	ldr	r3, [r4, #16]
 8006018:	3b01      	subs	r3, #1
 800601a:	6123      	str	r3, [r4, #16]
 800601c:	e7c3      	b.n	8005fa6 <_scanf_float+0x28a>
 800601e:	46c0      	nop			@ (mov r8, r8)
 8006020:	fffffeff 	.word	0xfffffeff
 8006024:	fffffe7f 	.word	0xfffffe7f
 8006028:	fffff87f 	.word	0xfffff87f
 800602c:	fffffd7f 	.word	0xfffffd7f
 8006030:	6923      	ldr	r3, [r4, #16]
 8006032:	1e7d      	subs	r5, r7, #1
 8006034:	7829      	ldrb	r1, [r5, #0]
 8006036:	3b01      	subs	r3, #1
 8006038:	6123      	str	r3, [r4, #16]
 800603a:	2965      	cmp	r1, #101	@ 0x65
 800603c:	d00c      	beq.n	8006058 <_scanf_float+0x33c>
 800603e:	2945      	cmp	r1, #69	@ 0x45
 8006040:	d00a      	beq.n	8006058 <_scanf_float+0x33c>
 8006042:	23be      	movs	r3, #190	@ 0xbe
 8006044:	005b      	lsls	r3, r3, #1
 8006046:	58e3      	ldr	r3, [r4, r3]
 8006048:	0032      	movs	r2, r6
 800604a:	9803      	ldr	r0, [sp, #12]
 800604c:	4798      	blx	r3
 800604e:	6923      	ldr	r3, [r4, #16]
 8006050:	1ebd      	subs	r5, r7, #2
 8006052:	3b01      	subs	r3, #1
 8006054:	7829      	ldrb	r1, [r5, #0]
 8006056:	6123      	str	r3, [r4, #16]
 8006058:	23be      	movs	r3, #190	@ 0xbe
 800605a:	005b      	lsls	r3, r3, #1
 800605c:	0032      	movs	r2, r6
 800605e:	58e3      	ldr	r3, [r4, r3]
 8006060:	9803      	ldr	r0, [sp, #12]
 8006062:	4798      	blx	r3
 8006064:	002f      	movs	r7, r5
 8006066:	6821      	ldr	r1, [r4, #0]
 8006068:	2310      	movs	r3, #16
 800606a:	000a      	movs	r2, r1
 800606c:	401a      	ands	r2, r3
 800606e:	4219      	tst	r1, r3
 8006070:	d001      	beq.n	8006076 <_scanf_float+0x35a>
 8006072:	2000      	movs	r0, #0
 8006074:	e696      	b.n	8005da4 <_scanf_float+0x88>
 8006076:	21c0      	movs	r1, #192	@ 0xc0
 8006078:	703a      	strb	r2, [r7, #0]
 800607a:	6823      	ldr	r3, [r4, #0]
 800607c:	00c9      	lsls	r1, r1, #3
 800607e:	400b      	ands	r3, r1
 8006080:	2180      	movs	r1, #128	@ 0x80
 8006082:	00c9      	lsls	r1, r1, #3
 8006084:	428b      	cmp	r3, r1
 8006086:	d126      	bne.n	80060d6 <_scanf_float+0x3ba>
 8006088:	9b05      	ldr	r3, [sp, #20]
 800608a:	9a01      	ldr	r2, [sp, #4]
 800608c:	4293      	cmp	r3, r2
 800608e:	d00c      	beq.n	80060aa <_scanf_float+0x38e>
 8006090:	1a9a      	subs	r2, r3, r2
 8006092:	0023      	movs	r3, r4
 8006094:	3370      	adds	r3, #112	@ 0x70
 8006096:	33ff      	adds	r3, #255	@ 0xff
 8006098:	429f      	cmp	r7, r3
 800609a:	d302      	bcc.n	80060a2 <_scanf_float+0x386>
 800609c:	0027      	movs	r7, r4
 800609e:	376f      	adds	r7, #111	@ 0x6f
 80060a0:	37ff      	adds	r7, #255	@ 0xff
 80060a2:	0038      	movs	r0, r7
 80060a4:	4921      	ldr	r1, [pc, #132]	@ (800612c <_scanf_float+0x410>)
 80060a6:	f000 f909 	bl	80062bc <siprintf>
 80060aa:	2200      	movs	r2, #0
 80060ac:	9904      	ldr	r1, [sp, #16]
 80060ae:	9803      	ldr	r0, [sp, #12]
 80060b0:	f002 fc5c 	bl	800896c <_strtod_r>
 80060b4:	9b07      	ldr	r3, [sp, #28]
 80060b6:	6822      	ldr	r2, [r4, #0]
 80060b8:	0006      	movs	r6, r0
 80060ba:	000f      	movs	r7, r1
 80060bc:	681b      	ldr	r3, [r3, #0]
 80060be:	0791      	lsls	r1, r2, #30
 80060c0:	d516      	bpl.n	80060f0 <_scanf_float+0x3d4>
 80060c2:	9907      	ldr	r1, [sp, #28]
 80060c4:	1d1a      	adds	r2, r3, #4
 80060c6:	600a      	str	r2, [r1, #0]
 80060c8:	681b      	ldr	r3, [r3, #0]
 80060ca:	601e      	str	r6, [r3, #0]
 80060cc:	605f      	str	r7, [r3, #4]
 80060ce:	68e3      	ldr	r3, [r4, #12]
 80060d0:	3301      	adds	r3, #1
 80060d2:	60e3      	str	r3, [r4, #12]
 80060d4:	e7cd      	b.n	8006072 <_scanf_float+0x356>
 80060d6:	9b08      	ldr	r3, [sp, #32]
 80060d8:	2b00      	cmp	r3, #0
 80060da:	d0e6      	beq.n	80060aa <_scanf_float+0x38e>
 80060dc:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80060de:	9803      	ldr	r0, [sp, #12]
 80060e0:	1c59      	adds	r1, r3, #1
 80060e2:	230a      	movs	r3, #10
 80060e4:	f002 fcd4 	bl	8008a90 <_strtol_r>
 80060e8:	9b08      	ldr	r3, [sp, #32]
 80060ea:	9f09      	ldr	r7, [sp, #36]	@ 0x24
 80060ec:	1ac2      	subs	r2, r0, r3
 80060ee:	e7d0      	b.n	8006092 <_scanf_float+0x376>
 80060f0:	1d19      	adds	r1, r3, #4
 80060f2:	0752      	lsls	r2, r2, #29
 80060f4:	d502      	bpl.n	80060fc <_scanf_float+0x3e0>
 80060f6:	9a07      	ldr	r2, [sp, #28]
 80060f8:	6011      	str	r1, [r2, #0]
 80060fa:	e7e5      	b.n	80060c8 <_scanf_float+0x3ac>
 80060fc:	9a07      	ldr	r2, [sp, #28]
 80060fe:	0030      	movs	r0, r6
 8006100:	6011      	str	r1, [r2, #0]
 8006102:	681d      	ldr	r5, [r3, #0]
 8006104:	0032      	movs	r2, r6
 8006106:	003b      	movs	r3, r7
 8006108:	0039      	movs	r1, r7
 800610a:	f7fc f92b 	bl	8002364 <__aeabi_dcmpun>
 800610e:	2800      	cmp	r0, #0
 8006110:	d004      	beq.n	800611c <_scanf_float+0x400>
 8006112:	4807      	ldr	r0, [pc, #28]	@ (8006130 <_scanf_float+0x414>)
 8006114:	f000 f9d2 	bl	80064bc <nanf>
 8006118:	6028      	str	r0, [r5, #0]
 800611a:	e7d8      	b.n	80060ce <_scanf_float+0x3b2>
 800611c:	0030      	movs	r0, r6
 800611e:	0039      	movs	r1, r7
 8006120:	f7fc fa18 	bl	8002554 <__aeabi_d2f>
 8006124:	e7f8      	b.n	8006118 <_scanf_float+0x3fc>
 8006126:	2300      	movs	r3, #0
 8006128:	9301      	str	r3, [sp, #4]
 800612a:	e62f      	b.n	8005d8c <_scanf_float+0x70>
 800612c:	08009db9 	.word	0x08009db9
 8006130:	08009efa 	.word	0x08009efa

08006134 <std>:
 8006134:	2300      	movs	r3, #0
 8006136:	b510      	push	{r4, lr}
 8006138:	0004      	movs	r4, r0
 800613a:	6003      	str	r3, [r0, #0]
 800613c:	6043      	str	r3, [r0, #4]
 800613e:	6083      	str	r3, [r0, #8]
 8006140:	8181      	strh	r1, [r0, #12]
 8006142:	6643      	str	r3, [r0, #100]	@ 0x64
 8006144:	81c2      	strh	r2, [r0, #14]
 8006146:	6103      	str	r3, [r0, #16]
 8006148:	6143      	str	r3, [r0, #20]
 800614a:	6183      	str	r3, [r0, #24]
 800614c:	0019      	movs	r1, r3
 800614e:	2208      	movs	r2, #8
 8006150:	305c      	adds	r0, #92	@ 0x5c
 8006152:	f000 f921 	bl	8006398 <memset>
 8006156:	4b0b      	ldr	r3, [pc, #44]	@ (8006184 <std+0x50>)
 8006158:	6224      	str	r4, [r4, #32]
 800615a:	6263      	str	r3, [r4, #36]	@ 0x24
 800615c:	4b0a      	ldr	r3, [pc, #40]	@ (8006188 <std+0x54>)
 800615e:	62a3      	str	r3, [r4, #40]	@ 0x28
 8006160:	4b0a      	ldr	r3, [pc, #40]	@ (800618c <std+0x58>)
 8006162:	62e3      	str	r3, [r4, #44]	@ 0x2c
 8006164:	4b0a      	ldr	r3, [pc, #40]	@ (8006190 <std+0x5c>)
 8006166:	6323      	str	r3, [r4, #48]	@ 0x30
 8006168:	4b0a      	ldr	r3, [pc, #40]	@ (8006194 <std+0x60>)
 800616a:	429c      	cmp	r4, r3
 800616c:	d005      	beq.n	800617a <std+0x46>
 800616e:	4b0a      	ldr	r3, [pc, #40]	@ (8006198 <std+0x64>)
 8006170:	429c      	cmp	r4, r3
 8006172:	d002      	beq.n	800617a <std+0x46>
 8006174:	4b09      	ldr	r3, [pc, #36]	@ (800619c <std+0x68>)
 8006176:	429c      	cmp	r4, r3
 8006178:	d103      	bne.n	8006182 <std+0x4e>
 800617a:	0020      	movs	r0, r4
 800617c:	3058      	adds	r0, #88	@ 0x58
 800617e:	f000 f98f 	bl	80064a0 <__retarget_lock_init_recursive>
 8006182:	bd10      	pop	{r4, pc}
 8006184:	08006301 	.word	0x08006301
 8006188:	08006329 	.word	0x08006329
 800618c:	08006361 	.word	0x08006361
 8006190:	0800638d 	.word	0x0800638d
 8006194:	20000274 	.word	0x20000274
 8006198:	200002dc 	.word	0x200002dc
 800619c:	20000344 	.word	0x20000344

080061a0 <stdio_exit_handler>:
 80061a0:	b510      	push	{r4, lr}
 80061a2:	4a03      	ldr	r2, [pc, #12]	@ (80061b0 <stdio_exit_handler+0x10>)
 80061a4:	4903      	ldr	r1, [pc, #12]	@ (80061b4 <stdio_exit_handler+0x14>)
 80061a6:	4804      	ldr	r0, [pc, #16]	@ (80061b8 <stdio_exit_handler+0x18>)
 80061a8:	f000 f86c 	bl	8006284 <_fwalk_sglue>
 80061ac:	bd10      	pop	{r4, pc}
 80061ae:	46c0      	nop			@ (mov r8, r8)
 80061b0:	20000014 	.word	0x20000014
 80061b4:	08008e61 	.word	0x08008e61
 80061b8:	20000024 	.word	0x20000024

080061bc <cleanup_stdio>:
 80061bc:	6841      	ldr	r1, [r0, #4]
 80061be:	4b0b      	ldr	r3, [pc, #44]	@ (80061ec <cleanup_stdio+0x30>)
 80061c0:	b510      	push	{r4, lr}
 80061c2:	0004      	movs	r4, r0
 80061c4:	4299      	cmp	r1, r3
 80061c6:	d001      	beq.n	80061cc <cleanup_stdio+0x10>
 80061c8:	f002 fe4a 	bl	8008e60 <_fflush_r>
 80061cc:	68a1      	ldr	r1, [r4, #8]
 80061ce:	4b08      	ldr	r3, [pc, #32]	@ (80061f0 <cleanup_stdio+0x34>)
 80061d0:	4299      	cmp	r1, r3
 80061d2:	d002      	beq.n	80061da <cleanup_stdio+0x1e>
 80061d4:	0020      	movs	r0, r4
 80061d6:	f002 fe43 	bl	8008e60 <_fflush_r>
 80061da:	68e1      	ldr	r1, [r4, #12]
 80061dc:	4b05      	ldr	r3, [pc, #20]	@ (80061f4 <cleanup_stdio+0x38>)
 80061de:	4299      	cmp	r1, r3
 80061e0:	d002      	beq.n	80061e8 <cleanup_stdio+0x2c>
 80061e2:	0020      	movs	r0, r4
 80061e4:	f002 fe3c 	bl	8008e60 <_fflush_r>
 80061e8:	bd10      	pop	{r4, pc}
 80061ea:	46c0      	nop			@ (mov r8, r8)
 80061ec:	20000274 	.word	0x20000274
 80061f0:	200002dc 	.word	0x200002dc
 80061f4:	20000344 	.word	0x20000344

080061f8 <global_stdio_init.part.0>:
 80061f8:	b510      	push	{r4, lr}
 80061fa:	4b09      	ldr	r3, [pc, #36]	@ (8006220 <global_stdio_init.part.0+0x28>)
 80061fc:	4a09      	ldr	r2, [pc, #36]	@ (8006224 <global_stdio_init.part.0+0x2c>)
 80061fe:	2104      	movs	r1, #4
 8006200:	601a      	str	r2, [r3, #0]
 8006202:	4809      	ldr	r0, [pc, #36]	@ (8006228 <global_stdio_init.part.0+0x30>)
 8006204:	2200      	movs	r2, #0
 8006206:	f7ff ff95 	bl	8006134 <std>
 800620a:	2201      	movs	r2, #1
 800620c:	2109      	movs	r1, #9
 800620e:	4807      	ldr	r0, [pc, #28]	@ (800622c <global_stdio_init.part.0+0x34>)
 8006210:	f7ff ff90 	bl	8006134 <std>
 8006214:	2202      	movs	r2, #2
 8006216:	2112      	movs	r1, #18
 8006218:	4805      	ldr	r0, [pc, #20]	@ (8006230 <global_stdio_init.part.0+0x38>)
 800621a:	f7ff ff8b 	bl	8006134 <std>
 800621e:	bd10      	pop	{r4, pc}
 8006220:	200003ac 	.word	0x200003ac
 8006224:	080061a1 	.word	0x080061a1
 8006228:	20000274 	.word	0x20000274
 800622c:	200002dc 	.word	0x200002dc
 8006230:	20000344 	.word	0x20000344

08006234 <__sfp_lock_acquire>:
 8006234:	b510      	push	{r4, lr}
 8006236:	4802      	ldr	r0, [pc, #8]	@ (8006240 <__sfp_lock_acquire+0xc>)
 8006238:	f000 f933 	bl	80064a2 <__retarget_lock_acquire_recursive>
 800623c:	bd10      	pop	{r4, pc}
 800623e:	46c0      	nop			@ (mov r8, r8)
 8006240:	200003b5 	.word	0x200003b5

08006244 <__sfp_lock_release>:
 8006244:	b510      	push	{r4, lr}
 8006246:	4802      	ldr	r0, [pc, #8]	@ (8006250 <__sfp_lock_release+0xc>)
 8006248:	f000 f92c 	bl	80064a4 <__retarget_lock_release_recursive>
 800624c:	bd10      	pop	{r4, pc}
 800624e:	46c0      	nop			@ (mov r8, r8)
 8006250:	200003b5 	.word	0x200003b5

08006254 <__sinit>:
 8006254:	b510      	push	{r4, lr}
 8006256:	0004      	movs	r4, r0
 8006258:	f7ff ffec 	bl	8006234 <__sfp_lock_acquire>
 800625c:	6a23      	ldr	r3, [r4, #32]
 800625e:	2b00      	cmp	r3, #0
 8006260:	d002      	beq.n	8006268 <__sinit+0x14>
 8006262:	f7ff ffef 	bl	8006244 <__sfp_lock_release>
 8006266:	bd10      	pop	{r4, pc}
 8006268:	4b04      	ldr	r3, [pc, #16]	@ (800627c <__sinit+0x28>)
 800626a:	6223      	str	r3, [r4, #32]
 800626c:	4b04      	ldr	r3, [pc, #16]	@ (8006280 <__sinit+0x2c>)
 800626e:	681b      	ldr	r3, [r3, #0]
 8006270:	2b00      	cmp	r3, #0
 8006272:	d1f6      	bne.n	8006262 <__sinit+0xe>
 8006274:	f7ff ffc0 	bl	80061f8 <global_stdio_init.part.0>
 8006278:	e7f3      	b.n	8006262 <__sinit+0xe>
 800627a:	46c0      	nop			@ (mov r8, r8)
 800627c:	080061bd 	.word	0x080061bd
 8006280:	200003ac 	.word	0x200003ac

08006284 <_fwalk_sglue>:
 8006284:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006286:	0014      	movs	r4, r2
 8006288:	2600      	movs	r6, #0
 800628a:	9000      	str	r0, [sp, #0]
 800628c:	9101      	str	r1, [sp, #4]
 800628e:	68a5      	ldr	r5, [r4, #8]
 8006290:	6867      	ldr	r7, [r4, #4]
 8006292:	3f01      	subs	r7, #1
 8006294:	d504      	bpl.n	80062a0 <_fwalk_sglue+0x1c>
 8006296:	6824      	ldr	r4, [r4, #0]
 8006298:	2c00      	cmp	r4, #0
 800629a:	d1f8      	bne.n	800628e <_fwalk_sglue+0xa>
 800629c:	0030      	movs	r0, r6
 800629e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80062a0:	89ab      	ldrh	r3, [r5, #12]
 80062a2:	2b01      	cmp	r3, #1
 80062a4:	d908      	bls.n	80062b8 <_fwalk_sglue+0x34>
 80062a6:	220e      	movs	r2, #14
 80062a8:	5eab      	ldrsh	r3, [r5, r2]
 80062aa:	3301      	adds	r3, #1
 80062ac:	d004      	beq.n	80062b8 <_fwalk_sglue+0x34>
 80062ae:	0029      	movs	r1, r5
 80062b0:	9800      	ldr	r0, [sp, #0]
 80062b2:	9b01      	ldr	r3, [sp, #4]
 80062b4:	4798      	blx	r3
 80062b6:	4306      	orrs	r6, r0
 80062b8:	3568      	adds	r5, #104	@ 0x68
 80062ba:	e7ea      	b.n	8006292 <_fwalk_sglue+0xe>

080062bc <siprintf>:
 80062bc:	b40e      	push	{r1, r2, r3}
 80062be:	b510      	push	{r4, lr}
 80062c0:	2400      	movs	r4, #0
 80062c2:	490c      	ldr	r1, [pc, #48]	@ (80062f4 <siprintf+0x38>)
 80062c4:	b09d      	sub	sp, #116	@ 0x74
 80062c6:	ab1f      	add	r3, sp, #124	@ 0x7c
 80062c8:	9002      	str	r0, [sp, #8]
 80062ca:	9006      	str	r0, [sp, #24]
 80062cc:	9107      	str	r1, [sp, #28]
 80062ce:	9104      	str	r1, [sp, #16]
 80062d0:	4809      	ldr	r0, [pc, #36]	@ (80062f8 <siprintf+0x3c>)
 80062d2:	490a      	ldr	r1, [pc, #40]	@ (80062fc <siprintf+0x40>)
 80062d4:	cb04      	ldmia	r3!, {r2}
 80062d6:	9105      	str	r1, [sp, #20]
 80062d8:	6800      	ldr	r0, [r0, #0]
 80062da:	a902      	add	r1, sp, #8
 80062dc:	9301      	str	r3, [sp, #4]
 80062de:	941b      	str	r4, [sp, #108]	@ 0x6c
 80062e0:	f002 fc3a 	bl	8008b58 <_svfiprintf_r>
 80062e4:	9b02      	ldr	r3, [sp, #8]
 80062e6:	701c      	strb	r4, [r3, #0]
 80062e8:	b01d      	add	sp, #116	@ 0x74
 80062ea:	bc10      	pop	{r4}
 80062ec:	bc08      	pop	{r3}
 80062ee:	b003      	add	sp, #12
 80062f0:	4718      	bx	r3
 80062f2:	46c0      	nop			@ (mov r8, r8)
 80062f4:	7fffffff 	.word	0x7fffffff
 80062f8:	20000020 	.word	0x20000020
 80062fc:	ffff0208 	.word	0xffff0208

08006300 <__sread>:
 8006300:	b570      	push	{r4, r5, r6, lr}
 8006302:	000c      	movs	r4, r1
 8006304:	250e      	movs	r5, #14
 8006306:	5f49      	ldrsh	r1, [r1, r5]
 8006308:	f000 f878 	bl	80063fc <_read_r>
 800630c:	2800      	cmp	r0, #0
 800630e:	db03      	blt.n	8006318 <__sread+0x18>
 8006310:	6d63      	ldr	r3, [r4, #84]	@ 0x54
 8006312:	181b      	adds	r3, r3, r0
 8006314:	6563      	str	r3, [r4, #84]	@ 0x54
 8006316:	bd70      	pop	{r4, r5, r6, pc}
 8006318:	89a3      	ldrh	r3, [r4, #12]
 800631a:	4a02      	ldr	r2, [pc, #8]	@ (8006324 <__sread+0x24>)
 800631c:	4013      	ands	r3, r2
 800631e:	81a3      	strh	r3, [r4, #12]
 8006320:	e7f9      	b.n	8006316 <__sread+0x16>
 8006322:	46c0      	nop			@ (mov r8, r8)
 8006324:	ffffefff 	.word	0xffffefff

08006328 <__swrite>:
 8006328:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800632a:	001f      	movs	r7, r3
 800632c:	898b      	ldrh	r3, [r1, #12]
 800632e:	0005      	movs	r5, r0
 8006330:	000c      	movs	r4, r1
 8006332:	0016      	movs	r6, r2
 8006334:	05db      	lsls	r3, r3, #23
 8006336:	d505      	bpl.n	8006344 <__swrite+0x1c>
 8006338:	230e      	movs	r3, #14
 800633a:	5ec9      	ldrsh	r1, [r1, r3]
 800633c:	2200      	movs	r2, #0
 800633e:	2302      	movs	r3, #2
 8006340:	f000 f848 	bl	80063d4 <_lseek_r>
 8006344:	89a3      	ldrh	r3, [r4, #12]
 8006346:	4a05      	ldr	r2, [pc, #20]	@ (800635c <__swrite+0x34>)
 8006348:	0028      	movs	r0, r5
 800634a:	4013      	ands	r3, r2
 800634c:	81a3      	strh	r3, [r4, #12]
 800634e:	0032      	movs	r2, r6
 8006350:	230e      	movs	r3, #14
 8006352:	5ee1      	ldrsh	r1, [r4, r3]
 8006354:	003b      	movs	r3, r7
 8006356:	f000 f865 	bl	8006424 <_write_r>
 800635a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800635c:	ffffefff 	.word	0xffffefff

08006360 <__sseek>:
 8006360:	b570      	push	{r4, r5, r6, lr}
 8006362:	000c      	movs	r4, r1
 8006364:	250e      	movs	r5, #14
 8006366:	5f49      	ldrsh	r1, [r1, r5]
 8006368:	f000 f834 	bl	80063d4 <_lseek_r>
 800636c:	89a3      	ldrh	r3, [r4, #12]
 800636e:	1c42      	adds	r2, r0, #1
 8006370:	d103      	bne.n	800637a <__sseek+0x1a>
 8006372:	4a05      	ldr	r2, [pc, #20]	@ (8006388 <__sseek+0x28>)
 8006374:	4013      	ands	r3, r2
 8006376:	81a3      	strh	r3, [r4, #12]
 8006378:	bd70      	pop	{r4, r5, r6, pc}
 800637a:	2280      	movs	r2, #128	@ 0x80
 800637c:	0152      	lsls	r2, r2, #5
 800637e:	4313      	orrs	r3, r2
 8006380:	81a3      	strh	r3, [r4, #12]
 8006382:	6560      	str	r0, [r4, #84]	@ 0x54
 8006384:	e7f8      	b.n	8006378 <__sseek+0x18>
 8006386:	46c0      	nop			@ (mov r8, r8)
 8006388:	ffffefff 	.word	0xffffefff

0800638c <__sclose>:
 800638c:	b510      	push	{r4, lr}
 800638e:	230e      	movs	r3, #14
 8006390:	5ec9      	ldrsh	r1, [r1, r3]
 8006392:	f000 f80d 	bl	80063b0 <_close_r>
 8006396:	bd10      	pop	{r4, pc}

08006398 <memset>:
 8006398:	0003      	movs	r3, r0
 800639a:	1882      	adds	r2, r0, r2
 800639c:	4293      	cmp	r3, r2
 800639e:	d100      	bne.n	80063a2 <memset+0xa>
 80063a0:	4770      	bx	lr
 80063a2:	7019      	strb	r1, [r3, #0]
 80063a4:	3301      	adds	r3, #1
 80063a6:	e7f9      	b.n	800639c <memset+0x4>

080063a8 <_localeconv_r>:
 80063a8:	4800      	ldr	r0, [pc, #0]	@ (80063ac <_localeconv_r+0x4>)
 80063aa:	4770      	bx	lr
 80063ac:	20000160 	.word	0x20000160

080063b0 <_close_r>:
 80063b0:	2300      	movs	r3, #0
 80063b2:	b570      	push	{r4, r5, r6, lr}
 80063b4:	4d06      	ldr	r5, [pc, #24]	@ (80063d0 <_close_r+0x20>)
 80063b6:	0004      	movs	r4, r0
 80063b8:	0008      	movs	r0, r1
 80063ba:	602b      	str	r3, [r5, #0]
 80063bc:	f7fc fe11 	bl	8002fe2 <_close>
 80063c0:	1c43      	adds	r3, r0, #1
 80063c2:	d103      	bne.n	80063cc <_close_r+0x1c>
 80063c4:	682b      	ldr	r3, [r5, #0]
 80063c6:	2b00      	cmp	r3, #0
 80063c8:	d000      	beq.n	80063cc <_close_r+0x1c>
 80063ca:	6023      	str	r3, [r4, #0]
 80063cc:	bd70      	pop	{r4, r5, r6, pc}
 80063ce:	46c0      	nop			@ (mov r8, r8)
 80063d0:	200003b0 	.word	0x200003b0

080063d4 <_lseek_r>:
 80063d4:	b570      	push	{r4, r5, r6, lr}
 80063d6:	0004      	movs	r4, r0
 80063d8:	0008      	movs	r0, r1
 80063da:	0011      	movs	r1, r2
 80063dc:	001a      	movs	r2, r3
 80063de:	2300      	movs	r3, #0
 80063e0:	4d05      	ldr	r5, [pc, #20]	@ (80063f8 <_lseek_r+0x24>)
 80063e2:	602b      	str	r3, [r5, #0]
 80063e4:	f7fc fe1e 	bl	8003024 <_lseek>
 80063e8:	1c43      	adds	r3, r0, #1
 80063ea:	d103      	bne.n	80063f4 <_lseek_r+0x20>
 80063ec:	682b      	ldr	r3, [r5, #0]
 80063ee:	2b00      	cmp	r3, #0
 80063f0:	d000      	beq.n	80063f4 <_lseek_r+0x20>
 80063f2:	6023      	str	r3, [r4, #0]
 80063f4:	bd70      	pop	{r4, r5, r6, pc}
 80063f6:	46c0      	nop			@ (mov r8, r8)
 80063f8:	200003b0 	.word	0x200003b0

080063fc <_read_r>:
 80063fc:	b570      	push	{r4, r5, r6, lr}
 80063fe:	0004      	movs	r4, r0
 8006400:	0008      	movs	r0, r1
 8006402:	0011      	movs	r1, r2
 8006404:	001a      	movs	r2, r3
 8006406:	2300      	movs	r3, #0
 8006408:	4d05      	ldr	r5, [pc, #20]	@ (8006420 <_read_r+0x24>)
 800640a:	602b      	str	r3, [r5, #0]
 800640c:	f7fc fdb0 	bl	8002f70 <_read>
 8006410:	1c43      	adds	r3, r0, #1
 8006412:	d103      	bne.n	800641c <_read_r+0x20>
 8006414:	682b      	ldr	r3, [r5, #0]
 8006416:	2b00      	cmp	r3, #0
 8006418:	d000      	beq.n	800641c <_read_r+0x20>
 800641a:	6023      	str	r3, [r4, #0]
 800641c:	bd70      	pop	{r4, r5, r6, pc}
 800641e:	46c0      	nop			@ (mov r8, r8)
 8006420:	200003b0 	.word	0x200003b0

08006424 <_write_r>:
 8006424:	b570      	push	{r4, r5, r6, lr}
 8006426:	0004      	movs	r4, r0
 8006428:	0008      	movs	r0, r1
 800642a:	0011      	movs	r1, r2
 800642c:	001a      	movs	r2, r3
 800642e:	2300      	movs	r3, #0
 8006430:	4d05      	ldr	r5, [pc, #20]	@ (8006448 <_write_r+0x24>)
 8006432:	602b      	str	r3, [r5, #0]
 8006434:	f7fc fdb9 	bl	8002faa <_write>
 8006438:	1c43      	adds	r3, r0, #1
 800643a:	d103      	bne.n	8006444 <_write_r+0x20>
 800643c:	682b      	ldr	r3, [r5, #0]
 800643e:	2b00      	cmp	r3, #0
 8006440:	d000      	beq.n	8006444 <_write_r+0x20>
 8006442:	6023      	str	r3, [r4, #0]
 8006444:	bd70      	pop	{r4, r5, r6, pc}
 8006446:	46c0      	nop			@ (mov r8, r8)
 8006448:	200003b0 	.word	0x200003b0

0800644c <__errno>:
 800644c:	4b01      	ldr	r3, [pc, #4]	@ (8006454 <__errno+0x8>)
 800644e:	6818      	ldr	r0, [r3, #0]
 8006450:	4770      	bx	lr
 8006452:	46c0      	nop			@ (mov r8, r8)
 8006454:	20000020 	.word	0x20000020

08006458 <__libc_init_array>:
 8006458:	b570      	push	{r4, r5, r6, lr}
 800645a:	2600      	movs	r6, #0
 800645c:	4c0c      	ldr	r4, [pc, #48]	@ (8006490 <__libc_init_array+0x38>)
 800645e:	4d0d      	ldr	r5, [pc, #52]	@ (8006494 <__libc_init_array+0x3c>)
 8006460:	1b64      	subs	r4, r4, r5
 8006462:	10a4      	asrs	r4, r4, #2
 8006464:	42a6      	cmp	r6, r4
 8006466:	d109      	bne.n	800647c <__libc_init_array+0x24>
 8006468:	2600      	movs	r6, #0
 800646a:	f003 fc3b 	bl	8009ce4 <_init>
 800646e:	4c0a      	ldr	r4, [pc, #40]	@ (8006498 <__libc_init_array+0x40>)
 8006470:	4d0a      	ldr	r5, [pc, #40]	@ (800649c <__libc_init_array+0x44>)
 8006472:	1b64      	subs	r4, r4, r5
 8006474:	10a4      	asrs	r4, r4, #2
 8006476:	42a6      	cmp	r6, r4
 8006478:	d105      	bne.n	8006486 <__libc_init_array+0x2e>
 800647a:	bd70      	pop	{r4, r5, r6, pc}
 800647c:	00b3      	lsls	r3, r6, #2
 800647e:	58eb      	ldr	r3, [r5, r3]
 8006480:	4798      	blx	r3
 8006482:	3601      	adds	r6, #1
 8006484:	e7ee      	b.n	8006464 <__libc_init_array+0xc>
 8006486:	00b3      	lsls	r3, r6, #2
 8006488:	58eb      	ldr	r3, [r5, r3]
 800648a:	4798      	blx	r3
 800648c:	3601      	adds	r6, #1
 800648e:	e7f2      	b.n	8006476 <__libc_init_array+0x1e>
 8006490:	0800a1ac 	.word	0x0800a1ac
 8006494:	0800a1ac 	.word	0x0800a1ac
 8006498:	0800a1b0 	.word	0x0800a1b0
 800649c:	0800a1ac 	.word	0x0800a1ac

080064a0 <__retarget_lock_init_recursive>:
 80064a0:	4770      	bx	lr

080064a2 <__retarget_lock_acquire_recursive>:
 80064a2:	4770      	bx	lr

080064a4 <__retarget_lock_release_recursive>:
 80064a4:	4770      	bx	lr

080064a6 <memchr>:
 80064a6:	b2c9      	uxtb	r1, r1
 80064a8:	1882      	adds	r2, r0, r2
 80064aa:	4290      	cmp	r0, r2
 80064ac:	d101      	bne.n	80064b2 <memchr+0xc>
 80064ae:	2000      	movs	r0, #0
 80064b0:	4770      	bx	lr
 80064b2:	7803      	ldrb	r3, [r0, #0]
 80064b4:	428b      	cmp	r3, r1
 80064b6:	d0fb      	beq.n	80064b0 <memchr+0xa>
 80064b8:	3001      	adds	r0, #1
 80064ba:	e7f6      	b.n	80064aa <memchr+0x4>

080064bc <nanf>:
 80064bc:	4800      	ldr	r0, [pc, #0]	@ (80064c0 <nanf+0x4>)
 80064be:	4770      	bx	lr
 80064c0:	7fc00000 	.word	0x7fc00000

080064c4 <quorem>:
 80064c4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80064c6:	6903      	ldr	r3, [r0, #16]
 80064c8:	690c      	ldr	r4, [r1, #16]
 80064ca:	b089      	sub	sp, #36	@ 0x24
 80064cc:	9003      	str	r0, [sp, #12]
 80064ce:	9106      	str	r1, [sp, #24]
 80064d0:	2000      	movs	r0, #0
 80064d2:	42a3      	cmp	r3, r4
 80064d4:	db63      	blt.n	800659e <quorem+0xda>
 80064d6:	000b      	movs	r3, r1
 80064d8:	3c01      	subs	r4, #1
 80064da:	3314      	adds	r3, #20
 80064dc:	00a5      	lsls	r5, r4, #2
 80064de:	9304      	str	r3, [sp, #16]
 80064e0:	195b      	adds	r3, r3, r5
 80064e2:	9305      	str	r3, [sp, #20]
 80064e4:	9b03      	ldr	r3, [sp, #12]
 80064e6:	3314      	adds	r3, #20
 80064e8:	9301      	str	r3, [sp, #4]
 80064ea:	195d      	adds	r5, r3, r5
 80064ec:	9b05      	ldr	r3, [sp, #20]
 80064ee:	682f      	ldr	r7, [r5, #0]
 80064f0:	681e      	ldr	r6, [r3, #0]
 80064f2:	0038      	movs	r0, r7
 80064f4:	3601      	adds	r6, #1
 80064f6:	0031      	movs	r1, r6
 80064f8:	f7f9 fe22 	bl	8000140 <__udivsi3>
 80064fc:	9002      	str	r0, [sp, #8]
 80064fe:	42b7      	cmp	r7, r6
 8006500:	d327      	bcc.n	8006552 <quorem+0x8e>
 8006502:	9b04      	ldr	r3, [sp, #16]
 8006504:	2700      	movs	r7, #0
 8006506:	469c      	mov	ip, r3
 8006508:	9e01      	ldr	r6, [sp, #4]
 800650a:	9707      	str	r7, [sp, #28]
 800650c:	4662      	mov	r2, ip
 800650e:	ca08      	ldmia	r2!, {r3}
 8006510:	6830      	ldr	r0, [r6, #0]
 8006512:	4694      	mov	ip, r2
 8006514:	9a02      	ldr	r2, [sp, #8]
 8006516:	b299      	uxth	r1, r3
 8006518:	4351      	muls	r1, r2
 800651a:	0c1b      	lsrs	r3, r3, #16
 800651c:	4353      	muls	r3, r2
 800651e:	19c9      	adds	r1, r1, r7
 8006520:	0c0a      	lsrs	r2, r1, #16
 8006522:	189b      	adds	r3, r3, r2
 8006524:	b289      	uxth	r1, r1
 8006526:	b282      	uxth	r2, r0
 8006528:	1a52      	subs	r2, r2, r1
 800652a:	9907      	ldr	r1, [sp, #28]
 800652c:	0c1f      	lsrs	r7, r3, #16
 800652e:	1852      	adds	r2, r2, r1
 8006530:	0c00      	lsrs	r0, r0, #16
 8006532:	b29b      	uxth	r3, r3
 8006534:	1411      	asrs	r1, r2, #16
 8006536:	1ac3      	subs	r3, r0, r3
 8006538:	185b      	adds	r3, r3, r1
 800653a:	1419      	asrs	r1, r3, #16
 800653c:	b292      	uxth	r2, r2
 800653e:	041b      	lsls	r3, r3, #16
 8006540:	431a      	orrs	r2, r3
 8006542:	9b05      	ldr	r3, [sp, #20]
 8006544:	9107      	str	r1, [sp, #28]
 8006546:	c604      	stmia	r6!, {r2}
 8006548:	4563      	cmp	r3, ip
 800654a:	d2df      	bcs.n	800650c <quorem+0x48>
 800654c:	682b      	ldr	r3, [r5, #0]
 800654e:	2b00      	cmp	r3, #0
 8006550:	d02b      	beq.n	80065aa <quorem+0xe6>
 8006552:	9906      	ldr	r1, [sp, #24]
 8006554:	9803      	ldr	r0, [sp, #12]
 8006556:	f001 fa03 	bl	8007960 <__mcmp>
 800655a:	2800      	cmp	r0, #0
 800655c:	db1e      	blt.n	800659c <quorem+0xd8>
 800655e:	2600      	movs	r6, #0
 8006560:	9d01      	ldr	r5, [sp, #4]
 8006562:	9904      	ldr	r1, [sp, #16]
 8006564:	c901      	ldmia	r1!, {r0}
 8006566:	682b      	ldr	r3, [r5, #0]
 8006568:	b287      	uxth	r7, r0
 800656a:	b29a      	uxth	r2, r3
 800656c:	1bd2      	subs	r2, r2, r7
 800656e:	1992      	adds	r2, r2, r6
 8006570:	0c00      	lsrs	r0, r0, #16
 8006572:	0c1b      	lsrs	r3, r3, #16
 8006574:	1a1b      	subs	r3, r3, r0
 8006576:	1410      	asrs	r0, r2, #16
 8006578:	181b      	adds	r3, r3, r0
 800657a:	141e      	asrs	r6, r3, #16
 800657c:	b292      	uxth	r2, r2
 800657e:	041b      	lsls	r3, r3, #16
 8006580:	431a      	orrs	r2, r3
 8006582:	9b05      	ldr	r3, [sp, #20]
 8006584:	c504      	stmia	r5!, {r2}
 8006586:	428b      	cmp	r3, r1
 8006588:	d2ec      	bcs.n	8006564 <quorem+0xa0>
 800658a:	9a01      	ldr	r2, [sp, #4]
 800658c:	00a3      	lsls	r3, r4, #2
 800658e:	18d3      	adds	r3, r2, r3
 8006590:	681a      	ldr	r2, [r3, #0]
 8006592:	2a00      	cmp	r2, #0
 8006594:	d014      	beq.n	80065c0 <quorem+0xfc>
 8006596:	9b02      	ldr	r3, [sp, #8]
 8006598:	3301      	adds	r3, #1
 800659a:	9302      	str	r3, [sp, #8]
 800659c:	9802      	ldr	r0, [sp, #8]
 800659e:	b009      	add	sp, #36	@ 0x24
 80065a0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80065a2:	682b      	ldr	r3, [r5, #0]
 80065a4:	2b00      	cmp	r3, #0
 80065a6:	d104      	bne.n	80065b2 <quorem+0xee>
 80065a8:	3c01      	subs	r4, #1
 80065aa:	9b01      	ldr	r3, [sp, #4]
 80065ac:	3d04      	subs	r5, #4
 80065ae:	42ab      	cmp	r3, r5
 80065b0:	d3f7      	bcc.n	80065a2 <quorem+0xde>
 80065b2:	9b03      	ldr	r3, [sp, #12]
 80065b4:	611c      	str	r4, [r3, #16]
 80065b6:	e7cc      	b.n	8006552 <quorem+0x8e>
 80065b8:	681a      	ldr	r2, [r3, #0]
 80065ba:	2a00      	cmp	r2, #0
 80065bc:	d104      	bne.n	80065c8 <quorem+0x104>
 80065be:	3c01      	subs	r4, #1
 80065c0:	9a01      	ldr	r2, [sp, #4]
 80065c2:	3b04      	subs	r3, #4
 80065c4:	429a      	cmp	r2, r3
 80065c6:	d3f7      	bcc.n	80065b8 <quorem+0xf4>
 80065c8:	9b03      	ldr	r3, [sp, #12]
 80065ca:	611c      	str	r4, [r3, #16]
 80065cc:	e7e3      	b.n	8006596 <quorem+0xd2>
	...

080065d0 <_dtoa_r>:
 80065d0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80065d2:	0014      	movs	r4, r2
 80065d4:	001d      	movs	r5, r3
 80065d6:	69c6      	ldr	r6, [r0, #28]
 80065d8:	b09d      	sub	sp, #116	@ 0x74
 80065da:	940a      	str	r4, [sp, #40]	@ 0x28
 80065dc:	950b      	str	r5, [sp, #44]	@ 0x2c
 80065de:	9f25      	ldr	r7, [sp, #148]	@ 0x94
 80065e0:	9003      	str	r0, [sp, #12]
 80065e2:	2e00      	cmp	r6, #0
 80065e4:	d10f      	bne.n	8006606 <_dtoa_r+0x36>
 80065e6:	2010      	movs	r0, #16
 80065e8:	f000 fe2c 	bl	8007244 <malloc>
 80065ec:	9b03      	ldr	r3, [sp, #12]
 80065ee:	1e02      	subs	r2, r0, #0
 80065f0:	61d8      	str	r0, [r3, #28]
 80065f2:	d104      	bne.n	80065fe <_dtoa_r+0x2e>
 80065f4:	21ef      	movs	r1, #239	@ 0xef
 80065f6:	4bc7      	ldr	r3, [pc, #796]	@ (8006914 <_dtoa_r+0x344>)
 80065f8:	48c7      	ldr	r0, [pc, #796]	@ (8006918 <_dtoa_r+0x348>)
 80065fa:	f002 fca1 	bl	8008f40 <__assert_func>
 80065fe:	6046      	str	r6, [r0, #4]
 8006600:	6086      	str	r6, [r0, #8]
 8006602:	6006      	str	r6, [r0, #0]
 8006604:	60c6      	str	r6, [r0, #12]
 8006606:	9b03      	ldr	r3, [sp, #12]
 8006608:	69db      	ldr	r3, [r3, #28]
 800660a:	6819      	ldr	r1, [r3, #0]
 800660c:	2900      	cmp	r1, #0
 800660e:	d00b      	beq.n	8006628 <_dtoa_r+0x58>
 8006610:	685a      	ldr	r2, [r3, #4]
 8006612:	2301      	movs	r3, #1
 8006614:	4093      	lsls	r3, r2
 8006616:	604a      	str	r2, [r1, #4]
 8006618:	608b      	str	r3, [r1, #8]
 800661a:	9803      	ldr	r0, [sp, #12]
 800661c:	f000 ff12 	bl	8007444 <_Bfree>
 8006620:	2200      	movs	r2, #0
 8006622:	9b03      	ldr	r3, [sp, #12]
 8006624:	69db      	ldr	r3, [r3, #28]
 8006626:	601a      	str	r2, [r3, #0]
 8006628:	2d00      	cmp	r5, #0
 800662a:	da1e      	bge.n	800666a <_dtoa_r+0x9a>
 800662c:	2301      	movs	r3, #1
 800662e:	603b      	str	r3, [r7, #0]
 8006630:	006b      	lsls	r3, r5, #1
 8006632:	085b      	lsrs	r3, r3, #1
 8006634:	930b      	str	r3, [sp, #44]	@ 0x2c
 8006636:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8006638:	4bb8      	ldr	r3, [pc, #736]	@ (800691c <_dtoa_r+0x34c>)
 800663a:	4ab8      	ldr	r2, [pc, #736]	@ (800691c <_dtoa_r+0x34c>)
 800663c:	403b      	ands	r3, r7
 800663e:	4293      	cmp	r3, r2
 8006640:	d116      	bne.n	8006670 <_dtoa_r+0xa0>
 8006642:	4bb7      	ldr	r3, [pc, #732]	@ (8006920 <_dtoa_r+0x350>)
 8006644:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8006646:	6013      	str	r3, [r2, #0]
 8006648:	033b      	lsls	r3, r7, #12
 800664a:	0b1b      	lsrs	r3, r3, #12
 800664c:	4323      	orrs	r3, r4
 800664e:	d101      	bne.n	8006654 <_dtoa_r+0x84>
 8006650:	f000 fd80 	bl	8007154 <_dtoa_r+0xb84>
 8006654:	4bb3      	ldr	r3, [pc, #716]	@ (8006924 <_dtoa_r+0x354>)
 8006656:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8006658:	9308      	str	r3, [sp, #32]
 800665a:	2a00      	cmp	r2, #0
 800665c:	d002      	beq.n	8006664 <_dtoa_r+0x94>
 800665e:	4bb2      	ldr	r3, [pc, #712]	@ (8006928 <_dtoa_r+0x358>)
 8006660:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8006662:	6013      	str	r3, [r2, #0]
 8006664:	9808      	ldr	r0, [sp, #32]
 8006666:	b01d      	add	sp, #116	@ 0x74
 8006668:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800666a:	2300      	movs	r3, #0
 800666c:	603b      	str	r3, [r7, #0]
 800666e:	e7e2      	b.n	8006636 <_dtoa_r+0x66>
 8006670:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8006672:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006674:	9212      	str	r2, [sp, #72]	@ 0x48
 8006676:	9313      	str	r3, [sp, #76]	@ 0x4c
 8006678:	9812      	ldr	r0, [sp, #72]	@ 0x48
 800667a:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 800667c:	2200      	movs	r2, #0
 800667e:	2300      	movs	r3, #0
 8006680:	f7f9 fee4 	bl	800044c <__aeabi_dcmpeq>
 8006684:	1e06      	subs	r6, r0, #0
 8006686:	d00b      	beq.n	80066a0 <_dtoa_r+0xd0>
 8006688:	2301      	movs	r3, #1
 800668a:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 800668c:	6013      	str	r3, [r2, #0]
 800668e:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8006690:	2b00      	cmp	r3, #0
 8006692:	d002      	beq.n	800669a <_dtoa_r+0xca>
 8006694:	4ba5      	ldr	r3, [pc, #660]	@ (800692c <_dtoa_r+0x35c>)
 8006696:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8006698:	6013      	str	r3, [r2, #0]
 800669a:	4ba5      	ldr	r3, [pc, #660]	@ (8006930 <_dtoa_r+0x360>)
 800669c:	9308      	str	r3, [sp, #32]
 800669e:	e7e1      	b.n	8006664 <_dtoa_r+0x94>
 80066a0:	ab1a      	add	r3, sp, #104	@ 0x68
 80066a2:	9301      	str	r3, [sp, #4]
 80066a4:	ab1b      	add	r3, sp, #108	@ 0x6c
 80066a6:	9300      	str	r3, [sp, #0]
 80066a8:	9803      	ldr	r0, [sp, #12]
 80066aa:	9a12      	ldr	r2, [sp, #72]	@ 0x48
 80066ac:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80066ae:	f001 fa79 	bl	8007ba4 <__d2b>
 80066b2:	007a      	lsls	r2, r7, #1
 80066b4:	9005      	str	r0, [sp, #20]
 80066b6:	0d52      	lsrs	r2, r2, #21
 80066b8:	d100      	bne.n	80066bc <_dtoa_r+0xec>
 80066ba:	e07b      	b.n	80067b4 <_dtoa_r+0x1e4>
 80066bc:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80066be:	9618      	str	r6, [sp, #96]	@ 0x60
 80066c0:	0319      	lsls	r1, r3, #12
 80066c2:	4b9c      	ldr	r3, [pc, #624]	@ (8006934 <_dtoa_r+0x364>)
 80066c4:	0b09      	lsrs	r1, r1, #12
 80066c6:	430b      	orrs	r3, r1
 80066c8:	499b      	ldr	r1, [pc, #620]	@ (8006938 <_dtoa_r+0x368>)
 80066ca:	1857      	adds	r7, r2, r1
 80066cc:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80066ce:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80066d0:	0019      	movs	r1, r3
 80066d2:	2200      	movs	r2, #0
 80066d4:	4b99      	ldr	r3, [pc, #612]	@ (800693c <_dtoa_r+0x36c>)
 80066d6:	f7fb fa3b 	bl	8001b50 <__aeabi_dsub>
 80066da:	4a99      	ldr	r2, [pc, #612]	@ (8006940 <_dtoa_r+0x370>)
 80066dc:	4b99      	ldr	r3, [pc, #612]	@ (8006944 <_dtoa_r+0x374>)
 80066de:	f7fa ff51 	bl	8001584 <__aeabi_dmul>
 80066e2:	4a99      	ldr	r2, [pc, #612]	@ (8006948 <_dtoa_r+0x378>)
 80066e4:	4b99      	ldr	r3, [pc, #612]	@ (800694c <_dtoa_r+0x37c>)
 80066e6:	f7f9 ff4d 	bl	8000584 <__aeabi_dadd>
 80066ea:	0004      	movs	r4, r0
 80066ec:	0038      	movs	r0, r7
 80066ee:	000d      	movs	r5, r1
 80066f0:	f7fb fe96 	bl	8002420 <__aeabi_i2d>
 80066f4:	4a96      	ldr	r2, [pc, #600]	@ (8006950 <_dtoa_r+0x380>)
 80066f6:	4b97      	ldr	r3, [pc, #604]	@ (8006954 <_dtoa_r+0x384>)
 80066f8:	f7fa ff44 	bl	8001584 <__aeabi_dmul>
 80066fc:	0002      	movs	r2, r0
 80066fe:	000b      	movs	r3, r1
 8006700:	0020      	movs	r0, r4
 8006702:	0029      	movs	r1, r5
 8006704:	f7f9 ff3e 	bl	8000584 <__aeabi_dadd>
 8006708:	0004      	movs	r4, r0
 800670a:	000d      	movs	r5, r1
 800670c:	f7fb fe4c 	bl	80023a8 <__aeabi_d2iz>
 8006710:	2200      	movs	r2, #0
 8006712:	9004      	str	r0, [sp, #16]
 8006714:	2300      	movs	r3, #0
 8006716:	0020      	movs	r0, r4
 8006718:	0029      	movs	r1, r5
 800671a:	f7f9 fe9d 	bl	8000458 <__aeabi_dcmplt>
 800671e:	2800      	cmp	r0, #0
 8006720:	d00b      	beq.n	800673a <_dtoa_r+0x16a>
 8006722:	9804      	ldr	r0, [sp, #16]
 8006724:	f7fb fe7c 	bl	8002420 <__aeabi_i2d>
 8006728:	002b      	movs	r3, r5
 800672a:	0022      	movs	r2, r4
 800672c:	f7f9 fe8e 	bl	800044c <__aeabi_dcmpeq>
 8006730:	4243      	negs	r3, r0
 8006732:	4158      	adcs	r0, r3
 8006734:	9b04      	ldr	r3, [sp, #16]
 8006736:	1a1b      	subs	r3, r3, r0
 8006738:	9304      	str	r3, [sp, #16]
 800673a:	2301      	movs	r3, #1
 800673c:	9315      	str	r3, [sp, #84]	@ 0x54
 800673e:	9b04      	ldr	r3, [sp, #16]
 8006740:	2b16      	cmp	r3, #22
 8006742:	d810      	bhi.n	8006766 <_dtoa_r+0x196>
 8006744:	9812      	ldr	r0, [sp, #72]	@ 0x48
 8006746:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 8006748:	9a04      	ldr	r2, [sp, #16]
 800674a:	4b83      	ldr	r3, [pc, #524]	@ (8006958 <_dtoa_r+0x388>)
 800674c:	00d2      	lsls	r2, r2, #3
 800674e:	189b      	adds	r3, r3, r2
 8006750:	681a      	ldr	r2, [r3, #0]
 8006752:	685b      	ldr	r3, [r3, #4]
 8006754:	f7f9 fe80 	bl	8000458 <__aeabi_dcmplt>
 8006758:	2800      	cmp	r0, #0
 800675a:	d047      	beq.n	80067ec <_dtoa_r+0x21c>
 800675c:	9b04      	ldr	r3, [sp, #16]
 800675e:	3b01      	subs	r3, #1
 8006760:	9304      	str	r3, [sp, #16]
 8006762:	2300      	movs	r3, #0
 8006764:	9315      	str	r3, [sp, #84]	@ 0x54
 8006766:	2200      	movs	r2, #0
 8006768:	9b1a      	ldr	r3, [sp, #104]	@ 0x68
 800676a:	9206      	str	r2, [sp, #24]
 800676c:	1bdb      	subs	r3, r3, r7
 800676e:	1e5a      	subs	r2, r3, #1
 8006770:	d53e      	bpl.n	80067f0 <_dtoa_r+0x220>
 8006772:	2201      	movs	r2, #1
 8006774:	1ad3      	subs	r3, r2, r3
 8006776:	9306      	str	r3, [sp, #24]
 8006778:	2300      	movs	r3, #0
 800677a:	930d      	str	r3, [sp, #52]	@ 0x34
 800677c:	9b04      	ldr	r3, [sp, #16]
 800677e:	2b00      	cmp	r3, #0
 8006780:	db38      	blt.n	80067f4 <_dtoa_r+0x224>
 8006782:	9a04      	ldr	r2, [sp, #16]
 8006784:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8006786:	4694      	mov	ip, r2
 8006788:	4463      	add	r3, ip
 800678a:	930d      	str	r3, [sp, #52]	@ 0x34
 800678c:	2300      	movs	r3, #0
 800678e:	9214      	str	r2, [sp, #80]	@ 0x50
 8006790:	930f      	str	r3, [sp, #60]	@ 0x3c
 8006792:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8006794:	2401      	movs	r4, #1
 8006796:	2b09      	cmp	r3, #9
 8006798:	d862      	bhi.n	8006860 <_dtoa_r+0x290>
 800679a:	2b05      	cmp	r3, #5
 800679c:	dd02      	ble.n	80067a4 <_dtoa_r+0x1d4>
 800679e:	2400      	movs	r4, #0
 80067a0:	3b04      	subs	r3, #4
 80067a2:	9322      	str	r3, [sp, #136]	@ 0x88
 80067a4:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 80067a6:	1e98      	subs	r0, r3, #2
 80067a8:	2803      	cmp	r0, #3
 80067aa:	d863      	bhi.n	8006874 <_dtoa_r+0x2a4>
 80067ac:	f7f9 fcb4 	bl	8000118 <__gnu_thumb1_case_uqi>
 80067b0:	2b385654 	.word	0x2b385654
 80067b4:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 80067b6:	9e1a      	ldr	r6, [sp, #104]	@ 0x68
 80067b8:	18f6      	adds	r6, r6, r3
 80067ba:	4b68      	ldr	r3, [pc, #416]	@ (800695c <_dtoa_r+0x38c>)
 80067bc:	18f2      	adds	r2, r6, r3
 80067be:	2a20      	cmp	r2, #32
 80067c0:	dd0f      	ble.n	80067e2 <_dtoa_r+0x212>
 80067c2:	2340      	movs	r3, #64	@ 0x40
 80067c4:	1a9b      	subs	r3, r3, r2
 80067c6:	409f      	lsls	r7, r3
 80067c8:	4b65      	ldr	r3, [pc, #404]	@ (8006960 <_dtoa_r+0x390>)
 80067ca:	0038      	movs	r0, r7
 80067cc:	18f3      	adds	r3, r6, r3
 80067ce:	40dc      	lsrs	r4, r3
 80067d0:	4320      	orrs	r0, r4
 80067d2:	f7fb fe53 	bl	800247c <__aeabi_ui2d>
 80067d6:	2201      	movs	r2, #1
 80067d8:	4b62      	ldr	r3, [pc, #392]	@ (8006964 <_dtoa_r+0x394>)
 80067da:	1e77      	subs	r7, r6, #1
 80067dc:	18cb      	adds	r3, r1, r3
 80067de:	9218      	str	r2, [sp, #96]	@ 0x60
 80067e0:	e776      	b.n	80066d0 <_dtoa_r+0x100>
 80067e2:	2320      	movs	r3, #32
 80067e4:	0020      	movs	r0, r4
 80067e6:	1a9b      	subs	r3, r3, r2
 80067e8:	4098      	lsls	r0, r3
 80067ea:	e7f2      	b.n	80067d2 <_dtoa_r+0x202>
 80067ec:	9015      	str	r0, [sp, #84]	@ 0x54
 80067ee:	e7ba      	b.n	8006766 <_dtoa_r+0x196>
 80067f0:	920d      	str	r2, [sp, #52]	@ 0x34
 80067f2:	e7c3      	b.n	800677c <_dtoa_r+0x1ac>
 80067f4:	9b06      	ldr	r3, [sp, #24]
 80067f6:	9a04      	ldr	r2, [sp, #16]
 80067f8:	1a9b      	subs	r3, r3, r2
 80067fa:	9306      	str	r3, [sp, #24]
 80067fc:	4253      	negs	r3, r2
 80067fe:	930f      	str	r3, [sp, #60]	@ 0x3c
 8006800:	2300      	movs	r3, #0
 8006802:	9314      	str	r3, [sp, #80]	@ 0x50
 8006804:	e7c5      	b.n	8006792 <_dtoa_r+0x1c2>
 8006806:	2301      	movs	r3, #1
 8006808:	9a23      	ldr	r2, [sp, #140]	@ 0x8c
 800680a:	9310      	str	r3, [sp, #64]	@ 0x40
 800680c:	4694      	mov	ip, r2
 800680e:	9b04      	ldr	r3, [sp, #16]
 8006810:	4463      	add	r3, ip
 8006812:	930e      	str	r3, [sp, #56]	@ 0x38
 8006814:	3301      	adds	r3, #1
 8006816:	9309      	str	r3, [sp, #36]	@ 0x24
 8006818:	2b00      	cmp	r3, #0
 800681a:	dc08      	bgt.n	800682e <_dtoa_r+0x25e>
 800681c:	2301      	movs	r3, #1
 800681e:	e006      	b.n	800682e <_dtoa_r+0x25e>
 8006820:	2301      	movs	r3, #1
 8006822:	9310      	str	r3, [sp, #64]	@ 0x40
 8006824:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8006826:	2b00      	cmp	r3, #0
 8006828:	dd28      	ble.n	800687c <_dtoa_r+0x2ac>
 800682a:	930e      	str	r3, [sp, #56]	@ 0x38
 800682c:	9309      	str	r3, [sp, #36]	@ 0x24
 800682e:	9a03      	ldr	r2, [sp, #12]
 8006830:	2100      	movs	r1, #0
 8006832:	69d0      	ldr	r0, [r2, #28]
 8006834:	2204      	movs	r2, #4
 8006836:	0015      	movs	r5, r2
 8006838:	3514      	adds	r5, #20
 800683a:	429d      	cmp	r5, r3
 800683c:	d923      	bls.n	8006886 <_dtoa_r+0x2b6>
 800683e:	6041      	str	r1, [r0, #4]
 8006840:	9803      	ldr	r0, [sp, #12]
 8006842:	f000 fdbb 	bl	80073bc <_Balloc>
 8006846:	9008      	str	r0, [sp, #32]
 8006848:	2800      	cmp	r0, #0
 800684a:	d11f      	bne.n	800688c <_dtoa_r+0x2bc>
 800684c:	21b0      	movs	r1, #176	@ 0xb0
 800684e:	4b46      	ldr	r3, [pc, #280]	@ (8006968 <_dtoa_r+0x398>)
 8006850:	4831      	ldr	r0, [pc, #196]	@ (8006918 <_dtoa_r+0x348>)
 8006852:	9a08      	ldr	r2, [sp, #32]
 8006854:	31ff      	adds	r1, #255	@ 0xff
 8006856:	e6d0      	b.n	80065fa <_dtoa_r+0x2a>
 8006858:	2300      	movs	r3, #0
 800685a:	e7e2      	b.n	8006822 <_dtoa_r+0x252>
 800685c:	2300      	movs	r3, #0
 800685e:	e7d3      	b.n	8006808 <_dtoa_r+0x238>
 8006860:	2300      	movs	r3, #0
 8006862:	9410      	str	r4, [sp, #64]	@ 0x40
 8006864:	9322      	str	r3, [sp, #136]	@ 0x88
 8006866:	3b01      	subs	r3, #1
 8006868:	2200      	movs	r2, #0
 800686a:	930e      	str	r3, [sp, #56]	@ 0x38
 800686c:	9309      	str	r3, [sp, #36]	@ 0x24
 800686e:	3313      	adds	r3, #19
 8006870:	9223      	str	r2, [sp, #140]	@ 0x8c
 8006872:	e7dc      	b.n	800682e <_dtoa_r+0x25e>
 8006874:	2301      	movs	r3, #1
 8006876:	9310      	str	r3, [sp, #64]	@ 0x40
 8006878:	3b02      	subs	r3, #2
 800687a:	e7f5      	b.n	8006868 <_dtoa_r+0x298>
 800687c:	2301      	movs	r3, #1
 800687e:	001a      	movs	r2, r3
 8006880:	930e      	str	r3, [sp, #56]	@ 0x38
 8006882:	9309      	str	r3, [sp, #36]	@ 0x24
 8006884:	e7f4      	b.n	8006870 <_dtoa_r+0x2a0>
 8006886:	3101      	adds	r1, #1
 8006888:	0052      	lsls	r2, r2, #1
 800688a:	e7d4      	b.n	8006836 <_dtoa_r+0x266>
 800688c:	9b03      	ldr	r3, [sp, #12]
 800688e:	9a08      	ldr	r2, [sp, #32]
 8006890:	69db      	ldr	r3, [r3, #28]
 8006892:	601a      	str	r2, [r3, #0]
 8006894:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006896:	2b0e      	cmp	r3, #14
 8006898:	d900      	bls.n	800689c <_dtoa_r+0x2cc>
 800689a:	e0d6      	b.n	8006a4a <_dtoa_r+0x47a>
 800689c:	2c00      	cmp	r4, #0
 800689e:	d100      	bne.n	80068a2 <_dtoa_r+0x2d2>
 80068a0:	e0d3      	b.n	8006a4a <_dtoa_r+0x47a>
 80068a2:	9b04      	ldr	r3, [sp, #16]
 80068a4:	2b00      	cmp	r3, #0
 80068a6:	dd63      	ble.n	8006970 <_dtoa_r+0x3a0>
 80068a8:	210f      	movs	r1, #15
 80068aa:	9a04      	ldr	r2, [sp, #16]
 80068ac:	4b2a      	ldr	r3, [pc, #168]	@ (8006958 <_dtoa_r+0x388>)
 80068ae:	400a      	ands	r2, r1
 80068b0:	00d2      	lsls	r2, r2, #3
 80068b2:	189b      	adds	r3, r3, r2
 80068b4:	681e      	ldr	r6, [r3, #0]
 80068b6:	685f      	ldr	r7, [r3, #4]
 80068b8:	9b04      	ldr	r3, [sp, #16]
 80068ba:	2402      	movs	r4, #2
 80068bc:	111d      	asrs	r5, r3, #4
 80068be:	05db      	lsls	r3, r3, #23
 80068c0:	d50a      	bpl.n	80068d8 <_dtoa_r+0x308>
 80068c2:	4b2a      	ldr	r3, [pc, #168]	@ (800696c <_dtoa_r+0x39c>)
 80068c4:	400d      	ands	r5, r1
 80068c6:	6a1a      	ldr	r2, [r3, #32]
 80068c8:	6a5b      	ldr	r3, [r3, #36]	@ 0x24
 80068ca:	9812      	ldr	r0, [sp, #72]	@ 0x48
 80068cc:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80068ce:	f7fa fa1f 	bl	8000d10 <__aeabi_ddiv>
 80068d2:	900a      	str	r0, [sp, #40]	@ 0x28
 80068d4:	910b      	str	r1, [sp, #44]	@ 0x2c
 80068d6:	3401      	adds	r4, #1
 80068d8:	4b24      	ldr	r3, [pc, #144]	@ (800696c <_dtoa_r+0x39c>)
 80068da:	930c      	str	r3, [sp, #48]	@ 0x30
 80068dc:	2d00      	cmp	r5, #0
 80068de:	d108      	bne.n	80068f2 <_dtoa_r+0x322>
 80068e0:	980a      	ldr	r0, [sp, #40]	@ 0x28
 80068e2:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 80068e4:	0032      	movs	r2, r6
 80068e6:	003b      	movs	r3, r7
 80068e8:	f7fa fa12 	bl	8000d10 <__aeabi_ddiv>
 80068ec:	900a      	str	r0, [sp, #40]	@ 0x28
 80068ee:	910b      	str	r1, [sp, #44]	@ 0x2c
 80068f0:	e059      	b.n	80069a6 <_dtoa_r+0x3d6>
 80068f2:	2301      	movs	r3, #1
 80068f4:	421d      	tst	r5, r3
 80068f6:	d009      	beq.n	800690c <_dtoa_r+0x33c>
 80068f8:	18e4      	adds	r4, r4, r3
 80068fa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80068fc:	0030      	movs	r0, r6
 80068fe:	681a      	ldr	r2, [r3, #0]
 8006900:	685b      	ldr	r3, [r3, #4]
 8006902:	0039      	movs	r1, r7
 8006904:	f7fa fe3e 	bl	8001584 <__aeabi_dmul>
 8006908:	0006      	movs	r6, r0
 800690a:	000f      	movs	r7, r1
 800690c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800690e:	106d      	asrs	r5, r5, #1
 8006910:	3308      	adds	r3, #8
 8006912:	e7e2      	b.n	80068da <_dtoa_r+0x30a>
 8006914:	08009dcb 	.word	0x08009dcb
 8006918:	08009de2 	.word	0x08009de2
 800691c:	7ff00000 	.word	0x7ff00000
 8006920:	0000270f 	.word	0x0000270f
 8006924:	08009dc7 	.word	0x08009dc7
 8006928:	08009dca 	.word	0x08009dca
 800692c:	08009d96 	.word	0x08009d96
 8006930:	08009d95 	.word	0x08009d95
 8006934:	3ff00000 	.word	0x3ff00000
 8006938:	fffffc01 	.word	0xfffffc01
 800693c:	3ff80000 	.word	0x3ff80000
 8006940:	636f4361 	.word	0x636f4361
 8006944:	3fd287a7 	.word	0x3fd287a7
 8006948:	8b60c8b3 	.word	0x8b60c8b3
 800694c:	3fc68a28 	.word	0x3fc68a28
 8006950:	509f79fb 	.word	0x509f79fb
 8006954:	3fd34413 	.word	0x3fd34413
 8006958:	08009f90 	.word	0x08009f90
 800695c:	00000432 	.word	0x00000432
 8006960:	00000412 	.word	0x00000412
 8006964:	fe100000 	.word	0xfe100000
 8006968:	08009e3a 	.word	0x08009e3a
 800696c:	08009f68 	.word	0x08009f68
 8006970:	9b04      	ldr	r3, [sp, #16]
 8006972:	2402      	movs	r4, #2
 8006974:	2b00      	cmp	r3, #0
 8006976:	d016      	beq.n	80069a6 <_dtoa_r+0x3d6>
 8006978:	9812      	ldr	r0, [sp, #72]	@ 0x48
 800697a:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 800697c:	220f      	movs	r2, #15
 800697e:	425d      	negs	r5, r3
 8006980:	402a      	ands	r2, r5
 8006982:	4bd5      	ldr	r3, [pc, #852]	@ (8006cd8 <_dtoa_r+0x708>)
 8006984:	00d2      	lsls	r2, r2, #3
 8006986:	189b      	adds	r3, r3, r2
 8006988:	681a      	ldr	r2, [r3, #0]
 800698a:	685b      	ldr	r3, [r3, #4]
 800698c:	f7fa fdfa 	bl	8001584 <__aeabi_dmul>
 8006990:	2701      	movs	r7, #1
 8006992:	2300      	movs	r3, #0
 8006994:	900a      	str	r0, [sp, #40]	@ 0x28
 8006996:	910b      	str	r1, [sp, #44]	@ 0x2c
 8006998:	4ed0      	ldr	r6, [pc, #832]	@ (8006cdc <_dtoa_r+0x70c>)
 800699a:	112d      	asrs	r5, r5, #4
 800699c:	2d00      	cmp	r5, #0
 800699e:	d000      	beq.n	80069a2 <_dtoa_r+0x3d2>
 80069a0:	e095      	b.n	8006ace <_dtoa_r+0x4fe>
 80069a2:	2b00      	cmp	r3, #0
 80069a4:	d1a2      	bne.n	80068ec <_dtoa_r+0x31c>
 80069a6:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 80069a8:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 80069aa:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80069ac:	2b00      	cmp	r3, #0
 80069ae:	d100      	bne.n	80069b2 <_dtoa_r+0x3e2>
 80069b0:	e098      	b.n	8006ae4 <_dtoa_r+0x514>
 80069b2:	2200      	movs	r2, #0
 80069b4:	0030      	movs	r0, r6
 80069b6:	0039      	movs	r1, r7
 80069b8:	4bc9      	ldr	r3, [pc, #804]	@ (8006ce0 <_dtoa_r+0x710>)
 80069ba:	f7f9 fd4d 	bl	8000458 <__aeabi_dcmplt>
 80069be:	2800      	cmp	r0, #0
 80069c0:	d100      	bne.n	80069c4 <_dtoa_r+0x3f4>
 80069c2:	e08f      	b.n	8006ae4 <_dtoa_r+0x514>
 80069c4:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80069c6:	2b00      	cmp	r3, #0
 80069c8:	d100      	bne.n	80069cc <_dtoa_r+0x3fc>
 80069ca:	e08b      	b.n	8006ae4 <_dtoa_r+0x514>
 80069cc:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80069ce:	2b00      	cmp	r3, #0
 80069d0:	dd37      	ble.n	8006a42 <_dtoa_r+0x472>
 80069d2:	9b04      	ldr	r3, [sp, #16]
 80069d4:	2200      	movs	r2, #0
 80069d6:	3b01      	subs	r3, #1
 80069d8:	930c      	str	r3, [sp, #48]	@ 0x30
 80069da:	0030      	movs	r0, r6
 80069dc:	4bc1      	ldr	r3, [pc, #772]	@ (8006ce4 <_dtoa_r+0x714>)
 80069de:	0039      	movs	r1, r7
 80069e0:	f7fa fdd0 	bl	8001584 <__aeabi_dmul>
 80069e4:	900a      	str	r0, [sp, #40]	@ 0x28
 80069e6:	910b      	str	r1, [sp, #44]	@ 0x2c
 80069e8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80069ea:	3401      	adds	r4, #1
 80069ec:	0020      	movs	r0, r4
 80069ee:	9311      	str	r3, [sp, #68]	@ 0x44
 80069f0:	f7fb fd16 	bl	8002420 <__aeabi_i2d>
 80069f4:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 80069f6:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 80069f8:	f7fa fdc4 	bl	8001584 <__aeabi_dmul>
 80069fc:	4bba      	ldr	r3, [pc, #744]	@ (8006ce8 <_dtoa_r+0x718>)
 80069fe:	2200      	movs	r2, #0
 8006a00:	f7f9 fdc0 	bl	8000584 <__aeabi_dadd>
 8006a04:	4bb9      	ldr	r3, [pc, #740]	@ (8006cec <_dtoa_r+0x71c>)
 8006a06:	0006      	movs	r6, r0
 8006a08:	18cf      	adds	r7, r1, r3
 8006a0a:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8006a0c:	2b00      	cmp	r3, #0
 8006a0e:	d16d      	bne.n	8006aec <_dtoa_r+0x51c>
 8006a10:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006a12:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006a14:	2200      	movs	r2, #0
 8006a16:	4bb6      	ldr	r3, [pc, #728]	@ (8006cf0 <_dtoa_r+0x720>)
 8006a18:	f7fb f89a 	bl	8001b50 <__aeabi_dsub>
 8006a1c:	0032      	movs	r2, r6
 8006a1e:	003b      	movs	r3, r7
 8006a20:	0004      	movs	r4, r0
 8006a22:	000d      	movs	r5, r1
 8006a24:	f7f9 fd2c 	bl	8000480 <__aeabi_dcmpgt>
 8006a28:	2800      	cmp	r0, #0
 8006a2a:	d000      	beq.n	8006a2e <_dtoa_r+0x45e>
 8006a2c:	e2b6      	b.n	8006f9c <_dtoa_r+0x9cc>
 8006a2e:	2180      	movs	r1, #128	@ 0x80
 8006a30:	0609      	lsls	r1, r1, #24
 8006a32:	187b      	adds	r3, r7, r1
 8006a34:	0032      	movs	r2, r6
 8006a36:	0020      	movs	r0, r4
 8006a38:	0029      	movs	r1, r5
 8006a3a:	f7f9 fd0d 	bl	8000458 <__aeabi_dcmplt>
 8006a3e:	2800      	cmp	r0, #0
 8006a40:	d128      	bne.n	8006a94 <_dtoa_r+0x4c4>
 8006a42:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8006a44:	9c13      	ldr	r4, [sp, #76]	@ 0x4c
 8006a46:	930a      	str	r3, [sp, #40]	@ 0x28
 8006a48:	940b      	str	r4, [sp, #44]	@ 0x2c
 8006a4a:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8006a4c:	2b00      	cmp	r3, #0
 8006a4e:	da00      	bge.n	8006a52 <_dtoa_r+0x482>
 8006a50:	e174      	b.n	8006d3c <_dtoa_r+0x76c>
 8006a52:	9a04      	ldr	r2, [sp, #16]
 8006a54:	2a0e      	cmp	r2, #14
 8006a56:	dd00      	ble.n	8006a5a <_dtoa_r+0x48a>
 8006a58:	e170      	b.n	8006d3c <_dtoa_r+0x76c>
 8006a5a:	4b9f      	ldr	r3, [pc, #636]	@ (8006cd8 <_dtoa_r+0x708>)
 8006a5c:	00d2      	lsls	r2, r2, #3
 8006a5e:	189b      	adds	r3, r3, r2
 8006a60:	685c      	ldr	r4, [r3, #4]
 8006a62:	681b      	ldr	r3, [r3, #0]
 8006a64:	9306      	str	r3, [sp, #24]
 8006a66:	9407      	str	r4, [sp, #28]
 8006a68:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8006a6a:	2b00      	cmp	r3, #0
 8006a6c:	db00      	blt.n	8006a70 <_dtoa_r+0x4a0>
 8006a6e:	e0e7      	b.n	8006c40 <_dtoa_r+0x670>
 8006a70:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006a72:	2b00      	cmp	r3, #0
 8006a74:	dd00      	ble.n	8006a78 <_dtoa_r+0x4a8>
 8006a76:	e0e3      	b.n	8006c40 <_dtoa_r+0x670>
 8006a78:	d10c      	bne.n	8006a94 <_dtoa_r+0x4c4>
 8006a7a:	9806      	ldr	r0, [sp, #24]
 8006a7c:	9907      	ldr	r1, [sp, #28]
 8006a7e:	2200      	movs	r2, #0
 8006a80:	4b9b      	ldr	r3, [pc, #620]	@ (8006cf0 <_dtoa_r+0x720>)
 8006a82:	f7fa fd7f 	bl	8001584 <__aeabi_dmul>
 8006a86:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8006a88:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006a8a:	f7f9 fd03 	bl	8000494 <__aeabi_dcmpge>
 8006a8e:	2800      	cmp	r0, #0
 8006a90:	d100      	bne.n	8006a94 <_dtoa_r+0x4c4>
 8006a92:	e286      	b.n	8006fa2 <_dtoa_r+0x9d2>
 8006a94:	2600      	movs	r6, #0
 8006a96:	0037      	movs	r7, r6
 8006a98:	9b23      	ldr	r3, [sp, #140]	@ 0x8c
 8006a9a:	9c08      	ldr	r4, [sp, #32]
 8006a9c:	43db      	mvns	r3, r3
 8006a9e:	930c      	str	r3, [sp, #48]	@ 0x30
 8006aa0:	9704      	str	r7, [sp, #16]
 8006aa2:	2700      	movs	r7, #0
 8006aa4:	0031      	movs	r1, r6
 8006aa6:	9803      	ldr	r0, [sp, #12]
 8006aa8:	f000 fccc 	bl	8007444 <_Bfree>
 8006aac:	9b04      	ldr	r3, [sp, #16]
 8006aae:	2b00      	cmp	r3, #0
 8006ab0:	d100      	bne.n	8006ab4 <_dtoa_r+0x4e4>
 8006ab2:	e0bb      	b.n	8006c2c <_dtoa_r+0x65c>
 8006ab4:	2f00      	cmp	r7, #0
 8006ab6:	d005      	beq.n	8006ac4 <_dtoa_r+0x4f4>
 8006ab8:	429f      	cmp	r7, r3
 8006aba:	d003      	beq.n	8006ac4 <_dtoa_r+0x4f4>
 8006abc:	0039      	movs	r1, r7
 8006abe:	9803      	ldr	r0, [sp, #12]
 8006ac0:	f000 fcc0 	bl	8007444 <_Bfree>
 8006ac4:	9904      	ldr	r1, [sp, #16]
 8006ac6:	9803      	ldr	r0, [sp, #12]
 8006ac8:	f000 fcbc 	bl	8007444 <_Bfree>
 8006acc:	e0ae      	b.n	8006c2c <_dtoa_r+0x65c>
 8006ace:	423d      	tst	r5, r7
 8006ad0:	d005      	beq.n	8006ade <_dtoa_r+0x50e>
 8006ad2:	6832      	ldr	r2, [r6, #0]
 8006ad4:	6873      	ldr	r3, [r6, #4]
 8006ad6:	f7fa fd55 	bl	8001584 <__aeabi_dmul>
 8006ada:	003b      	movs	r3, r7
 8006adc:	3401      	adds	r4, #1
 8006ade:	106d      	asrs	r5, r5, #1
 8006ae0:	3608      	adds	r6, #8
 8006ae2:	e75b      	b.n	800699c <_dtoa_r+0x3cc>
 8006ae4:	9b04      	ldr	r3, [sp, #16]
 8006ae6:	930c      	str	r3, [sp, #48]	@ 0x30
 8006ae8:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006aea:	e77f      	b.n	80069ec <_dtoa_r+0x41c>
 8006aec:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8006aee:	4b7a      	ldr	r3, [pc, #488]	@ (8006cd8 <_dtoa_r+0x708>)
 8006af0:	3a01      	subs	r2, #1
 8006af2:	00d2      	lsls	r2, r2, #3
 8006af4:	9910      	ldr	r1, [sp, #64]	@ 0x40
 8006af6:	189b      	adds	r3, r3, r2
 8006af8:	681a      	ldr	r2, [r3, #0]
 8006afa:	685b      	ldr	r3, [r3, #4]
 8006afc:	2900      	cmp	r1, #0
 8006afe:	d04c      	beq.n	8006b9a <_dtoa_r+0x5ca>
 8006b00:	2000      	movs	r0, #0
 8006b02:	497c      	ldr	r1, [pc, #496]	@ (8006cf4 <_dtoa_r+0x724>)
 8006b04:	f7fa f904 	bl	8000d10 <__aeabi_ddiv>
 8006b08:	0032      	movs	r2, r6
 8006b0a:	003b      	movs	r3, r7
 8006b0c:	f7fb f820 	bl	8001b50 <__aeabi_dsub>
 8006b10:	9a08      	ldr	r2, [sp, #32]
 8006b12:	0006      	movs	r6, r0
 8006b14:	4694      	mov	ip, r2
 8006b16:	000f      	movs	r7, r1
 8006b18:	9b08      	ldr	r3, [sp, #32]
 8006b1a:	9316      	str	r3, [sp, #88]	@ 0x58
 8006b1c:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8006b1e:	4463      	add	r3, ip
 8006b20:	9311      	str	r3, [sp, #68]	@ 0x44
 8006b22:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006b24:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006b26:	f7fb fc3f 	bl	80023a8 <__aeabi_d2iz>
 8006b2a:	0005      	movs	r5, r0
 8006b2c:	f7fb fc78 	bl	8002420 <__aeabi_i2d>
 8006b30:	0002      	movs	r2, r0
 8006b32:	000b      	movs	r3, r1
 8006b34:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006b36:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006b38:	f7fb f80a 	bl	8001b50 <__aeabi_dsub>
 8006b3c:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 8006b3e:	3530      	adds	r5, #48	@ 0x30
 8006b40:	1c5c      	adds	r4, r3, #1
 8006b42:	701d      	strb	r5, [r3, #0]
 8006b44:	0032      	movs	r2, r6
 8006b46:	003b      	movs	r3, r7
 8006b48:	900a      	str	r0, [sp, #40]	@ 0x28
 8006b4a:	910b      	str	r1, [sp, #44]	@ 0x2c
 8006b4c:	f7f9 fc84 	bl	8000458 <__aeabi_dcmplt>
 8006b50:	2800      	cmp	r0, #0
 8006b52:	d16b      	bne.n	8006c2c <_dtoa_r+0x65c>
 8006b54:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8006b56:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006b58:	2000      	movs	r0, #0
 8006b5a:	4961      	ldr	r1, [pc, #388]	@ (8006ce0 <_dtoa_r+0x710>)
 8006b5c:	f7fa fff8 	bl	8001b50 <__aeabi_dsub>
 8006b60:	0032      	movs	r2, r6
 8006b62:	003b      	movs	r3, r7
 8006b64:	f7f9 fc78 	bl	8000458 <__aeabi_dcmplt>
 8006b68:	2800      	cmp	r0, #0
 8006b6a:	d000      	beq.n	8006b6e <_dtoa_r+0x59e>
 8006b6c:	e0c6      	b.n	8006cfc <_dtoa_r+0x72c>
 8006b6e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8006b70:	42a3      	cmp	r3, r4
 8006b72:	d100      	bne.n	8006b76 <_dtoa_r+0x5a6>
 8006b74:	e765      	b.n	8006a42 <_dtoa_r+0x472>
 8006b76:	2200      	movs	r2, #0
 8006b78:	0030      	movs	r0, r6
 8006b7a:	0039      	movs	r1, r7
 8006b7c:	4b59      	ldr	r3, [pc, #356]	@ (8006ce4 <_dtoa_r+0x714>)
 8006b7e:	f7fa fd01 	bl	8001584 <__aeabi_dmul>
 8006b82:	2200      	movs	r2, #0
 8006b84:	0006      	movs	r6, r0
 8006b86:	000f      	movs	r7, r1
 8006b88:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006b8a:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006b8c:	4b55      	ldr	r3, [pc, #340]	@ (8006ce4 <_dtoa_r+0x714>)
 8006b8e:	f7fa fcf9 	bl	8001584 <__aeabi_dmul>
 8006b92:	9416      	str	r4, [sp, #88]	@ 0x58
 8006b94:	900a      	str	r0, [sp, #40]	@ 0x28
 8006b96:	910b      	str	r1, [sp, #44]	@ 0x2c
 8006b98:	e7c3      	b.n	8006b22 <_dtoa_r+0x552>
 8006b9a:	0030      	movs	r0, r6
 8006b9c:	0039      	movs	r1, r7
 8006b9e:	f7fa fcf1 	bl	8001584 <__aeabi_dmul>
 8006ba2:	9d08      	ldr	r5, [sp, #32]
 8006ba4:	9a11      	ldr	r2, [sp, #68]	@ 0x44
 8006ba6:	002b      	movs	r3, r5
 8006ba8:	4694      	mov	ip, r2
 8006baa:	9016      	str	r0, [sp, #88]	@ 0x58
 8006bac:	9117      	str	r1, [sp, #92]	@ 0x5c
 8006bae:	4463      	add	r3, ip
 8006bb0:	9319      	str	r3, [sp, #100]	@ 0x64
 8006bb2:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006bb4:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006bb6:	f7fb fbf7 	bl	80023a8 <__aeabi_d2iz>
 8006bba:	0004      	movs	r4, r0
 8006bbc:	f7fb fc30 	bl	8002420 <__aeabi_i2d>
 8006bc0:	000b      	movs	r3, r1
 8006bc2:	0002      	movs	r2, r0
 8006bc4:	980a      	ldr	r0, [sp, #40]	@ 0x28
 8006bc6:	990b      	ldr	r1, [sp, #44]	@ 0x2c
 8006bc8:	f7fa ffc2 	bl	8001b50 <__aeabi_dsub>
 8006bcc:	3430      	adds	r4, #48	@ 0x30
 8006bce:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 8006bd0:	702c      	strb	r4, [r5, #0]
 8006bd2:	3501      	adds	r5, #1
 8006bd4:	0006      	movs	r6, r0
 8006bd6:	000f      	movs	r7, r1
 8006bd8:	42ab      	cmp	r3, r5
 8006bda:	d12a      	bne.n	8006c32 <_dtoa_r+0x662>
 8006bdc:	9816      	ldr	r0, [sp, #88]	@ 0x58
 8006bde:	9917      	ldr	r1, [sp, #92]	@ 0x5c
 8006be0:	9b08      	ldr	r3, [sp, #32]
 8006be2:	9c11      	ldr	r4, [sp, #68]	@ 0x44
 8006be4:	469c      	mov	ip, r3
 8006be6:	2200      	movs	r2, #0
 8006be8:	4b42      	ldr	r3, [pc, #264]	@ (8006cf4 <_dtoa_r+0x724>)
 8006bea:	4464      	add	r4, ip
 8006bec:	f7f9 fcca 	bl	8000584 <__aeabi_dadd>
 8006bf0:	0002      	movs	r2, r0
 8006bf2:	000b      	movs	r3, r1
 8006bf4:	0030      	movs	r0, r6
 8006bf6:	0039      	movs	r1, r7
 8006bf8:	f7f9 fc42 	bl	8000480 <__aeabi_dcmpgt>
 8006bfc:	2800      	cmp	r0, #0
 8006bfe:	d000      	beq.n	8006c02 <_dtoa_r+0x632>
 8006c00:	e07c      	b.n	8006cfc <_dtoa_r+0x72c>
 8006c02:	9a16      	ldr	r2, [sp, #88]	@ 0x58
 8006c04:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 8006c06:	2000      	movs	r0, #0
 8006c08:	493a      	ldr	r1, [pc, #232]	@ (8006cf4 <_dtoa_r+0x724>)
 8006c0a:	f7fa ffa1 	bl	8001b50 <__aeabi_dsub>
 8006c0e:	0002      	movs	r2, r0
 8006c10:	000b      	movs	r3, r1
 8006c12:	0030      	movs	r0, r6
 8006c14:	0039      	movs	r1, r7
 8006c16:	f7f9 fc1f 	bl	8000458 <__aeabi_dcmplt>
 8006c1a:	2800      	cmp	r0, #0
 8006c1c:	d100      	bne.n	8006c20 <_dtoa_r+0x650>
 8006c1e:	e710      	b.n	8006a42 <_dtoa_r+0x472>
 8006c20:	0023      	movs	r3, r4
 8006c22:	3c01      	subs	r4, #1
 8006c24:	7822      	ldrb	r2, [r4, #0]
 8006c26:	2a30      	cmp	r2, #48	@ 0x30
 8006c28:	d0fa      	beq.n	8006c20 <_dtoa_r+0x650>
 8006c2a:	001c      	movs	r4, r3
 8006c2c:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8006c2e:	9304      	str	r3, [sp, #16]
 8006c30:	e042      	b.n	8006cb8 <_dtoa_r+0x6e8>
 8006c32:	2200      	movs	r2, #0
 8006c34:	4b2b      	ldr	r3, [pc, #172]	@ (8006ce4 <_dtoa_r+0x714>)
 8006c36:	f7fa fca5 	bl	8001584 <__aeabi_dmul>
 8006c3a:	900a      	str	r0, [sp, #40]	@ 0x28
 8006c3c:	910b      	str	r1, [sp, #44]	@ 0x2c
 8006c3e:	e7b8      	b.n	8006bb2 <_dtoa_r+0x5e2>
 8006c40:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006c42:	9d08      	ldr	r5, [sp, #32]
 8006c44:	3b01      	subs	r3, #1
 8006c46:	195b      	adds	r3, r3, r5
 8006c48:	9e0a      	ldr	r6, [sp, #40]	@ 0x28
 8006c4a:	9f0b      	ldr	r7, [sp, #44]	@ 0x2c
 8006c4c:	930a      	str	r3, [sp, #40]	@ 0x28
 8006c4e:	9a06      	ldr	r2, [sp, #24]
 8006c50:	9b07      	ldr	r3, [sp, #28]
 8006c52:	0030      	movs	r0, r6
 8006c54:	0039      	movs	r1, r7
 8006c56:	f7fa f85b 	bl	8000d10 <__aeabi_ddiv>
 8006c5a:	f7fb fba5 	bl	80023a8 <__aeabi_d2iz>
 8006c5e:	9009      	str	r0, [sp, #36]	@ 0x24
 8006c60:	f7fb fbde 	bl	8002420 <__aeabi_i2d>
 8006c64:	9a06      	ldr	r2, [sp, #24]
 8006c66:	9b07      	ldr	r3, [sp, #28]
 8006c68:	f7fa fc8c 	bl	8001584 <__aeabi_dmul>
 8006c6c:	0002      	movs	r2, r0
 8006c6e:	000b      	movs	r3, r1
 8006c70:	0030      	movs	r0, r6
 8006c72:	0039      	movs	r1, r7
 8006c74:	f7fa ff6c 	bl	8001b50 <__aeabi_dsub>
 8006c78:	002b      	movs	r3, r5
 8006c7a:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006c7c:	3501      	adds	r5, #1
 8006c7e:	3230      	adds	r2, #48	@ 0x30
 8006c80:	701a      	strb	r2, [r3, #0]
 8006c82:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8006c84:	002c      	movs	r4, r5
 8006c86:	429a      	cmp	r2, r3
 8006c88:	d14b      	bne.n	8006d22 <_dtoa_r+0x752>
 8006c8a:	0002      	movs	r2, r0
 8006c8c:	000b      	movs	r3, r1
 8006c8e:	f7f9 fc79 	bl	8000584 <__aeabi_dadd>
 8006c92:	9a06      	ldr	r2, [sp, #24]
 8006c94:	9b07      	ldr	r3, [sp, #28]
 8006c96:	0006      	movs	r6, r0
 8006c98:	000f      	movs	r7, r1
 8006c9a:	f7f9 fbf1 	bl	8000480 <__aeabi_dcmpgt>
 8006c9e:	2800      	cmp	r0, #0
 8006ca0:	d12a      	bne.n	8006cf8 <_dtoa_r+0x728>
 8006ca2:	9a06      	ldr	r2, [sp, #24]
 8006ca4:	9b07      	ldr	r3, [sp, #28]
 8006ca6:	0030      	movs	r0, r6
 8006ca8:	0039      	movs	r1, r7
 8006caa:	f7f9 fbcf 	bl	800044c <__aeabi_dcmpeq>
 8006cae:	2800      	cmp	r0, #0
 8006cb0:	d002      	beq.n	8006cb8 <_dtoa_r+0x6e8>
 8006cb2:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006cb4:	07dd      	lsls	r5, r3, #31
 8006cb6:	d41f      	bmi.n	8006cf8 <_dtoa_r+0x728>
 8006cb8:	9905      	ldr	r1, [sp, #20]
 8006cba:	9803      	ldr	r0, [sp, #12]
 8006cbc:	f000 fbc2 	bl	8007444 <_Bfree>
 8006cc0:	2300      	movs	r3, #0
 8006cc2:	7023      	strb	r3, [r4, #0]
 8006cc4:	9b04      	ldr	r3, [sp, #16]
 8006cc6:	9a24      	ldr	r2, [sp, #144]	@ 0x90
 8006cc8:	3301      	adds	r3, #1
 8006cca:	6013      	str	r3, [r2, #0]
 8006ccc:	9b26      	ldr	r3, [sp, #152]	@ 0x98
 8006cce:	2b00      	cmp	r3, #0
 8006cd0:	d100      	bne.n	8006cd4 <_dtoa_r+0x704>
 8006cd2:	e4c7      	b.n	8006664 <_dtoa_r+0x94>
 8006cd4:	601c      	str	r4, [r3, #0]
 8006cd6:	e4c5      	b.n	8006664 <_dtoa_r+0x94>
 8006cd8:	08009f90 	.word	0x08009f90
 8006cdc:	08009f68 	.word	0x08009f68
 8006ce0:	3ff00000 	.word	0x3ff00000
 8006ce4:	40240000 	.word	0x40240000
 8006ce8:	401c0000 	.word	0x401c0000
 8006cec:	fcc00000 	.word	0xfcc00000
 8006cf0:	40140000 	.word	0x40140000
 8006cf4:	3fe00000 	.word	0x3fe00000
 8006cf8:	9b04      	ldr	r3, [sp, #16]
 8006cfa:	930c      	str	r3, [sp, #48]	@ 0x30
 8006cfc:	0023      	movs	r3, r4
 8006cfe:	001c      	movs	r4, r3
 8006d00:	3b01      	subs	r3, #1
 8006d02:	781a      	ldrb	r2, [r3, #0]
 8006d04:	2a39      	cmp	r2, #57	@ 0x39
 8006d06:	d108      	bne.n	8006d1a <_dtoa_r+0x74a>
 8006d08:	9a08      	ldr	r2, [sp, #32]
 8006d0a:	429a      	cmp	r2, r3
 8006d0c:	d1f7      	bne.n	8006cfe <_dtoa_r+0x72e>
 8006d0e:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8006d10:	9908      	ldr	r1, [sp, #32]
 8006d12:	3201      	adds	r2, #1
 8006d14:	920c      	str	r2, [sp, #48]	@ 0x30
 8006d16:	2230      	movs	r2, #48	@ 0x30
 8006d18:	700a      	strb	r2, [r1, #0]
 8006d1a:	781a      	ldrb	r2, [r3, #0]
 8006d1c:	3201      	adds	r2, #1
 8006d1e:	701a      	strb	r2, [r3, #0]
 8006d20:	e784      	b.n	8006c2c <_dtoa_r+0x65c>
 8006d22:	2200      	movs	r2, #0
 8006d24:	4bc6      	ldr	r3, [pc, #792]	@ (8007040 <_dtoa_r+0xa70>)
 8006d26:	f7fa fc2d 	bl	8001584 <__aeabi_dmul>
 8006d2a:	2200      	movs	r2, #0
 8006d2c:	2300      	movs	r3, #0
 8006d2e:	0006      	movs	r6, r0
 8006d30:	000f      	movs	r7, r1
 8006d32:	f7f9 fb8b 	bl	800044c <__aeabi_dcmpeq>
 8006d36:	2800      	cmp	r0, #0
 8006d38:	d089      	beq.n	8006c4e <_dtoa_r+0x67e>
 8006d3a:	e7bd      	b.n	8006cb8 <_dtoa_r+0x6e8>
 8006d3c:	9f10      	ldr	r7, [sp, #64]	@ 0x40
 8006d3e:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8006d40:	9c06      	ldr	r4, [sp, #24]
 8006d42:	2f00      	cmp	r7, #0
 8006d44:	d014      	beq.n	8006d70 <_dtoa_r+0x7a0>
 8006d46:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8006d48:	2a01      	cmp	r2, #1
 8006d4a:	dd00      	ble.n	8006d4e <_dtoa_r+0x77e>
 8006d4c:	e0e4      	b.n	8006f18 <_dtoa_r+0x948>
 8006d4e:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 8006d50:	2a00      	cmp	r2, #0
 8006d52:	d100      	bne.n	8006d56 <_dtoa_r+0x786>
 8006d54:	e0da      	b.n	8006f0c <_dtoa_r+0x93c>
 8006d56:	4abb      	ldr	r2, [pc, #748]	@ (8007044 <_dtoa_r+0xa74>)
 8006d58:	189b      	adds	r3, r3, r2
 8006d5a:	9a06      	ldr	r2, [sp, #24]
 8006d5c:	2101      	movs	r1, #1
 8006d5e:	18d2      	adds	r2, r2, r3
 8006d60:	9206      	str	r2, [sp, #24]
 8006d62:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8006d64:	9803      	ldr	r0, [sp, #12]
 8006d66:	18d3      	adds	r3, r2, r3
 8006d68:	930d      	str	r3, [sp, #52]	@ 0x34
 8006d6a:	f000 fc6f 	bl	800764c <__i2b>
 8006d6e:	0007      	movs	r7, r0
 8006d70:	2c00      	cmp	r4, #0
 8006d72:	d00e      	beq.n	8006d92 <_dtoa_r+0x7c2>
 8006d74:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8006d76:	2b00      	cmp	r3, #0
 8006d78:	dd0b      	ble.n	8006d92 <_dtoa_r+0x7c2>
 8006d7a:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8006d7c:	0023      	movs	r3, r4
 8006d7e:	4294      	cmp	r4, r2
 8006d80:	dd00      	ble.n	8006d84 <_dtoa_r+0x7b4>
 8006d82:	0013      	movs	r3, r2
 8006d84:	9a06      	ldr	r2, [sp, #24]
 8006d86:	1ae4      	subs	r4, r4, r3
 8006d88:	1ad2      	subs	r2, r2, r3
 8006d8a:	9206      	str	r2, [sp, #24]
 8006d8c:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8006d8e:	1ad3      	subs	r3, r2, r3
 8006d90:	930d      	str	r3, [sp, #52]	@ 0x34
 8006d92:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006d94:	2b00      	cmp	r3, #0
 8006d96:	d021      	beq.n	8006ddc <_dtoa_r+0x80c>
 8006d98:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8006d9a:	2b00      	cmp	r3, #0
 8006d9c:	d100      	bne.n	8006da0 <_dtoa_r+0x7d0>
 8006d9e:	e0d3      	b.n	8006f48 <_dtoa_r+0x978>
 8006da0:	9e05      	ldr	r6, [sp, #20]
 8006da2:	2d00      	cmp	r5, #0
 8006da4:	d014      	beq.n	8006dd0 <_dtoa_r+0x800>
 8006da6:	0039      	movs	r1, r7
 8006da8:	002a      	movs	r2, r5
 8006daa:	9803      	ldr	r0, [sp, #12]
 8006dac:	f000 fd10 	bl	80077d0 <__pow5mult>
 8006db0:	9a05      	ldr	r2, [sp, #20]
 8006db2:	0001      	movs	r1, r0
 8006db4:	0007      	movs	r7, r0
 8006db6:	9803      	ldr	r0, [sp, #12]
 8006db8:	f000 fc60 	bl	800767c <__multiply>
 8006dbc:	0006      	movs	r6, r0
 8006dbe:	9905      	ldr	r1, [sp, #20]
 8006dc0:	9803      	ldr	r0, [sp, #12]
 8006dc2:	f000 fb3f 	bl	8007444 <_Bfree>
 8006dc6:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006dc8:	9605      	str	r6, [sp, #20]
 8006dca:	1b5b      	subs	r3, r3, r5
 8006dcc:	930f      	str	r3, [sp, #60]	@ 0x3c
 8006dce:	d005      	beq.n	8006ddc <_dtoa_r+0x80c>
 8006dd0:	0031      	movs	r1, r6
 8006dd2:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8006dd4:	9803      	ldr	r0, [sp, #12]
 8006dd6:	f000 fcfb 	bl	80077d0 <__pow5mult>
 8006dda:	9005      	str	r0, [sp, #20]
 8006ddc:	2101      	movs	r1, #1
 8006dde:	9803      	ldr	r0, [sp, #12]
 8006de0:	f000 fc34 	bl	800764c <__i2b>
 8006de4:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8006de6:	0006      	movs	r6, r0
 8006de8:	2b00      	cmp	r3, #0
 8006dea:	d100      	bne.n	8006dee <_dtoa_r+0x81e>
 8006dec:	e1bc      	b.n	8007168 <_dtoa_r+0xb98>
 8006dee:	001a      	movs	r2, r3
 8006df0:	0001      	movs	r1, r0
 8006df2:	9803      	ldr	r0, [sp, #12]
 8006df4:	f000 fcec 	bl	80077d0 <__pow5mult>
 8006df8:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8006dfa:	0006      	movs	r6, r0
 8006dfc:	2500      	movs	r5, #0
 8006dfe:	2b01      	cmp	r3, #1
 8006e00:	dc16      	bgt.n	8006e30 <_dtoa_r+0x860>
 8006e02:	2500      	movs	r5, #0
 8006e04:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006e06:	42ab      	cmp	r3, r5
 8006e08:	d10e      	bne.n	8006e28 <_dtoa_r+0x858>
 8006e0a:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8006e0c:	031b      	lsls	r3, r3, #12
 8006e0e:	42ab      	cmp	r3, r5
 8006e10:	d10a      	bne.n	8006e28 <_dtoa_r+0x858>
 8006e12:	4b8d      	ldr	r3, [pc, #564]	@ (8007048 <_dtoa_r+0xa78>)
 8006e14:	9a0b      	ldr	r2, [sp, #44]	@ 0x2c
 8006e16:	4213      	tst	r3, r2
 8006e18:	d006      	beq.n	8006e28 <_dtoa_r+0x858>
 8006e1a:	9b06      	ldr	r3, [sp, #24]
 8006e1c:	3501      	adds	r5, #1
 8006e1e:	3301      	adds	r3, #1
 8006e20:	9306      	str	r3, [sp, #24]
 8006e22:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8006e24:	3301      	adds	r3, #1
 8006e26:	930d      	str	r3, [sp, #52]	@ 0x34
 8006e28:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 8006e2a:	2001      	movs	r0, #1
 8006e2c:	2b00      	cmp	r3, #0
 8006e2e:	d008      	beq.n	8006e42 <_dtoa_r+0x872>
 8006e30:	6933      	ldr	r3, [r6, #16]
 8006e32:	3303      	adds	r3, #3
 8006e34:	009b      	lsls	r3, r3, #2
 8006e36:	18f3      	adds	r3, r6, r3
 8006e38:	6858      	ldr	r0, [r3, #4]
 8006e3a:	f000 fbb7 	bl	80075ac <__hi0bits>
 8006e3e:	2320      	movs	r3, #32
 8006e40:	1a18      	subs	r0, r3, r0
 8006e42:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8006e44:	1818      	adds	r0, r3, r0
 8006e46:	0002      	movs	r2, r0
 8006e48:	231f      	movs	r3, #31
 8006e4a:	401a      	ands	r2, r3
 8006e4c:	4218      	tst	r0, r3
 8006e4e:	d100      	bne.n	8006e52 <_dtoa_r+0x882>
 8006e50:	e081      	b.n	8006f56 <_dtoa_r+0x986>
 8006e52:	3301      	adds	r3, #1
 8006e54:	1a9b      	subs	r3, r3, r2
 8006e56:	2b04      	cmp	r3, #4
 8006e58:	dd79      	ble.n	8006f4e <_dtoa_r+0x97e>
 8006e5a:	231c      	movs	r3, #28
 8006e5c:	1a9b      	subs	r3, r3, r2
 8006e5e:	9a06      	ldr	r2, [sp, #24]
 8006e60:	18e4      	adds	r4, r4, r3
 8006e62:	18d2      	adds	r2, r2, r3
 8006e64:	9206      	str	r2, [sp, #24]
 8006e66:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8006e68:	18d3      	adds	r3, r2, r3
 8006e6a:	930d      	str	r3, [sp, #52]	@ 0x34
 8006e6c:	9b06      	ldr	r3, [sp, #24]
 8006e6e:	2b00      	cmp	r3, #0
 8006e70:	dd05      	ble.n	8006e7e <_dtoa_r+0x8ae>
 8006e72:	001a      	movs	r2, r3
 8006e74:	9905      	ldr	r1, [sp, #20]
 8006e76:	9803      	ldr	r0, [sp, #12]
 8006e78:	f000 fd06 	bl	8007888 <__lshift>
 8006e7c:	9005      	str	r0, [sp, #20]
 8006e7e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8006e80:	2b00      	cmp	r3, #0
 8006e82:	dd05      	ble.n	8006e90 <_dtoa_r+0x8c0>
 8006e84:	0031      	movs	r1, r6
 8006e86:	001a      	movs	r2, r3
 8006e88:	9803      	ldr	r0, [sp, #12]
 8006e8a:	f000 fcfd 	bl	8007888 <__lshift>
 8006e8e:	0006      	movs	r6, r0
 8006e90:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 8006e92:	2b00      	cmp	r3, #0
 8006e94:	d061      	beq.n	8006f5a <_dtoa_r+0x98a>
 8006e96:	0031      	movs	r1, r6
 8006e98:	9805      	ldr	r0, [sp, #20]
 8006e9a:	f000 fd61 	bl	8007960 <__mcmp>
 8006e9e:	2800      	cmp	r0, #0
 8006ea0:	da5b      	bge.n	8006f5a <_dtoa_r+0x98a>
 8006ea2:	9b04      	ldr	r3, [sp, #16]
 8006ea4:	220a      	movs	r2, #10
 8006ea6:	3b01      	subs	r3, #1
 8006ea8:	930c      	str	r3, [sp, #48]	@ 0x30
 8006eaa:	9905      	ldr	r1, [sp, #20]
 8006eac:	2300      	movs	r3, #0
 8006eae:	9803      	ldr	r0, [sp, #12]
 8006eb0:	f000 faec 	bl	800748c <__multadd>
 8006eb4:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8006eb6:	9005      	str	r0, [sp, #20]
 8006eb8:	2b00      	cmp	r3, #0
 8006eba:	d100      	bne.n	8006ebe <_dtoa_r+0x8ee>
 8006ebc:	e15b      	b.n	8007176 <_dtoa_r+0xba6>
 8006ebe:	2300      	movs	r3, #0
 8006ec0:	0039      	movs	r1, r7
 8006ec2:	220a      	movs	r2, #10
 8006ec4:	9803      	ldr	r0, [sp, #12]
 8006ec6:	f000 fae1 	bl	800748c <__multadd>
 8006eca:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006ecc:	0007      	movs	r7, r0
 8006ece:	2b00      	cmp	r3, #0
 8006ed0:	dc4d      	bgt.n	8006f6e <_dtoa_r+0x99e>
 8006ed2:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 8006ed4:	2b02      	cmp	r3, #2
 8006ed6:	dd46      	ble.n	8006f66 <_dtoa_r+0x996>
 8006ed8:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8006eda:	2b00      	cmp	r3, #0
 8006edc:	d000      	beq.n	8006ee0 <_dtoa_r+0x910>
 8006ede:	e5db      	b.n	8006a98 <_dtoa_r+0x4c8>
 8006ee0:	0031      	movs	r1, r6
 8006ee2:	2205      	movs	r2, #5
 8006ee4:	9803      	ldr	r0, [sp, #12]
 8006ee6:	f000 fad1 	bl	800748c <__multadd>
 8006eea:	0006      	movs	r6, r0
 8006eec:	0001      	movs	r1, r0
 8006eee:	9805      	ldr	r0, [sp, #20]
 8006ef0:	f000 fd36 	bl	8007960 <__mcmp>
 8006ef4:	2800      	cmp	r0, #0
 8006ef6:	dc00      	bgt.n	8006efa <_dtoa_r+0x92a>
 8006ef8:	e5ce      	b.n	8006a98 <_dtoa_r+0x4c8>
 8006efa:	9b08      	ldr	r3, [sp, #32]
 8006efc:	9a08      	ldr	r2, [sp, #32]
 8006efe:	1c5c      	adds	r4, r3, #1
 8006f00:	2331      	movs	r3, #49	@ 0x31
 8006f02:	7013      	strb	r3, [r2, #0]
 8006f04:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8006f06:	3301      	adds	r3, #1
 8006f08:	930c      	str	r3, [sp, #48]	@ 0x30
 8006f0a:	e5c9      	b.n	8006aa0 <_dtoa_r+0x4d0>
 8006f0c:	2336      	movs	r3, #54	@ 0x36
 8006f0e:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8006f10:	9d0f      	ldr	r5, [sp, #60]	@ 0x3c
 8006f12:	1a9b      	subs	r3, r3, r2
 8006f14:	9c06      	ldr	r4, [sp, #24]
 8006f16:	e720      	b.n	8006d5a <_dtoa_r+0x78a>
 8006f18:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006f1a:	1e5d      	subs	r5, r3, #1
 8006f1c:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006f1e:	42ab      	cmp	r3, r5
 8006f20:	db08      	blt.n	8006f34 <_dtoa_r+0x964>
 8006f22:	1b5d      	subs	r5, r3, r5
 8006f24:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006f26:	2b00      	cmp	r3, #0
 8006f28:	daf4      	bge.n	8006f14 <_dtoa_r+0x944>
 8006f2a:	9b06      	ldr	r3, [sp, #24]
 8006f2c:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8006f2e:	1a9c      	subs	r4, r3, r2
 8006f30:	2300      	movs	r3, #0
 8006f32:	e712      	b.n	8006d5a <_dtoa_r+0x78a>
 8006f34:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8006f36:	9a14      	ldr	r2, [sp, #80]	@ 0x50
 8006f38:	1aeb      	subs	r3, r5, r3
 8006f3a:	18d3      	adds	r3, r2, r3
 8006f3c:	9314      	str	r3, [sp, #80]	@ 0x50
 8006f3e:	950f      	str	r5, [sp, #60]	@ 0x3c
 8006f40:	9c06      	ldr	r4, [sp, #24]
 8006f42:	2500      	movs	r5, #0
 8006f44:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006f46:	e708      	b.n	8006d5a <_dtoa_r+0x78a>
 8006f48:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 8006f4a:	9905      	ldr	r1, [sp, #20]
 8006f4c:	e742      	b.n	8006dd4 <_dtoa_r+0x804>
 8006f4e:	2b04      	cmp	r3, #4
 8006f50:	d08c      	beq.n	8006e6c <_dtoa_r+0x89c>
 8006f52:	331c      	adds	r3, #28
 8006f54:	e783      	b.n	8006e5e <_dtoa_r+0x88e>
 8006f56:	0013      	movs	r3, r2
 8006f58:	e7fb      	b.n	8006f52 <_dtoa_r+0x982>
 8006f5a:	9b04      	ldr	r3, [sp, #16]
 8006f5c:	930c      	str	r3, [sp, #48]	@ 0x30
 8006f5e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8006f60:	930e      	str	r3, [sp, #56]	@ 0x38
 8006f62:	2b00      	cmp	r3, #0
 8006f64:	ddb5      	ble.n	8006ed2 <_dtoa_r+0x902>
 8006f66:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 8006f68:	2b00      	cmp	r3, #0
 8006f6a:	d100      	bne.n	8006f6e <_dtoa_r+0x99e>
 8006f6c:	e107      	b.n	800717e <_dtoa_r+0xbae>
 8006f6e:	2c00      	cmp	r4, #0
 8006f70:	dd05      	ble.n	8006f7e <_dtoa_r+0x9ae>
 8006f72:	0039      	movs	r1, r7
 8006f74:	0022      	movs	r2, r4
 8006f76:	9803      	ldr	r0, [sp, #12]
 8006f78:	f000 fc86 	bl	8007888 <__lshift>
 8006f7c:	0007      	movs	r7, r0
 8006f7e:	9704      	str	r7, [sp, #16]
 8006f80:	2d00      	cmp	r5, #0
 8006f82:	d020      	beq.n	8006fc6 <_dtoa_r+0x9f6>
 8006f84:	6879      	ldr	r1, [r7, #4]
 8006f86:	9803      	ldr	r0, [sp, #12]
 8006f88:	f000 fa18 	bl	80073bc <_Balloc>
 8006f8c:	1e04      	subs	r4, r0, #0
 8006f8e:	d10c      	bne.n	8006faa <_dtoa_r+0x9da>
 8006f90:	0022      	movs	r2, r4
 8006f92:	4b2e      	ldr	r3, [pc, #184]	@ (800704c <_dtoa_r+0xa7c>)
 8006f94:	482e      	ldr	r0, [pc, #184]	@ (8007050 <_dtoa_r+0xa80>)
 8006f96:	492f      	ldr	r1, [pc, #188]	@ (8007054 <_dtoa_r+0xa84>)
 8006f98:	f7ff fb2f 	bl	80065fa <_dtoa_r+0x2a>
 8006f9c:	9e11      	ldr	r6, [sp, #68]	@ 0x44
 8006f9e:	0037      	movs	r7, r6
 8006fa0:	e7ab      	b.n	8006efa <_dtoa_r+0x92a>
 8006fa2:	9b04      	ldr	r3, [sp, #16]
 8006fa4:	9e09      	ldr	r6, [sp, #36]	@ 0x24
 8006fa6:	930c      	str	r3, [sp, #48]	@ 0x30
 8006fa8:	e7f9      	b.n	8006f9e <_dtoa_r+0x9ce>
 8006faa:	0039      	movs	r1, r7
 8006fac:	693a      	ldr	r2, [r7, #16]
 8006fae:	310c      	adds	r1, #12
 8006fb0:	3202      	adds	r2, #2
 8006fb2:	0092      	lsls	r2, r2, #2
 8006fb4:	300c      	adds	r0, #12
 8006fb6:	f001 ffb3 	bl	8008f20 <memcpy>
 8006fba:	2201      	movs	r2, #1
 8006fbc:	0021      	movs	r1, r4
 8006fbe:	9803      	ldr	r0, [sp, #12]
 8006fc0:	f000 fc62 	bl	8007888 <__lshift>
 8006fc4:	9004      	str	r0, [sp, #16]
 8006fc6:	9b08      	ldr	r3, [sp, #32]
 8006fc8:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8006fca:	9306      	str	r3, [sp, #24]
 8006fcc:	3b01      	subs	r3, #1
 8006fce:	189b      	adds	r3, r3, r2
 8006fd0:	2201      	movs	r2, #1
 8006fd2:	930f      	str	r3, [sp, #60]	@ 0x3c
 8006fd4:	9b0a      	ldr	r3, [sp, #40]	@ 0x28
 8006fd6:	4013      	ands	r3, r2
 8006fd8:	930e      	str	r3, [sp, #56]	@ 0x38
 8006fda:	0031      	movs	r1, r6
 8006fdc:	9805      	ldr	r0, [sp, #20]
 8006fde:	f7ff fa71 	bl	80064c4 <quorem>
 8006fe2:	0039      	movs	r1, r7
 8006fe4:	0005      	movs	r5, r0
 8006fe6:	900a      	str	r0, [sp, #40]	@ 0x28
 8006fe8:	9805      	ldr	r0, [sp, #20]
 8006fea:	f000 fcb9 	bl	8007960 <__mcmp>
 8006fee:	9a04      	ldr	r2, [sp, #16]
 8006ff0:	900d      	str	r0, [sp, #52]	@ 0x34
 8006ff2:	0031      	movs	r1, r6
 8006ff4:	9803      	ldr	r0, [sp, #12]
 8006ff6:	f000 fccf 	bl	8007998 <__mdiff>
 8006ffa:	2201      	movs	r2, #1
 8006ffc:	68c3      	ldr	r3, [r0, #12]
 8006ffe:	0004      	movs	r4, r0
 8007000:	3530      	adds	r5, #48	@ 0x30
 8007002:	9209      	str	r2, [sp, #36]	@ 0x24
 8007004:	2b00      	cmp	r3, #0
 8007006:	d104      	bne.n	8007012 <_dtoa_r+0xa42>
 8007008:	0001      	movs	r1, r0
 800700a:	9805      	ldr	r0, [sp, #20]
 800700c:	f000 fca8 	bl	8007960 <__mcmp>
 8007010:	9009      	str	r0, [sp, #36]	@ 0x24
 8007012:	0021      	movs	r1, r4
 8007014:	9803      	ldr	r0, [sp, #12]
 8007016:	f000 fa15 	bl	8007444 <_Bfree>
 800701a:	9b06      	ldr	r3, [sp, #24]
 800701c:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 800701e:	1c5c      	adds	r4, r3, #1
 8007020:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007022:	4313      	orrs	r3, r2
 8007024:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8007026:	4313      	orrs	r3, r2
 8007028:	d116      	bne.n	8007058 <_dtoa_r+0xa88>
 800702a:	2d39      	cmp	r5, #57	@ 0x39
 800702c:	d02f      	beq.n	800708e <_dtoa_r+0xabe>
 800702e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8007030:	2b00      	cmp	r3, #0
 8007032:	dd01      	ble.n	8007038 <_dtoa_r+0xa68>
 8007034:	9d0a      	ldr	r5, [sp, #40]	@ 0x28
 8007036:	3531      	adds	r5, #49	@ 0x31
 8007038:	9b06      	ldr	r3, [sp, #24]
 800703a:	701d      	strb	r5, [r3, #0]
 800703c:	e532      	b.n	8006aa4 <_dtoa_r+0x4d4>
 800703e:	46c0      	nop			@ (mov r8, r8)
 8007040:	40240000 	.word	0x40240000
 8007044:	00000433 	.word	0x00000433
 8007048:	7ff00000 	.word	0x7ff00000
 800704c:	08009e3a 	.word	0x08009e3a
 8007050:	08009de2 	.word	0x08009de2
 8007054:	000002ef 	.word	0x000002ef
 8007058:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800705a:	2b00      	cmp	r3, #0
 800705c:	db04      	blt.n	8007068 <_dtoa_r+0xa98>
 800705e:	9a22      	ldr	r2, [sp, #136]	@ 0x88
 8007060:	4313      	orrs	r3, r2
 8007062:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8007064:	4313      	orrs	r3, r2
 8007066:	d11e      	bne.n	80070a6 <_dtoa_r+0xad6>
 8007068:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800706a:	2b00      	cmp	r3, #0
 800706c:	dde4      	ble.n	8007038 <_dtoa_r+0xa68>
 800706e:	9905      	ldr	r1, [sp, #20]
 8007070:	2201      	movs	r2, #1
 8007072:	9803      	ldr	r0, [sp, #12]
 8007074:	f000 fc08 	bl	8007888 <__lshift>
 8007078:	0031      	movs	r1, r6
 800707a:	9005      	str	r0, [sp, #20]
 800707c:	f000 fc70 	bl	8007960 <__mcmp>
 8007080:	2800      	cmp	r0, #0
 8007082:	dc02      	bgt.n	800708a <_dtoa_r+0xaba>
 8007084:	d1d8      	bne.n	8007038 <_dtoa_r+0xa68>
 8007086:	07eb      	lsls	r3, r5, #31
 8007088:	d5d6      	bpl.n	8007038 <_dtoa_r+0xa68>
 800708a:	2d39      	cmp	r5, #57	@ 0x39
 800708c:	d1d2      	bne.n	8007034 <_dtoa_r+0xa64>
 800708e:	2339      	movs	r3, #57	@ 0x39
 8007090:	9a06      	ldr	r2, [sp, #24]
 8007092:	7013      	strb	r3, [r2, #0]
 8007094:	0023      	movs	r3, r4
 8007096:	001c      	movs	r4, r3
 8007098:	3b01      	subs	r3, #1
 800709a:	781a      	ldrb	r2, [r3, #0]
 800709c:	2a39      	cmp	r2, #57	@ 0x39
 800709e:	d050      	beq.n	8007142 <_dtoa_r+0xb72>
 80070a0:	3201      	adds	r2, #1
 80070a2:	701a      	strb	r2, [r3, #0]
 80070a4:	e4fe      	b.n	8006aa4 <_dtoa_r+0x4d4>
 80070a6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80070a8:	2b00      	cmp	r3, #0
 80070aa:	dd03      	ble.n	80070b4 <_dtoa_r+0xae4>
 80070ac:	2d39      	cmp	r5, #57	@ 0x39
 80070ae:	d0ee      	beq.n	800708e <_dtoa_r+0xabe>
 80070b0:	3501      	adds	r5, #1
 80070b2:	e7c1      	b.n	8007038 <_dtoa_r+0xa68>
 80070b4:	9b06      	ldr	r3, [sp, #24]
 80070b6:	9a06      	ldr	r2, [sp, #24]
 80070b8:	701d      	strb	r5, [r3, #0]
 80070ba:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80070bc:	4293      	cmp	r3, r2
 80070be:	d02b      	beq.n	8007118 <_dtoa_r+0xb48>
 80070c0:	2300      	movs	r3, #0
 80070c2:	220a      	movs	r2, #10
 80070c4:	9905      	ldr	r1, [sp, #20]
 80070c6:	9803      	ldr	r0, [sp, #12]
 80070c8:	f000 f9e0 	bl	800748c <__multadd>
 80070cc:	9b04      	ldr	r3, [sp, #16]
 80070ce:	9005      	str	r0, [sp, #20]
 80070d0:	429f      	cmp	r7, r3
 80070d2:	d109      	bne.n	80070e8 <_dtoa_r+0xb18>
 80070d4:	0039      	movs	r1, r7
 80070d6:	2300      	movs	r3, #0
 80070d8:	220a      	movs	r2, #10
 80070da:	9803      	ldr	r0, [sp, #12]
 80070dc:	f000 f9d6 	bl	800748c <__multadd>
 80070e0:	0007      	movs	r7, r0
 80070e2:	9004      	str	r0, [sp, #16]
 80070e4:	9406      	str	r4, [sp, #24]
 80070e6:	e778      	b.n	8006fda <_dtoa_r+0xa0a>
 80070e8:	0039      	movs	r1, r7
 80070ea:	2300      	movs	r3, #0
 80070ec:	220a      	movs	r2, #10
 80070ee:	9803      	ldr	r0, [sp, #12]
 80070f0:	f000 f9cc 	bl	800748c <__multadd>
 80070f4:	2300      	movs	r3, #0
 80070f6:	0007      	movs	r7, r0
 80070f8:	220a      	movs	r2, #10
 80070fa:	9904      	ldr	r1, [sp, #16]
 80070fc:	9803      	ldr	r0, [sp, #12]
 80070fe:	f000 f9c5 	bl	800748c <__multadd>
 8007102:	9004      	str	r0, [sp, #16]
 8007104:	e7ee      	b.n	80070e4 <_dtoa_r+0xb14>
 8007106:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007108:	2401      	movs	r4, #1
 800710a:	2b00      	cmp	r3, #0
 800710c:	dd00      	ble.n	8007110 <_dtoa_r+0xb40>
 800710e:	001c      	movs	r4, r3
 8007110:	9704      	str	r7, [sp, #16]
 8007112:	2700      	movs	r7, #0
 8007114:	9b08      	ldr	r3, [sp, #32]
 8007116:	191c      	adds	r4, r3, r4
 8007118:	9905      	ldr	r1, [sp, #20]
 800711a:	2201      	movs	r2, #1
 800711c:	9803      	ldr	r0, [sp, #12]
 800711e:	f000 fbb3 	bl	8007888 <__lshift>
 8007122:	0031      	movs	r1, r6
 8007124:	9005      	str	r0, [sp, #20]
 8007126:	f000 fc1b 	bl	8007960 <__mcmp>
 800712a:	2800      	cmp	r0, #0
 800712c:	dcb2      	bgt.n	8007094 <_dtoa_r+0xac4>
 800712e:	d101      	bne.n	8007134 <_dtoa_r+0xb64>
 8007130:	07ed      	lsls	r5, r5, #31
 8007132:	d4af      	bmi.n	8007094 <_dtoa_r+0xac4>
 8007134:	0023      	movs	r3, r4
 8007136:	001c      	movs	r4, r3
 8007138:	3b01      	subs	r3, #1
 800713a:	781a      	ldrb	r2, [r3, #0]
 800713c:	2a30      	cmp	r2, #48	@ 0x30
 800713e:	d0fa      	beq.n	8007136 <_dtoa_r+0xb66>
 8007140:	e4b0      	b.n	8006aa4 <_dtoa_r+0x4d4>
 8007142:	9a08      	ldr	r2, [sp, #32]
 8007144:	429a      	cmp	r2, r3
 8007146:	d1a6      	bne.n	8007096 <_dtoa_r+0xac6>
 8007148:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800714a:	3301      	adds	r3, #1
 800714c:	930c      	str	r3, [sp, #48]	@ 0x30
 800714e:	2331      	movs	r3, #49	@ 0x31
 8007150:	7013      	strb	r3, [r2, #0]
 8007152:	e4a7      	b.n	8006aa4 <_dtoa_r+0x4d4>
 8007154:	4b14      	ldr	r3, [pc, #80]	@ (80071a8 <_dtoa_r+0xbd8>)
 8007156:	9a26      	ldr	r2, [sp, #152]	@ 0x98
 8007158:	9308      	str	r3, [sp, #32]
 800715a:	4b14      	ldr	r3, [pc, #80]	@ (80071ac <_dtoa_r+0xbdc>)
 800715c:	2a00      	cmp	r2, #0
 800715e:	d001      	beq.n	8007164 <_dtoa_r+0xb94>
 8007160:	f7ff fa7e 	bl	8006660 <_dtoa_r+0x90>
 8007164:	f7ff fa7e 	bl	8006664 <_dtoa_r+0x94>
 8007168:	9b22      	ldr	r3, [sp, #136]	@ 0x88
 800716a:	2b01      	cmp	r3, #1
 800716c:	dc00      	bgt.n	8007170 <_dtoa_r+0xba0>
 800716e:	e648      	b.n	8006e02 <_dtoa_r+0x832>
 8007170:	2001      	movs	r0, #1
 8007172:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8007174:	e665      	b.n	8006e42 <_dtoa_r+0x872>
 8007176:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007178:	2b00      	cmp	r3, #0
 800717a:	dc00      	bgt.n	800717e <_dtoa_r+0xbae>
 800717c:	e6a9      	b.n	8006ed2 <_dtoa_r+0x902>
 800717e:	2400      	movs	r4, #0
 8007180:	0031      	movs	r1, r6
 8007182:	9805      	ldr	r0, [sp, #20]
 8007184:	f7ff f99e 	bl	80064c4 <quorem>
 8007188:	9b08      	ldr	r3, [sp, #32]
 800718a:	3030      	adds	r0, #48	@ 0x30
 800718c:	5518      	strb	r0, [r3, r4]
 800718e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007190:	3401      	adds	r4, #1
 8007192:	0005      	movs	r5, r0
 8007194:	42a3      	cmp	r3, r4
 8007196:	ddb6      	ble.n	8007106 <_dtoa_r+0xb36>
 8007198:	2300      	movs	r3, #0
 800719a:	220a      	movs	r2, #10
 800719c:	9905      	ldr	r1, [sp, #20]
 800719e:	9803      	ldr	r0, [sp, #12]
 80071a0:	f000 f974 	bl	800748c <__multadd>
 80071a4:	9005      	str	r0, [sp, #20]
 80071a6:	e7eb      	b.n	8007180 <_dtoa_r+0xbb0>
 80071a8:	08009dbe 	.word	0x08009dbe
 80071ac:	08009dc6 	.word	0x08009dc6

080071b0 <_free_r>:
 80071b0:	b570      	push	{r4, r5, r6, lr}
 80071b2:	0005      	movs	r5, r0
 80071b4:	1e0c      	subs	r4, r1, #0
 80071b6:	d010      	beq.n	80071da <_free_r+0x2a>
 80071b8:	3c04      	subs	r4, #4
 80071ba:	6823      	ldr	r3, [r4, #0]
 80071bc:	2b00      	cmp	r3, #0
 80071be:	da00      	bge.n	80071c2 <_free_r+0x12>
 80071c0:	18e4      	adds	r4, r4, r3
 80071c2:	0028      	movs	r0, r5
 80071c4:	f000 f8ea 	bl	800739c <__malloc_lock>
 80071c8:	4a1d      	ldr	r2, [pc, #116]	@ (8007240 <_free_r+0x90>)
 80071ca:	6813      	ldr	r3, [r2, #0]
 80071cc:	2b00      	cmp	r3, #0
 80071ce:	d105      	bne.n	80071dc <_free_r+0x2c>
 80071d0:	6063      	str	r3, [r4, #4]
 80071d2:	6014      	str	r4, [r2, #0]
 80071d4:	0028      	movs	r0, r5
 80071d6:	f000 f8e9 	bl	80073ac <__malloc_unlock>
 80071da:	bd70      	pop	{r4, r5, r6, pc}
 80071dc:	42a3      	cmp	r3, r4
 80071de:	d908      	bls.n	80071f2 <_free_r+0x42>
 80071e0:	6820      	ldr	r0, [r4, #0]
 80071e2:	1821      	adds	r1, r4, r0
 80071e4:	428b      	cmp	r3, r1
 80071e6:	d1f3      	bne.n	80071d0 <_free_r+0x20>
 80071e8:	6819      	ldr	r1, [r3, #0]
 80071ea:	685b      	ldr	r3, [r3, #4]
 80071ec:	1809      	adds	r1, r1, r0
 80071ee:	6021      	str	r1, [r4, #0]
 80071f0:	e7ee      	b.n	80071d0 <_free_r+0x20>
 80071f2:	001a      	movs	r2, r3
 80071f4:	685b      	ldr	r3, [r3, #4]
 80071f6:	2b00      	cmp	r3, #0
 80071f8:	d001      	beq.n	80071fe <_free_r+0x4e>
 80071fa:	42a3      	cmp	r3, r4
 80071fc:	d9f9      	bls.n	80071f2 <_free_r+0x42>
 80071fe:	6811      	ldr	r1, [r2, #0]
 8007200:	1850      	adds	r0, r2, r1
 8007202:	42a0      	cmp	r0, r4
 8007204:	d10b      	bne.n	800721e <_free_r+0x6e>
 8007206:	6820      	ldr	r0, [r4, #0]
 8007208:	1809      	adds	r1, r1, r0
 800720a:	1850      	adds	r0, r2, r1
 800720c:	6011      	str	r1, [r2, #0]
 800720e:	4283      	cmp	r3, r0
 8007210:	d1e0      	bne.n	80071d4 <_free_r+0x24>
 8007212:	6818      	ldr	r0, [r3, #0]
 8007214:	685b      	ldr	r3, [r3, #4]
 8007216:	1841      	adds	r1, r0, r1
 8007218:	6011      	str	r1, [r2, #0]
 800721a:	6053      	str	r3, [r2, #4]
 800721c:	e7da      	b.n	80071d4 <_free_r+0x24>
 800721e:	42a0      	cmp	r0, r4
 8007220:	d902      	bls.n	8007228 <_free_r+0x78>
 8007222:	230c      	movs	r3, #12
 8007224:	602b      	str	r3, [r5, #0]
 8007226:	e7d5      	b.n	80071d4 <_free_r+0x24>
 8007228:	6820      	ldr	r0, [r4, #0]
 800722a:	1821      	adds	r1, r4, r0
 800722c:	428b      	cmp	r3, r1
 800722e:	d103      	bne.n	8007238 <_free_r+0x88>
 8007230:	6819      	ldr	r1, [r3, #0]
 8007232:	685b      	ldr	r3, [r3, #4]
 8007234:	1809      	adds	r1, r1, r0
 8007236:	6021      	str	r1, [r4, #0]
 8007238:	6063      	str	r3, [r4, #4]
 800723a:	6054      	str	r4, [r2, #4]
 800723c:	e7ca      	b.n	80071d4 <_free_r+0x24>
 800723e:	46c0      	nop			@ (mov r8, r8)
 8007240:	200003bc 	.word	0x200003bc

08007244 <malloc>:
 8007244:	b510      	push	{r4, lr}
 8007246:	4b03      	ldr	r3, [pc, #12]	@ (8007254 <malloc+0x10>)
 8007248:	0001      	movs	r1, r0
 800724a:	6818      	ldr	r0, [r3, #0]
 800724c:	f000 f826 	bl	800729c <_malloc_r>
 8007250:	bd10      	pop	{r4, pc}
 8007252:	46c0      	nop			@ (mov r8, r8)
 8007254:	20000020 	.word	0x20000020

08007258 <sbrk_aligned>:
 8007258:	b570      	push	{r4, r5, r6, lr}
 800725a:	4e0f      	ldr	r6, [pc, #60]	@ (8007298 <sbrk_aligned+0x40>)
 800725c:	000d      	movs	r5, r1
 800725e:	6831      	ldr	r1, [r6, #0]
 8007260:	0004      	movs	r4, r0
 8007262:	2900      	cmp	r1, #0
 8007264:	d102      	bne.n	800726c <sbrk_aligned+0x14>
 8007266:	f001 fe49 	bl	8008efc <_sbrk_r>
 800726a:	6030      	str	r0, [r6, #0]
 800726c:	0029      	movs	r1, r5
 800726e:	0020      	movs	r0, r4
 8007270:	f001 fe44 	bl	8008efc <_sbrk_r>
 8007274:	1c43      	adds	r3, r0, #1
 8007276:	d103      	bne.n	8007280 <sbrk_aligned+0x28>
 8007278:	2501      	movs	r5, #1
 800727a:	426d      	negs	r5, r5
 800727c:	0028      	movs	r0, r5
 800727e:	bd70      	pop	{r4, r5, r6, pc}
 8007280:	2303      	movs	r3, #3
 8007282:	1cc5      	adds	r5, r0, #3
 8007284:	439d      	bics	r5, r3
 8007286:	42a8      	cmp	r0, r5
 8007288:	d0f8      	beq.n	800727c <sbrk_aligned+0x24>
 800728a:	1a29      	subs	r1, r5, r0
 800728c:	0020      	movs	r0, r4
 800728e:	f001 fe35 	bl	8008efc <_sbrk_r>
 8007292:	3001      	adds	r0, #1
 8007294:	d1f2      	bne.n	800727c <sbrk_aligned+0x24>
 8007296:	e7ef      	b.n	8007278 <sbrk_aligned+0x20>
 8007298:	200003b8 	.word	0x200003b8

0800729c <_malloc_r>:
 800729c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800729e:	2203      	movs	r2, #3
 80072a0:	1ccb      	adds	r3, r1, #3
 80072a2:	4393      	bics	r3, r2
 80072a4:	3308      	adds	r3, #8
 80072a6:	0005      	movs	r5, r0
 80072a8:	001f      	movs	r7, r3
 80072aa:	2b0c      	cmp	r3, #12
 80072ac:	d234      	bcs.n	8007318 <_malloc_r+0x7c>
 80072ae:	270c      	movs	r7, #12
 80072b0:	42b9      	cmp	r1, r7
 80072b2:	d833      	bhi.n	800731c <_malloc_r+0x80>
 80072b4:	0028      	movs	r0, r5
 80072b6:	f000 f871 	bl	800739c <__malloc_lock>
 80072ba:	4e37      	ldr	r6, [pc, #220]	@ (8007398 <_malloc_r+0xfc>)
 80072bc:	6833      	ldr	r3, [r6, #0]
 80072be:	001c      	movs	r4, r3
 80072c0:	2c00      	cmp	r4, #0
 80072c2:	d12f      	bne.n	8007324 <_malloc_r+0x88>
 80072c4:	0039      	movs	r1, r7
 80072c6:	0028      	movs	r0, r5
 80072c8:	f7ff ffc6 	bl	8007258 <sbrk_aligned>
 80072cc:	0004      	movs	r4, r0
 80072ce:	1c43      	adds	r3, r0, #1
 80072d0:	d15f      	bne.n	8007392 <_malloc_r+0xf6>
 80072d2:	6834      	ldr	r4, [r6, #0]
 80072d4:	9400      	str	r4, [sp, #0]
 80072d6:	9b00      	ldr	r3, [sp, #0]
 80072d8:	2b00      	cmp	r3, #0
 80072da:	d14a      	bne.n	8007372 <_malloc_r+0xd6>
 80072dc:	2c00      	cmp	r4, #0
 80072de:	d052      	beq.n	8007386 <_malloc_r+0xea>
 80072e0:	6823      	ldr	r3, [r4, #0]
 80072e2:	0028      	movs	r0, r5
 80072e4:	18e3      	adds	r3, r4, r3
 80072e6:	9900      	ldr	r1, [sp, #0]
 80072e8:	9301      	str	r3, [sp, #4]
 80072ea:	f001 fe07 	bl	8008efc <_sbrk_r>
 80072ee:	9b01      	ldr	r3, [sp, #4]
 80072f0:	4283      	cmp	r3, r0
 80072f2:	d148      	bne.n	8007386 <_malloc_r+0xea>
 80072f4:	6823      	ldr	r3, [r4, #0]
 80072f6:	0028      	movs	r0, r5
 80072f8:	1aff      	subs	r7, r7, r3
 80072fa:	0039      	movs	r1, r7
 80072fc:	f7ff ffac 	bl	8007258 <sbrk_aligned>
 8007300:	3001      	adds	r0, #1
 8007302:	d040      	beq.n	8007386 <_malloc_r+0xea>
 8007304:	6823      	ldr	r3, [r4, #0]
 8007306:	19db      	adds	r3, r3, r7
 8007308:	6023      	str	r3, [r4, #0]
 800730a:	6833      	ldr	r3, [r6, #0]
 800730c:	685a      	ldr	r2, [r3, #4]
 800730e:	2a00      	cmp	r2, #0
 8007310:	d133      	bne.n	800737a <_malloc_r+0xde>
 8007312:	9b00      	ldr	r3, [sp, #0]
 8007314:	6033      	str	r3, [r6, #0]
 8007316:	e019      	b.n	800734c <_malloc_r+0xb0>
 8007318:	2b00      	cmp	r3, #0
 800731a:	dac9      	bge.n	80072b0 <_malloc_r+0x14>
 800731c:	230c      	movs	r3, #12
 800731e:	602b      	str	r3, [r5, #0]
 8007320:	2000      	movs	r0, #0
 8007322:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007324:	6821      	ldr	r1, [r4, #0]
 8007326:	1bc9      	subs	r1, r1, r7
 8007328:	d420      	bmi.n	800736c <_malloc_r+0xd0>
 800732a:	290b      	cmp	r1, #11
 800732c:	d90a      	bls.n	8007344 <_malloc_r+0xa8>
 800732e:	19e2      	adds	r2, r4, r7
 8007330:	6027      	str	r7, [r4, #0]
 8007332:	42a3      	cmp	r3, r4
 8007334:	d104      	bne.n	8007340 <_malloc_r+0xa4>
 8007336:	6032      	str	r2, [r6, #0]
 8007338:	6863      	ldr	r3, [r4, #4]
 800733a:	6011      	str	r1, [r2, #0]
 800733c:	6053      	str	r3, [r2, #4]
 800733e:	e005      	b.n	800734c <_malloc_r+0xb0>
 8007340:	605a      	str	r2, [r3, #4]
 8007342:	e7f9      	b.n	8007338 <_malloc_r+0x9c>
 8007344:	6862      	ldr	r2, [r4, #4]
 8007346:	42a3      	cmp	r3, r4
 8007348:	d10e      	bne.n	8007368 <_malloc_r+0xcc>
 800734a:	6032      	str	r2, [r6, #0]
 800734c:	0028      	movs	r0, r5
 800734e:	f000 f82d 	bl	80073ac <__malloc_unlock>
 8007352:	0020      	movs	r0, r4
 8007354:	2207      	movs	r2, #7
 8007356:	300b      	adds	r0, #11
 8007358:	1d23      	adds	r3, r4, #4
 800735a:	4390      	bics	r0, r2
 800735c:	1ac2      	subs	r2, r0, r3
 800735e:	4298      	cmp	r0, r3
 8007360:	d0df      	beq.n	8007322 <_malloc_r+0x86>
 8007362:	1a1b      	subs	r3, r3, r0
 8007364:	50a3      	str	r3, [r4, r2]
 8007366:	e7dc      	b.n	8007322 <_malloc_r+0x86>
 8007368:	605a      	str	r2, [r3, #4]
 800736a:	e7ef      	b.n	800734c <_malloc_r+0xb0>
 800736c:	0023      	movs	r3, r4
 800736e:	6864      	ldr	r4, [r4, #4]
 8007370:	e7a6      	b.n	80072c0 <_malloc_r+0x24>
 8007372:	9c00      	ldr	r4, [sp, #0]
 8007374:	6863      	ldr	r3, [r4, #4]
 8007376:	9300      	str	r3, [sp, #0]
 8007378:	e7ad      	b.n	80072d6 <_malloc_r+0x3a>
 800737a:	001a      	movs	r2, r3
 800737c:	685b      	ldr	r3, [r3, #4]
 800737e:	42a3      	cmp	r3, r4
 8007380:	d1fb      	bne.n	800737a <_malloc_r+0xde>
 8007382:	2300      	movs	r3, #0
 8007384:	e7da      	b.n	800733c <_malloc_r+0xa0>
 8007386:	230c      	movs	r3, #12
 8007388:	0028      	movs	r0, r5
 800738a:	602b      	str	r3, [r5, #0]
 800738c:	f000 f80e 	bl	80073ac <__malloc_unlock>
 8007390:	e7c6      	b.n	8007320 <_malloc_r+0x84>
 8007392:	6007      	str	r7, [r0, #0]
 8007394:	e7da      	b.n	800734c <_malloc_r+0xb0>
 8007396:	46c0      	nop			@ (mov r8, r8)
 8007398:	200003bc 	.word	0x200003bc

0800739c <__malloc_lock>:
 800739c:	b510      	push	{r4, lr}
 800739e:	4802      	ldr	r0, [pc, #8]	@ (80073a8 <__malloc_lock+0xc>)
 80073a0:	f7ff f87f 	bl	80064a2 <__retarget_lock_acquire_recursive>
 80073a4:	bd10      	pop	{r4, pc}
 80073a6:	46c0      	nop			@ (mov r8, r8)
 80073a8:	200003b4 	.word	0x200003b4

080073ac <__malloc_unlock>:
 80073ac:	b510      	push	{r4, lr}
 80073ae:	4802      	ldr	r0, [pc, #8]	@ (80073b8 <__malloc_unlock+0xc>)
 80073b0:	f7ff f878 	bl	80064a4 <__retarget_lock_release_recursive>
 80073b4:	bd10      	pop	{r4, pc}
 80073b6:	46c0      	nop			@ (mov r8, r8)
 80073b8:	200003b4 	.word	0x200003b4

080073bc <_Balloc>:
 80073bc:	b570      	push	{r4, r5, r6, lr}
 80073be:	69c5      	ldr	r5, [r0, #28]
 80073c0:	0006      	movs	r6, r0
 80073c2:	000c      	movs	r4, r1
 80073c4:	2d00      	cmp	r5, #0
 80073c6:	d10e      	bne.n	80073e6 <_Balloc+0x2a>
 80073c8:	2010      	movs	r0, #16
 80073ca:	f7ff ff3b 	bl	8007244 <malloc>
 80073ce:	1e02      	subs	r2, r0, #0
 80073d0:	61f0      	str	r0, [r6, #28]
 80073d2:	d104      	bne.n	80073de <_Balloc+0x22>
 80073d4:	216b      	movs	r1, #107	@ 0x6b
 80073d6:	4b19      	ldr	r3, [pc, #100]	@ (800743c <_Balloc+0x80>)
 80073d8:	4819      	ldr	r0, [pc, #100]	@ (8007440 <_Balloc+0x84>)
 80073da:	f001 fdb1 	bl	8008f40 <__assert_func>
 80073de:	6045      	str	r5, [r0, #4]
 80073e0:	6085      	str	r5, [r0, #8]
 80073e2:	6005      	str	r5, [r0, #0]
 80073e4:	60c5      	str	r5, [r0, #12]
 80073e6:	69f5      	ldr	r5, [r6, #28]
 80073e8:	68eb      	ldr	r3, [r5, #12]
 80073ea:	2b00      	cmp	r3, #0
 80073ec:	d013      	beq.n	8007416 <_Balloc+0x5a>
 80073ee:	69f3      	ldr	r3, [r6, #28]
 80073f0:	00a2      	lsls	r2, r4, #2
 80073f2:	68db      	ldr	r3, [r3, #12]
 80073f4:	189b      	adds	r3, r3, r2
 80073f6:	6818      	ldr	r0, [r3, #0]
 80073f8:	2800      	cmp	r0, #0
 80073fa:	d118      	bne.n	800742e <_Balloc+0x72>
 80073fc:	2101      	movs	r1, #1
 80073fe:	000d      	movs	r5, r1
 8007400:	40a5      	lsls	r5, r4
 8007402:	1d6a      	adds	r2, r5, #5
 8007404:	0030      	movs	r0, r6
 8007406:	0092      	lsls	r2, r2, #2
 8007408:	f001 fdb8 	bl	8008f7c <_calloc_r>
 800740c:	2800      	cmp	r0, #0
 800740e:	d00c      	beq.n	800742a <_Balloc+0x6e>
 8007410:	6044      	str	r4, [r0, #4]
 8007412:	6085      	str	r5, [r0, #8]
 8007414:	e00d      	b.n	8007432 <_Balloc+0x76>
 8007416:	2221      	movs	r2, #33	@ 0x21
 8007418:	2104      	movs	r1, #4
 800741a:	0030      	movs	r0, r6
 800741c:	f001 fdae 	bl	8008f7c <_calloc_r>
 8007420:	69f3      	ldr	r3, [r6, #28]
 8007422:	60e8      	str	r0, [r5, #12]
 8007424:	68db      	ldr	r3, [r3, #12]
 8007426:	2b00      	cmp	r3, #0
 8007428:	d1e1      	bne.n	80073ee <_Balloc+0x32>
 800742a:	2000      	movs	r0, #0
 800742c:	bd70      	pop	{r4, r5, r6, pc}
 800742e:	6802      	ldr	r2, [r0, #0]
 8007430:	601a      	str	r2, [r3, #0]
 8007432:	2300      	movs	r3, #0
 8007434:	6103      	str	r3, [r0, #16]
 8007436:	60c3      	str	r3, [r0, #12]
 8007438:	e7f8      	b.n	800742c <_Balloc+0x70>
 800743a:	46c0      	nop			@ (mov r8, r8)
 800743c:	08009dcb 	.word	0x08009dcb
 8007440:	08009e4b 	.word	0x08009e4b

08007444 <_Bfree>:
 8007444:	b570      	push	{r4, r5, r6, lr}
 8007446:	69c6      	ldr	r6, [r0, #28]
 8007448:	0005      	movs	r5, r0
 800744a:	000c      	movs	r4, r1
 800744c:	2e00      	cmp	r6, #0
 800744e:	d10e      	bne.n	800746e <_Bfree+0x2a>
 8007450:	2010      	movs	r0, #16
 8007452:	f7ff fef7 	bl	8007244 <malloc>
 8007456:	1e02      	subs	r2, r0, #0
 8007458:	61e8      	str	r0, [r5, #28]
 800745a:	d104      	bne.n	8007466 <_Bfree+0x22>
 800745c:	218f      	movs	r1, #143	@ 0x8f
 800745e:	4b09      	ldr	r3, [pc, #36]	@ (8007484 <_Bfree+0x40>)
 8007460:	4809      	ldr	r0, [pc, #36]	@ (8007488 <_Bfree+0x44>)
 8007462:	f001 fd6d 	bl	8008f40 <__assert_func>
 8007466:	6046      	str	r6, [r0, #4]
 8007468:	6086      	str	r6, [r0, #8]
 800746a:	6006      	str	r6, [r0, #0]
 800746c:	60c6      	str	r6, [r0, #12]
 800746e:	2c00      	cmp	r4, #0
 8007470:	d007      	beq.n	8007482 <_Bfree+0x3e>
 8007472:	69eb      	ldr	r3, [r5, #28]
 8007474:	6862      	ldr	r2, [r4, #4]
 8007476:	68db      	ldr	r3, [r3, #12]
 8007478:	0092      	lsls	r2, r2, #2
 800747a:	189b      	adds	r3, r3, r2
 800747c:	681a      	ldr	r2, [r3, #0]
 800747e:	6022      	str	r2, [r4, #0]
 8007480:	601c      	str	r4, [r3, #0]
 8007482:	bd70      	pop	{r4, r5, r6, pc}
 8007484:	08009dcb 	.word	0x08009dcb
 8007488:	08009e4b 	.word	0x08009e4b

0800748c <__multadd>:
 800748c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 800748e:	000f      	movs	r7, r1
 8007490:	9001      	str	r0, [sp, #4]
 8007492:	000c      	movs	r4, r1
 8007494:	001e      	movs	r6, r3
 8007496:	2000      	movs	r0, #0
 8007498:	690d      	ldr	r5, [r1, #16]
 800749a:	3714      	adds	r7, #20
 800749c:	683b      	ldr	r3, [r7, #0]
 800749e:	3001      	adds	r0, #1
 80074a0:	b299      	uxth	r1, r3
 80074a2:	4351      	muls	r1, r2
 80074a4:	0c1b      	lsrs	r3, r3, #16
 80074a6:	4353      	muls	r3, r2
 80074a8:	1989      	adds	r1, r1, r6
 80074aa:	0c0e      	lsrs	r6, r1, #16
 80074ac:	199b      	adds	r3, r3, r6
 80074ae:	0c1e      	lsrs	r6, r3, #16
 80074b0:	b289      	uxth	r1, r1
 80074b2:	041b      	lsls	r3, r3, #16
 80074b4:	185b      	adds	r3, r3, r1
 80074b6:	c708      	stmia	r7!, {r3}
 80074b8:	4285      	cmp	r5, r0
 80074ba:	dcef      	bgt.n	800749c <__multadd+0x10>
 80074bc:	2e00      	cmp	r6, #0
 80074be:	d022      	beq.n	8007506 <__multadd+0x7a>
 80074c0:	68a3      	ldr	r3, [r4, #8]
 80074c2:	42ab      	cmp	r3, r5
 80074c4:	dc19      	bgt.n	80074fa <__multadd+0x6e>
 80074c6:	6861      	ldr	r1, [r4, #4]
 80074c8:	9801      	ldr	r0, [sp, #4]
 80074ca:	3101      	adds	r1, #1
 80074cc:	f7ff ff76 	bl	80073bc <_Balloc>
 80074d0:	1e07      	subs	r7, r0, #0
 80074d2:	d105      	bne.n	80074e0 <__multadd+0x54>
 80074d4:	003a      	movs	r2, r7
 80074d6:	21ba      	movs	r1, #186	@ 0xba
 80074d8:	4b0c      	ldr	r3, [pc, #48]	@ (800750c <__multadd+0x80>)
 80074da:	480d      	ldr	r0, [pc, #52]	@ (8007510 <__multadd+0x84>)
 80074dc:	f001 fd30 	bl	8008f40 <__assert_func>
 80074e0:	0021      	movs	r1, r4
 80074e2:	6922      	ldr	r2, [r4, #16]
 80074e4:	310c      	adds	r1, #12
 80074e6:	3202      	adds	r2, #2
 80074e8:	0092      	lsls	r2, r2, #2
 80074ea:	300c      	adds	r0, #12
 80074ec:	f001 fd18 	bl	8008f20 <memcpy>
 80074f0:	0021      	movs	r1, r4
 80074f2:	9801      	ldr	r0, [sp, #4]
 80074f4:	f7ff ffa6 	bl	8007444 <_Bfree>
 80074f8:	003c      	movs	r4, r7
 80074fa:	1d2b      	adds	r3, r5, #4
 80074fc:	009b      	lsls	r3, r3, #2
 80074fe:	18e3      	adds	r3, r4, r3
 8007500:	3501      	adds	r5, #1
 8007502:	605e      	str	r6, [r3, #4]
 8007504:	6125      	str	r5, [r4, #16]
 8007506:	0020      	movs	r0, r4
 8007508:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800750a:	46c0      	nop			@ (mov r8, r8)
 800750c:	08009e3a 	.word	0x08009e3a
 8007510:	08009e4b 	.word	0x08009e4b

08007514 <__s2b>:
 8007514:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007516:	0007      	movs	r7, r0
 8007518:	0018      	movs	r0, r3
 800751a:	000c      	movs	r4, r1
 800751c:	3008      	adds	r0, #8
 800751e:	2109      	movs	r1, #9
 8007520:	9301      	str	r3, [sp, #4]
 8007522:	0015      	movs	r5, r2
 8007524:	f7f8 fe96 	bl	8000254 <__divsi3>
 8007528:	2301      	movs	r3, #1
 800752a:	2100      	movs	r1, #0
 800752c:	4283      	cmp	r3, r0
 800752e:	db0a      	blt.n	8007546 <__s2b+0x32>
 8007530:	0038      	movs	r0, r7
 8007532:	f7ff ff43 	bl	80073bc <_Balloc>
 8007536:	1e01      	subs	r1, r0, #0
 8007538:	d108      	bne.n	800754c <__s2b+0x38>
 800753a:	000a      	movs	r2, r1
 800753c:	4b19      	ldr	r3, [pc, #100]	@ (80075a4 <__s2b+0x90>)
 800753e:	481a      	ldr	r0, [pc, #104]	@ (80075a8 <__s2b+0x94>)
 8007540:	31d3      	adds	r1, #211	@ 0xd3
 8007542:	f001 fcfd 	bl	8008f40 <__assert_func>
 8007546:	005b      	lsls	r3, r3, #1
 8007548:	3101      	adds	r1, #1
 800754a:	e7ef      	b.n	800752c <__s2b+0x18>
 800754c:	9b08      	ldr	r3, [sp, #32]
 800754e:	6143      	str	r3, [r0, #20]
 8007550:	2301      	movs	r3, #1
 8007552:	6103      	str	r3, [r0, #16]
 8007554:	2d09      	cmp	r5, #9
 8007556:	dd18      	ble.n	800758a <__s2b+0x76>
 8007558:	0023      	movs	r3, r4
 800755a:	3309      	adds	r3, #9
 800755c:	001e      	movs	r6, r3
 800755e:	9300      	str	r3, [sp, #0]
 8007560:	1964      	adds	r4, r4, r5
 8007562:	7833      	ldrb	r3, [r6, #0]
 8007564:	220a      	movs	r2, #10
 8007566:	0038      	movs	r0, r7
 8007568:	3b30      	subs	r3, #48	@ 0x30
 800756a:	f7ff ff8f 	bl	800748c <__multadd>
 800756e:	3601      	adds	r6, #1
 8007570:	0001      	movs	r1, r0
 8007572:	42a6      	cmp	r6, r4
 8007574:	d1f5      	bne.n	8007562 <__s2b+0x4e>
 8007576:	002c      	movs	r4, r5
 8007578:	9b00      	ldr	r3, [sp, #0]
 800757a:	3c08      	subs	r4, #8
 800757c:	191c      	adds	r4, r3, r4
 800757e:	002e      	movs	r6, r5
 8007580:	9b01      	ldr	r3, [sp, #4]
 8007582:	429e      	cmp	r6, r3
 8007584:	db04      	blt.n	8007590 <__s2b+0x7c>
 8007586:	0008      	movs	r0, r1
 8007588:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800758a:	2509      	movs	r5, #9
 800758c:	340a      	adds	r4, #10
 800758e:	e7f6      	b.n	800757e <__s2b+0x6a>
 8007590:	1b63      	subs	r3, r4, r5
 8007592:	5d9b      	ldrb	r3, [r3, r6]
 8007594:	220a      	movs	r2, #10
 8007596:	0038      	movs	r0, r7
 8007598:	3b30      	subs	r3, #48	@ 0x30
 800759a:	f7ff ff77 	bl	800748c <__multadd>
 800759e:	3601      	adds	r6, #1
 80075a0:	0001      	movs	r1, r0
 80075a2:	e7ed      	b.n	8007580 <__s2b+0x6c>
 80075a4:	08009e3a 	.word	0x08009e3a
 80075a8:	08009e4b 	.word	0x08009e4b

080075ac <__hi0bits>:
 80075ac:	2280      	movs	r2, #128	@ 0x80
 80075ae:	0003      	movs	r3, r0
 80075b0:	0252      	lsls	r2, r2, #9
 80075b2:	2000      	movs	r0, #0
 80075b4:	4293      	cmp	r3, r2
 80075b6:	d201      	bcs.n	80075bc <__hi0bits+0x10>
 80075b8:	041b      	lsls	r3, r3, #16
 80075ba:	3010      	adds	r0, #16
 80075bc:	2280      	movs	r2, #128	@ 0x80
 80075be:	0452      	lsls	r2, r2, #17
 80075c0:	4293      	cmp	r3, r2
 80075c2:	d201      	bcs.n	80075c8 <__hi0bits+0x1c>
 80075c4:	3008      	adds	r0, #8
 80075c6:	021b      	lsls	r3, r3, #8
 80075c8:	2280      	movs	r2, #128	@ 0x80
 80075ca:	0552      	lsls	r2, r2, #21
 80075cc:	4293      	cmp	r3, r2
 80075ce:	d201      	bcs.n	80075d4 <__hi0bits+0x28>
 80075d0:	3004      	adds	r0, #4
 80075d2:	011b      	lsls	r3, r3, #4
 80075d4:	2280      	movs	r2, #128	@ 0x80
 80075d6:	05d2      	lsls	r2, r2, #23
 80075d8:	4293      	cmp	r3, r2
 80075da:	d201      	bcs.n	80075e0 <__hi0bits+0x34>
 80075dc:	3002      	adds	r0, #2
 80075de:	009b      	lsls	r3, r3, #2
 80075e0:	2b00      	cmp	r3, #0
 80075e2:	db03      	blt.n	80075ec <__hi0bits+0x40>
 80075e4:	3001      	adds	r0, #1
 80075e6:	4213      	tst	r3, r2
 80075e8:	d100      	bne.n	80075ec <__hi0bits+0x40>
 80075ea:	2020      	movs	r0, #32
 80075ec:	4770      	bx	lr

080075ee <__lo0bits>:
 80075ee:	6803      	ldr	r3, [r0, #0]
 80075f0:	0001      	movs	r1, r0
 80075f2:	2207      	movs	r2, #7
 80075f4:	0018      	movs	r0, r3
 80075f6:	4010      	ands	r0, r2
 80075f8:	4213      	tst	r3, r2
 80075fa:	d00d      	beq.n	8007618 <__lo0bits+0x2a>
 80075fc:	3a06      	subs	r2, #6
 80075fe:	2000      	movs	r0, #0
 8007600:	4213      	tst	r3, r2
 8007602:	d105      	bne.n	8007610 <__lo0bits+0x22>
 8007604:	3002      	adds	r0, #2
 8007606:	4203      	tst	r3, r0
 8007608:	d003      	beq.n	8007612 <__lo0bits+0x24>
 800760a:	40d3      	lsrs	r3, r2
 800760c:	0010      	movs	r0, r2
 800760e:	600b      	str	r3, [r1, #0]
 8007610:	4770      	bx	lr
 8007612:	089b      	lsrs	r3, r3, #2
 8007614:	600b      	str	r3, [r1, #0]
 8007616:	e7fb      	b.n	8007610 <__lo0bits+0x22>
 8007618:	b29a      	uxth	r2, r3
 800761a:	2a00      	cmp	r2, #0
 800761c:	d101      	bne.n	8007622 <__lo0bits+0x34>
 800761e:	2010      	movs	r0, #16
 8007620:	0c1b      	lsrs	r3, r3, #16
 8007622:	b2da      	uxtb	r2, r3
 8007624:	2a00      	cmp	r2, #0
 8007626:	d101      	bne.n	800762c <__lo0bits+0x3e>
 8007628:	3008      	adds	r0, #8
 800762a:	0a1b      	lsrs	r3, r3, #8
 800762c:	071a      	lsls	r2, r3, #28
 800762e:	d101      	bne.n	8007634 <__lo0bits+0x46>
 8007630:	3004      	adds	r0, #4
 8007632:	091b      	lsrs	r3, r3, #4
 8007634:	079a      	lsls	r2, r3, #30
 8007636:	d101      	bne.n	800763c <__lo0bits+0x4e>
 8007638:	3002      	adds	r0, #2
 800763a:	089b      	lsrs	r3, r3, #2
 800763c:	07da      	lsls	r2, r3, #31
 800763e:	d4e9      	bmi.n	8007614 <__lo0bits+0x26>
 8007640:	3001      	adds	r0, #1
 8007642:	085b      	lsrs	r3, r3, #1
 8007644:	d1e6      	bne.n	8007614 <__lo0bits+0x26>
 8007646:	2020      	movs	r0, #32
 8007648:	e7e2      	b.n	8007610 <__lo0bits+0x22>
	...

0800764c <__i2b>:
 800764c:	b510      	push	{r4, lr}
 800764e:	000c      	movs	r4, r1
 8007650:	2101      	movs	r1, #1
 8007652:	f7ff feb3 	bl	80073bc <_Balloc>
 8007656:	2800      	cmp	r0, #0
 8007658:	d107      	bne.n	800766a <__i2b+0x1e>
 800765a:	2146      	movs	r1, #70	@ 0x46
 800765c:	4c05      	ldr	r4, [pc, #20]	@ (8007674 <__i2b+0x28>)
 800765e:	0002      	movs	r2, r0
 8007660:	4b05      	ldr	r3, [pc, #20]	@ (8007678 <__i2b+0x2c>)
 8007662:	0020      	movs	r0, r4
 8007664:	31ff      	adds	r1, #255	@ 0xff
 8007666:	f001 fc6b 	bl	8008f40 <__assert_func>
 800766a:	2301      	movs	r3, #1
 800766c:	6144      	str	r4, [r0, #20]
 800766e:	6103      	str	r3, [r0, #16]
 8007670:	bd10      	pop	{r4, pc}
 8007672:	46c0      	nop			@ (mov r8, r8)
 8007674:	08009e4b 	.word	0x08009e4b
 8007678:	08009e3a 	.word	0x08009e3a

0800767c <__multiply>:
 800767c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800767e:	0014      	movs	r4, r2
 8007680:	690a      	ldr	r2, [r1, #16]
 8007682:	6923      	ldr	r3, [r4, #16]
 8007684:	000d      	movs	r5, r1
 8007686:	b089      	sub	sp, #36	@ 0x24
 8007688:	429a      	cmp	r2, r3
 800768a:	db02      	blt.n	8007692 <__multiply+0x16>
 800768c:	0023      	movs	r3, r4
 800768e:	000c      	movs	r4, r1
 8007690:	001d      	movs	r5, r3
 8007692:	6927      	ldr	r7, [r4, #16]
 8007694:	692e      	ldr	r6, [r5, #16]
 8007696:	6861      	ldr	r1, [r4, #4]
 8007698:	19bb      	adds	r3, r7, r6
 800769a:	9300      	str	r3, [sp, #0]
 800769c:	68a3      	ldr	r3, [r4, #8]
 800769e:	19ba      	adds	r2, r7, r6
 80076a0:	4293      	cmp	r3, r2
 80076a2:	da00      	bge.n	80076a6 <__multiply+0x2a>
 80076a4:	3101      	adds	r1, #1
 80076a6:	f7ff fe89 	bl	80073bc <_Balloc>
 80076aa:	4684      	mov	ip, r0
 80076ac:	2800      	cmp	r0, #0
 80076ae:	d106      	bne.n	80076be <__multiply+0x42>
 80076b0:	21b1      	movs	r1, #177	@ 0xb1
 80076b2:	4662      	mov	r2, ip
 80076b4:	4b44      	ldr	r3, [pc, #272]	@ (80077c8 <__multiply+0x14c>)
 80076b6:	4845      	ldr	r0, [pc, #276]	@ (80077cc <__multiply+0x150>)
 80076b8:	0049      	lsls	r1, r1, #1
 80076ba:	f001 fc41 	bl	8008f40 <__assert_func>
 80076be:	0002      	movs	r2, r0
 80076c0:	19bb      	adds	r3, r7, r6
 80076c2:	3214      	adds	r2, #20
 80076c4:	009b      	lsls	r3, r3, #2
 80076c6:	18d3      	adds	r3, r2, r3
 80076c8:	9301      	str	r3, [sp, #4]
 80076ca:	2100      	movs	r1, #0
 80076cc:	0013      	movs	r3, r2
 80076ce:	9801      	ldr	r0, [sp, #4]
 80076d0:	4283      	cmp	r3, r0
 80076d2:	d328      	bcc.n	8007726 <__multiply+0xaa>
 80076d4:	0023      	movs	r3, r4
 80076d6:	00bf      	lsls	r7, r7, #2
 80076d8:	3314      	adds	r3, #20
 80076da:	9304      	str	r3, [sp, #16]
 80076dc:	3514      	adds	r5, #20
 80076de:	19db      	adds	r3, r3, r7
 80076e0:	00b6      	lsls	r6, r6, #2
 80076e2:	9302      	str	r3, [sp, #8]
 80076e4:	19ab      	adds	r3, r5, r6
 80076e6:	9307      	str	r3, [sp, #28]
 80076e8:	2304      	movs	r3, #4
 80076ea:	9305      	str	r3, [sp, #20]
 80076ec:	0023      	movs	r3, r4
 80076ee:	9902      	ldr	r1, [sp, #8]
 80076f0:	3315      	adds	r3, #21
 80076f2:	4299      	cmp	r1, r3
 80076f4:	d305      	bcc.n	8007702 <__multiply+0x86>
 80076f6:	1b0c      	subs	r4, r1, r4
 80076f8:	3c15      	subs	r4, #21
 80076fa:	08a4      	lsrs	r4, r4, #2
 80076fc:	3401      	adds	r4, #1
 80076fe:	00a3      	lsls	r3, r4, #2
 8007700:	9305      	str	r3, [sp, #20]
 8007702:	9b07      	ldr	r3, [sp, #28]
 8007704:	429d      	cmp	r5, r3
 8007706:	d310      	bcc.n	800772a <__multiply+0xae>
 8007708:	9b00      	ldr	r3, [sp, #0]
 800770a:	2b00      	cmp	r3, #0
 800770c:	dd05      	ble.n	800771a <__multiply+0x9e>
 800770e:	9b01      	ldr	r3, [sp, #4]
 8007710:	3b04      	subs	r3, #4
 8007712:	9301      	str	r3, [sp, #4]
 8007714:	681b      	ldr	r3, [r3, #0]
 8007716:	2b00      	cmp	r3, #0
 8007718:	d052      	beq.n	80077c0 <__multiply+0x144>
 800771a:	4663      	mov	r3, ip
 800771c:	4660      	mov	r0, ip
 800771e:	9a00      	ldr	r2, [sp, #0]
 8007720:	611a      	str	r2, [r3, #16]
 8007722:	b009      	add	sp, #36	@ 0x24
 8007724:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007726:	c302      	stmia	r3!, {r1}
 8007728:	e7d1      	b.n	80076ce <__multiply+0x52>
 800772a:	682c      	ldr	r4, [r5, #0]
 800772c:	b2a4      	uxth	r4, r4
 800772e:	2c00      	cmp	r4, #0
 8007730:	d01f      	beq.n	8007772 <__multiply+0xf6>
 8007732:	2300      	movs	r3, #0
 8007734:	0017      	movs	r7, r2
 8007736:	9e04      	ldr	r6, [sp, #16]
 8007738:	9303      	str	r3, [sp, #12]
 800773a:	ce08      	ldmia	r6!, {r3}
 800773c:	6839      	ldr	r1, [r7, #0]
 800773e:	9306      	str	r3, [sp, #24]
 8007740:	466b      	mov	r3, sp
 8007742:	8b1b      	ldrh	r3, [r3, #24]
 8007744:	b288      	uxth	r0, r1
 8007746:	4363      	muls	r3, r4
 8007748:	181b      	adds	r3, r3, r0
 800774a:	9803      	ldr	r0, [sp, #12]
 800774c:	0c09      	lsrs	r1, r1, #16
 800774e:	181b      	adds	r3, r3, r0
 8007750:	9806      	ldr	r0, [sp, #24]
 8007752:	0c00      	lsrs	r0, r0, #16
 8007754:	4360      	muls	r0, r4
 8007756:	1840      	adds	r0, r0, r1
 8007758:	0c19      	lsrs	r1, r3, #16
 800775a:	1841      	adds	r1, r0, r1
 800775c:	0c08      	lsrs	r0, r1, #16
 800775e:	b29b      	uxth	r3, r3
 8007760:	0409      	lsls	r1, r1, #16
 8007762:	4319      	orrs	r1, r3
 8007764:	9b02      	ldr	r3, [sp, #8]
 8007766:	9003      	str	r0, [sp, #12]
 8007768:	c702      	stmia	r7!, {r1}
 800776a:	42b3      	cmp	r3, r6
 800776c:	d8e5      	bhi.n	800773a <__multiply+0xbe>
 800776e:	9b05      	ldr	r3, [sp, #20]
 8007770:	50d0      	str	r0, [r2, r3]
 8007772:	682c      	ldr	r4, [r5, #0]
 8007774:	0c24      	lsrs	r4, r4, #16
 8007776:	d020      	beq.n	80077ba <__multiply+0x13e>
 8007778:	2100      	movs	r1, #0
 800777a:	0010      	movs	r0, r2
 800777c:	6813      	ldr	r3, [r2, #0]
 800777e:	9e04      	ldr	r6, [sp, #16]
 8007780:	9103      	str	r1, [sp, #12]
 8007782:	6831      	ldr	r1, [r6, #0]
 8007784:	6807      	ldr	r7, [r0, #0]
 8007786:	b289      	uxth	r1, r1
 8007788:	4361      	muls	r1, r4
 800778a:	0c3f      	lsrs	r7, r7, #16
 800778c:	19c9      	adds	r1, r1, r7
 800778e:	9f03      	ldr	r7, [sp, #12]
 8007790:	b29b      	uxth	r3, r3
 8007792:	19c9      	adds	r1, r1, r7
 8007794:	040f      	lsls	r7, r1, #16
 8007796:	431f      	orrs	r7, r3
 8007798:	6007      	str	r7, [r0, #0]
 800779a:	ce80      	ldmia	r6!, {r7}
 800779c:	6843      	ldr	r3, [r0, #4]
 800779e:	0c3f      	lsrs	r7, r7, #16
 80077a0:	4367      	muls	r7, r4
 80077a2:	b29b      	uxth	r3, r3
 80077a4:	0c09      	lsrs	r1, r1, #16
 80077a6:	18fb      	adds	r3, r7, r3
 80077a8:	185b      	adds	r3, r3, r1
 80077aa:	0c19      	lsrs	r1, r3, #16
 80077ac:	9103      	str	r1, [sp, #12]
 80077ae:	9902      	ldr	r1, [sp, #8]
 80077b0:	3004      	adds	r0, #4
 80077b2:	42b1      	cmp	r1, r6
 80077b4:	d8e5      	bhi.n	8007782 <__multiply+0x106>
 80077b6:	9905      	ldr	r1, [sp, #20]
 80077b8:	5053      	str	r3, [r2, r1]
 80077ba:	3504      	adds	r5, #4
 80077bc:	3204      	adds	r2, #4
 80077be:	e7a0      	b.n	8007702 <__multiply+0x86>
 80077c0:	9b00      	ldr	r3, [sp, #0]
 80077c2:	3b01      	subs	r3, #1
 80077c4:	9300      	str	r3, [sp, #0]
 80077c6:	e79f      	b.n	8007708 <__multiply+0x8c>
 80077c8:	08009e3a 	.word	0x08009e3a
 80077cc:	08009e4b 	.word	0x08009e4b

080077d0 <__pow5mult>:
 80077d0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80077d2:	2303      	movs	r3, #3
 80077d4:	0015      	movs	r5, r2
 80077d6:	0007      	movs	r7, r0
 80077d8:	000e      	movs	r6, r1
 80077da:	401a      	ands	r2, r3
 80077dc:	421d      	tst	r5, r3
 80077de:	d008      	beq.n	80077f2 <__pow5mult+0x22>
 80077e0:	4925      	ldr	r1, [pc, #148]	@ (8007878 <__pow5mult+0xa8>)
 80077e2:	3a01      	subs	r2, #1
 80077e4:	0092      	lsls	r2, r2, #2
 80077e6:	5852      	ldr	r2, [r2, r1]
 80077e8:	2300      	movs	r3, #0
 80077ea:	0031      	movs	r1, r6
 80077ec:	f7ff fe4e 	bl	800748c <__multadd>
 80077f0:	0006      	movs	r6, r0
 80077f2:	10ad      	asrs	r5, r5, #2
 80077f4:	d03d      	beq.n	8007872 <__pow5mult+0xa2>
 80077f6:	69fc      	ldr	r4, [r7, #28]
 80077f8:	2c00      	cmp	r4, #0
 80077fa:	d10f      	bne.n	800781c <__pow5mult+0x4c>
 80077fc:	2010      	movs	r0, #16
 80077fe:	f7ff fd21 	bl	8007244 <malloc>
 8007802:	1e02      	subs	r2, r0, #0
 8007804:	61f8      	str	r0, [r7, #28]
 8007806:	d105      	bne.n	8007814 <__pow5mult+0x44>
 8007808:	21b4      	movs	r1, #180	@ 0xb4
 800780a:	4b1c      	ldr	r3, [pc, #112]	@ (800787c <__pow5mult+0xac>)
 800780c:	481c      	ldr	r0, [pc, #112]	@ (8007880 <__pow5mult+0xb0>)
 800780e:	31ff      	adds	r1, #255	@ 0xff
 8007810:	f001 fb96 	bl	8008f40 <__assert_func>
 8007814:	6044      	str	r4, [r0, #4]
 8007816:	6084      	str	r4, [r0, #8]
 8007818:	6004      	str	r4, [r0, #0]
 800781a:	60c4      	str	r4, [r0, #12]
 800781c:	69fb      	ldr	r3, [r7, #28]
 800781e:	689c      	ldr	r4, [r3, #8]
 8007820:	9301      	str	r3, [sp, #4]
 8007822:	2c00      	cmp	r4, #0
 8007824:	d108      	bne.n	8007838 <__pow5mult+0x68>
 8007826:	0038      	movs	r0, r7
 8007828:	4916      	ldr	r1, [pc, #88]	@ (8007884 <__pow5mult+0xb4>)
 800782a:	f7ff ff0f 	bl	800764c <__i2b>
 800782e:	9b01      	ldr	r3, [sp, #4]
 8007830:	0004      	movs	r4, r0
 8007832:	6098      	str	r0, [r3, #8]
 8007834:	2300      	movs	r3, #0
 8007836:	6003      	str	r3, [r0, #0]
 8007838:	2301      	movs	r3, #1
 800783a:	421d      	tst	r5, r3
 800783c:	d00a      	beq.n	8007854 <__pow5mult+0x84>
 800783e:	0031      	movs	r1, r6
 8007840:	0022      	movs	r2, r4
 8007842:	0038      	movs	r0, r7
 8007844:	f7ff ff1a 	bl	800767c <__multiply>
 8007848:	0031      	movs	r1, r6
 800784a:	9001      	str	r0, [sp, #4]
 800784c:	0038      	movs	r0, r7
 800784e:	f7ff fdf9 	bl	8007444 <_Bfree>
 8007852:	9e01      	ldr	r6, [sp, #4]
 8007854:	106d      	asrs	r5, r5, #1
 8007856:	d00c      	beq.n	8007872 <__pow5mult+0xa2>
 8007858:	6820      	ldr	r0, [r4, #0]
 800785a:	2800      	cmp	r0, #0
 800785c:	d107      	bne.n	800786e <__pow5mult+0x9e>
 800785e:	0022      	movs	r2, r4
 8007860:	0021      	movs	r1, r4
 8007862:	0038      	movs	r0, r7
 8007864:	f7ff ff0a 	bl	800767c <__multiply>
 8007868:	2300      	movs	r3, #0
 800786a:	6020      	str	r0, [r4, #0]
 800786c:	6003      	str	r3, [r0, #0]
 800786e:	0004      	movs	r4, r0
 8007870:	e7e2      	b.n	8007838 <__pow5mult+0x68>
 8007872:	0030      	movs	r0, r6
 8007874:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007876:	46c0      	nop			@ (mov r8, r8)
 8007878:	08009f5c 	.word	0x08009f5c
 800787c:	08009dcb 	.word	0x08009dcb
 8007880:	08009e4b 	.word	0x08009e4b
 8007884:	00000271 	.word	0x00000271

08007888 <__lshift>:
 8007888:	b5f0      	push	{r4, r5, r6, r7, lr}
 800788a:	000c      	movs	r4, r1
 800788c:	0016      	movs	r6, r2
 800788e:	6923      	ldr	r3, [r4, #16]
 8007890:	1157      	asrs	r7, r2, #5
 8007892:	b085      	sub	sp, #20
 8007894:	18fb      	adds	r3, r7, r3
 8007896:	9301      	str	r3, [sp, #4]
 8007898:	3301      	adds	r3, #1
 800789a:	9300      	str	r3, [sp, #0]
 800789c:	6849      	ldr	r1, [r1, #4]
 800789e:	68a3      	ldr	r3, [r4, #8]
 80078a0:	9002      	str	r0, [sp, #8]
 80078a2:	9a00      	ldr	r2, [sp, #0]
 80078a4:	4293      	cmp	r3, r2
 80078a6:	db10      	blt.n	80078ca <__lshift+0x42>
 80078a8:	9802      	ldr	r0, [sp, #8]
 80078aa:	f7ff fd87 	bl	80073bc <_Balloc>
 80078ae:	2300      	movs	r3, #0
 80078b0:	0001      	movs	r1, r0
 80078b2:	0005      	movs	r5, r0
 80078b4:	001a      	movs	r2, r3
 80078b6:	3114      	adds	r1, #20
 80078b8:	4298      	cmp	r0, r3
 80078ba:	d10c      	bne.n	80078d6 <__lshift+0x4e>
 80078bc:	21ef      	movs	r1, #239	@ 0xef
 80078be:	002a      	movs	r2, r5
 80078c0:	4b25      	ldr	r3, [pc, #148]	@ (8007958 <__lshift+0xd0>)
 80078c2:	4826      	ldr	r0, [pc, #152]	@ (800795c <__lshift+0xd4>)
 80078c4:	0049      	lsls	r1, r1, #1
 80078c6:	f001 fb3b 	bl	8008f40 <__assert_func>
 80078ca:	3101      	adds	r1, #1
 80078cc:	005b      	lsls	r3, r3, #1
 80078ce:	e7e8      	b.n	80078a2 <__lshift+0x1a>
 80078d0:	0098      	lsls	r0, r3, #2
 80078d2:	500a      	str	r2, [r1, r0]
 80078d4:	3301      	adds	r3, #1
 80078d6:	42bb      	cmp	r3, r7
 80078d8:	dbfa      	blt.n	80078d0 <__lshift+0x48>
 80078da:	43fb      	mvns	r3, r7
 80078dc:	17db      	asrs	r3, r3, #31
 80078de:	401f      	ands	r7, r3
 80078e0:	00bf      	lsls	r7, r7, #2
 80078e2:	0023      	movs	r3, r4
 80078e4:	201f      	movs	r0, #31
 80078e6:	19c9      	adds	r1, r1, r7
 80078e8:	0037      	movs	r7, r6
 80078ea:	6922      	ldr	r2, [r4, #16]
 80078ec:	3314      	adds	r3, #20
 80078ee:	0092      	lsls	r2, r2, #2
 80078f0:	189a      	adds	r2, r3, r2
 80078f2:	4007      	ands	r7, r0
 80078f4:	4206      	tst	r6, r0
 80078f6:	d029      	beq.n	800794c <__lshift+0xc4>
 80078f8:	3001      	adds	r0, #1
 80078fa:	1bc0      	subs	r0, r0, r7
 80078fc:	9003      	str	r0, [sp, #12]
 80078fe:	468c      	mov	ip, r1
 8007900:	2000      	movs	r0, #0
 8007902:	681e      	ldr	r6, [r3, #0]
 8007904:	40be      	lsls	r6, r7
 8007906:	4306      	orrs	r6, r0
 8007908:	4660      	mov	r0, ip
 800790a:	c040      	stmia	r0!, {r6}
 800790c:	4684      	mov	ip, r0
 800790e:	9e03      	ldr	r6, [sp, #12]
 8007910:	cb01      	ldmia	r3!, {r0}
 8007912:	40f0      	lsrs	r0, r6
 8007914:	429a      	cmp	r2, r3
 8007916:	d8f4      	bhi.n	8007902 <__lshift+0x7a>
 8007918:	0026      	movs	r6, r4
 800791a:	3615      	adds	r6, #21
 800791c:	2304      	movs	r3, #4
 800791e:	42b2      	cmp	r2, r6
 8007920:	d304      	bcc.n	800792c <__lshift+0xa4>
 8007922:	1b13      	subs	r3, r2, r4
 8007924:	3b15      	subs	r3, #21
 8007926:	089b      	lsrs	r3, r3, #2
 8007928:	3301      	adds	r3, #1
 800792a:	009b      	lsls	r3, r3, #2
 800792c:	50c8      	str	r0, [r1, r3]
 800792e:	2800      	cmp	r0, #0
 8007930:	d002      	beq.n	8007938 <__lshift+0xb0>
 8007932:	9b01      	ldr	r3, [sp, #4]
 8007934:	3302      	adds	r3, #2
 8007936:	9300      	str	r3, [sp, #0]
 8007938:	9b00      	ldr	r3, [sp, #0]
 800793a:	9802      	ldr	r0, [sp, #8]
 800793c:	3b01      	subs	r3, #1
 800793e:	0021      	movs	r1, r4
 8007940:	612b      	str	r3, [r5, #16]
 8007942:	f7ff fd7f 	bl	8007444 <_Bfree>
 8007946:	0028      	movs	r0, r5
 8007948:	b005      	add	sp, #20
 800794a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800794c:	cb01      	ldmia	r3!, {r0}
 800794e:	c101      	stmia	r1!, {r0}
 8007950:	429a      	cmp	r2, r3
 8007952:	d8fb      	bhi.n	800794c <__lshift+0xc4>
 8007954:	e7f0      	b.n	8007938 <__lshift+0xb0>
 8007956:	46c0      	nop			@ (mov r8, r8)
 8007958:	08009e3a 	.word	0x08009e3a
 800795c:	08009e4b 	.word	0x08009e4b

08007960 <__mcmp>:
 8007960:	b530      	push	{r4, r5, lr}
 8007962:	690b      	ldr	r3, [r1, #16]
 8007964:	6904      	ldr	r4, [r0, #16]
 8007966:	0002      	movs	r2, r0
 8007968:	1ae0      	subs	r0, r4, r3
 800796a:	429c      	cmp	r4, r3
 800796c:	d10f      	bne.n	800798e <__mcmp+0x2e>
 800796e:	3214      	adds	r2, #20
 8007970:	009b      	lsls	r3, r3, #2
 8007972:	3114      	adds	r1, #20
 8007974:	0014      	movs	r4, r2
 8007976:	18c9      	adds	r1, r1, r3
 8007978:	18d2      	adds	r2, r2, r3
 800797a:	3a04      	subs	r2, #4
 800797c:	3904      	subs	r1, #4
 800797e:	6815      	ldr	r5, [r2, #0]
 8007980:	680b      	ldr	r3, [r1, #0]
 8007982:	429d      	cmp	r5, r3
 8007984:	d004      	beq.n	8007990 <__mcmp+0x30>
 8007986:	2001      	movs	r0, #1
 8007988:	429d      	cmp	r5, r3
 800798a:	d200      	bcs.n	800798e <__mcmp+0x2e>
 800798c:	3802      	subs	r0, #2
 800798e:	bd30      	pop	{r4, r5, pc}
 8007990:	4294      	cmp	r4, r2
 8007992:	d3f2      	bcc.n	800797a <__mcmp+0x1a>
 8007994:	e7fb      	b.n	800798e <__mcmp+0x2e>
	...

08007998 <__mdiff>:
 8007998:	b5f0      	push	{r4, r5, r6, r7, lr}
 800799a:	000c      	movs	r4, r1
 800799c:	b087      	sub	sp, #28
 800799e:	9000      	str	r0, [sp, #0]
 80079a0:	0011      	movs	r1, r2
 80079a2:	0020      	movs	r0, r4
 80079a4:	0017      	movs	r7, r2
 80079a6:	f7ff ffdb 	bl	8007960 <__mcmp>
 80079aa:	1e05      	subs	r5, r0, #0
 80079ac:	d110      	bne.n	80079d0 <__mdiff+0x38>
 80079ae:	0001      	movs	r1, r0
 80079b0:	9800      	ldr	r0, [sp, #0]
 80079b2:	f7ff fd03 	bl	80073bc <_Balloc>
 80079b6:	1e02      	subs	r2, r0, #0
 80079b8:	d104      	bne.n	80079c4 <__mdiff+0x2c>
 80079ba:	4b40      	ldr	r3, [pc, #256]	@ (8007abc <__mdiff+0x124>)
 80079bc:	4840      	ldr	r0, [pc, #256]	@ (8007ac0 <__mdiff+0x128>)
 80079be:	4941      	ldr	r1, [pc, #260]	@ (8007ac4 <__mdiff+0x12c>)
 80079c0:	f001 fabe 	bl	8008f40 <__assert_func>
 80079c4:	2301      	movs	r3, #1
 80079c6:	6145      	str	r5, [r0, #20]
 80079c8:	6103      	str	r3, [r0, #16]
 80079ca:	0010      	movs	r0, r2
 80079cc:	b007      	add	sp, #28
 80079ce:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80079d0:	2600      	movs	r6, #0
 80079d2:	42b0      	cmp	r0, r6
 80079d4:	da03      	bge.n	80079de <__mdiff+0x46>
 80079d6:	0023      	movs	r3, r4
 80079d8:	003c      	movs	r4, r7
 80079da:	001f      	movs	r7, r3
 80079dc:	3601      	adds	r6, #1
 80079de:	6861      	ldr	r1, [r4, #4]
 80079e0:	9800      	ldr	r0, [sp, #0]
 80079e2:	f7ff fceb 	bl	80073bc <_Balloc>
 80079e6:	1e02      	subs	r2, r0, #0
 80079e8:	d103      	bne.n	80079f2 <__mdiff+0x5a>
 80079ea:	4b34      	ldr	r3, [pc, #208]	@ (8007abc <__mdiff+0x124>)
 80079ec:	4834      	ldr	r0, [pc, #208]	@ (8007ac0 <__mdiff+0x128>)
 80079ee:	4936      	ldr	r1, [pc, #216]	@ (8007ac8 <__mdiff+0x130>)
 80079f0:	e7e6      	b.n	80079c0 <__mdiff+0x28>
 80079f2:	6923      	ldr	r3, [r4, #16]
 80079f4:	3414      	adds	r4, #20
 80079f6:	9300      	str	r3, [sp, #0]
 80079f8:	009b      	lsls	r3, r3, #2
 80079fa:	18e3      	adds	r3, r4, r3
 80079fc:	0021      	movs	r1, r4
 80079fe:	9401      	str	r4, [sp, #4]
 8007a00:	003c      	movs	r4, r7
 8007a02:	9302      	str	r3, [sp, #8]
 8007a04:	693b      	ldr	r3, [r7, #16]
 8007a06:	3414      	adds	r4, #20
 8007a08:	009b      	lsls	r3, r3, #2
 8007a0a:	18e3      	adds	r3, r4, r3
 8007a0c:	9303      	str	r3, [sp, #12]
 8007a0e:	0003      	movs	r3, r0
 8007a10:	60c6      	str	r6, [r0, #12]
 8007a12:	468c      	mov	ip, r1
 8007a14:	2000      	movs	r0, #0
 8007a16:	3314      	adds	r3, #20
 8007a18:	9304      	str	r3, [sp, #16]
 8007a1a:	9305      	str	r3, [sp, #20]
 8007a1c:	4663      	mov	r3, ip
 8007a1e:	cb20      	ldmia	r3!, {r5}
 8007a20:	b2a9      	uxth	r1, r5
 8007a22:	000e      	movs	r6, r1
 8007a24:	469c      	mov	ip, r3
 8007a26:	cc08      	ldmia	r4!, {r3}
 8007a28:	0c2d      	lsrs	r5, r5, #16
 8007a2a:	b299      	uxth	r1, r3
 8007a2c:	1a71      	subs	r1, r6, r1
 8007a2e:	1809      	adds	r1, r1, r0
 8007a30:	0c1b      	lsrs	r3, r3, #16
 8007a32:	1408      	asrs	r0, r1, #16
 8007a34:	1aeb      	subs	r3, r5, r3
 8007a36:	181b      	adds	r3, r3, r0
 8007a38:	1418      	asrs	r0, r3, #16
 8007a3a:	b289      	uxth	r1, r1
 8007a3c:	041b      	lsls	r3, r3, #16
 8007a3e:	4319      	orrs	r1, r3
 8007a40:	9b05      	ldr	r3, [sp, #20]
 8007a42:	c302      	stmia	r3!, {r1}
 8007a44:	9305      	str	r3, [sp, #20]
 8007a46:	9b03      	ldr	r3, [sp, #12]
 8007a48:	42a3      	cmp	r3, r4
 8007a4a:	d8e7      	bhi.n	8007a1c <__mdiff+0x84>
 8007a4c:	0039      	movs	r1, r7
 8007a4e:	9c03      	ldr	r4, [sp, #12]
 8007a50:	3115      	adds	r1, #21
 8007a52:	2304      	movs	r3, #4
 8007a54:	428c      	cmp	r4, r1
 8007a56:	d304      	bcc.n	8007a62 <__mdiff+0xca>
 8007a58:	1be3      	subs	r3, r4, r7
 8007a5a:	3b15      	subs	r3, #21
 8007a5c:	089b      	lsrs	r3, r3, #2
 8007a5e:	3301      	adds	r3, #1
 8007a60:	009b      	lsls	r3, r3, #2
 8007a62:	9901      	ldr	r1, [sp, #4]
 8007a64:	18cd      	adds	r5, r1, r3
 8007a66:	9904      	ldr	r1, [sp, #16]
 8007a68:	002e      	movs	r6, r5
 8007a6a:	18cb      	adds	r3, r1, r3
 8007a6c:	001f      	movs	r7, r3
 8007a6e:	9902      	ldr	r1, [sp, #8]
 8007a70:	428e      	cmp	r6, r1
 8007a72:	d311      	bcc.n	8007a98 <__mdiff+0x100>
 8007a74:	9c02      	ldr	r4, [sp, #8]
 8007a76:	1ee9      	subs	r1, r5, #3
 8007a78:	2000      	movs	r0, #0
 8007a7a:	428c      	cmp	r4, r1
 8007a7c:	d304      	bcc.n	8007a88 <__mdiff+0xf0>
 8007a7e:	0021      	movs	r1, r4
 8007a80:	3103      	adds	r1, #3
 8007a82:	1b49      	subs	r1, r1, r5
 8007a84:	0889      	lsrs	r1, r1, #2
 8007a86:	0088      	lsls	r0, r1, #2
 8007a88:	181b      	adds	r3, r3, r0
 8007a8a:	3b04      	subs	r3, #4
 8007a8c:	6819      	ldr	r1, [r3, #0]
 8007a8e:	2900      	cmp	r1, #0
 8007a90:	d010      	beq.n	8007ab4 <__mdiff+0x11c>
 8007a92:	9b00      	ldr	r3, [sp, #0]
 8007a94:	6113      	str	r3, [r2, #16]
 8007a96:	e798      	b.n	80079ca <__mdiff+0x32>
 8007a98:	4684      	mov	ip, r0
 8007a9a:	ce02      	ldmia	r6!, {r1}
 8007a9c:	b288      	uxth	r0, r1
 8007a9e:	4460      	add	r0, ip
 8007aa0:	1400      	asrs	r0, r0, #16
 8007aa2:	0c0c      	lsrs	r4, r1, #16
 8007aa4:	1904      	adds	r4, r0, r4
 8007aa6:	4461      	add	r1, ip
 8007aa8:	1420      	asrs	r0, r4, #16
 8007aaa:	b289      	uxth	r1, r1
 8007aac:	0424      	lsls	r4, r4, #16
 8007aae:	4321      	orrs	r1, r4
 8007ab0:	c702      	stmia	r7!, {r1}
 8007ab2:	e7dc      	b.n	8007a6e <__mdiff+0xd6>
 8007ab4:	9900      	ldr	r1, [sp, #0]
 8007ab6:	3901      	subs	r1, #1
 8007ab8:	9100      	str	r1, [sp, #0]
 8007aba:	e7e6      	b.n	8007a8a <__mdiff+0xf2>
 8007abc:	08009e3a 	.word	0x08009e3a
 8007ac0:	08009e4b 	.word	0x08009e4b
 8007ac4:	00000237 	.word	0x00000237
 8007ac8:	00000245 	.word	0x00000245

08007acc <__ulp>:
 8007acc:	b510      	push	{r4, lr}
 8007ace:	2400      	movs	r4, #0
 8007ad0:	4b0c      	ldr	r3, [pc, #48]	@ (8007b04 <__ulp+0x38>)
 8007ad2:	4a0d      	ldr	r2, [pc, #52]	@ (8007b08 <__ulp+0x3c>)
 8007ad4:	400b      	ands	r3, r1
 8007ad6:	189b      	adds	r3, r3, r2
 8007ad8:	42a3      	cmp	r3, r4
 8007ada:	dc06      	bgt.n	8007aea <__ulp+0x1e>
 8007adc:	425b      	negs	r3, r3
 8007ade:	151a      	asrs	r2, r3, #20
 8007ae0:	2a13      	cmp	r2, #19
 8007ae2:	dc05      	bgt.n	8007af0 <__ulp+0x24>
 8007ae4:	2380      	movs	r3, #128	@ 0x80
 8007ae6:	031b      	lsls	r3, r3, #12
 8007ae8:	4113      	asrs	r3, r2
 8007aea:	0019      	movs	r1, r3
 8007aec:	0020      	movs	r0, r4
 8007aee:	bd10      	pop	{r4, pc}
 8007af0:	3a14      	subs	r2, #20
 8007af2:	2401      	movs	r4, #1
 8007af4:	2a1e      	cmp	r2, #30
 8007af6:	dc02      	bgt.n	8007afe <__ulp+0x32>
 8007af8:	2480      	movs	r4, #128	@ 0x80
 8007afa:	0624      	lsls	r4, r4, #24
 8007afc:	40d4      	lsrs	r4, r2
 8007afe:	2300      	movs	r3, #0
 8007b00:	e7f3      	b.n	8007aea <__ulp+0x1e>
 8007b02:	46c0      	nop			@ (mov r8, r8)
 8007b04:	7ff00000 	.word	0x7ff00000
 8007b08:	fcc00000 	.word	0xfcc00000

08007b0c <__b2d>:
 8007b0c:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007b0e:	0006      	movs	r6, r0
 8007b10:	6903      	ldr	r3, [r0, #16]
 8007b12:	3614      	adds	r6, #20
 8007b14:	009b      	lsls	r3, r3, #2
 8007b16:	18f3      	adds	r3, r6, r3
 8007b18:	1f1d      	subs	r5, r3, #4
 8007b1a:	682c      	ldr	r4, [r5, #0]
 8007b1c:	000f      	movs	r7, r1
 8007b1e:	0020      	movs	r0, r4
 8007b20:	9301      	str	r3, [sp, #4]
 8007b22:	f7ff fd43 	bl	80075ac <__hi0bits>
 8007b26:	2220      	movs	r2, #32
 8007b28:	1a12      	subs	r2, r2, r0
 8007b2a:	603a      	str	r2, [r7, #0]
 8007b2c:	0003      	movs	r3, r0
 8007b2e:	4a1c      	ldr	r2, [pc, #112]	@ (8007ba0 <__b2d+0x94>)
 8007b30:	280a      	cmp	r0, #10
 8007b32:	dc15      	bgt.n	8007b60 <__b2d+0x54>
 8007b34:	210b      	movs	r1, #11
 8007b36:	0027      	movs	r7, r4
 8007b38:	1a09      	subs	r1, r1, r0
 8007b3a:	40cf      	lsrs	r7, r1
 8007b3c:	433a      	orrs	r2, r7
 8007b3e:	468c      	mov	ip, r1
 8007b40:	0011      	movs	r1, r2
 8007b42:	2200      	movs	r2, #0
 8007b44:	42ae      	cmp	r6, r5
 8007b46:	d202      	bcs.n	8007b4e <__b2d+0x42>
 8007b48:	9a01      	ldr	r2, [sp, #4]
 8007b4a:	3a08      	subs	r2, #8
 8007b4c:	6812      	ldr	r2, [r2, #0]
 8007b4e:	3315      	adds	r3, #21
 8007b50:	409c      	lsls	r4, r3
 8007b52:	4663      	mov	r3, ip
 8007b54:	0027      	movs	r7, r4
 8007b56:	40da      	lsrs	r2, r3
 8007b58:	4317      	orrs	r7, r2
 8007b5a:	0038      	movs	r0, r7
 8007b5c:	b003      	add	sp, #12
 8007b5e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007b60:	2700      	movs	r7, #0
 8007b62:	42ae      	cmp	r6, r5
 8007b64:	d202      	bcs.n	8007b6c <__b2d+0x60>
 8007b66:	9d01      	ldr	r5, [sp, #4]
 8007b68:	3d08      	subs	r5, #8
 8007b6a:	682f      	ldr	r7, [r5, #0]
 8007b6c:	210b      	movs	r1, #11
 8007b6e:	4249      	negs	r1, r1
 8007b70:	468c      	mov	ip, r1
 8007b72:	449c      	add	ip, r3
 8007b74:	2b0b      	cmp	r3, #11
 8007b76:	d010      	beq.n	8007b9a <__b2d+0x8e>
 8007b78:	4661      	mov	r1, ip
 8007b7a:	2320      	movs	r3, #32
 8007b7c:	408c      	lsls	r4, r1
 8007b7e:	1a5b      	subs	r3, r3, r1
 8007b80:	0039      	movs	r1, r7
 8007b82:	40d9      	lsrs	r1, r3
 8007b84:	430c      	orrs	r4, r1
 8007b86:	4322      	orrs	r2, r4
 8007b88:	0011      	movs	r1, r2
 8007b8a:	2200      	movs	r2, #0
 8007b8c:	42b5      	cmp	r5, r6
 8007b8e:	d901      	bls.n	8007b94 <__b2d+0x88>
 8007b90:	3d04      	subs	r5, #4
 8007b92:	682a      	ldr	r2, [r5, #0]
 8007b94:	4664      	mov	r4, ip
 8007b96:	40a7      	lsls	r7, r4
 8007b98:	e7dd      	b.n	8007b56 <__b2d+0x4a>
 8007b9a:	4322      	orrs	r2, r4
 8007b9c:	0011      	movs	r1, r2
 8007b9e:	e7dc      	b.n	8007b5a <__b2d+0x4e>
 8007ba0:	3ff00000 	.word	0x3ff00000

08007ba4 <__d2b>:
 8007ba4:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8007ba6:	2101      	movs	r1, #1
 8007ba8:	0016      	movs	r6, r2
 8007baa:	001f      	movs	r7, r3
 8007bac:	f7ff fc06 	bl	80073bc <_Balloc>
 8007bb0:	1e04      	subs	r4, r0, #0
 8007bb2:	d105      	bne.n	8007bc0 <__d2b+0x1c>
 8007bb4:	0022      	movs	r2, r4
 8007bb6:	4b25      	ldr	r3, [pc, #148]	@ (8007c4c <__d2b+0xa8>)
 8007bb8:	4825      	ldr	r0, [pc, #148]	@ (8007c50 <__d2b+0xac>)
 8007bba:	4926      	ldr	r1, [pc, #152]	@ (8007c54 <__d2b+0xb0>)
 8007bbc:	f001 f9c0 	bl	8008f40 <__assert_func>
 8007bc0:	033b      	lsls	r3, r7, #12
 8007bc2:	007d      	lsls	r5, r7, #1
 8007bc4:	0b1b      	lsrs	r3, r3, #12
 8007bc6:	0d6d      	lsrs	r5, r5, #21
 8007bc8:	d002      	beq.n	8007bd0 <__d2b+0x2c>
 8007bca:	2280      	movs	r2, #128	@ 0x80
 8007bcc:	0352      	lsls	r2, r2, #13
 8007bce:	4313      	orrs	r3, r2
 8007bd0:	9301      	str	r3, [sp, #4]
 8007bd2:	2e00      	cmp	r6, #0
 8007bd4:	d025      	beq.n	8007c22 <__d2b+0x7e>
 8007bd6:	4668      	mov	r0, sp
 8007bd8:	9600      	str	r6, [sp, #0]
 8007bda:	f7ff fd08 	bl	80075ee <__lo0bits>
 8007bde:	9b01      	ldr	r3, [sp, #4]
 8007be0:	9900      	ldr	r1, [sp, #0]
 8007be2:	2800      	cmp	r0, #0
 8007be4:	d01b      	beq.n	8007c1e <__d2b+0x7a>
 8007be6:	2220      	movs	r2, #32
 8007be8:	001e      	movs	r6, r3
 8007bea:	1a12      	subs	r2, r2, r0
 8007bec:	4096      	lsls	r6, r2
 8007bee:	0032      	movs	r2, r6
 8007bf0:	40c3      	lsrs	r3, r0
 8007bf2:	430a      	orrs	r2, r1
 8007bf4:	6162      	str	r2, [r4, #20]
 8007bf6:	9301      	str	r3, [sp, #4]
 8007bf8:	9e01      	ldr	r6, [sp, #4]
 8007bfa:	61a6      	str	r6, [r4, #24]
 8007bfc:	1e73      	subs	r3, r6, #1
 8007bfe:	419e      	sbcs	r6, r3
 8007c00:	3601      	adds	r6, #1
 8007c02:	6126      	str	r6, [r4, #16]
 8007c04:	2d00      	cmp	r5, #0
 8007c06:	d014      	beq.n	8007c32 <__d2b+0x8e>
 8007c08:	2635      	movs	r6, #53	@ 0x35
 8007c0a:	4b13      	ldr	r3, [pc, #76]	@ (8007c58 <__d2b+0xb4>)
 8007c0c:	18ed      	adds	r5, r5, r3
 8007c0e:	9b08      	ldr	r3, [sp, #32]
 8007c10:	182d      	adds	r5, r5, r0
 8007c12:	601d      	str	r5, [r3, #0]
 8007c14:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007c16:	1a36      	subs	r6, r6, r0
 8007c18:	601e      	str	r6, [r3, #0]
 8007c1a:	0020      	movs	r0, r4
 8007c1c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8007c1e:	6161      	str	r1, [r4, #20]
 8007c20:	e7ea      	b.n	8007bf8 <__d2b+0x54>
 8007c22:	a801      	add	r0, sp, #4
 8007c24:	f7ff fce3 	bl	80075ee <__lo0bits>
 8007c28:	9b01      	ldr	r3, [sp, #4]
 8007c2a:	2601      	movs	r6, #1
 8007c2c:	6163      	str	r3, [r4, #20]
 8007c2e:	3020      	adds	r0, #32
 8007c30:	e7e7      	b.n	8007c02 <__d2b+0x5e>
 8007c32:	4b0a      	ldr	r3, [pc, #40]	@ (8007c5c <__d2b+0xb8>)
 8007c34:	18c0      	adds	r0, r0, r3
 8007c36:	9b08      	ldr	r3, [sp, #32]
 8007c38:	6018      	str	r0, [r3, #0]
 8007c3a:	4b09      	ldr	r3, [pc, #36]	@ (8007c60 <__d2b+0xbc>)
 8007c3c:	18f3      	adds	r3, r6, r3
 8007c3e:	009b      	lsls	r3, r3, #2
 8007c40:	18e3      	adds	r3, r4, r3
 8007c42:	6958      	ldr	r0, [r3, #20]
 8007c44:	f7ff fcb2 	bl	80075ac <__hi0bits>
 8007c48:	0176      	lsls	r6, r6, #5
 8007c4a:	e7e3      	b.n	8007c14 <__d2b+0x70>
 8007c4c:	08009e3a 	.word	0x08009e3a
 8007c50:	08009e4b 	.word	0x08009e4b
 8007c54:	0000030f 	.word	0x0000030f
 8007c58:	fffffbcd 	.word	0xfffffbcd
 8007c5c:	fffffbce 	.word	0xfffffbce
 8007c60:	3fffffff 	.word	0x3fffffff

08007c64 <__ratio>:
 8007c64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007c66:	b087      	sub	sp, #28
 8007c68:	000f      	movs	r7, r1
 8007c6a:	a904      	add	r1, sp, #16
 8007c6c:	0006      	movs	r6, r0
 8007c6e:	f7ff ff4d 	bl	8007b0c <__b2d>
 8007c72:	9000      	str	r0, [sp, #0]
 8007c74:	9101      	str	r1, [sp, #4]
 8007c76:	9b00      	ldr	r3, [sp, #0]
 8007c78:	9c01      	ldr	r4, [sp, #4]
 8007c7a:	0038      	movs	r0, r7
 8007c7c:	a905      	add	r1, sp, #20
 8007c7e:	9302      	str	r3, [sp, #8]
 8007c80:	9403      	str	r4, [sp, #12]
 8007c82:	f7ff ff43 	bl	8007b0c <__b2d>
 8007c86:	000d      	movs	r5, r1
 8007c88:	0002      	movs	r2, r0
 8007c8a:	000b      	movs	r3, r1
 8007c8c:	6930      	ldr	r0, [r6, #16]
 8007c8e:	6939      	ldr	r1, [r7, #16]
 8007c90:	9e04      	ldr	r6, [sp, #16]
 8007c92:	1a40      	subs	r0, r0, r1
 8007c94:	9905      	ldr	r1, [sp, #20]
 8007c96:	0140      	lsls	r0, r0, #5
 8007c98:	1a71      	subs	r1, r6, r1
 8007c9a:	1841      	adds	r1, r0, r1
 8007c9c:	0508      	lsls	r0, r1, #20
 8007c9e:	2900      	cmp	r1, #0
 8007ca0:	dd08      	ble.n	8007cb4 <__ratio+0x50>
 8007ca2:	9901      	ldr	r1, [sp, #4]
 8007ca4:	1841      	adds	r1, r0, r1
 8007ca6:	9103      	str	r1, [sp, #12]
 8007ca8:	9802      	ldr	r0, [sp, #8]
 8007caa:	9903      	ldr	r1, [sp, #12]
 8007cac:	f7f9 f830 	bl	8000d10 <__aeabi_ddiv>
 8007cb0:	b007      	add	sp, #28
 8007cb2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007cb4:	1a2b      	subs	r3, r5, r0
 8007cb6:	e7f7      	b.n	8007ca8 <__ratio+0x44>

08007cb8 <__copybits>:
 8007cb8:	b570      	push	{r4, r5, r6, lr}
 8007cba:	0014      	movs	r4, r2
 8007cbc:	0005      	movs	r5, r0
 8007cbe:	3901      	subs	r1, #1
 8007cc0:	6913      	ldr	r3, [r2, #16]
 8007cc2:	1149      	asrs	r1, r1, #5
 8007cc4:	3101      	adds	r1, #1
 8007cc6:	0089      	lsls	r1, r1, #2
 8007cc8:	3414      	adds	r4, #20
 8007cca:	009b      	lsls	r3, r3, #2
 8007ccc:	1841      	adds	r1, r0, r1
 8007cce:	18e3      	adds	r3, r4, r3
 8007cd0:	42a3      	cmp	r3, r4
 8007cd2:	d80d      	bhi.n	8007cf0 <__copybits+0x38>
 8007cd4:	0014      	movs	r4, r2
 8007cd6:	3411      	adds	r4, #17
 8007cd8:	2500      	movs	r5, #0
 8007cda:	42a3      	cmp	r3, r4
 8007cdc:	d303      	bcc.n	8007ce6 <__copybits+0x2e>
 8007cde:	1a9b      	subs	r3, r3, r2
 8007ce0:	3b11      	subs	r3, #17
 8007ce2:	089b      	lsrs	r3, r3, #2
 8007ce4:	009d      	lsls	r5, r3, #2
 8007ce6:	2300      	movs	r3, #0
 8007ce8:	1940      	adds	r0, r0, r5
 8007cea:	4281      	cmp	r1, r0
 8007cec:	d803      	bhi.n	8007cf6 <__copybits+0x3e>
 8007cee:	bd70      	pop	{r4, r5, r6, pc}
 8007cf0:	cc40      	ldmia	r4!, {r6}
 8007cf2:	c540      	stmia	r5!, {r6}
 8007cf4:	e7ec      	b.n	8007cd0 <__copybits+0x18>
 8007cf6:	c008      	stmia	r0!, {r3}
 8007cf8:	e7f7      	b.n	8007cea <__copybits+0x32>

08007cfa <__any_on>:
 8007cfa:	0002      	movs	r2, r0
 8007cfc:	6900      	ldr	r0, [r0, #16]
 8007cfe:	b510      	push	{r4, lr}
 8007d00:	3214      	adds	r2, #20
 8007d02:	114b      	asrs	r3, r1, #5
 8007d04:	4298      	cmp	r0, r3
 8007d06:	db13      	blt.n	8007d30 <__any_on+0x36>
 8007d08:	dd0c      	ble.n	8007d24 <__any_on+0x2a>
 8007d0a:	241f      	movs	r4, #31
 8007d0c:	0008      	movs	r0, r1
 8007d0e:	4020      	ands	r0, r4
 8007d10:	4221      	tst	r1, r4
 8007d12:	d007      	beq.n	8007d24 <__any_on+0x2a>
 8007d14:	0099      	lsls	r1, r3, #2
 8007d16:	588c      	ldr	r4, [r1, r2]
 8007d18:	0021      	movs	r1, r4
 8007d1a:	40c1      	lsrs	r1, r0
 8007d1c:	4081      	lsls	r1, r0
 8007d1e:	2001      	movs	r0, #1
 8007d20:	428c      	cmp	r4, r1
 8007d22:	d104      	bne.n	8007d2e <__any_on+0x34>
 8007d24:	009b      	lsls	r3, r3, #2
 8007d26:	18d3      	adds	r3, r2, r3
 8007d28:	4293      	cmp	r3, r2
 8007d2a:	d803      	bhi.n	8007d34 <__any_on+0x3a>
 8007d2c:	2000      	movs	r0, #0
 8007d2e:	bd10      	pop	{r4, pc}
 8007d30:	0003      	movs	r3, r0
 8007d32:	e7f7      	b.n	8007d24 <__any_on+0x2a>
 8007d34:	3b04      	subs	r3, #4
 8007d36:	6819      	ldr	r1, [r3, #0]
 8007d38:	2900      	cmp	r1, #0
 8007d3a:	d0f5      	beq.n	8007d28 <__any_on+0x2e>
 8007d3c:	2001      	movs	r0, #1
 8007d3e:	e7f6      	b.n	8007d2e <__any_on+0x34>

08007d40 <sulp>:
 8007d40:	b570      	push	{r4, r5, r6, lr}
 8007d42:	0016      	movs	r6, r2
 8007d44:	000d      	movs	r5, r1
 8007d46:	f7ff fec1 	bl	8007acc <__ulp>
 8007d4a:	2e00      	cmp	r6, #0
 8007d4c:	d00d      	beq.n	8007d6a <sulp+0x2a>
 8007d4e:	236b      	movs	r3, #107	@ 0x6b
 8007d50:	006a      	lsls	r2, r5, #1
 8007d52:	0d52      	lsrs	r2, r2, #21
 8007d54:	1a9b      	subs	r3, r3, r2
 8007d56:	2b00      	cmp	r3, #0
 8007d58:	dd07      	ble.n	8007d6a <sulp+0x2a>
 8007d5a:	2400      	movs	r4, #0
 8007d5c:	4a03      	ldr	r2, [pc, #12]	@ (8007d6c <sulp+0x2c>)
 8007d5e:	051b      	lsls	r3, r3, #20
 8007d60:	189d      	adds	r5, r3, r2
 8007d62:	002b      	movs	r3, r5
 8007d64:	0022      	movs	r2, r4
 8007d66:	f7f9 fc0d 	bl	8001584 <__aeabi_dmul>
 8007d6a:	bd70      	pop	{r4, r5, r6, pc}
 8007d6c:	3ff00000 	.word	0x3ff00000

08007d70 <_strtod_l>:
 8007d70:	b5f0      	push	{r4, r5, r6, r7, lr}
 8007d72:	b0a3      	sub	sp, #140	@ 0x8c
 8007d74:	921b      	str	r2, [sp, #108]	@ 0x6c
 8007d76:	2200      	movs	r2, #0
 8007d78:	2600      	movs	r6, #0
 8007d7a:	2700      	movs	r7, #0
 8007d7c:	9005      	str	r0, [sp, #20]
 8007d7e:	9109      	str	r1, [sp, #36]	@ 0x24
 8007d80:	921e      	str	r2, [sp, #120]	@ 0x78
 8007d82:	911d      	str	r1, [sp, #116]	@ 0x74
 8007d84:	780a      	ldrb	r2, [r1, #0]
 8007d86:	2a2b      	cmp	r2, #43	@ 0x2b
 8007d88:	d053      	beq.n	8007e32 <_strtod_l+0xc2>
 8007d8a:	d83f      	bhi.n	8007e0c <_strtod_l+0x9c>
 8007d8c:	2a0d      	cmp	r2, #13
 8007d8e:	d839      	bhi.n	8007e04 <_strtod_l+0x94>
 8007d90:	2a08      	cmp	r2, #8
 8007d92:	d839      	bhi.n	8007e08 <_strtod_l+0x98>
 8007d94:	2a00      	cmp	r2, #0
 8007d96:	d042      	beq.n	8007e1e <_strtod_l+0xae>
 8007d98:	2200      	movs	r2, #0
 8007d9a:	9212      	str	r2, [sp, #72]	@ 0x48
 8007d9c:	2100      	movs	r1, #0
 8007d9e:	9d1d      	ldr	r5, [sp, #116]	@ 0x74
 8007da0:	910c      	str	r1, [sp, #48]	@ 0x30
 8007da2:	782a      	ldrb	r2, [r5, #0]
 8007da4:	2a30      	cmp	r2, #48	@ 0x30
 8007da6:	d000      	beq.n	8007daa <_strtod_l+0x3a>
 8007da8:	e083      	b.n	8007eb2 <_strtod_l+0x142>
 8007daa:	786a      	ldrb	r2, [r5, #1]
 8007dac:	3120      	adds	r1, #32
 8007dae:	438a      	bics	r2, r1
 8007db0:	2a58      	cmp	r2, #88	@ 0x58
 8007db2:	d000      	beq.n	8007db6 <_strtod_l+0x46>
 8007db4:	e073      	b.n	8007e9e <_strtod_l+0x12e>
 8007db6:	9302      	str	r3, [sp, #8]
 8007db8:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8007dba:	4a9b      	ldr	r2, [pc, #620]	@ (8008028 <_strtod_l+0x2b8>)
 8007dbc:	9301      	str	r3, [sp, #4]
 8007dbe:	ab1e      	add	r3, sp, #120	@ 0x78
 8007dc0:	9300      	str	r3, [sp, #0]
 8007dc2:	9805      	ldr	r0, [sp, #20]
 8007dc4:	ab1f      	add	r3, sp, #124	@ 0x7c
 8007dc6:	a91d      	add	r1, sp, #116	@ 0x74
 8007dc8:	f001 f96e 	bl	80090a8 <__gethex>
 8007dcc:	230f      	movs	r3, #15
 8007dce:	0002      	movs	r2, r0
 8007dd0:	401a      	ands	r2, r3
 8007dd2:	0004      	movs	r4, r0
 8007dd4:	9206      	str	r2, [sp, #24]
 8007dd6:	4218      	tst	r0, r3
 8007dd8:	d005      	beq.n	8007de6 <_strtod_l+0x76>
 8007dda:	2a06      	cmp	r2, #6
 8007ddc:	d12b      	bne.n	8007e36 <_strtod_l+0xc6>
 8007dde:	2300      	movs	r3, #0
 8007de0:	3501      	adds	r5, #1
 8007de2:	951d      	str	r5, [sp, #116]	@ 0x74
 8007de4:	9312      	str	r3, [sp, #72]	@ 0x48
 8007de6:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8007de8:	2b00      	cmp	r3, #0
 8007dea:	d002      	beq.n	8007df2 <_strtod_l+0x82>
 8007dec:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8007dee:	9a1b      	ldr	r2, [sp, #108]	@ 0x6c
 8007df0:	6013      	str	r3, [r2, #0]
 8007df2:	9b12      	ldr	r3, [sp, #72]	@ 0x48
 8007df4:	2b00      	cmp	r3, #0
 8007df6:	d019      	beq.n	8007e2c <_strtod_l+0xbc>
 8007df8:	2380      	movs	r3, #128	@ 0x80
 8007dfa:	0030      	movs	r0, r6
 8007dfc:	061b      	lsls	r3, r3, #24
 8007dfe:	18f9      	adds	r1, r7, r3
 8007e00:	b023      	add	sp, #140	@ 0x8c
 8007e02:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007e04:	2a20      	cmp	r2, #32
 8007e06:	d1c7      	bne.n	8007d98 <_strtod_l+0x28>
 8007e08:	3101      	adds	r1, #1
 8007e0a:	e7ba      	b.n	8007d82 <_strtod_l+0x12>
 8007e0c:	2a2d      	cmp	r2, #45	@ 0x2d
 8007e0e:	d1c3      	bne.n	8007d98 <_strtod_l+0x28>
 8007e10:	3a2c      	subs	r2, #44	@ 0x2c
 8007e12:	9212      	str	r2, [sp, #72]	@ 0x48
 8007e14:	1c4a      	adds	r2, r1, #1
 8007e16:	921d      	str	r2, [sp, #116]	@ 0x74
 8007e18:	784a      	ldrb	r2, [r1, #1]
 8007e1a:	2a00      	cmp	r2, #0
 8007e1c:	d1be      	bne.n	8007d9c <_strtod_l+0x2c>
 8007e1e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007e20:	931d      	str	r3, [sp, #116]	@ 0x74
 8007e22:	2300      	movs	r3, #0
 8007e24:	9312      	str	r3, [sp, #72]	@ 0x48
 8007e26:	9b1b      	ldr	r3, [sp, #108]	@ 0x6c
 8007e28:	2b00      	cmp	r3, #0
 8007e2a:	d1df      	bne.n	8007dec <_strtod_l+0x7c>
 8007e2c:	0030      	movs	r0, r6
 8007e2e:	0039      	movs	r1, r7
 8007e30:	e7e6      	b.n	8007e00 <_strtod_l+0x90>
 8007e32:	2200      	movs	r2, #0
 8007e34:	e7ed      	b.n	8007e12 <_strtod_l+0xa2>
 8007e36:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 8007e38:	2a00      	cmp	r2, #0
 8007e3a:	d007      	beq.n	8007e4c <_strtod_l+0xdc>
 8007e3c:	2135      	movs	r1, #53	@ 0x35
 8007e3e:	a820      	add	r0, sp, #128	@ 0x80
 8007e40:	f7ff ff3a 	bl	8007cb8 <__copybits>
 8007e44:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8007e46:	9805      	ldr	r0, [sp, #20]
 8007e48:	f7ff fafc 	bl	8007444 <_Bfree>
 8007e4c:	9806      	ldr	r0, [sp, #24]
 8007e4e:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 8007e50:	3801      	subs	r0, #1
 8007e52:	2804      	cmp	r0, #4
 8007e54:	d806      	bhi.n	8007e64 <_strtod_l+0xf4>
 8007e56:	f7f8 f95f 	bl	8000118 <__gnu_thumb1_case_uqi>
 8007e5a:	0312      	.short	0x0312
 8007e5c:	1e1c      	.short	0x1e1c
 8007e5e:	12          	.byte	0x12
 8007e5f:	00          	.byte	0x00
 8007e60:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 8007e62:	9f21      	ldr	r7, [sp, #132]	@ 0x84
 8007e64:	05e4      	lsls	r4, r4, #23
 8007e66:	d502      	bpl.n	8007e6e <_strtod_l+0xfe>
 8007e68:	2380      	movs	r3, #128	@ 0x80
 8007e6a:	061b      	lsls	r3, r3, #24
 8007e6c:	431f      	orrs	r7, r3
 8007e6e:	4b6f      	ldr	r3, [pc, #444]	@ (800802c <_strtod_l+0x2bc>)
 8007e70:	423b      	tst	r3, r7
 8007e72:	d1b8      	bne.n	8007de6 <_strtod_l+0x76>
 8007e74:	f7fe faea 	bl	800644c <__errno>
 8007e78:	2322      	movs	r3, #34	@ 0x22
 8007e7a:	6003      	str	r3, [r0, #0]
 8007e7c:	e7b3      	b.n	8007de6 <_strtod_l+0x76>
 8007e7e:	496c      	ldr	r1, [pc, #432]	@ (8008030 <_strtod_l+0x2c0>)
 8007e80:	9a21      	ldr	r2, [sp, #132]	@ 0x84
 8007e82:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 8007e84:	400a      	ands	r2, r1
 8007e86:	496b      	ldr	r1, [pc, #428]	@ (8008034 <_strtod_l+0x2c4>)
 8007e88:	185b      	adds	r3, r3, r1
 8007e8a:	051b      	lsls	r3, r3, #20
 8007e8c:	431a      	orrs	r2, r3
 8007e8e:	0017      	movs	r7, r2
 8007e90:	e7e8      	b.n	8007e64 <_strtod_l+0xf4>
 8007e92:	4f66      	ldr	r7, [pc, #408]	@ (800802c <_strtod_l+0x2bc>)
 8007e94:	e7e6      	b.n	8007e64 <_strtod_l+0xf4>
 8007e96:	2601      	movs	r6, #1
 8007e98:	4f67      	ldr	r7, [pc, #412]	@ (8008038 <_strtod_l+0x2c8>)
 8007e9a:	4276      	negs	r6, r6
 8007e9c:	e7e2      	b.n	8007e64 <_strtod_l+0xf4>
 8007e9e:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8007ea0:	1c5a      	adds	r2, r3, #1
 8007ea2:	921d      	str	r2, [sp, #116]	@ 0x74
 8007ea4:	785b      	ldrb	r3, [r3, #1]
 8007ea6:	2b30      	cmp	r3, #48	@ 0x30
 8007ea8:	d0f9      	beq.n	8007e9e <_strtod_l+0x12e>
 8007eaa:	2b00      	cmp	r3, #0
 8007eac:	d09b      	beq.n	8007de6 <_strtod_l+0x76>
 8007eae:	2301      	movs	r3, #1
 8007eb0:	930c      	str	r3, [sp, #48]	@ 0x30
 8007eb2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8007eb4:	220a      	movs	r2, #10
 8007eb6:	9313      	str	r3, [sp, #76]	@ 0x4c
 8007eb8:	2300      	movs	r3, #0
 8007eba:	9310      	str	r3, [sp, #64]	@ 0x40
 8007ebc:	930d      	str	r3, [sp, #52]	@ 0x34
 8007ebe:	9308      	str	r3, [sp, #32]
 8007ec0:	981d      	ldr	r0, [sp, #116]	@ 0x74
 8007ec2:	7804      	ldrb	r4, [r0, #0]
 8007ec4:	0023      	movs	r3, r4
 8007ec6:	3b30      	subs	r3, #48	@ 0x30
 8007ec8:	b2d9      	uxtb	r1, r3
 8007eca:	2909      	cmp	r1, #9
 8007ecc:	d927      	bls.n	8007f1e <_strtod_l+0x1ae>
 8007ece:	2201      	movs	r2, #1
 8007ed0:	495a      	ldr	r1, [pc, #360]	@ (800803c <_strtod_l+0x2cc>)
 8007ed2:	f001 f802 	bl	8008eda <strncmp>
 8007ed6:	2800      	cmp	r0, #0
 8007ed8:	d033      	beq.n	8007f42 <_strtod_l+0x1d2>
 8007eda:	2000      	movs	r0, #0
 8007edc:	0023      	movs	r3, r4
 8007ede:	4684      	mov	ip, r0
 8007ee0:	9a08      	ldr	r2, [sp, #32]
 8007ee2:	900e      	str	r0, [sp, #56]	@ 0x38
 8007ee4:	9206      	str	r2, [sp, #24]
 8007ee6:	2220      	movs	r2, #32
 8007ee8:	0019      	movs	r1, r3
 8007eea:	4391      	bics	r1, r2
 8007eec:	000a      	movs	r2, r1
 8007eee:	2100      	movs	r1, #0
 8007ef0:	9107      	str	r1, [sp, #28]
 8007ef2:	2a45      	cmp	r2, #69	@ 0x45
 8007ef4:	d000      	beq.n	8007ef8 <_strtod_l+0x188>
 8007ef6:	e0cb      	b.n	8008090 <_strtod_l+0x320>
 8007ef8:	9b06      	ldr	r3, [sp, #24]
 8007efa:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8007efc:	4303      	orrs	r3, r0
 8007efe:	4313      	orrs	r3, r2
 8007f00:	428b      	cmp	r3, r1
 8007f02:	d08c      	beq.n	8007e1e <_strtod_l+0xae>
 8007f04:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8007f06:	9309      	str	r3, [sp, #36]	@ 0x24
 8007f08:	3301      	adds	r3, #1
 8007f0a:	931d      	str	r3, [sp, #116]	@ 0x74
 8007f0c:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8007f0e:	785b      	ldrb	r3, [r3, #1]
 8007f10:	2b2b      	cmp	r3, #43	@ 0x2b
 8007f12:	d07b      	beq.n	800800c <_strtod_l+0x29c>
 8007f14:	000c      	movs	r4, r1
 8007f16:	2b2d      	cmp	r3, #45	@ 0x2d
 8007f18:	d17e      	bne.n	8008018 <_strtod_l+0x2a8>
 8007f1a:	2401      	movs	r4, #1
 8007f1c:	e077      	b.n	800800e <_strtod_l+0x29e>
 8007f1e:	9908      	ldr	r1, [sp, #32]
 8007f20:	2908      	cmp	r1, #8
 8007f22:	dc09      	bgt.n	8007f38 <_strtod_l+0x1c8>
 8007f24:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8007f26:	4351      	muls	r1, r2
 8007f28:	185b      	adds	r3, r3, r1
 8007f2a:	930d      	str	r3, [sp, #52]	@ 0x34
 8007f2c:	9b08      	ldr	r3, [sp, #32]
 8007f2e:	3001      	adds	r0, #1
 8007f30:	3301      	adds	r3, #1
 8007f32:	9308      	str	r3, [sp, #32]
 8007f34:	901d      	str	r0, [sp, #116]	@ 0x74
 8007f36:	e7c3      	b.n	8007ec0 <_strtod_l+0x150>
 8007f38:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8007f3a:	4355      	muls	r5, r2
 8007f3c:	195b      	adds	r3, r3, r5
 8007f3e:	9310      	str	r3, [sp, #64]	@ 0x40
 8007f40:	e7f4      	b.n	8007f2c <_strtod_l+0x1bc>
 8007f42:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8007f44:	1c5a      	adds	r2, r3, #1
 8007f46:	921d      	str	r2, [sp, #116]	@ 0x74
 8007f48:	9a08      	ldr	r2, [sp, #32]
 8007f4a:	785b      	ldrb	r3, [r3, #1]
 8007f4c:	2a00      	cmp	r2, #0
 8007f4e:	d03e      	beq.n	8007fce <_strtod_l+0x25e>
 8007f50:	900e      	str	r0, [sp, #56]	@ 0x38
 8007f52:	9206      	str	r2, [sp, #24]
 8007f54:	001a      	movs	r2, r3
 8007f56:	3a30      	subs	r2, #48	@ 0x30
 8007f58:	2a09      	cmp	r2, #9
 8007f5a:	d912      	bls.n	8007f82 <_strtod_l+0x212>
 8007f5c:	2201      	movs	r2, #1
 8007f5e:	4694      	mov	ip, r2
 8007f60:	e7c1      	b.n	8007ee6 <_strtod_l+0x176>
 8007f62:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8007f64:	3001      	adds	r0, #1
 8007f66:	1c5a      	adds	r2, r3, #1
 8007f68:	921d      	str	r2, [sp, #116]	@ 0x74
 8007f6a:	785b      	ldrb	r3, [r3, #1]
 8007f6c:	2b30      	cmp	r3, #48	@ 0x30
 8007f6e:	d0f8      	beq.n	8007f62 <_strtod_l+0x1f2>
 8007f70:	001a      	movs	r2, r3
 8007f72:	3a31      	subs	r2, #49	@ 0x31
 8007f74:	2a08      	cmp	r2, #8
 8007f76:	d844      	bhi.n	8008002 <_strtod_l+0x292>
 8007f78:	900e      	str	r0, [sp, #56]	@ 0x38
 8007f7a:	2000      	movs	r0, #0
 8007f7c:	9a1d      	ldr	r2, [sp, #116]	@ 0x74
 8007f7e:	9006      	str	r0, [sp, #24]
 8007f80:	9213      	str	r2, [sp, #76]	@ 0x4c
 8007f82:	001c      	movs	r4, r3
 8007f84:	1c42      	adds	r2, r0, #1
 8007f86:	3c30      	subs	r4, #48	@ 0x30
 8007f88:	2b30      	cmp	r3, #48	@ 0x30
 8007f8a:	d01a      	beq.n	8007fc2 <_strtod_l+0x252>
 8007f8c:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8007f8e:	9906      	ldr	r1, [sp, #24]
 8007f90:	189b      	adds	r3, r3, r2
 8007f92:	930e      	str	r3, [sp, #56]	@ 0x38
 8007f94:	230a      	movs	r3, #10
 8007f96:	469c      	mov	ip, r3
 8007f98:	9d06      	ldr	r5, [sp, #24]
 8007f9a:	1c4b      	adds	r3, r1, #1
 8007f9c:	1b5d      	subs	r5, r3, r5
 8007f9e:	42aa      	cmp	r2, r5
 8007fa0:	dc17      	bgt.n	8007fd2 <_strtod_l+0x262>
 8007fa2:	43c3      	mvns	r3, r0
 8007fa4:	9a06      	ldr	r2, [sp, #24]
 8007fa6:	17db      	asrs	r3, r3, #31
 8007fa8:	4003      	ands	r3, r0
 8007faa:	18d1      	adds	r1, r2, r3
 8007fac:	3201      	adds	r2, #1
 8007fae:	18d3      	adds	r3, r2, r3
 8007fb0:	9306      	str	r3, [sp, #24]
 8007fb2:	2908      	cmp	r1, #8
 8007fb4:	dc1c      	bgt.n	8007ff0 <_strtod_l+0x280>
 8007fb6:	230a      	movs	r3, #10
 8007fb8:	9a0d      	ldr	r2, [sp, #52]	@ 0x34
 8007fba:	4353      	muls	r3, r2
 8007fbc:	2200      	movs	r2, #0
 8007fbe:	18e3      	adds	r3, r4, r3
 8007fc0:	930d      	str	r3, [sp, #52]	@ 0x34
 8007fc2:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8007fc4:	0010      	movs	r0, r2
 8007fc6:	1c59      	adds	r1, r3, #1
 8007fc8:	911d      	str	r1, [sp, #116]	@ 0x74
 8007fca:	785b      	ldrb	r3, [r3, #1]
 8007fcc:	e7c2      	b.n	8007f54 <_strtod_l+0x1e4>
 8007fce:	9808      	ldr	r0, [sp, #32]
 8007fd0:	e7cc      	b.n	8007f6c <_strtod_l+0x1fc>
 8007fd2:	2908      	cmp	r1, #8
 8007fd4:	dc05      	bgt.n	8007fe2 <_strtod_l+0x272>
 8007fd6:	4665      	mov	r5, ip
 8007fd8:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8007fda:	4369      	muls	r1, r5
 8007fdc:	910d      	str	r1, [sp, #52]	@ 0x34
 8007fde:	0019      	movs	r1, r3
 8007fe0:	e7da      	b.n	8007f98 <_strtod_l+0x228>
 8007fe2:	2b10      	cmp	r3, #16
 8007fe4:	dcfb      	bgt.n	8007fde <_strtod_l+0x26e>
 8007fe6:	4661      	mov	r1, ip
 8007fe8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8007fea:	434d      	muls	r5, r1
 8007fec:	9510      	str	r5, [sp, #64]	@ 0x40
 8007fee:	e7f6      	b.n	8007fde <_strtod_l+0x26e>
 8007ff0:	2200      	movs	r2, #0
 8007ff2:	290f      	cmp	r1, #15
 8007ff4:	dce5      	bgt.n	8007fc2 <_strtod_l+0x252>
 8007ff6:	230a      	movs	r3, #10
 8007ff8:	9d10      	ldr	r5, [sp, #64]	@ 0x40
 8007ffa:	435d      	muls	r5, r3
 8007ffc:	1963      	adds	r3, r4, r5
 8007ffe:	9310      	str	r3, [sp, #64]	@ 0x40
 8008000:	e7df      	b.n	8007fc2 <_strtod_l+0x252>
 8008002:	2200      	movs	r2, #0
 8008004:	920e      	str	r2, [sp, #56]	@ 0x38
 8008006:	9206      	str	r2, [sp, #24]
 8008008:	3201      	adds	r2, #1
 800800a:	e7a8      	b.n	8007f5e <_strtod_l+0x1ee>
 800800c:	2400      	movs	r4, #0
 800800e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008010:	3302      	adds	r3, #2
 8008012:	931d      	str	r3, [sp, #116]	@ 0x74
 8008014:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008016:	789b      	ldrb	r3, [r3, #2]
 8008018:	001a      	movs	r2, r3
 800801a:	3a30      	subs	r2, #48	@ 0x30
 800801c:	2a09      	cmp	r2, #9
 800801e:	d913      	bls.n	8008048 <_strtod_l+0x2d8>
 8008020:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 8008022:	921d      	str	r2, [sp, #116]	@ 0x74
 8008024:	2200      	movs	r2, #0
 8008026:	e032      	b.n	800808e <_strtod_l+0x31e>
 8008028:	0800a06c 	.word	0x0800a06c
 800802c:	7ff00000 	.word	0x7ff00000
 8008030:	ffefffff 	.word	0xffefffff
 8008034:	00000433 	.word	0x00000433
 8008038:	7fffffff 	.word	0x7fffffff
 800803c:	08009ea4 	.word	0x08009ea4
 8008040:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8008042:	1c5a      	adds	r2, r3, #1
 8008044:	921d      	str	r2, [sp, #116]	@ 0x74
 8008046:	785b      	ldrb	r3, [r3, #1]
 8008048:	2b30      	cmp	r3, #48	@ 0x30
 800804a:	d0f9      	beq.n	8008040 <_strtod_l+0x2d0>
 800804c:	2200      	movs	r2, #0
 800804e:	9207      	str	r2, [sp, #28]
 8008050:	001a      	movs	r2, r3
 8008052:	3a31      	subs	r2, #49	@ 0x31
 8008054:	2a08      	cmp	r2, #8
 8008056:	d81b      	bhi.n	8008090 <_strtod_l+0x320>
 8008058:	3b30      	subs	r3, #48	@ 0x30
 800805a:	001a      	movs	r2, r3
 800805c:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 800805e:	9307      	str	r3, [sp, #28]
 8008060:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8008062:	1c59      	adds	r1, r3, #1
 8008064:	911d      	str	r1, [sp, #116]	@ 0x74
 8008066:	785b      	ldrb	r3, [r3, #1]
 8008068:	001d      	movs	r5, r3
 800806a:	3d30      	subs	r5, #48	@ 0x30
 800806c:	2d09      	cmp	r5, #9
 800806e:	d93a      	bls.n	80080e6 <_strtod_l+0x376>
 8008070:	9d07      	ldr	r5, [sp, #28]
 8008072:	1b49      	subs	r1, r1, r5
 8008074:	000d      	movs	r5, r1
 8008076:	49b3      	ldr	r1, [pc, #716]	@ (8008344 <_strtod_l+0x5d4>)
 8008078:	9107      	str	r1, [sp, #28]
 800807a:	2d08      	cmp	r5, #8
 800807c:	dc03      	bgt.n	8008086 <_strtod_l+0x316>
 800807e:	9207      	str	r2, [sp, #28]
 8008080:	428a      	cmp	r2, r1
 8008082:	dd00      	ble.n	8008086 <_strtod_l+0x316>
 8008084:	9107      	str	r1, [sp, #28]
 8008086:	2c00      	cmp	r4, #0
 8008088:	d002      	beq.n	8008090 <_strtod_l+0x320>
 800808a:	9a07      	ldr	r2, [sp, #28]
 800808c:	4252      	negs	r2, r2
 800808e:	9207      	str	r2, [sp, #28]
 8008090:	9a06      	ldr	r2, [sp, #24]
 8008092:	2a00      	cmp	r2, #0
 8008094:	d14b      	bne.n	800812e <_strtod_l+0x3be>
 8008096:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8008098:	4310      	orrs	r0, r2
 800809a:	d000      	beq.n	800809e <_strtod_l+0x32e>
 800809c:	e6a3      	b.n	8007de6 <_strtod_l+0x76>
 800809e:	4662      	mov	r2, ip
 80080a0:	2a00      	cmp	r2, #0
 80080a2:	d000      	beq.n	80080a6 <_strtod_l+0x336>
 80080a4:	e6bb      	b.n	8007e1e <_strtod_l+0xae>
 80080a6:	2b69      	cmp	r3, #105	@ 0x69
 80080a8:	d025      	beq.n	80080f6 <_strtod_l+0x386>
 80080aa:	dc21      	bgt.n	80080f0 <_strtod_l+0x380>
 80080ac:	2b49      	cmp	r3, #73	@ 0x49
 80080ae:	d022      	beq.n	80080f6 <_strtod_l+0x386>
 80080b0:	2b4e      	cmp	r3, #78	@ 0x4e
 80080b2:	d000      	beq.n	80080b6 <_strtod_l+0x346>
 80080b4:	e6b3      	b.n	8007e1e <_strtod_l+0xae>
 80080b6:	49a4      	ldr	r1, [pc, #656]	@ (8008348 <_strtod_l+0x5d8>)
 80080b8:	a81d      	add	r0, sp, #116	@ 0x74
 80080ba:	f001 fa2b 	bl	8009514 <__match>
 80080be:	2800      	cmp	r0, #0
 80080c0:	d100      	bne.n	80080c4 <_strtod_l+0x354>
 80080c2:	e6ac      	b.n	8007e1e <_strtod_l+0xae>
 80080c4:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 80080c6:	781b      	ldrb	r3, [r3, #0]
 80080c8:	2b28      	cmp	r3, #40	@ 0x28
 80080ca:	d12a      	bne.n	8008122 <_strtod_l+0x3b2>
 80080cc:	499f      	ldr	r1, [pc, #636]	@ (800834c <_strtod_l+0x5dc>)
 80080ce:	aa20      	add	r2, sp, #128	@ 0x80
 80080d0:	a81d      	add	r0, sp, #116	@ 0x74
 80080d2:	f001 fa33 	bl	800953c <__hexnan>
 80080d6:	2805      	cmp	r0, #5
 80080d8:	d123      	bne.n	8008122 <_strtod_l+0x3b2>
 80080da:	9b21      	ldr	r3, [sp, #132]	@ 0x84
 80080dc:	4a9c      	ldr	r2, [pc, #624]	@ (8008350 <_strtod_l+0x5e0>)
 80080de:	9e20      	ldr	r6, [sp, #128]	@ 0x80
 80080e0:	431a      	orrs	r2, r3
 80080e2:	0017      	movs	r7, r2
 80080e4:	e67f      	b.n	8007de6 <_strtod_l+0x76>
 80080e6:	210a      	movs	r1, #10
 80080e8:	434a      	muls	r2, r1
 80080ea:	18d2      	adds	r2, r2, r3
 80080ec:	3a30      	subs	r2, #48	@ 0x30
 80080ee:	e7b7      	b.n	8008060 <_strtod_l+0x2f0>
 80080f0:	2b6e      	cmp	r3, #110	@ 0x6e
 80080f2:	d0e0      	beq.n	80080b6 <_strtod_l+0x346>
 80080f4:	e693      	b.n	8007e1e <_strtod_l+0xae>
 80080f6:	4997      	ldr	r1, [pc, #604]	@ (8008354 <_strtod_l+0x5e4>)
 80080f8:	a81d      	add	r0, sp, #116	@ 0x74
 80080fa:	f001 fa0b 	bl	8009514 <__match>
 80080fe:	2800      	cmp	r0, #0
 8008100:	d100      	bne.n	8008104 <_strtod_l+0x394>
 8008102:	e68c      	b.n	8007e1e <_strtod_l+0xae>
 8008104:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8008106:	4994      	ldr	r1, [pc, #592]	@ (8008358 <_strtod_l+0x5e8>)
 8008108:	3b01      	subs	r3, #1
 800810a:	a81d      	add	r0, sp, #116	@ 0x74
 800810c:	931d      	str	r3, [sp, #116]	@ 0x74
 800810e:	f001 fa01 	bl	8009514 <__match>
 8008112:	2800      	cmp	r0, #0
 8008114:	d102      	bne.n	800811c <_strtod_l+0x3ac>
 8008116:	9b1d      	ldr	r3, [sp, #116]	@ 0x74
 8008118:	3301      	adds	r3, #1
 800811a:	931d      	str	r3, [sp, #116]	@ 0x74
 800811c:	2600      	movs	r6, #0
 800811e:	4f8c      	ldr	r7, [pc, #560]	@ (8008350 <_strtod_l+0x5e0>)
 8008120:	e661      	b.n	8007de6 <_strtod_l+0x76>
 8008122:	488e      	ldr	r0, [pc, #568]	@ (800835c <_strtod_l+0x5ec>)
 8008124:	f000 ff06 	bl	8008f34 <nan>
 8008128:	0006      	movs	r6, r0
 800812a:	000f      	movs	r7, r1
 800812c:	e65b      	b.n	8007de6 <_strtod_l+0x76>
 800812e:	9b07      	ldr	r3, [sp, #28]
 8008130:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8008132:	1a9b      	subs	r3, r3, r2
 8008134:	930c      	str	r3, [sp, #48]	@ 0x30
 8008136:	9b08      	ldr	r3, [sp, #32]
 8008138:	2b00      	cmp	r3, #0
 800813a:	d101      	bne.n	8008140 <_strtod_l+0x3d0>
 800813c:	9b06      	ldr	r3, [sp, #24]
 800813e:	9308      	str	r3, [sp, #32]
 8008140:	9c06      	ldr	r4, [sp, #24]
 8008142:	2c10      	cmp	r4, #16
 8008144:	dd00      	ble.n	8008148 <_strtod_l+0x3d8>
 8008146:	2410      	movs	r4, #16
 8008148:	980d      	ldr	r0, [sp, #52]	@ 0x34
 800814a:	f7fa f997 	bl	800247c <__aeabi_ui2d>
 800814e:	9b06      	ldr	r3, [sp, #24]
 8008150:	0006      	movs	r6, r0
 8008152:	000f      	movs	r7, r1
 8008154:	2b09      	cmp	r3, #9
 8008156:	dc13      	bgt.n	8008180 <_strtod_l+0x410>
 8008158:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800815a:	2b00      	cmp	r3, #0
 800815c:	d100      	bne.n	8008160 <_strtod_l+0x3f0>
 800815e:	e642      	b.n	8007de6 <_strtod_l+0x76>
 8008160:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8008162:	2b00      	cmp	r3, #0
 8008164:	dc00      	bgt.n	8008168 <_strtod_l+0x3f8>
 8008166:	e07e      	b.n	8008266 <_strtod_l+0x4f6>
 8008168:	2b16      	cmp	r3, #22
 800816a:	dc63      	bgt.n	8008234 <_strtod_l+0x4c4>
 800816c:	497c      	ldr	r1, [pc, #496]	@ (8008360 <_strtod_l+0x5f0>)
 800816e:	00db      	lsls	r3, r3, #3
 8008170:	18c9      	adds	r1, r1, r3
 8008172:	0032      	movs	r2, r6
 8008174:	6808      	ldr	r0, [r1, #0]
 8008176:	6849      	ldr	r1, [r1, #4]
 8008178:	003b      	movs	r3, r7
 800817a:	f7f9 fa03 	bl	8001584 <__aeabi_dmul>
 800817e:	e7d3      	b.n	8008128 <_strtod_l+0x3b8>
 8008180:	0022      	movs	r2, r4
 8008182:	4b77      	ldr	r3, [pc, #476]	@ (8008360 <_strtod_l+0x5f0>)
 8008184:	3a09      	subs	r2, #9
 8008186:	00d2      	lsls	r2, r2, #3
 8008188:	189b      	adds	r3, r3, r2
 800818a:	681a      	ldr	r2, [r3, #0]
 800818c:	685b      	ldr	r3, [r3, #4]
 800818e:	f7f9 f9f9 	bl	8001584 <__aeabi_dmul>
 8008192:	0006      	movs	r6, r0
 8008194:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8008196:	000f      	movs	r7, r1
 8008198:	f7fa f970 	bl	800247c <__aeabi_ui2d>
 800819c:	000b      	movs	r3, r1
 800819e:	0002      	movs	r2, r0
 80081a0:	0039      	movs	r1, r7
 80081a2:	0030      	movs	r0, r6
 80081a4:	f7f8 f9ee 	bl	8000584 <__aeabi_dadd>
 80081a8:	9b06      	ldr	r3, [sp, #24]
 80081aa:	0006      	movs	r6, r0
 80081ac:	000f      	movs	r7, r1
 80081ae:	2b0f      	cmp	r3, #15
 80081b0:	ddd2      	ble.n	8008158 <_strtod_l+0x3e8>
 80081b2:	9b06      	ldr	r3, [sp, #24]
 80081b4:	1b1c      	subs	r4, r3, r4
 80081b6:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80081b8:	18e4      	adds	r4, r4, r3
 80081ba:	2c00      	cmp	r4, #0
 80081bc:	dc00      	bgt.n	80081c0 <_strtod_l+0x450>
 80081be:	e09b      	b.n	80082f8 <_strtod_l+0x588>
 80081c0:	220f      	movs	r2, #15
 80081c2:	0023      	movs	r3, r4
 80081c4:	4013      	ands	r3, r2
 80081c6:	4214      	tst	r4, r2
 80081c8:	d00a      	beq.n	80081e0 <_strtod_l+0x470>
 80081ca:	4965      	ldr	r1, [pc, #404]	@ (8008360 <_strtod_l+0x5f0>)
 80081cc:	00db      	lsls	r3, r3, #3
 80081ce:	18c9      	adds	r1, r1, r3
 80081d0:	0032      	movs	r2, r6
 80081d2:	6808      	ldr	r0, [r1, #0]
 80081d4:	6849      	ldr	r1, [r1, #4]
 80081d6:	003b      	movs	r3, r7
 80081d8:	f7f9 f9d4 	bl	8001584 <__aeabi_dmul>
 80081dc:	0006      	movs	r6, r0
 80081de:	000f      	movs	r7, r1
 80081e0:	230f      	movs	r3, #15
 80081e2:	439c      	bics	r4, r3
 80081e4:	d073      	beq.n	80082ce <_strtod_l+0x55e>
 80081e6:	3326      	adds	r3, #38	@ 0x26
 80081e8:	33ff      	adds	r3, #255	@ 0xff
 80081ea:	429c      	cmp	r4, r3
 80081ec:	dd4b      	ble.n	8008286 <_strtod_l+0x516>
 80081ee:	2300      	movs	r3, #0
 80081f0:	9306      	str	r3, [sp, #24]
 80081f2:	9307      	str	r3, [sp, #28]
 80081f4:	930d      	str	r3, [sp, #52]	@ 0x34
 80081f6:	9308      	str	r3, [sp, #32]
 80081f8:	2322      	movs	r3, #34	@ 0x22
 80081fa:	2600      	movs	r6, #0
 80081fc:	9a05      	ldr	r2, [sp, #20]
 80081fe:	4f54      	ldr	r7, [pc, #336]	@ (8008350 <_strtod_l+0x5e0>)
 8008200:	6013      	str	r3, [r2, #0]
 8008202:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8008204:	42b3      	cmp	r3, r6
 8008206:	d100      	bne.n	800820a <_strtod_l+0x49a>
 8008208:	e5ed      	b.n	8007de6 <_strtod_l+0x76>
 800820a:	991e      	ldr	r1, [sp, #120]	@ 0x78
 800820c:	9805      	ldr	r0, [sp, #20]
 800820e:	f7ff f919 	bl	8007444 <_Bfree>
 8008212:	9908      	ldr	r1, [sp, #32]
 8008214:	9805      	ldr	r0, [sp, #20]
 8008216:	f7ff f915 	bl	8007444 <_Bfree>
 800821a:	9907      	ldr	r1, [sp, #28]
 800821c:	9805      	ldr	r0, [sp, #20]
 800821e:	f7ff f911 	bl	8007444 <_Bfree>
 8008222:	990d      	ldr	r1, [sp, #52]	@ 0x34
 8008224:	9805      	ldr	r0, [sp, #20]
 8008226:	f7ff f90d 	bl	8007444 <_Bfree>
 800822a:	9906      	ldr	r1, [sp, #24]
 800822c:	9805      	ldr	r0, [sp, #20]
 800822e:	f7ff f909 	bl	8007444 <_Bfree>
 8008232:	e5d8      	b.n	8007de6 <_strtod_l+0x76>
 8008234:	2325      	movs	r3, #37	@ 0x25
 8008236:	9a06      	ldr	r2, [sp, #24]
 8008238:	1a9b      	subs	r3, r3, r2
 800823a:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800823c:	4293      	cmp	r3, r2
 800823e:	dbb8      	blt.n	80081b2 <_strtod_l+0x442>
 8008240:	240f      	movs	r4, #15
 8008242:	9b06      	ldr	r3, [sp, #24]
 8008244:	4d46      	ldr	r5, [pc, #280]	@ (8008360 <_strtod_l+0x5f0>)
 8008246:	1ae4      	subs	r4, r4, r3
 8008248:	00e1      	lsls	r1, r4, #3
 800824a:	1869      	adds	r1, r5, r1
 800824c:	0032      	movs	r2, r6
 800824e:	6808      	ldr	r0, [r1, #0]
 8008250:	6849      	ldr	r1, [r1, #4]
 8008252:	003b      	movs	r3, r7
 8008254:	f7f9 f996 	bl	8001584 <__aeabi_dmul>
 8008258:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800825a:	1b1c      	subs	r4, r3, r4
 800825c:	00e4      	lsls	r4, r4, #3
 800825e:	192d      	adds	r5, r5, r4
 8008260:	682a      	ldr	r2, [r5, #0]
 8008262:	686b      	ldr	r3, [r5, #4]
 8008264:	e789      	b.n	800817a <_strtod_l+0x40a>
 8008266:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 8008268:	3316      	adds	r3, #22
 800826a:	dba2      	blt.n	80081b2 <_strtod_l+0x442>
 800826c:	9907      	ldr	r1, [sp, #28]
 800826e:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8008270:	4b3b      	ldr	r3, [pc, #236]	@ (8008360 <_strtod_l+0x5f0>)
 8008272:	1a52      	subs	r2, r2, r1
 8008274:	00d2      	lsls	r2, r2, #3
 8008276:	189b      	adds	r3, r3, r2
 8008278:	0030      	movs	r0, r6
 800827a:	681a      	ldr	r2, [r3, #0]
 800827c:	685b      	ldr	r3, [r3, #4]
 800827e:	0039      	movs	r1, r7
 8008280:	f7f8 fd46 	bl	8000d10 <__aeabi_ddiv>
 8008284:	e750      	b.n	8008128 <_strtod_l+0x3b8>
 8008286:	2300      	movs	r3, #0
 8008288:	0030      	movs	r0, r6
 800828a:	0039      	movs	r1, r7
 800828c:	4d35      	ldr	r5, [pc, #212]	@ (8008364 <_strtod_l+0x5f4>)
 800828e:	1124      	asrs	r4, r4, #4
 8008290:	9309      	str	r3, [sp, #36]	@ 0x24
 8008292:	2c01      	cmp	r4, #1
 8008294:	dc1e      	bgt.n	80082d4 <_strtod_l+0x564>
 8008296:	2b00      	cmp	r3, #0
 8008298:	d001      	beq.n	800829e <_strtod_l+0x52e>
 800829a:	0006      	movs	r6, r0
 800829c:	000f      	movs	r7, r1
 800829e:	4b32      	ldr	r3, [pc, #200]	@ (8008368 <_strtod_l+0x5f8>)
 80082a0:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80082a2:	18ff      	adds	r7, r7, r3
 80082a4:	4b2f      	ldr	r3, [pc, #188]	@ (8008364 <_strtod_l+0x5f4>)
 80082a6:	00d5      	lsls	r5, r2, #3
 80082a8:	195d      	adds	r5, r3, r5
 80082aa:	0032      	movs	r2, r6
 80082ac:	6828      	ldr	r0, [r5, #0]
 80082ae:	6869      	ldr	r1, [r5, #4]
 80082b0:	003b      	movs	r3, r7
 80082b2:	f7f9 f967 	bl	8001584 <__aeabi_dmul>
 80082b6:	4b26      	ldr	r3, [pc, #152]	@ (8008350 <_strtod_l+0x5e0>)
 80082b8:	4a2c      	ldr	r2, [pc, #176]	@ (800836c <_strtod_l+0x5fc>)
 80082ba:	0006      	movs	r6, r0
 80082bc:	400b      	ands	r3, r1
 80082be:	4293      	cmp	r3, r2
 80082c0:	d895      	bhi.n	80081ee <_strtod_l+0x47e>
 80082c2:	4a2b      	ldr	r2, [pc, #172]	@ (8008370 <_strtod_l+0x600>)
 80082c4:	4293      	cmp	r3, r2
 80082c6:	d913      	bls.n	80082f0 <_strtod_l+0x580>
 80082c8:	2601      	movs	r6, #1
 80082ca:	4f2a      	ldr	r7, [pc, #168]	@ (8008374 <_strtod_l+0x604>)
 80082cc:	4276      	negs	r6, r6
 80082ce:	2300      	movs	r3, #0
 80082d0:	9309      	str	r3, [sp, #36]	@ 0x24
 80082d2:	e086      	b.n	80083e2 <_strtod_l+0x672>
 80082d4:	2201      	movs	r2, #1
 80082d6:	4214      	tst	r4, r2
 80082d8:	d004      	beq.n	80082e4 <_strtod_l+0x574>
 80082da:	682a      	ldr	r2, [r5, #0]
 80082dc:	686b      	ldr	r3, [r5, #4]
 80082de:	f7f9 f951 	bl	8001584 <__aeabi_dmul>
 80082e2:	2301      	movs	r3, #1
 80082e4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80082e6:	1064      	asrs	r4, r4, #1
 80082e8:	3201      	adds	r2, #1
 80082ea:	9209      	str	r2, [sp, #36]	@ 0x24
 80082ec:	3508      	adds	r5, #8
 80082ee:	e7d0      	b.n	8008292 <_strtod_l+0x522>
 80082f0:	23d4      	movs	r3, #212	@ 0xd4
 80082f2:	049b      	lsls	r3, r3, #18
 80082f4:	18cf      	adds	r7, r1, r3
 80082f6:	e7ea      	b.n	80082ce <_strtod_l+0x55e>
 80082f8:	2c00      	cmp	r4, #0
 80082fa:	d0e8      	beq.n	80082ce <_strtod_l+0x55e>
 80082fc:	4264      	negs	r4, r4
 80082fe:	230f      	movs	r3, #15
 8008300:	0022      	movs	r2, r4
 8008302:	401a      	ands	r2, r3
 8008304:	421c      	tst	r4, r3
 8008306:	d00a      	beq.n	800831e <_strtod_l+0x5ae>
 8008308:	4b15      	ldr	r3, [pc, #84]	@ (8008360 <_strtod_l+0x5f0>)
 800830a:	00d2      	lsls	r2, r2, #3
 800830c:	189b      	adds	r3, r3, r2
 800830e:	0030      	movs	r0, r6
 8008310:	681a      	ldr	r2, [r3, #0]
 8008312:	685b      	ldr	r3, [r3, #4]
 8008314:	0039      	movs	r1, r7
 8008316:	f7f8 fcfb 	bl	8000d10 <__aeabi_ddiv>
 800831a:	0006      	movs	r6, r0
 800831c:	000f      	movs	r7, r1
 800831e:	1124      	asrs	r4, r4, #4
 8008320:	d0d5      	beq.n	80082ce <_strtod_l+0x55e>
 8008322:	2c1f      	cmp	r4, #31
 8008324:	dd28      	ble.n	8008378 <_strtod_l+0x608>
 8008326:	2300      	movs	r3, #0
 8008328:	9306      	str	r3, [sp, #24]
 800832a:	9307      	str	r3, [sp, #28]
 800832c:	930d      	str	r3, [sp, #52]	@ 0x34
 800832e:	9308      	str	r3, [sp, #32]
 8008330:	2322      	movs	r3, #34	@ 0x22
 8008332:	9a05      	ldr	r2, [sp, #20]
 8008334:	2600      	movs	r6, #0
 8008336:	6013      	str	r3, [r2, #0]
 8008338:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 800833a:	2700      	movs	r7, #0
 800833c:	2b00      	cmp	r3, #0
 800833e:	d000      	beq.n	8008342 <_strtod_l+0x5d2>
 8008340:	e763      	b.n	800820a <_strtod_l+0x49a>
 8008342:	e550      	b.n	8007de6 <_strtod_l+0x76>
 8008344:	00004e1f 	.word	0x00004e1f
 8008348:	08009d92 	.word	0x08009d92
 800834c:	0800a058 	.word	0x0800a058
 8008350:	7ff00000 	.word	0x7ff00000
 8008354:	08009d8a 	.word	0x08009d8a
 8008358:	08009dc1 	.word	0x08009dc1
 800835c:	08009efa 	.word	0x08009efa
 8008360:	08009f90 	.word	0x08009f90
 8008364:	08009f68 	.word	0x08009f68
 8008368:	fcb00000 	.word	0xfcb00000
 800836c:	7ca00000 	.word	0x7ca00000
 8008370:	7c900000 	.word	0x7c900000
 8008374:	7fefffff 	.word	0x7fefffff
 8008378:	2310      	movs	r3, #16
 800837a:	0022      	movs	r2, r4
 800837c:	401a      	ands	r2, r3
 800837e:	9209      	str	r2, [sp, #36]	@ 0x24
 8008380:	421c      	tst	r4, r3
 8008382:	d001      	beq.n	8008388 <_strtod_l+0x618>
 8008384:	335a      	adds	r3, #90	@ 0x5a
 8008386:	9309      	str	r3, [sp, #36]	@ 0x24
 8008388:	0030      	movs	r0, r6
 800838a:	0039      	movs	r1, r7
 800838c:	2300      	movs	r3, #0
 800838e:	4dc0      	ldr	r5, [pc, #768]	@ (8008690 <_strtod_l+0x920>)
 8008390:	2201      	movs	r2, #1
 8008392:	4214      	tst	r4, r2
 8008394:	d004      	beq.n	80083a0 <_strtod_l+0x630>
 8008396:	682a      	ldr	r2, [r5, #0]
 8008398:	686b      	ldr	r3, [r5, #4]
 800839a:	f7f9 f8f3 	bl	8001584 <__aeabi_dmul>
 800839e:	2301      	movs	r3, #1
 80083a0:	1064      	asrs	r4, r4, #1
 80083a2:	3508      	adds	r5, #8
 80083a4:	2c00      	cmp	r4, #0
 80083a6:	d1f3      	bne.n	8008390 <_strtod_l+0x620>
 80083a8:	2b00      	cmp	r3, #0
 80083aa:	d001      	beq.n	80083b0 <_strtod_l+0x640>
 80083ac:	0006      	movs	r6, r0
 80083ae:	000f      	movs	r7, r1
 80083b0:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80083b2:	2b00      	cmp	r3, #0
 80083b4:	d00d      	beq.n	80083d2 <_strtod_l+0x662>
 80083b6:	236b      	movs	r3, #107	@ 0x6b
 80083b8:	007a      	lsls	r2, r7, #1
 80083ba:	0d52      	lsrs	r2, r2, #21
 80083bc:	0039      	movs	r1, r7
 80083be:	1a9b      	subs	r3, r3, r2
 80083c0:	2b00      	cmp	r3, #0
 80083c2:	dd06      	ble.n	80083d2 <_strtod_l+0x662>
 80083c4:	2b1f      	cmp	r3, #31
 80083c6:	dd5c      	ble.n	8008482 <_strtod_l+0x712>
 80083c8:	2600      	movs	r6, #0
 80083ca:	2b34      	cmp	r3, #52	@ 0x34
 80083cc:	dd52      	ble.n	8008474 <_strtod_l+0x704>
 80083ce:	27dc      	movs	r7, #220	@ 0xdc
 80083d0:	04bf      	lsls	r7, r7, #18
 80083d2:	2200      	movs	r2, #0
 80083d4:	2300      	movs	r3, #0
 80083d6:	0030      	movs	r0, r6
 80083d8:	0039      	movs	r1, r7
 80083da:	f7f8 f837 	bl	800044c <__aeabi_dcmpeq>
 80083de:	2800      	cmp	r0, #0
 80083e0:	d1a1      	bne.n	8008326 <_strtod_l+0x5b6>
 80083e2:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 80083e4:	9a08      	ldr	r2, [sp, #32]
 80083e6:	9300      	str	r3, [sp, #0]
 80083e8:	9913      	ldr	r1, [sp, #76]	@ 0x4c
 80083ea:	9b06      	ldr	r3, [sp, #24]
 80083ec:	9805      	ldr	r0, [sp, #20]
 80083ee:	f7ff f891 	bl	8007514 <__s2b>
 80083f2:	900d      	str	r0, [sp, #52]	@ 0x34
 80083f4:	2800      	cmp	r0, #0
 80083f6:	d100      	bne.n	80083fa <_strtod_l+0x68a>
 80083f8:	e6f9      	b.n	80081ee <_strtod_l+0x47e>
 80083fa:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 80083fc:	9907      	ldr	r1, [sp, #28]
 80083fe:	43db      	mvns	r3, r3
 8008400:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8008402:	17db      	asrs	r3, r3, #31
 8008404:	1a52      	subs	r2, r2, r1
 8008406:	9214      	str	r2, [sp, #80]	@ 0x50
 8008408:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 800840a:	9914      	ldr	r1, [sp, #80]	@ 0x50
 800840c:	17d2      	asrs	r2, r2, #31
 800840e:	4011      	ands	r1, r2
 8008410:	9a0c      	ldr	r2, [sp, #48]	@ 0x30
 8008412:	9114      	str	r1, [sp, #80]	@ 0x50
 8008414:	401a      	ands	r2, r3
 8008416:	2300      	movs	r3, #0
 8008418:	921a      	str	r2, [sp, #104]	@ 0x68
 800841a:	9306      	str	r3, [sp, #24]
 800841c:	9307      	str	r3, [sp, #28]
 800841e:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8008420:	9805      	ldr	r0, [sp, #20]
 8008422:	6859      	ldr	r1, [r3, #4]
 8008424:	f7fe ffca 	bl	80073bc <_Balloc>
 8008428:	9008      	str	r0, [sp, #32]
 800842a:	2800      	cmp	r0, #0
 800842c:	d100      	bne.n	8008430 <_strtod_l+0x6c0>
 800842e:	e6e3      	b.n	80081f8 <_strtod_l+0x488>
 8008430:	9b0d      	ldr	r3, [sp, #52]	@ 0x34
 8008432:	300c      	adds	r0, #12
 8008434:	0019      	movs	r1, r3
 8008436:	691a      	ldr	r2, [r3, #16]
 8008438:	310c      	adds	r1, #12
 800843a:	3202      	adds	r2, #2
 800843c:	0092      	lsls	r2, r2, #2
 800843e:	f000 fd6f 	bl	8008f20 <memcpy>
 8008442:	ab20      	add	r3, sp, #128	@ 0x80
 8008444:	9301      	str	r3, [sp, #4]
 8008446:	ab1f      	add	r3, sp, #124	@ 0x7c
 8008448:	9300      	str	r3, [sp, #0]
 800844a:	0032      	movs	r2, r6
 800844c:	003b      	movs	r3, r7
 800844e:	9805      	ldr	r0, [sp, #20]
 8008450:	9610      	str	r6, [sp, #64]	@ 0x40
 8008452:	9711      	str	r7, [sp, #68]	@ 0x44
 8008454:	f7ff fba6 	bl	8007ba4 <__d2b>
 8008458:	901e      	str	r0, [sp, #120]	@ 0x78
 800845a:	2800      	cmp	r0, #0
 800845c:	d100      	bne.n	8008460 <_strtod_l+0x6f0>
 800845e:	e6cb      	b.n	80081f8 <_strtod_l+0x488>
 8008460:	2101      	movs	r1, #1
 8008462:	9805      	ldr	r0, [sp, #20]
 8008464:	f7ff f8f2 	bl	800764c <__i2b>
 8008468:	9007      	str	r0, [sp, #28]
 800846a:	2800      	cmp	r0, #0
 800846c:	d10e      	bne.n	800848c <_strtod_l+0x71c>
 800846e:	2300      	movs	r3, #0
 8008470:	9307      	str	r3, [sp, #28]
 8008472:	e6c1      	b.n	80081f8 <_strtod_l+0x488>
 8008474:	234b      	movs	r3, #75	@ 0x4b
 8008476:	1a9a      	subs	r2, r3, r2
 8008478:	3b4c      	subs	r3, #76	@ 0x4c
 800847a:	4093      	lsls	r3, r2
 800847c:	4019      	ands	r1, r3
 800847e:	000f      	movs	r7, r1
 8008480:	e7a7      	b.n	80083d2 <_strtod_l+0x662>
 8008482:	2201      	movs	r2, #1
 8008484:	4252      	negs	r2, r2
 8008486:	409a      	lsls	r2, r3
 8008488:	4016      	ands	r6, r2
 800848a:	e7a2      	b.n	80083d2 <_strtod_l+0x662>
 800848c:	9b1f      	ldr	r3, [sp, #124]	@ 0x7c
 800848e:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8008490:	9d14      	ldr	r5, [sp, #80]	@ 0x50
 8008492:	1ad4      	subs	r4, r2, r3
 8008494:	2b00      	cmp	r3, #0
 8008496:	db01      	blt.n	800849c <_strtod_l+0x72c>
 8008498:	9c1a      	ldr	r4, [sp, #104]	@ 0x68
 800849a:	195d      	adds	r5, r3, r5
 800849c:	9909      	ldr	r1, [sp, #36]	@ 0x24
 800849e:	9a20      	ldr	r2, [sp, #128]	@ 0x80
 80084a0:	1a5b      	subs	r3, r3, r1
 80084a2:	2136      	movs	r1, #54	@ 0x36
 80084a4:	189b      	adds	r3, r3, r2
 80084a6:	1a8a      	subs	r2, r1, r2
 80084a8:	497a      	ldr	r1, [pc, #488]	@ (8008694 <_strtod_l+0x924>)
 80084aa:	2001      	movs	r0, #1
 80084ac:	468c      	mov	ip, r1
 80084ae:	2100      	movs	r1, #0
 80084b0:	3b01      	subs	r3, #1
 80084b2:	9115      	str	r1, [sp, #84]	@ 0x54
 80084b4:	9016      	str	r0, [sp, #88]	@ 0x58
 80084b6:	4563      	cmp	r3, ip
 80084b8:	da06      	bge.n	80084c8 <_strtod_l+0x758>
 80084ba:	4661      	mov	r1, ip
 80084bc:	1ac9      	subs	r1, r1, r3
 80084be:	1a52      	subs	r2, r2, r1
 80084c0:	291f      	cmp	r1, #31
 80084c2:	dc3f      	bgt.n	8008544 <_strtod_l+0x7d4>
 80084c4:	4088      	lsls	r0, r1
 80084c6:	9016      	str	r0, [sp, #88]	@ 0x58
 80084c8:	18ab      	adds	r3, r5, r2
 80084ca:	930e      	str	r3, [sp, #56]	@ 0x38
 80084cc:	18a4      	adds	r4, r4, r2
 80084ce:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80084d0:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80084d2:	191c      	adds	r4, r3, r4
 80084d4:	002b      	movs	r3, r5
 80084d6:	4295      	cmp	r5, r2
 80084d8:	dd00      	ble.n	80084dc <_strtod_l+0x76c>
 80084da:	0013      	movs	r3, r2
 80084dc:	42a3      	cmp	r3, r4
 80084de:	dd00      	ble.n	80084e2 <_strtod_l+0x772>
 80084e0:	0023      	movs	r3, r4
 80084e2:	2b00      	cmp	r3, #0
 80084e4:	dd04      	ble.n	80084f0 <_strtod_l+0x780>
 80084e6:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 80084e8:	1ae4      	subs	r4, r4, r3
 80084ea:	1ad2      	subs	r2, r2, r3
 80084ec:	920e      	str	r2, [sp, #56]	@ 0x38
 80084ee:	1aed      	subs	r5, r5, r3
 80084f0:	9b14      	ldr	r3, [sp, #80]	@ 0x50
 80084f2:	2b00      	cmp	r3, #0
 80084f4:	dd16      	ble.n	8008524 <_strtod_l+0x7b4>
 80084f6:	001a      	movs	r2, r3
 80084f8:	9907      	ldr	r1, [sp, #28]
 80084fa:	9805      	ldr	r0, [sp, #20]
 80084fc:	f7ff f968 	bl	80077d0 <__pow5mult>
 8008500:	9007      	str	r0, [sp, #28]
 8008502:	2800      	cmp	r0, #0
 8008504:	d0b3      	beq.n	800846e <_strtod_l+0x6fe>
 8008506:	0001      	movs	r1, r0
 8008508:	9a1e      	ldr	r2, [sp, #120]	@ 0x78
 800850a:	9805      	ldr	r0, [sp, #20]
 800850c:	f7ff f8b6 	bl	800767c <__multiply>
 8008510:	9013      	str	r0, [sp, #76]	@ 0x4c
 8008512:	2800      	cmp	r0, #0
 8008514:	d100      	bne.n	8008518 <_strtod_l+0x7a8>
 8008516:	e66f      	b.n	80081f8 <_strtod_l+0x488>
 8008518:	991e      	ldr	r1, [sp, #120]	@ 0x78
 800851a:	9805      	ldr	r0, [sp, #20]
 800851c:	f7fe ff92 	bl	8007444 <_Bfree>
 8008520:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8008522:	931e      	str	r3, [sp, #120]	@ 0x78
 8008524:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008526:	2b00      	cmp	r3, #0
 8008528:	dc12      	bgt.n	8008550 <_strtod_l+0x7e0>
 800852a:	9b0c      	ldr	r3, [sp, #48]	@ 0x30
 800852c:	2b00      	cmp	r3, #0
 800852e:	dd18      	ble.n	8008562 <_strtod_l+0x7f2>
 8008530:	9a1a      	ldr	r2, [sp, #104]	@ 0x68
 8008532:	9908      	ldr	r1, [sp, #32]
 8008534:	9805      	ldr	r0, [sp, #20]
 8008536:	f7ff f94b 	bl	80077d0 <__pow5mult>
 800853a:	9008      	str	r0, [sp, #32]
 800853c:	2800      	cmp	r0, #0
 800853e:	d110      	bne.n	8008562 <_strtod_l+0x7f2>
 8008540:	2300      	movs	r3, #0
 8008542:	e658      	b.n	80081f6 <_strtod_l+0x486>
 8008544:	4954      	ldr	r1, [pc, #336]	@ (8008698 <_strtod_l+0x928>)
 8008546:	1acb      	subs	r3, r1, r3
 8008548:	0001      	movs	r1, r0
 800854a:	4099      	lsls	r1, r3
 800854c:	9115      	str	r1, [sp, #84]	@ 0x54
 800854e:	e7ba      	b.n	80084c6 <_strtod_l+0x756>
 8008550:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8008552:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8008554:	9805      	ldr	r0, [sp, #20]
 8008556:	f7ff f997 	bl	8007888 <__lshift>
 800855a:	901e      	str	r0, [sp, #120]	@ 0x78
 800855c:	2800      	cmp	r0, #0
 800855e:	d1e4      	bne.n	800852a <_strtod_l+0x7ba>
 8008560:	e64a      	b.n	80081f8 <_strtod_l+0x488>
 8008562:	2c00      	cmp	r4, #0
 8008564:	dd07      	ble.n	8008576 <_strtod_l+0x806>
 8008566:	0022      	movs	r2, r4
 8008568:	9908      	ldr	r1, [sp, #32]
 800856a:	9805      	ldr	r0, [sp, #20]
 800856c:	f7ff f98c 	bl	8007888 <__lshift>
 8008570:	9008      	str	r0, [sp, #32]
 8008572:	2800      	cmp	r0, #0
 8008574:	d0e4      	beq.n	8008540 <_strtod_l+0x7d0>
 8008576:	2d00      	cmp	r5, #0
 8008578:	dd08      	ble.n	800858c <_strtod_l+0x81c>
 800857a:	002a      	movs	r2, r5
 800857c:	9907      	ldr	r1, [sp, #28]
 800857e:	9805      	ldr	r0, [sp, #20]
 8008580:	f7ff f982 	bl	8007888 <__lshift>
 8008584:	9007      	str	r0, [sp, #28]
 8008586:	2800      	cmp	r0, #0
 8008588:	d100      	bne.n	800858c <_strtod_l+0x81c>
 800858a:	e635      	b.n	80081f8 <_strtod_l+0x488>
 800858c:	9a08      	ldr	r2, [sp, #32]
 800858e:	991e      	ldr	r1, [sp, #120]	@ 0x78
 8008590:	9805      	ldr	r0, [sp, #20]
 8008592:	f7ff fa01 	bl	8007998 <__mdiff>
 8008596:	9006      	str	r0, [sp, #24]
 8008598:	2800      	cmp	r0, #0
 800859a:	d100      	bne.n	800859e <_strtod_l+0x82e>
 800859c:	e62c      	b.n	80081f8 <_strtod_l+0x488>
 800859e:	68c3      	ldr	r3, [r0, #12]
 80085a0:	9907      	ldr	r1, [sp, #28]
 80085a2:	9313      	str	r3, [sp, #76]	@ 0x4c
 80085a4:	2300      	movs	r3, #0
 80085a6:	60c3      	str	r3, [r0, #12]
 80085a8:	f7ff f9da 	bl	8007960 <__mcmp>
 80085ac:	2800      	cmp	r0, #0
 80085ae:	da3b      	bge.n	8008628 <_strtod_l+0x8b8>
 80085b0:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80085b2:	4333      	orrs	r3, r6
 80085b4:	d167      	bne.n	8008686 <_strtod_l+0x916>
 80085b6:	033b      	lsls	r3, r7, #12
 80085b8:	d165      	bne.n	8008686 <_strtod_l+0x916>
 80085ba:	22d6      	movs	r2, #214	@ 0xd6
 80085bc:	4b37      	ldr	r3, [pc, #220]	@ (800869c <_strtod_l+0x92c>)
 80085be:	04d2      	lsls	r2, r2, #19
 80085c0:	403b      	ands	r3, r7
 80085c2:	4293      	cmp	r3, r2
 80085c4:	d95f      	bls.n	8008686 <_strtod_l+0x916>
 80085c6:	9b06      	ldr	r3, [sp, #24]
 80085c8:	695b      	ldr	r3, [r3, #20]
 80085ca:	2b00      	cmp	r3, #0
 80085cc:	d103      	bne.n	80085d6 <_strtod_l+0x866>
 80085ce:	9b06      	ldr	r3, [sp, #24]
 80085d0:	691b      	ldr	r3, [r3, #16]
 80085d2:	2b01      	cmp	r3, #1
 80085d4:	dd57      	ble.n	8008686 <_strtod_l+0x916>
 80085d6:	9906      	ldr	r1, [sp, #24]
 80085d8:	2201      	movs	r2, #1
 80085da:	9805      	ldr	r0, [sp, #20]
 80085dc:	f7ff f954 	bl	8007888 <__lshift>
 80085e0:	9907      	ldr	r1, [sp, #28]
 80085e2:	9006      	str	r0, [sp, #24]
 80085e4:	f7ff f9bc 	bl	8007960 <__mcmp>
 80085e8:	2800      	cmp	r0, #0
 80085ea:	dd4c      	ble.n	8008686 <_strtod_l+0x916>
 80085ec:	4b2b      	ldr	r3, [pc, #172]	@ (800869c <_strtod_l+0x92c>)
 80085ee:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80085f0:	403b      	ands	r3, r7
 80085f2:	2a00      	cmp	r2, #0
 80085f4:	d074      	beq.n	80086e0 <_strtod_l+0x970>
 80085f6:	22d6      	movs	r2, #214	@ 0xd6
 80085f8:	04d2      	lsls	r2, r2, #19
 80085fa:	4293      	cmp	r3, r2
 80085fc:	d870      	bhi.n	80086e0 <_strtod_l+0x970>
 80085fe:	22dc      	movs	r2, #220	@ 0xdc
 8008600:	0492      	lsls	r2, r2, #18
 8008602:	4293      	cmp	r3, r2
 8008604:	d800      	bhi.n	8008608 <_strtod_l+0x898>
 8008606:	e693      	b.n	8008330 <_strtod_l+0x5c0>
 8008608:	0030      	movs	r0, r6
 800860a:	0039      	movs	r1, r7
 800860c:	4b24      	ldr	r3, [pc, #144]	@ (80086a0 <_strtod_l+0x930>)
 800860e:	2200      	movs	r2, #0
 8008610:	f7f8 ffb8 	bl	8001584 <__aeabi_dmul>
 8008614:	4b21      	ldr	r3, [pc, #132]	@ (800869c <_strtod_l+0x92c>)
 8008616:	0006      	movs	r6, r0
 8008618:	000f      	movs	r7, r1
 800861a:	420b      	tst	r3, r1
 800861c:	d000      	beq.n	8008620 <_strtod_l+0x8b0>
 800861e:	e5f4      	b.n	800820a <_strtod_l+0x49a>
 8008620:	2322      	movs	r3, #34	@ 0x22
 8008622:	9a05      	ldr	r2, [sp, #20]
 8008624:	6013      	str	r3, [r2, #0]
 8008626:	e5f0      	b.n	800820a <_strtod_l+0x49a>
 8008628:	970e      	str	r7, [sp, #56]	@ 0x38
 800862a:	2800      	cmp	r0, #0
 800862c:	d175      	bne.n	800871a <_strtod_l+0x9aa>
 800862e:	9a13      	ldr	r2, [sp, #76]	@ 0x4c
 8008630:	033b      	lsls	r3, r7, #12
 8008632:	0b1b      	lsrs	r3, r3, #12
 8008634:	2a00      	cmp	r2, #0
 8008636:	d039      	beq.n	80086ac <_strtod_l+0x93c>
 8008638:	4a1a      	ldr	r2, [pc, #104]	@ (80086a4 <_strtod_l+0x934>)
 800863a:	4293      	cmp	r3, r2
 800863c:	d138      	bne.n	80086b0 <_strtod_l+0x940>
 800863e:	2101      	movs	r1, #1
 8008640:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008642:	4249      	negs	r1, r1
 8008644:	0032      	movs	r2, r6
 8008646:	0008      	movs	r0, r1
 8008648:	2b00      	cmp	r3, #0
 800864a:	d00b      	beq.n	8008664 <_strtod_l+0x8f4>
 800864c:	24d4      	movs	r4, #212	@ 0xd4
 800864e:	4b13      	ldr	r3, [pc, #76]	@ (800869c <_strtod_l+0x92c>)
 8008650:	0008      	movs	r0, r1
 8008652:	403b      	ands	r3, r7
 8008654:	04e4      	lsls	r4, r4, #19
 8008656:	42a3      	cmp	r3, r4
 8008658:	d804      	bhi.n	8008664 <_strtod_l+0x8f4>
 800865a:	306c      	adds	r0, #108	@ 0x6c
 800865c:	0d1b      	lsrs	r3, r3, #20
 800865e:	1ac3      	subs	r3, r0, r3
 8008660:	4099      	lsls	r1, r3
 8008662:	0008      	movs	r0, r1
 8008664:	4282      	cmp	r2, r0
 8008666:	d123      	bne.n	80086b0 <_strtod_l+0x940>
 8008668:	4b0f      	ldr	r3, [pc, #60]	@ (80086a8 <_strtod_l+0x938>)
 800866a:	990e      	ldr	r1, [sp, #56]	@ 0x38
 800866c:	4299      	cmp	r1, r3
 800866e:	d102      	bne.n	8008676 <_strtod_l+0x906>
 8008670:	3201      	adds	r2, #1
 8008672:	d100      	bne.n	8008676 <_strtod_l+0x906>
 8008674:	e5c0      	b.n	80081f8 <_strtod_l+0x488>
 8008676:	4b09      	ldr	r3, [pc, #36]	@ (800869c <_strtod_l+0x92c>)
 8008678:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800867a:	2600      	movs	r6, #0
 800867c:	401a      	ands	r2, r3
 800867e:	0013      	movs	r3, r2
 8008680:	2280      	movs	r2, #128	@ 0x80
 8008682:	0352      	lsls	r2, r2, #13
 8008684:	189f      	adds	r7, r3, r2
 8008686:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008688:	2b00      	cmp	r3, #0
 800868a:	d1bd      	bne.n	8008608 <_strtod_l+0x898>
 800868c:	e5bd      	b.n	800820a <_strtod_l+0x49a>
 800868e:	46c0      	nop			@ (mov r8, r8)
 8008690:	0800a080 	.word	0x0800a080
 8008694:	fffffc02 	.word	0xfffffc02
 8008698:	fffffbe2 	.word	0xfffffbe2
 800869c:	7ff00000 	.word	0x7ff00000
 80086a0:	39500000 	.word	0x39500000
 80086a4:	000fffff 	.word	0x000fffff
 80086a8:	7fefffff 	.word	0x7fefffff
 80086ac:	4333      	orrs	r3, r6
 80086ae:	d09d      	beq.n	80085ec <_strtod_l+0x87c>
 80086b0:	9b15      	ldr	r3, [sp, #84]	@ 0x54
 80086b2:	2b00      	cmp	r3, #0
 80086b4:	d01c      	beq.n	80086f0 <_strtod_l+0x980>
 80086b6:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80086b8:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80086ba:	4213      	tst	r3, r2
 80086bc:	d0e3      	beq.n	8008686 <_strtod_l+0x916>
 80086be:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80086c0:	0030      	movs	r0, r6
 80086c2:	0039      	movs	r1, r7
 80086c4:	9a09      	ldr	r2, [sp, #36]	@ 0x24
 80086c6:	2b00      	cmp	r3, #0
 80086c8:	d016      	beq.n	80086f8 <_strtod_l+0x988>
 80086ca:	f7ff fb39 	bl	8007d40 <sulp>
 80086ce:	0002      	movs	r2, r0
 80086d0:	000b      	movs	r3, r1
 80086d2:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80086d4:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80086d6:	f7f7 ff55 	bl	8000584 <__aeabi_dadd>
 80086da:	0006      	movs	r6, r0
 80086dc:	000f      	movs	r7, r1
 80086de:	e7d2      	b.n	8008686 <_strtod_l+0x916>
 80086e0:	2601      	movs	r6, #1
 80086e2:	4a92      	ldr	r2, [pc, #584]	@ (800892c <_strtod_l+0xbbc>)
 80086e4:	4276      	negs	r6, r6
 80086e6:	189b      	adds	r3, r3, r2
 80086e8:	4a91      	ldr	r2, [pc, #580]	@ (8008930 <_strtod_l+0xbc0>)
 80086ea:	431a      	orrs	r2, r3
 80086ec:	0017      	movs	r7, r2
 80086ee:	e7ca      	b.n	8008686 <_strtod_l+0x916>
 80086f0:	9b16      	ldr	r3, [sp, #88]	@ 0x58
 80086f2:	4233      	tst	r3, r6
 80086f4:	d0c7      	beq.n	8008686 <_strtod_l+0x916>
 80086f6:	e7e2      	b.n	80086be <_strtod_l+0x94e>
 80086f8:	f7ff fb22 	bl	8007d40 <sulp>
 80086fc:	0002      	movs	r2, r0
 80086fe:	000b      	movs	r3, r1
 8008700:	9810      	ldr	r0, [sp, #64]	@ 0x40
 8008702:	9911      	ldr	r1, [sp, #68]	@ 0x44
 8008704:	f7f9 fa24 	bl	8001b50 <__aeabi_dsub>
 8008708:	2200      	movs	r2, #0
 800870a:	2300      	movs	r3, #0
 800870c:	0006      	movs	r6, r0
 800870e:	000f      	movs	r7, r1
 8008710:	f7f7 fe9c 	bl	800044c <__aeabi_dcmpeq>
 8008714:	2800      	cmp	r0, #0
 8008716:	d0b6      	beq.n	8008686 <_strtod_l+0x916>
 8008718:	e60a      	b.n	8008330 <_strtod_l+0x5c0>
 800871a:	9907      	ldr	r1, [sp, #28]
 800871c:	9806      	ldr	r0, [sp, #24]
 800871e:	f7ff faa1 	bl	8007c64 <__ratio>
 8008722:	2380      	movs	r3, #128	@ 0x80
 8008724:	2200      	movs	r2, #0
 8008726:	05db      	lsls	r3, r3, #23
 8008728:	0004      	movs	r4, r0
 800872a:	000d      	movs	r5, r1
 800872c:	f7f7 fe9e 	bl	800046c <__aeabi_dcmple>
 8008730:	2800      	cmp	r0, #0
 8008732:	d06c      	beq.n	800880e <_strtod_l+0xa9e>
 8008734:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 8008736:	2b00      	cmp	r3, #0
 8008738:	d177      	bne.n	800882a <_strtod_l+0xaba>
 800873a:	2e00      	cmp	r6, #0
 800873c:	d157      	bne.n	80087ee <_strtod_l+0xa7e>
 800873e:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8008740:	031b      	lsls	r3, r3, #12
 8008742:	d15a      	bne.n	80087fa <_strtod_l+0xa8a>
 8008744:	2200      	movs	r2, #0
 8008746:	0020      	movs	r0, r4
 8008748:	0029      	movs	r1, r5
 800874a:	4b7a      	ldr	r3, [pc, #488]	@ (8008934 <_strtod_l+0xbc4>)
 800874c:	f7f7 fe84 	bl	8000458 <__aeabi_dcmplt>
 8008750:	2800      	cmp	r0, #0
 8008752:	d159      	bne.n	8008808 <_strtod_l+0xa98>
 8008754:	0020      	movs	r0, r4
 8008756:	0029      	movs	r1, r5
 8008758:	2200      	movs	r2, #0
 800875a:	4b77      	ldr	r3, [pc, #476]	@ (8008938 <_strtod_l+0xbc8>)
 800875c:	f7f8 ff12 	bl	8001584 <__aeabi_dmul>
 8008760:	0004      	movs	r4, r0
 8008762:	000d      	movs	r5, r1
 8008764:	2380      	movs	r3, #128	@ 0x80
 8008766:	061b      	lsls	r3, r3, #24
 8008768:	18eb      	adds	r3, r5, r3
 800876a:	940a      	str	r4, [sp, #40]	@ 0x28
 800876c:	930b      	str	r3, [sp, #44]	@ 0x2c
 800876e:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 8008770:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 8008772:	9216      	str	r2, [sp, #88]	@ 0x58
 8008774:	9317      	str	r3, [sp, #92]	@ 0x5c
 8008776:	4a71      	ldr	r2, [pc, #452]	@ (800893c <_strtod_l+0xbcc>)
 8008778:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800877a:	4013      	ands	r3, r2
 800877c:	9315      	str	r3, [sp, #84]	@ 0x54
 800877e:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 8008780:	4b6f      	ldr	r3, [pc, #444]	@ (8008940 <_strtod_l+0xbd0>)
 8008782:	429a      	cmp	r2, r3
 8008784:	d000      	beq.n	8008788 <_strtod_l+0xa18>
 8008786:	e087      	b.n	8008898 <_strtod_l+0xb28>
 8008788:	4a6e      	ldr	r2, [pc, #440]	@ (8008944 <_strtod_l+0xbd4>)
 800878a:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800878c:	4694      	mov	ip, r2
 800878e:	4463      	add	r3, ip
 8008790:	001f      	movs	r7, r3
 8008792:	0030      	movs	r0, r6
 8008794:	0019      	movs	r1, r3
 8008796:	f7ff f999 	bl	8007acc <__ulp>
 800879a:	9a0a      	ldr	r2, [sp, #40]	@ 0x28
 800879c:	9b0b      	ldr	r3, [sp, #44]	@ 0x2c
 800879e:	f7f8 fef1 	bl	8001584 <__aeabi_dmul>
 80087a2:	0032      	movs	r2, r6
 80087a4:	003b      	movs	r3, r7
 80087a6:	f7f7 feed 	bl	8000584 <__aeabi_dadd>
 80087aa:	4a64      	ldr	r2, [pc, #400]	@ (800893c <_strtod_l+0xbcc>)
 80087ac:	4b66      	ldr	r3, [pc, #408]	@ (8008948 <_strtod_l+0xbd8>)
 80087ae:	0006      	movs	r6, r0
 80087b0:	400a      	ands	r2, r1
 80087b2:	429a      	cmp	r2, r3
 80087b4:	d940      	bls.n	8008838 <_strtod_l+0xac8>
 80087b6:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 80087b8:	4a64      	ldr	r2, [pc, #400]	@ (800894c <_strtod_l+0xbdc>)
 80087ba:	4293      	cmp	r3, r2
 80087bc:	d103      	bne.n	80087c6 <_strtod_l+0xa56>
 80087be:	9b10      	ldr	r3, [sp, #64]	@ 0x40
 80087c0:	3301      	adds	r3, #1
 80087c2:	d100      	bne.n	80087c6 <_strtod_l+0xa56>
 80087c4:	e518      	b.n	80081f8 <_strtod_l+0x488>
 80087c6:	2601      	movs	r6, #1
 80087c8:	4f60      	ldr	r7, [pc, #384]	@ (800894c <_strtod_l+0xbdc>)
 80087ca:	4276      	negs	r6, r6
 80087cc:	991e      	ldr	r1, [sp, #120]	@ 0x78
 80087ce:	9805      	ldr	r0, [sp, #20]
 80087d0:	f7fe fe38 	bl	8007444 <_Bfree>
 80087d4:	9908      	ldr	r1, [sp, #32]
 80087d6:	9805      	ldr	r0, [sp, #20]
 80087d8:	f7fe fe34 	bl	8007444 <_Bfree>
 80087dc:	9907      	ldr	r1, [sp, #28]
 80087de:	9805      	ldr	r0, [sp, #20]
 80087e0:	f7fe fe30 	bl	8007444 <_Bfree>
 80087e4:	9906      	ldr	r1, [sp, #24]
 80087e6:	9805      	ldr	r0, [sp, #20]
 80087e8:	f7fe fe2c 	bl	8007444 <_Bfree>
 80087ec:	e617      	b.n	800841e <_strtod_l+0x6ae>
 80087ee:	2e01      	cmp	r6, #1
 80087f0:	d103      	bne.n	80087fa <_strtod_l+0xa8a>
 80087f2:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 80087f4:	2b00      	cmp	r3, #0
 80087f6:	d100      	bne.n	80087fa <_strtod_l+0xa8a>
 80087f8:	e59a      	b.n	8008330 <_strtod_l+0x5c0>
 80087fa:	2300      	movs	r3, #0
 80087fc:	4c54      	ldr	r4, [pc, #336]	@ (8008950 <_strtod_l+0xbe0>)
 80087fe:	4d4d      	ldr	r5, [pc, #308]	@ (8008934 <_strtod_l+0xbc4>)
 8008800:	930a      	str	r3, [sp, #40]	@ 0x28
 8008802:	940b      	str	r4, [sp, #44]	@ 0x2c
 8008804:	2400      	movs	r4, #0
 8008806:	e7b2      	b.n	800876e <_strtod_l+0x9fe>
 8008808:	2400      	movs	r4, #0
 800880a:	4d4b      	ldr	r5, [pc, #300]	@ (8008938 <_strtod_l+0xbc8>)
 800880c:	e7aa      	b.n	8008764 <_strtod_l+0x9f4>
 800880e:	0020      	movs	r0, r4
 8008810:	0029      	movs	r1, r5
 8008812:	4b49      	ldr	r3, [pc, #292]	@ (8008938 <_strtod_l+0xbc8>)
 8008814:	2200      	movs	r2, #0
 8008816:	f7f8 feb5 	bl	8001584 <__aeabi_dmul>
 800881a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800881c:	0004      	movs	r4, r0
 800881e:	000d      	movs	r5, r1
 8008820:	2b00      	cmp	r3, #0
 8008822:	d09f      	beq.n	8008764 <_strtod_l+0x9f4>
 8008824:	940a      	str	r4, [sp, #40]	@ 0x28
 8008826:	950b      	str	r5, [sp, #44]	@ 0x2c
 8008828:	e7a1      	b.n	800876e <_strtod_l+0x9fe>
 800882a:	2300      	movs	r3, #0
 800882c:	4c41      	ldr	r4, [pc, #260]	@ (8008934 <_strtod_l+0xbc4>)
 800882e:	0025      	movs	r5, r4
 8008830:	930a      	str	r3, [sp, #40]	@ 0x28
 8008832:	940b      	str	r4, [sp, #44]	@ 0x2c
 8008834:	001c      	movs	r4, r3
 8008836:	e79a      	b.n	800876e <_strtod_l+0x9fe>
 8008838:	23d4      	movs	r3, #212	@ 0xd4
 800883a:	049b      	lsls	r3, r3, #18
 800883c:	18cf      	adds	r7, r1, r3
 800883e:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 8008840:	9710      	str	r7, [sp, #64]	@ 0x40
 8008842:	2b00      	cmp	r3, #0
 8008844:	d1c2      	bne.n	80087cc <_strtod_l+0xa5c>
 8008846:	4b3d      	ldr	r3, [pc, #244]	@ (800893c <_strtod_l+0xbcc>)
 8008848:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 800884a:	403b      	ands	r3, r7
 800884c:	429a      	cmp	r2, r3
 800884e:	d1bd      	bne.n	80087cc <_strtod_l+0xa5c>
 8008850:	0020      	movs	r0, r4
 8008852:	0029      	movs	r1, r5
 8008854:	f7f7 fe46 	bl	80004e4 <__aeabi_d2lz>
 8008858:	f7f7 fe7e 	bl	8000558 <__aeabi_l2d>
 800885c:	0002      	movs	r2, r0
 800885e:	000b      	movs	r3, r1
 8008860:	0020      	movs	r0, r4
 8008862:	0029      	movs	r1, r5
 8008864:	f7f9 f974 	bl	8001b50 <__aeabi_dsub>
 8008868:	033c      	lsls	r4, r7, #12
 800886a:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 800886c:	0b24      	lsrs	r4, r4, #12
 800886e:	4334      	orrs	r4, r6
 8008870:	900e      	str	r0, [sp, #56]	@ 0x38
 8008872:	910f      	str	r1, [sp, #60]	@ 0x3c
 8008874:	4a37      	ldr	r2, [pc, #220]	@ (8008954 <_strtod_l+0xbe4>)
 8008876:	431c      	orrs	r4, r3
 8008878:	d052      	beq.n	8008920 <_strtod_l+0xbb0>
 800887a:	4b37      	ldr	r3, [pc, #220]	@ (8008958 <_strtod_l+0xbe8>)
 800887c:	f7f7 fdec 	bl	8000458 <__aeabi_dcmplt>
 8008880:	2800      	cmp	r0, #0
 8008882:	d000      	beq.n	8008886 <_strtod_l+0xb16>
 8008884:	e4c1      	b.n	800820a <_strtod_l+0x49a>
 8008886:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8008888:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 800888a:	4a34      	ldr	r2, [pc, #208]	@ (800895c <_strtod_l+0xbec>)
 800888c:	4b2a      	ldr	r3, [pc, #168]	@ (8008938 <_strtod_l+0xbc8>)
 800888e:	f7f7 fdf7 	bl	8000480 <__aeabi_dcmpgt>
 8008892:	2800      	cmp	r0, #0
 8008894:	d09a      	beq.n	80087cc <_strtod_l+0xa5c>
 8008896:	e4b8      	b.n	800820a <_strtod_l+0x49a>
 8008898:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 800889a:	2b00      	cmp	r3, #0
 800889c:	d02a      	beq.n	80088f4 <_strtod_l+0xb84>
 800889e:	23d4      	movs	r3, #212	@ 0xd4
 80088a0:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80088a2:	04db      	lsls	r3, r3, #19
 80088a4:	429a      	cmp	r2, r3
 80088a6:	d825      	bhi.n	80088f4 <_strtod_l+0xb84>
 80088a8:	0020      	movs	r0, r4
 80088aa:	0029      	movs	r1, r5
 80088ac:	4a2c      	ldr	r2, [pc, #176]	@ (8008960 <_strtod_l+0xbf0>)
 80088ae:	4b2d      	ldr	r3, [pc, #180]	@ (8008964 <_strtod_l+0xbf4>)
 80088b0:	f7f7 fddc 	bl	800046c <__aeabi_dcmple>
 80088b4:	2800      	cmp	r0, #0
 80088b6:	d016      	beq.n	80088e6 <_strtod_l+0xb76>
 80088b8:	0020      	movs	r0, r4
 80088ba:	0029      	movs	r1, r5
 80088bc:	f7f7 fdf4 	bl	80004a8 <__aeabi_d2uiz>
 80088c0:	2800      	cmp	r0, #0
 80088c2:	d100      	bne.n	80088c6 <_strtod_l+0xb56>
 80088c4:	3001      	adds	r0, #1
 80088c6:	f7f9 fdd9 	bl	800247c <__aeabi_ui2d>
 80088ca:	9b13      	ldr	r3, [sp, #76]	@ 0x4c
 80088cc:	0004      	movs	r4, r0
 80088ce:	000d      	movs	r5, r1
 80088d0:	2b00      	cmp	r3, #0
 80088d2:	d122      	bne.n	800891a <_strtod_l+0xbaa>
 80088d4:	2380      	movs	r3, #128	@ 0x80
 80088d6:	061b      	lsls	r3, r3, #24
 80088d8:	18cb      	adds	r3, r1, r3
 80088da:	9018      	str	r0, [sp, #96]	@ 0x60
 80088dc:	9319      	str	r3, [sp, #100]	@ 0x64
 80088de:	9a18      	ldr	r2, [sp, #96]	@ 0x60
 80088e0:	9b19      	ldr	r3, [sp, #100]	@ 0x64
 80088e2:	9216      	str	r2, [sp, #88]	@ 0x58
 80088e4:	9317      	str	r3, [sp, #92]	@ 0x5c
 80088e6:	22d6      	movs	r2, #214	@ 0xd6
 80088e8:	9b17      	ldr	r3, [sp, #92]	@ 0x5c
 80088ea:	04d2      	lsls	r2, r2, #19
 80088ec:	189b      	adds	r3, r3, r2
 80088ee:	9a15      	ldr	r2, [sp, #84]	@ 0x54
 80088f0:	1a9b      	subs	r3, r3, r2
 80088f2:	9317      	str	r3, [sp, #92]	@ 0x5c
 80088f4:	9810      	ldr	r0, [sp, #64]	@ 0x40
 80088f6:	9911      	ldr	r1, [sp, #68]	@ 0x44
 80088f8:	9e16      	ldr	r6, [sp, #88]	@ 0x58
 80088fa:	9f17      	ldr	r7, [sp, #92]	@ 0x5c
 80088fc:	f7ff f8e6 	bl	8007acc <__ulp>
 8008900:	0002      	movs	r2, r0
 8008902:	000b      	movs	r3, r1
 8008904:	0030      	movs	r0, r6
 8008906:	0039      	movs	r1, r7
 8008908:	f7f8 fe3c 	bl	8001584 <__aeabi_dmul>
 800890c:	9a10      	ldr	r2, [sp, #64]	@ 0x40
 800890e:	9b11      	ldr	r3, [sp, #68]	@ 0x44
 8008910:	f7f7 fe38 	bl	8000584 <__aeabi_dadd>
 8008914:	0006      	movs	r6, r0
 8008916:	000f      	movs	r7, r1
 8008918:	e791      	b.n	800883e <_strtod_l+0xace>
 800891a:	9418      	str	r4, [sp, #96]	@ 0x60
 800891c:	9519      	str	r5, [sp, #100]	@ 0x64
 800891e:	e7de      	b.n	80088de <_strtod_l+0xb6e>
 8008920:	4b11      	ldr	r3, [pc, #68]	@ (8008968 <_strtod_l+0xbf8>)
 8008922:	980e      	ldr	r0, [sp, #56]	@ 0x38
 8008924:	990f      	ldr	r1, [sp, #60]	@ 0x3c
 8008926:	f7f7 fd97 	bl	8000458 <__aeabi_dcmplt>
 800892a:	e7b2      	b.n	8008892 <_strtod_l+0xb22>
 800892c:	fff00000 	.word	0xfff00000
 8008930:	000fffff 	.word	0x000fffff
 8008934:	3ff00000 	.word	0x3ff00000
 8008938:	3fe00000 	.word	0x3fe00000
 800893c:	7ff00000 	.word	0x7ff00000
 8008940:	7fe00000 	.word	0x7fe00000
 8008944:	fcb00000 	.word	0xfcb00000
 8008948:	7c9fffff 	.word	0x7c9fffff
 800894c:	7fefffff 	.word	0x7fefffff
 8008950:	bff00000 	.word	0xbff00000
 8008954:	94a03595 	.word	0x94a03595
 8008958:	3fdfffff 	.word	0x3fdfffff
 800895c:	35afe535 	.word	0x35afe535
 8008960:	ffc00000 	.word	0xffc00000
 8008964:	41dfffff 	.word	0x41dfffff
 8008968:	3fcfffff 	.word	0x3fcfffff

0800896c <_strtod_r>:
 800896c:	b510      	push	{r4, lr}
 800896e:	4b02      	ldr	r3, [pc, #8]	@ (8008978 <_strtod_r+0xc>)
 8008970:	f7ff f9fe 	bl	8007d70 <_strtod_l>
 8008974:	bd10      	pop	{r4, pc}
 8008976:	46c0      	nop			@ (mov r8, r8)
 8008978:	20000070 	.word	0x20000070

0800897c <_strtol_l.isra.0>:
 800897c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800897e:	b085      	sub	sp, #20
 8008980:	0017      	movs	r7, r2
 8008982:	001e      	movs	r6, r3
 8008984:	9003      	str	r0, [sp, #12]
 8008986:	9101      	str	r1, [sp, #4]
 8008988:	2b24      	cmp	r3, #36	@ 0x24
 800898a:	d823      	bhi.n	80089d4 <_strtol_l.isra.0+0x58>
 800898c:	000c      	movs	r4, r1
 800898e:	2b01      	cmp	r3, #1
 8008990:	d020      	beq.n	80089d4 <_strtol_l.isra.0+0x58>
 8008992:	4b3d      	ldr	r3, [pc, #244]	@ (8008a88 <_strtol_l.isra.0+0x10c>)
 8008994:	2208      	movs	r2, #8
 8008996:	469c      	mov	ip, r3
 8008998:	0023      	movs	r3, r4
 800899a:	4661      	mov	r1, ip
 800899c:	781d      	ldrb	r5, [r3, #0]
 800899e:	3401      	adds	r4, #1
 80089a0:	5d48      	ldrb	r0, [r1, r5]
 80089a2:	0001      	movs	r1, r0
 80089a4:	4011      	ands	r1, r2
 80089a6:	4210      	tst	r0, r2
 80089a8:	d1f6      	bne.n	8008998 <_strtol_l.isra.0+0x1c>
 80089aa:	2d2d      	cmp	r5, #45	@ 0x2d
 80089ac:	d119      	bne.n	80089e2 <_strtol_l.isra.0+0x66>
 80089ae:	7825      	ldrb	r5, [r4, #0]
 80089b0:	1c9c      	adds	r4, r3, #2
 80089b2:	2301      	movs	r3, #1
 80089b4:	9300      	str	r3, [sp, #0]
 80089b6:	2210      	movs	r2, #16
 80089b8:	0033      	movs	r3, r6
 80089ba:	4393      	bics	r3, r2
 80089bc:	d11d      	bne.n	80089fa <_strtol_l.isra.0+0x7e>
 80089be:	2d30      	cmp	r5, #48	@ 0x30
 80089c0:	d115      	bne.n	80089ee <_strtol_l.isra.0+0x72>
 80089c2:	2120      	movs	r1, #32
 80089c4:	7823      	ldrb	r3, [r4, #0]
 80089c6:	438b      	bics	r3, r1
 80089c8:	2b58      	cmp	r3, #88	@ 0x58
 80089ca:	d110      	bne.n	80089ee <_strtol_l.isra.0+0x72>
 80089cc:	7865      	ldrb	r5, [r4, #1]
 80089ce:	3402      	adds	r4, #2
 80089d0:	2610      	movs	r6, #16
 80089d2:	e012      	b.n	80089fa <_strtol_l.isra.0+0x7e>
 80089d4:	f7fd fd3a 	bl	800644c <__errno>
 80089d8:	2316      	movs	r3, #22
 80089da:	6003      	str	r3, [r0, #0]
 80089dc:	2000      	movs	r0, #0
 80089de:	b005      	add	sp, #20
 80089e0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80089e2:	9100      	str	r1, [sp, #0]
 80089e4:	2d2b      	cmp	r5, #43	@ 0x2b
 80089e6:	d1e6      	bne.n	80089b6 <_strtol_l.isra.0+0x3a>
 80089e8:	7825      	ldrb	r5, [r4, #0]
 80089ea:	1c9c      	adds	r4, r3, #2
 80089ec:	e7e3      	b.n	80089b6 <_strtol_l.isra.0+0x3a>
 80089ee:	2e00      	cmp	r6, #0
 80089f0:	d1ee      	bne.n	80089d0 <_strtol_l.isra.0+0x54>
 80089f2:	360a      	adds	r6, #10
 80089f4:	2d30      	cmp	r5, #48	@ 0x30
 80089f6:	d100      	bne.n	80089fa <_strtol_l.isra.0+0x7e>
 80089f8:	3e02      	subs	r6, #2
 80089fa:	4a24      	ldr	r2, [pc, #144]	@ (8008a8c <_strtol_l.isra.0+0x110>)
 80089fc:	9b00      	ldr	r3, [sp, #0]
 80089fe:	4694      	mov	ip, r2
 8008a00:	4463      	add	r3, ip
 8008a02:	0031      	movs	r1, r6
 8008a04:	0018      	movs	r0, r3
 8008a06:	9302      	str	r3, [sp, #8]
 8008a08:	f7f7 fc20 	bl	800024c <__aeabi_uidivmod>
 8008a0c:	2200      	movs	r2, #0
 8008a0e:	4684      	mov	ip, r0
 8008a10:	0010      	movs	r0, r2
 8008a12:	002b      	movs	r3, r5
 8008a14:	3b30      	subs	r3, #48	@ 0x30
 8008a16:	2b09      	cmp	r3, #9
 8008a18:	d811      	bhi.n	8008a3e <_strtol_l.isra.0+0xc2>
 8008a1a:	001d      	movs	r5, r3
 8008a1c:	42ae      	cmp	r6, r5
 8008a1e:	dd1d      	ble.n	8008a5c <_strtol_l.isra.0+0xe0>
 8008a20:	1c53      	adds	r3, r2, #1
 8008a22:	d009      	beq.n	8008a38 <_strtol_l.isra.0+0xbc>
 8008a24:	2201      	movs	r2, #1
 8008a26:	4252      	negs	r2, r2
 8008a28:	4584      	cmp	ip, r0
 8008a2a:	d305      	bcc.n	8008a38 <_strtol_l.isra.0+0xbc>
 8008a2c:	d101      	bne.n	8008a32 <_strtol_l.isra.0+0xb6>
 8008a2e:	42a9      	cmp	r1, r5
 8008a30:	db11      	blt.n	8008a56 <_strtol_l.isra.0+0xda>
 8008a32:	2201      	movs	r2, #1
 8008a34:	4370      	muls	r0, r6
 8008a36:	1828      	adds	r0, r5, r0
 8008a38:	7825      	ldrb	r5, [r4, #0]
 8008a3a:	3401      	adds	r4, #1
 8008a3c:	e7e9      	b.n	8008a12 <_strtol_l.isra.0+0x96>
 8008a3e:	002b      	movs	r3, r5
 8008a40:	3b41      	subs	r3, #65	@ 0x41
 8008a42:	2b19      	cmp	r3, #25
 8008a44:	d801      	bhi.n	8008a4a <_strtol_l.isra.0+0xce>
 8008a46:	3d37      	subs	r5, #55	@ 0x37
 8008a48:	e7e8      	b.n	8008a1c <_strtol_l.isra.0+0xa0>
 8008a4a:	002b      	movs	r3, r5
 8008a4c:	3b61      	subs	r3, #97	@ 0x61
 8008a4e:	2b19      	cmp	r3, #25
 8008a50:	d804      	bhi.n	8008a5c <_strtol_l.isra.0+0xe0>
 8008a52:	3d57      	subs	r5, #87	@ 0x57
 8008a54:	e7e2      	b.n	8008a1c <_strtol_l.isra.0+0xa0>
 8008a56:	2201      	movs	r2, #1
 8008a58:	4252      	negs	r2, r2
 8008a5a:	e7ed      	b.n	8008a38 <_strtol_l.isra.0+0xbc>
 8008a5c:	1c53      	adds	r3, r2, #1
 8008a5e:	d108      	bne.n	8008a72 <_strtol_l.isra.0+0xf6>
 8008a60:	2322      	movs	r3, #34	@ 0x22
 8008a62:	9a03      	ldr	r2, [sp, #12]
 8008a64:	9802      	ldr	r0, [sp, #8]
 8008a66:	6013      	str	r3, [r2, #0]
 8008a68:	2f00      	cmp	r7, #0
 8008a6a:	d0b8      	beq.n	80089de <_strtol_l.isra.0+0x62>
 8008a6c:	1e63      	subs	r3, r4, #1
 8008a6e:	9301      	str	r3, [sp, #4]
 8008a70:	e007      	b.n	8008a82 <_strtol_l.isra.0+0x106>
 8008a72:	9b00      	ldr	r3, [sp, #0]
 8008a74:	2b00      	cmp	r3, #0
 8008a76:	d000      	beq.n	8008a7a <_strtol_l.isra.0+0xfe>
 8008a78:	4240      	negs	r0, r0
 8008a7a:	2f00      	cmp	r7, #0
 8008a7c:	d0af      	beq.n	80089de <_strtol_l.isra.0+0x62>
 8008a7e:	2a00      	cmp	r2, #0
 8008a80:	d1f4      	bne.n	8008a6c <_strtol_l.isra.0+0xf0>
 8008a82:	9b01      	ldr	r3, [sp, #4]
 8008a84:	603b      	str	r3, [r7, #0]
 8008a86:	e7aa      	b.n	80089de <_strtol_l.isra.0+0x62>
 8008a88:	0800a0a9 	.word	0x0800a0a9
 8008a8c:	7fffffff 	.word	0x7fffffff

08008a90 <_strtol_r>:
 8008a90:	b510      	push	{r4, lr}
 8008a92:	f7ff ff73 	bl	800897c <_strtol_l.isra.0>
 8008a96:	bd10      	pop	{r4, pc}

08008a98 <__ssputs_r>:
 8008a98:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008a9a:	688e      	ldr	r6, [r1, #8]
 8008a9c:	b085      	sub	sp, #20
 8008a9e:	001f      	movs	r7, r3
 8008aa0:	000c      	movs	r4, r1
 8008aa2:	680b      	ldr	r3, [r1, #0]
 8008aa4:	9002      	str	r0, [sp, #8]
 8008aa6:	9203      	str	r2, [sp, #12]
 8008aa8:	42be      	cmp	r6, r7
 8008aaa:	d830      	bhi.n	8008b0e <__ssputs_r+0x76>
 8008aac:	210c      	movs	r1, #12
 8008aae:	5e62      	ldrsh	r2, [r4, r1]
 8008ab0:	2190      	movs	r1, #144	@ 0x90
 8008ab2:	00c9      	lsls	r1, r1, #3
 8008ab4:	420a      	tst	r2, r1
 8008ab6:	d028      	beq.n	8008b0a <__ssputs_r+0x72>
 8008ab8:	2003      	movs	r0, #3
 8008aba:	6921      	ldr	r1, [r4, #16]
 8008abc:	1a5b      	subs	r3, r3, r1
 8008abe:	9301      	str	r3, [sp, #4]
 8008ac0:	6963      	ldr	r3, [r4, #20]
 8008ac2:	4343      	muls	r3, r0
 8008ac4:	9801      	ldr	r0, [sp, #4]
 8008ac6:	0fdd      	lsrs	r5, r3, #31
 8008ac8:	18ed      	adds	r5, r5, r3
 8008aca:	1c7b      	adds	r3, r7, #1
 8008acc:	181b      	adds	r3, r3, r0
 8008ace:	106d      	asrs	r5, r5, #1
 8008ad0:	42ab      	cmp	r3, r5
 8008ad2:	d900      	bls.n	8008ad6 <__ssputs_r+0x3e>
 8008ad4:	001d      	movs	r5, r3
 8008ad6:	0552      	lsls	r2, r2, #21
 8008ad8:	d528      	bpl.n	8008b2c <__ssputs_r+0x94>
 8008ada:	0029      	movs	r1, r5
 8008adc:	9802      	ldr	r0, [sp, #8]
 8008ade:	f7fe fbdd 	bl	800729c <_malloc_r>
 8008ae2:	1e06      	subs	r6, r0, #0
 8008ae4:	d02c      	beq.n	8008b40 <__ssputs_r+0xa8>
 8008ae6:	9a01      	ldr	r2, [sp, #4]
 8008ae8:	6921      	ldr	r1, [r4, #16]
 8008aea:	f000 fa19 	bl	8008f20 <memcpy>
 8008aee:	89a2      	ldrh	r2, [r4, #12]
 8008af0:	4b18      	ldr	r3, [pc, #96]	@ (8008b54 <__ssputs_r+0xbc>)
 8008af2:	401a      	ands	r2, r3
 8008af4:	2380      	movs	r3, #128	@ 0x80
 8008af6:	4313      	orrs	r3, r2
 8008af8:	81a3      	strh	r3, [r4, #12]
 8008afa:	9b01      	ldr	r3, [sp, #4]
 8008afc:	6126      	str	r6, [r4, #16]
 8008afe:	18f6      	adds	r6, r6, r3
 8008b00:	6026      	str	r6, [r4, #0]
 8008b02:	003e      	movs	r6, r7
 8008b04:	6165      	str	r5, [r4, #20]
 8008b06:	1aed      	subs	r5, r5, r3
 8008b08:	60a5      	str	r5, [r4, #8]
 8008b0a:	42be      	cmp	r6, r7
 8008b0c:	d900      	bls.n	8008b10 <__ssputs_r+0x78>
 8008b0e:	003e      	movs	r6, r7
 8008b10:	0032      	movs	r2, r6
 8008b12:	9903      	ldr	r1, [sp, #12]
 8008b14:	6820      	ldr	r0, [r4, #0]
 8008b16:	f000 f9ce 	bl	8008eb6 <memmove>
 8008b1a:	2000      	movs	r0, #0
 8008b1c:	68a3      	ldr	r3, [r4, #8]
 8008b1e:	1b9b      	subs	r3, r3, r6
 8008b20:	60a3      	str	r3, [r4, #8]
 8008b22:	6823      	ldr	r3, [r4, #0]
 8008b24:	199b      	adds	r3, r3, r6
 8008b26:	6023      	str	r3, [r4, #0]
 8008b28:	b005      	add	sp, #20
 8008b2a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008b2c:	002a      	movs	r2, r5
 8008b2e:	9802      	ldr	r0, [sp, #8]
 8008b30:	f000 fdbe 	bl	80096b0 <_realloc_r>
 8008b34:	1e06      	subs	r6, r0, #0
 8008b36:	d1e0      	bne.n	8008afa <__ssputs_r+0x62>
 8008b38:	6921      	ldr	r1, [r4, #16]
 8008b3a:	9802      	ldr	r0, [sp, #8]
 8008b3c:	f7fe fb38 	bl	80071b0 <_free_r>
 8008b40:	230c      	movs	r3, #12
 8008b42:	2001      	movs	r0, #1
 8008b44:	9a02      	ldr	r2, [sp, #8]
 8008b46:	4240      	negs	r0, r0
 8008b48:	6013      	str	r3, [r2, #0]
 8008b4a:	89a2      	ldrh	r2, [r4, #12]
 8008b4c:	3334      	adds	r3, #52	@ 0x34
 8008b4e:	4313      	orrs	r3, r2
 8008b50:	81a3      	strh	r3, [r4, #12]
 8008b52:	e7e9      	b.n	8008b28 <__ssputs_r+0x90>
 8008b54:	fffffb7f 	.word	0xfffffb7f

08008b58 <_svfiprintf_r>:
 8008b58:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008b5a:	b0a1      	sub	sp, #132	@ 0x84
 8008b5c:	9003      	str	r0, [sp, #12]
 8008b5e:	001d      	movs	r5, r3
 8008b60:	898b      	ldrh	r3, [r1, #12]
 8008b62:	000f      	movs	r7, r1
 8008b64:	0016      	movs	r6, r2
 8008b66:	061b      	lsls	r3, r3, #24
 8008b68:	d511      	bpl.n	8008b8e <_svfiprintf_r+0x36>
 8008b6a:	690b      	ldr	r3, [r1, #16]
 8008b6c:	2b00      	cmp	r3, #0
 8008b6e:	d10e      	bne.n	8008b8e <_svfiprintf_r+0x36>
 8008b70:	2140      	movs	r1, #64	@ 0x40
 8008b72:	f7fe fb93 	bl	800729c <_malloc_r>
 8008b76:	6038      	str	r0, [r7, #0]
 8008b78:	6138      	str	r0, [r7, #16]
 8008b7a:	2800      	cmp	r0, #0
 8008b7c:	d105      	bne.n	8008b8a <_svfiprintf_r+0x32>
 8008b7e:	230c      	movs	r3, #12
 8008b80:	9a03      	ldr	r2, [sp, #12]
 8008b82:	6013      	str	r3, [r2, #0]
 8008b84:	2001      	movs	r0, #1
 8008b86:	4240      	negs	r0, r0
 8008b88:	e0cf      	b.n	8008d2a <_svfiprintf_r+0x1d2>
 8008b8a:	2340      	movs	r3, #64	@ 0x40
 8008b8c:	617b      	str	r3, [r7, #20]
 8008b8e:	2300      	movs	r3, #0
 8008b90:	ac08      	add	r4, sp, #32
 8008b92:	6163      	str	r3, [r4, #20]
 8008b94:	3320      	adds	r3, #32
 8008b96:	7663      	strb	r3, [r4, #25]
 8008b98:	3310      	adds	r3, #16
 8008b9a:	76a3      	strb	r3, [r4, #26]
 8008b9c:	9507      	str	r5, [sp, #28]
 8008b9e:	0035      	movs	r5, r6
 8008ba0:	782b      	ldrb	r3, [r5, #0]
 8008ba2:	2b00      	cmp	r3, #0
 8008ba4:	d001      	beq.n	8008baa <_svfiprintf_r+0x52>
 8008ba6:	2b25      	cmp	r3, #37	@ 0x25
 8008ba8:	d148      	bne.n	8008c3c <_svfiprintf_r+0xe4>
 8008baa:	1bab      	subs	r3, r5, r6
 8008bac:	9305      	str	r3, [sp, #20]
 8008bae:	42b5      	cmp	r5, r6
 8008bb0:	d00b      	beq.n	8008bca <_svfiprintf_r+0x72>
 8008bb2:	0032      	movs	r2, r6
 8008bb4:	0039      	movs	r1, r7
 8008bb6:	9803      	ldr	r0, [sp, #12]
 8008bb8:	f7ff ff6e 	bl	8008a98 <__ssputs_r>
 8008bbc:	3001      	adds	r0, #1
 8008bbe:	d100      	bne.n	8008bc2 <_svfiprintf_r+0x6a>
 8008bc0:	e0ae      	b.n	8008d20 <_svfiprintf_r+0x1c8>
 8008bc2:	6963      	ldr	r3, [r4, #20]
 8008bc4:	9a05      	ldr	r2, [sp, #20]
 8008bc6:	189b      	adds	r3, r3, r2
 8008bc8:	6163      	str	r3, [r4, #20]
 8008bca:	782b      	ldrb	r3, [r5, #0]
 8008bcc:	2b00      	cmp	r3, #0
 8008bce:	d100      	bne.n	8008bd2 <_svfiprintf_r+0x7a>
 8008bd0:	e0a6      	b.n	8008d20 <_svfiprintf_r+0x1c8>
 8008bd2:	2201      	movs	r2, #1
 8008bd4:	2300      	movs	r3, #0
 8008bd6:	4252      	negs	r2, r2
 8008bd8:	6062      	str	r2, [r4, #4]
 8008bda:	a904      	add	r1, sp, #16
 8008bdc:	3254      	adds	r2, #84	@ 0x54
 8008bde:	1852      	adds	r2, r2, r1
 8008be0:	1c6e      	adds	r6, r5, #1
 8008be2:	6023      	str	r3, [r4, #0]
 8008be4:	60e3      	str	r3, [r4, #12]
 8008be6:	60a3      	str	r3, [r4, #8]
 8008be8:	7013      	strb	r3, [r2, #0]
 8008bea:	65a3      	str	r3, [r4, #88]	@ 0x58
 8008bec:	4b54      	ldr	r3, [pc, #336]	@ (8008d40 <_svfiprintf_r+0x1e8>)
 8008bee:	2205      	movs	r2, #5
 8008bf0:	0018      	movs	r0, r3
 8008bf2:	7831      	ldrb	r1, [r6, #0]
 8008bf4:	9305      	str	r3, [sp, #20]
 8008bf6:	f7fd fc56 	bl	80064a6 <memchr>
 8008bfa:	1c75      	adds	r5, r6, #1
 8008bfc:	2800      	cmp	r0, #0
 8008bfe:	d11f      	bne.n	8008c40 <_svfiprintf_r+0xe8>
 8008c00:	6822      	ldr	r2, [r4, #0]
 8008c02:	06d3      	lsls	r3, r2, #27
 8008c04:	d504      	bpl.n	8008c10 <_svfiprintf_r+0xb8>
 8008c06:	2353      	movs	r3, #83	@ 0x53
 8008c08:	a904      	add	r1, sp, #16
 8008c0a:	185b      	adds	r3, r3, r1
 8008c0c:	2120      	movs	r1, #32
 8008c0e:	7019      	strb	r1, [r3, #0]
 8008c10:	0713      	lsls	r3, r2, #28
 8008c12:	d504      	bpl.n	8008c1e <_svfiprintf_r+0xc6>
 8008c14:	2353      	movs	r3, #83	@ 0x53
 8008c16:	a904      	add	r1, sp, #16
 8008c18:	185b      	adds	r3, r3, r1
 8008c1a:	212b      	movs	r1, #43	@ 0x2b
 8008c1c:	7019      	strb	r1, [r3, #0]
 8008c1e:	7833      	ldrb	r3, [r6, #0]
 8008c20:	2b2a      	cmp	r3, #42	@ 0x2a
 8008c22:	d016      	beq.n	8008c52 <_svfiprintf_r+0xfa>
 8008c24:	0035      	movs	r5, r6
 8008c26:	2100      	movs	r1, #0
 8008c28:	200a      	movs	r0, #10
 8008c2a:	68e3      	ldr	r3, [r4, #12]
 8008c2c:	782a      	ldrb	r2, [r5, #0]
 8008c2e:	1c6e      	adds	r6, r5, #1
 8008c30:	3a30      	subs	r2, #48	@ 0x30
 8008c32:	2a09      	cmp	r2, #9
 8008c34:	d950      	bls.n	8008cd8 <_svfiprintf_r+0x180>
 8008c36:	2900      	cmp	r1, #0
 8008c38:	d111      	bne.n	8008c5e <_svfiprintf_r+0x106>
 8008c3a:	e017      	b.n	8008c6c <_svfiprintf_r+0x114>
 8008c3c:	3501      	adds	r5, #1
 8008c3e:	e7af      	b.n	8008ba0 <_svfiprintf_r+0x48>
 8008c40:	9b05      	ldr	r3, [sp, #20]
 8008c42:	6822      	ldr	r2, [r4, #0]
 8008c44:	1ac0      	subs	r0, r0, r3
 8008c46:	2301      	movs	r3, #1
 8008c48:	4083      	lsls	r3, r0
 8008c4a:	4313      	orrs	r3, r2
 8008c4c:	002e      	movs	r6, r5
 8008c4e:	6023      	str	r3, [r4, #0]
 8008c50:	e7cc      	b.n	8008bec <_svfiprintf_r+0x94>
 8008c52:	9b07      	ldr	r3, [sp, #28]
 8008c54:	1d19      	adds	r1, r3, #4
 8008c56:	681b      	ldr	r3, [r3, #0]
 8008c58:	9107      	str	r1, [sp, #28]
 8008c5a:	2b00      	cmp	r3, #0
 8008c5c:	db01      	blt.n	8008c62 <_svfiprintf_r+0x10a>
 8008c5e:	930b      	str	r3, [sp, #44]	@ 0x2c
 8008c60:	e004      	b.n	8008c6c <_svfiprintf_r+0x114>
 8008c62:	425b      	negs	r3, r3
 8008c64:	60e3      	str	r3, [r4, #12]
 8008c66:	2302      	movs	r3, #2
 8008c68:	4313      	orrs	r3, r2
 8008c6a:	6023      	str	r3, [r4, #0]
 8008c6c:	782b      	ldrb	r3, [r5, #0]
 8008c6e:	2b2e      	cmp	r3, #46	@ 0x2e
 8008c70:	d10c      	bne.n	8008c8c <_svfiprintf_r+0x134>
 8008c72:	786b      	ldrb	r3, [r5, #1]
 8008c74:	2b2a      	cmp	r3, #42	@ 0x2a
 8008c76:	d134      	bne.n	8008ce2 <_svfiprintf_r+0x18a>
 8008c78:	9b07      	ldr	r3, [sp, #28]
 8008c7a:	3502      	adds	r5, #2
 8008c7c:	1d1a      	adds	r2, r3, #4
 8008c7e:	681b      	ldr	r3, [r3, #0]
 8008c80:	9207      	str	r2, [sp, #28]
 8008c82:	2b00      	cmp	r3, #0
 8008c84:	da01      	bge.n	8008c8a <_svfiprintf_r+0x132>
 8008c86:	2301      	movs	r3, #1
 8008c88:	425b      	negs	r3, r3
 8008c8a:	9309      	str	r3, [sp, #36]	@ 0x24
 8008c8c:	4e2d      	ldr	r6, [pc, #180]	@ (8008d44 <_svfiprintf_r+0x1ec>)
 8008c8e:	2203      	movs	r2, #3
 8008c90:	0030      	movs	r0, r6
 8008c92:	7829      	ldrb	r1, [r5, #0]
 8008c94:	f7fd fc07 	bl	80064a6 <memchr>
 8008c98:	2800      	cmp	r0, #0
 8008c9a:	d006      	beq.n	8008caa <_svfiprintf_r+0x152>
 8008c9c:	2340      	movs	r3, #64	@ 0x40
 8008c9e:	1b80      	subs	r0, r0, r6
 8008ca0:	4083      	lsls	r3, r0
 8008ca2:	6822      	ldr	r2, [r4, #0]
 8008ca4:	3501      	adds	r5, #1
 8008ca6:	4313      	orrs	r3, r2
 8008ca8:	6023      	str	r3, [r4, #0]
 8008caa:	7829      	ldrb	r1, [r5, #0]
 8008cac:	2206      	movs	r2, #6
 8008cae:	4826      	ldr	r0, [pc, #152]	@ (8008d48 <_svfiprintf_r+0x1f0>)
 8008cb0:	1c6e      	adds	r6, r5, #1
 8008cb2:	7621      	strb	r1, [r4, #24]
 8008cb4:	f7fd fbf7 	bl	80064a6 <memchr>
 8008cb8:	2800      	cmp	r0, #0
 8008cba:	d038      	beq.n	8008d2e <_svfiprintf_r+0x1d6>
 8008cbc:	4b23      	ldr	r3, [pc, #140]	@ (8008d4c <_svfiprintf_r+0x1f4>)
 8008cbe:	2b00      	cmp	r3, #0
 8008cc0:	d122      	bne.n	8008d08 <_svfiprintf_r+0x1b0>
 8008cc2:	2207      	movs	r2, #7
 8008cc4:	9b07      	ldr	r3, [sp, #28]
 8008cc6:	3307      	adds	r3, #7
 8008cc8:	4393      	bics	r3, r2
 8008cca:	3308      	adds	r3, #8
 8008ccc:	9307      	str	r3, [sp, #28]
 8008cce:	6963      	ldr	r3, [r4, #20]
 8008cd0:	9a04      	ldr	r2, [sp, #16]
 8008cd2:	189b      	adds	r3, r3, r2
 8008cd4:	6163      	str	r3, [r4, #20]
 8008cd6:	e762      	b.n	8008b9e <_svfiprintf_r+0x46>
 8008cd8:	4343      	muls	r3, r0
 8008cda:	0035      	movs	r5, r6
 8008cdc:	2101      	movs	r1, #1
 8008cde:	189b      	adds	r3, r3, r2
 8008ce0:	e7a4      	b.n	8008c2c <_svfiprintf_r+0xd4>
 8008ce2:	2300      	movs	r3, #0
 8008ce4:	200a      	movs	r0, #10
 8008ce6:	0019      	movs	r1, r3
 8008ce8:	3501      	adds	r5, #1
 8008cea:	6063      	str	r3, [r4, #4]
 8008cec:	782a      	ldrb	r2, [r5, #0]
 8008cee:	1c6e      	adds	r6, r5, #1
 8008cf0:	3a30      	subs	r2, #48	@ 0x30
 8008cf2:	2a09      	cmp	r2, #9
 8008cf4:	d903      	bls.n	8008cfe <_svfiprintf_r+0x1a6>
 8008cf6:	2b00      	cmp	r3, #0
 8008cf8:	d0c8      	beq.n	8008c8c <_svfiprintf_r+0x134>
 8008cfa:	9109      	str	r1, [sp, #36]	@ 0x24
 8008cfc:	e7c6      	b.n	8008c8c <_svfiprintf_r+0x134>
 8008cfe:	4341      	muls	r1, r0
 8008d00:	0035      	movs	r5, r6
 8008d02:	2301      	movs	r3, #1
 8008d04:	1889      	adds	r1, r1, r2
 8008d06:	e7f1      	b.n	8008cec <_svfiprintf_r+0x194>
 8008d08:	aa07      	add	r2, sp, #28
 8008d0a:	9200      	str	r2, [sp, #0]
 8008d0c:	0021      	movs	r1, r4
 8008d0e:	003a      	movs	r2, r7
 8008d10:	4b0f      	ldr	r3, [pc, #60]	@ (8008d50 <_svfiprintf_r+0x1f8>)
 8008d12:	9803      	ldr	r0, [sp, #12]
 8008d14:	f7fc fc48 	bl	80055a8 <_printf_float>
 8008d18:	9004      	str	r0, [sp, #16]
 8008d1a:	9b04      	ldr	r3, [sp, #16]
 8008d1c:	3301      	adds	r3, #1
 8008d1e:	d1d6      	bne.n	8008cce <_svfiprintf_r+0x176>
 8008d20:	89bb      	ldrh	r3, [r7, #12]
 8008d22:	980d      	ldr	r0, [sp, #52]	@ 0x34
 8008d24:	065b      	lsls	r3, r3, #25
 8008d26:	d500      	bpl.n	8008d2a <_svfiprintf_r+0x1d2>
 8008d28:	e72c      	b.n	8008b84 <_svfiprintf_r+0x2c>
 8008d2a:	b021      	add	sp, #132	@ 0x84
 8008d2c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008d2e:	aa07      	add	r2, sp, #28
 8008d30:	9200      	str	r2, [sp, #0]
 8008d32:	0021      	movs	r1, r4
 8008d34:	003a      	movs	r2, r7
 8008d36:	4b06      	ldr	r3, [pc, #24]	@ (8008d50 <_svfiprintf_r+0x1f8>)
 8008d38:	9803      	ldr	r0, [sp, #12]
 8008d3a:	f7fc fee3 	bl	8005b04 <_printf_i>
 8008d3e:	e7eb      	b.n	8008d18 <_svfiprintf_r+0x1c0>
 8008d40:	08009ea6 	.word	0x08009ea6
 8008d44:	08009eac 	.word	0x08009eac
 8008d48:	08009eb0 	.word	0x08009eb0
 8008d4c:	080055a9 	.word	0x080055a9
 8008d50:	08008a99 	.word	0x08008a99

08008d54 <__sflush_r>:
 8008d54:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8008d56:	220c      	movs	r2, #12
 8008d58:	5e8b      	ldrsh	r3, [r1, r2]
 8008d5a:	0005      	movs	r5, r0
 8008d5c:	000c      	movs	r4, r1
 8008d5e:	071a      	lsls	r2, r3, #28
 8008d60:	d456      	bmi.n	8008e10 <__sflush_r+0xbc>
 8008d62:	684a      	ldr	r2, [r1, #4]
 8008d64:	2a00      	cmp	r2, #0
 8008d66:	dc02      	bgt.n	8008d6e <__sflush_r+0x1a>
 8008d68:	6c0a      	ldr	r2, [r1, #64]	@ 0x40
 8008d6a:	2a00      	cmp	r2, #0
 8008d6c:	dd4e      	ble.n	8008e0c <__sflush_r+0xb8>
 8008d6e:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8008d70:	2f00      	cmp	r7, #0
 8008d72:	d04b      	beq.n	8008e0c <__sflush_r+0xb8>
 8008d74:	2200      	movs	r2, #0
 8008d76:	2080      	movs	r0, #128	@ 0x80
 8008d78:	682e      	ldr	r6, [r5, #0]
 8008d7a:	602a      	str	r2, [r5, #0]
 8008d7c:	001a      	movs	r2, r3
 8008d7e:	0140      	lsls	r0, r0, #5
 8008d80:	6a21      	ldr	r1, [r4, #32]
 8008d82:	4002      	ands	r2, r0
 8008d84:	4203      	tst	r3, r0
 8008d86:	d033      	beq.n	8008df0 <__sflush_r+0x9c>
 8008d88:	6d62      	ldr	r2, [r4, #84]	@ 0x54
 8008d8a:	89a3      	ldrh	r3, [r4, #12]
 8008d8c:	075b      	lsls	r3, r3, #29
 8008d8e:	d506      	bpl.n	8008d9e <__sflush_r+0x4a>
 8008d90:	6863      	ldr	r3, [r4, #4]
 8008d92:	1ad2      	subs	r2, r2, r3
 8008d94:	6b63      	ldr	r3, [r4, #52]	@ 0x34
 8008d96:	2b00      	cmp	r3, #0
 8008d98:	d001      	beq.n	8008d9e <__sflush_r+0x4a>
 8008d9a:	6c23      	ldr	r3, [r4, #64]	@ 0x40
 8008d9c:	1ad2      	subs	r2, r2, r3
 8008d9e:	2300      	movs	r3, #0
 8008da0:	0028      	movs	r0, r5
 8008da2:	6ae7      	ldr	r7, [r4, #44]	@ 0x2c
 8008da4:	6a21      	ldr	r1, [r4, #32]
 8008da6:	47b8      	blx	r7
 8008da8:	89a2      	ldrh	r2, [r4, #12]
 8008daa:	1c43      	adds	r3, r0, #1
 8008dac:	d106      	bne.n	8008dbc <__sflush_r+0x68>
 8008dae:	6829      	ldr	r1, [r5, #0]
 8008db0:	291d      	cmp	r1, #29
 8008db2:	d846      	bhi.n	8008e42 <__sflush_r+0xee>
 8008db4:	4b29      	ldr	r3, [pc, #164]	@ (8008e5c <__sflush_r+0x108>)
 8008db6:	40cb      	lsrs	r3, r1
 8008db8:	07db      	lsls	r3, r3, #31
 8008dba:	d542      	bpl.n	8008e42 <__sflush_r+0xee>
 8008dbc:	2300      	movs	r3, #0
 8008dbe:	6063      	str	r3, [r4, #4]
 8008dc0:	6923      	ldr	r3, [r4, #16]
 8008dc2:	6023      	str	r3, [r4, #0]
 8008dc4:	04d2      	lsls	r2, r2, #19
 8008dc6:	d505      	bpl.n	8008dd4 <__sflush_r+0x80>
 8008dc8:	1c43      	adds	r3, r0, #1
 8008dca:	d102      	bne.n	8008dd2 <__sflush_r+0x7e>
 8008dcc:	682b      	ldr	r3, [r5, #0]
 8008dce:	2b00      	cmp	r3, #0
 8008dd0:	d100      	bne.n	8008dd4 <__sflush_r+0x80>
 8008dd2:	6560      	str	r0, [r4, #84]	@ 0x54
 8008dd4:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8008dd6:	602e      	str	r6, [r5, #0]
 8008dd8:	2900      	cmp	r1, #0
 8008dda:	d017      	beq.n	8008e0c <__sflush_r+0xb8>
 8008ddc:	0023      	movs	r3, r4
 8008dde:	3344      	adds	r3, #68	@ 0x44
 8008de0:	4299      	cmp	r1, r3
 8008de2:	d002      	beq.n	8008dea <__sflush_r+0x96>
 8008de4:	0028      	movs	r0, r5
 8008de6:	f7fe f9e3 	bl	80071b0 <_free_r>
 8008dea:	2300      	movs	r3, #0
 8008dec:	6363      	str	r3, [r4, #52]	@ 0x34
 8008dee:	e00d      	b.n	8008e0c <__sflush_r+0xb8>
 8008df0:	2301      	movs	r3, #1
 8008df2:	0028      	movs	r0, r5
 8008df4:	47b8      	blx	r7
 8008df6:	0002      	movs	r2, r0
 8008df8:	1c43      	adds	r3, r0, #1
 8008dfa:	d1c6      	bne.n	8008d8a <__sflush_r+0x36>
 8008dfc:	682b      	ldr	r3, [r5, #0]
 8008dfe:	2b00      	cmp	r3, #0
 8008e00:	d0c3      	beq.n	8008d8a <__sflush_r+0x36>
 8008e02:	2b1d      	cmp	r3, #29
 8008e04:	d001      	beq.n	8008e0a <__sflush_r+0xb6>
 8008e06:	2b16      	cmp	r3, #22
 8008e08:	d11a      	bne.n	8008e40 <__sflush_r+0xec>
 8008e0a:	602e      	str	r6, [r5, #0]
 8008e0c:	2000      	movs	r0, #0
 8008e0e:	e01e      	b.n	8008e4e <__sflush_r+0xfa>
 8008e10:	690e      	ldr	r6, [r1, #16]
 8008e12:	2e00      	cmp	r6, #0
 8008e14:	d0fa      	beq.n	8008e0c <__sflush_r+0xb8>
 8008e16:	680f      	ldr	r7, [r1, #0]
 8008e18:	600e      	str	r6, [r1, #0]
 8008e1a:	1bba      	subs	r2, r7, r6
 8008e1c:	9201      	str	r2, [sp, #4]
 8008e1e:	2200      	movs	r2, #0
 8008e20:	079b      	lsls	r3, r3, #30
 8008e22:	d100      	bne.n	8008e26 <__sflush_r+0xd2>
 8008e24:	694a      	ldr	r2, [r1, #20]
 8008e26:	60a2      	str	r2, [r4, #8]
 8008e28:	9b01      	ldr	r3, [sp, #4]
 8008e2a:	2b00      	cmp	r3, #0
 8008e2c:	ddee      	ble.n	8008e0c <__sflush_r+0xb8>
 8008e2e:	6aa3      	ldr	r3, [r4, #40]	@ 0x28
 8008e30:	0032      	movs	r2, r6
 8008e32:	001f      	movs	r7, r3
 8008e34:	0028      	movs	r0, r5
 8008e36:	9b01      	ldr	r3, [sp, #4]
 8008e38:	6a21      	ldr	r1, [r4, #32]
 8008e3a:	47b8      	blx	r7
 8008e3c:	2800      	cmp	r0, #0
 8008e3e:	dc07      	bgt.n	8008e50 <__sflush_r+0xfc>
 8008e40:	89a2      	ldrh	r2, [r4, #12]
 8008e42:	2340      	movs	r3, #64	@ 0x40
 8008e44:	2001      	movs	r0, #1
 8008e46:	4313      	orrs	r3, r2
 8008e48:	b21b      	sxth	r3, r3
 8008e4a:	81a3      	strh	r3, [r4, #12]
 8008e4c:	4240      	negs	r0, r0
 8008e4e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8008e50:	9b01      	ldr	r3, [sp, #4]
 8008e52:	1836      	adds	r6, r6, r0
 8008e54:	1a1b      	subs	r3, r3, r0
 8008e56:	9301      	str	r3, [sp, #4]
 8008e58:	e7e6      	b.n	8008e28 <__sflush_r+0xd4>
 8008e5a:	46c0      	nop			@ (mov r8, r8)
 8008e5c:	20400001 	.word	0x20400001

08008e60 <_fflush_r>:
 8008e60:	690b      	ldr	r3, [r1, #16]
 8008e62:	b570      	push	{r4, r5, r6, lr}
 8008e64:	0005      	movs	r5, r0
 8008e66:	000c      	movs	r4, r1
 8008e68:	2b00      	cmp	r3, #0
 8008e6a:	d102      	bne.n	8008e72 <_fflush_r+0x12>
 8008e6c:	2500      	movs	r5, #0
 8008e6e:	0028      	movs	r0, r5
 8008e70:	bd70      	pop	{r4, r5, r6, pc}
 8008e72:	2800      	cmp	r0, #0
 8008e74:	d004      	beq.n	8008e80 <_fflush_r+0x20>
 8008e76:	6a03      	ldr	r3, [r0, #32]
 8008e78:	2b00      	cmp	r3, #0
 8008e7a:	d101      	bne.n	8008e80 <_fflush_r+0x20>
 8008e7c:	f7fd f9ea 	bl	8006254 <__sinit>
 8008e80:	220c      	movs	r2, #12
 8008e82:	5ea3      	ldrsh	r3, [r4, r2]
 8008e84:	2b00      	cmp	r3, #0
 8008e86:	d0f1      	beq.n	8008e6c <_fflush_r+0xc>
 8008e88:	6e62      	ldr	r2, [r4, #100]	@ 0x64
 8008e8a:	07d2      	lsls	r2, r2, #31
 8008e8c:	d404      	bmi.n	8008e98 <_fflush_r+0x38>
 8008e8e:	059b      	lsls	r3, r3, #22
 8008e90:	d402      	bmi.n	8008e98 <_fflush_r+0x38>
 8008e92:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8008e94:	f7fd fb05 	bl	80064a2 <__retarget_lock_acquire_recursive>
 8008e98:	0028      	movs	r0, r5
 8008e9a:	0021      	movs	r1, r4
 8008e9c:	f7ff ff5a 	bl	8008d54 <__sflush_r>
 8008ea0:	6e63      	ldr	r3, [r4, #100]	@ 0x64
 8008ea2:	0005      	movs	r5, r0
 8008ea4:	07db      	lsls	r3, r3, #31
 8008ea6:	d4e2      	bmi.n	8008e6e <_fflush_r+0xe>
 8008ea8:	89a3      	ldrh	r3, [r4, #12]
 8008eaa:	059b      	lsls	r3, r3, #22
 8008eac:	d4df      	bmi.n	8008e6e <_fflush_r+0xe>
 8008eae:	6da0      	ldr	r0, [r4, #88]	@ 0x58
 8008eb0:	f7fd faf8 	bl	80064a4 <__retarget_lock_release_recursive>
 8008eb4:	e7db      	b.n	8008e6e <_fflush_r+0xe>

08008eb6 <memmove>:
 8008eb6:	b510      	push	{r4, lr}
 8008eb8:	4288      	cmp	r0, r1
 8008eba:	d902      	bls.n	8008ec2 <memmove+0xc>
 8008ebc:	188b      	adds	r3, r1, r2
 8008ebe:	4298      	cmp	r0, r3
 8008ec0:	d308      	bcc.n	8008ed4 <memmove+0x1e>
 8008ec2:	2300      	movs	r3, #0
 8008ec4:	429a      	cmp	r2, r3
 8008ec6:	d007      	beq.n	8008ed8 <memmove+0x22>
 8008ec8:	5ccc      	ldrb	r4, [r1, r3]
 8008eca:	54c4      	strb	r4, [r0, r3]
 8008ecc:	3301      	adds	r3, #1
 8008ece:	e7f9      	b.n	8008ec4 <memmove+0xe>
 8008ed0:	5c8b      	ldrb	r3, [r1, r2]
 8008ed2:	5483      	strb	r3, [r0, r2]
 8008ed4:	3a01      	subs	r2, #1
 8008ed6:	d2fb      	bcs.n	8008ed0 <memmove+0x1a>
 8008ed8:	bd10      	pop	{r4, pc}

08008eda <strncmp>:
 8008eda:	b530      	push	{r4, r5, lr}
 8008edc:	0005      	movs	r5, r0
 8008ede:	1e10      	subs	r0, r2, #0
 8008ee0:	d00b      	beq.n	8008efa <strncmp+0x20>
 8008ee2:	2400      	movs	r4, #0
 8008ee4:	3a01      	subs	r2, #1
 8008ee6:	5d2b      	ldrb	r3, [r5, r4]
 8008ee8:	5d08      	ldrb	r0, [r1, r4]
 8008eea:	4283      	cmp	r3, r0
 8008eec:	d104      	bne.n	8008ef8 <strncmp+0x1e>
 8008eee:	4294      	cmp	r4, r2
 8008ef0:	d002      	beq.n	8008ef8 <strncmp+0x1e>
 8008ef2:	3401      	adds	r4, #1
 8008ef4:	2b00      	cmp	r3, #0
 8008ef6:	d1f6      	bne.n	8008ee6 <strncmp+0xc>
 8008ef8:	1a18      	subs	r0, r3, r0
 8008efa:	bd30      	pop	{r4, r5, pc}

08008efc <_sbrk_r>:
 8008efc:	2300      	movs	r3, #0
 8008efe:	b570      	push	{r4, r5, r6, lr}
 8008f00:	4d06      	ldr	r5, [pc, #24]	@ (8008f1c <_sbrk_r+0x20>)
 8008f02:	0004      	movs	r4, r0
 8008f04:	0008      	movs	r0, r1
 8008f06:	602b      	str	r3, [r5, #0]
 8008f08:	f7fa f898 	bl	800303c <_sbrk>
 8008f0c:	1c43      	adds	r3, r0, #1
 8008f0e:	d103      	bne.n	8008f18 <_sbrk_r+0x1c>
 8008f10:	682b      	ldr	r3, [r5, #0]
 8008f12:	2b00      	cmp	r3, #0
 8008f14:	d000      	beq.n	8008f18 <_sbrk_r+0x1c>
 8008f16:	6023      	str	r3, [r4, #0]
 8008f18:	bd70      	pop	{r4, r5, r6, pc}
 8008f1a:	46c0      	nop			@ (mov r8, r8)
 8008f1c:	200003b0 	.word	0x200003b0

08008f20 <memcpy>:
 8008f20:	2300      	movs	r3, #0
 8008f22:	b510      	push	{r4, lr}
 8008f24:	429a      	cmp	r2, r3
 8008f26:	d100      	bne.n	8008f2a <memcpy+0xa>
 8008f28:	bd10      	pop	{r4, pc}
 8008f2a:	5ccc      	ldrb	r4, [r1, r3]
 8008f2c:	54c4      	strb	r4, [r0, r3]
 8008f2e:	3301      	adds	r3, #1
 8008f30:	e7f8      	b.n	8008f24 <memcpy+0x4>
	...

08008f34 <nan>:
 8008f34:	2000      	movs	r0, #0
 8008f36:	4901      	ldr	r1, [pc, #4]	@ (8008f3c <nan+0x8>)
 8008f38:	4770      	bx	lr
 8008f3a:	46c0      	nop			@ (mov r8, r8)
 8008f3c:	7ff80000 	.word	0x7ff80000

08008f40 <__assert_func>:
 8008f40:	b57f      	push	{r0, r1, r2, r3, r4, r5, r6, lr}
 8008f42:	0014      	movs	r4, r2
 8008f44:	001a      	movs	r2, r3
 8008f46:	4b09      	ldr	r3, [pc, #36]	@ (8008f6c <__assert_func+0x2c>)
 8008f48:	0005      	movs	r5, r0
 8008f4a:	681b      	ldr	r3, [r3, #0]
 8008f4c:	000e      	movs	r6, r1
 8008f4e:	68d8      	ldr	r0, [r3, #12]
 8008f50:	4b07      	ldr	r3, [pc, #28]	@ (8008f70 <__assert_func+0x30>)
 8008f52:	2c00      	cmp	r4, #0
 8008f54:	d101      	bne.n	8008f5a <__assert_func+0x1a>
 8008f56:	4b07      	ldr	r3, [pc, #28]	@ (8008f74 <__assert_func+0x34>)
 8008f58:	001c      	movs	r4, r3
 8008f5a:	4907      	ldr	r1, [pc, #28]	@ (8008f78 <__assert_func+0x38>)
 8008f5c:	9301      	str	r3, [sp, #4]
 8008f5e:	9402      	str	r4, [sp, #8]
 8008f60:	002b      	movs	r3, r5
 8008f62:	9600      	str	r6, [sp, #0]
 8008f64:	f000 fbe2 	bl	800972c <fiprintf>
 8008f68:	f000 fbf0 	bl	800974c <abort>
 8008f6c:	20000020 	.word	0x20000020
 8008f70:	08009ebf 	.word	0x08009ebf
 8008f74:	08009efa 	.word	0x08009efa
 8008f78:	08009ecc 	.word	0x08009ecc

08008f7c <_calloc_r>:
 8008f7c:	b570      	push	{r4, r5, r6, lr}
 8008f7e:	0c0b      	lsrs	r3, r1, #16
 8008f80:	0c15      	lsrs	r5, r2, #16
 8008f82:	2b00      	cmp	r3, #0
 8008f84:	d11e      	bne.n	8008fc4 <_calloc_r+0x48>
 8008f86:	2d00      	cmp	r5, #0
 8008f88:	d10c      	bne.n	8008fa4 <_calloc_r+0x28>
 8008f8a:	b289      	uxth	r1, r1
 8008f8c:	b294      	uxth	r4, r2
 8008f8e:	434c      	muls	r4, r1
 8008f90:	0021      	movs	r1, r4
 8008f92:	f7fe f983 	bl	800729c <_malloc_r>
 8008f96:	1e05      	subs	r5, r0, #0
 8008f98:	d01b      	beq.n	8008fd2 <_calloc_r+0x56>
 8008f9a:	0022      	movs	r2, r4
 8008f9c:	2100      	movs	r1, #0
 8008f9e:	f7fd f9fb 	bl	8006398 <memset>
 8008fa2:	e016      	b.n	8008fd2 <_calloc_r+0x56>
 8008fa4:	1c2b      	adds	r3, r5, #0
 8008fa6:	1c0c      	adds	r4, r1, #0
 8008fa8:	b289      	uxth	r1, r1
 8008faa:	b292      	uxth	r2, r2
 8008fac:	434a      	muls	r2, r1
 8008fae:	b29b      	uxth	r3, r3
 8008fb0:	b2a1      	uxth	r1, r4
 8008fb2:	4359      	muls	r1, r3
 8008fb4:	0c14      	lsrs	r4, r2, #16
 8008fb6:	190c      	adds	r4, r1, r4
 8008fb8:	0c23      	lsrs	r3, r4, #16
 8008fba:	d107      	bne.n	8008fcc <_calloc_r+0x50>
 8008fbc:	0424      	lsls	r4, r4, #16
 8008fbe:	b292      	uxth	r2, r2
 8008fc0:	4314      	orrs	r4, r2
 8008fc2:	e7e5      	b.n	8008f90 <_calloc_r+0x14>
 8008fc4:	2d00      	cmp	r5, #0
 8008fc6:	d101      	bne.n	8008fcc <_calloc_r+0x50>
 8008fc8:	1c14      	adds	r4, r2, #0
 8008fca:	e7ed      	b.n	8008fa8 <_calloc_r+0x2c>
 8008fcc:	230c      	movs	r3, #12
 8008fce:	2500      	movs	r5, #0
 8008fd0:	6003      	str	r3, [r0, #0]
 8008fd2:	0028      	movs	r0, r5
 8008fd4:	bd70      	pop	{r4, r5, r6, pc}

08008fd6 <rshift>:
 8008fd6:	0002      	movs	r2, r0
 8008fd8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008fda:	6904      	ldr	r4, [r0, #16]
 8008fdc:	b085      	sub	sp, #20
 8008fde:	3214      	adds	r2, #20
 8008fe0:	114b      	asrs	r3, r1, #5
 8008fe2:	0016      	movs	r6, r2
 8008fe4:	9302      	str	r3, [sp, #8]
 8008fe6:	429c      	cmp	r4, r3
 8008fe8:	dd31      	ble.n	800904e <rshift+0x78>
 8008fea:	261f      	movs	r6, #31
 8008fec:	000f      	movs	r7, r1
 8008fee:	009b      	lsls	r3, r3, #2
 8008ff0:	00a5      	lsls	r5, r4, #2
 8008ff2:	18d3      	adds	r3, r2, r3
 8008ff4:	4037      	ands	r7, r6
 8008ff6:	1955      	adds	r5, r2, r5
 8008ff8:	9300      	str	r3, [sp, #0]
 8008ffa:	9701      	str	r7, [sp, #4]
 8008ffc:	4231      	tst	r1, r6
 8008ffe:	d10d      	bne.n	800901c <rshift+0x46>
 8009000:	0016      	movs	r6, r2
 8009002:	0019      	movs	r1, r3
 8009004:	428d      	cmp	r5, r1
 8009006:	d836      	bhi.n	8009076 <rshift+0xa0>
 8009008:	9b00      	ldr	r3, [sp, #0]
 800900a:	2600      	movs	r6, #0
 800900c:	3b03      	subs	r3, #3
 800900e:	429d      	cmp	r5, r3
 8009010:	d302      	bcc.n	8009018 <rshift+0x42>
 8009012:	9b02      	ldr	r3, [sp, #8]
 8009014:	1ae4      	subs	r4, r4, r3
 8009016:	00a6      	lsls	r6, r4, #2
 8009018:	1996      	adds	r6, r2, r6
 800901a:	e018      	b.n	800904e <rshift+0x78>
 800901c:	2120      	movs	r1, #32
 800901e:	9e01      	ldr	r6, [sp, #4]
 8009020:	9f01      	ldr	r7, [sp, #4]
 8009022:	1b89      	subs	r1, r1, r6
 8009024:	9e00      	ldr	r6, [sp, #0]
 8009026:	9103      	str	r1, [sp, #12]
 8009028:	ce02      	ldmia	r6!, {r1}
 800902a:	4694      	mov	ip, r2
 800902c:	40f9      	lsrs	r1, r7
 800902e:	42b5      	cmp	r5, r6
 8009030:	d816      	bhi.n	8009060 <rshift+0x8a>
 8009032:	9b00      	ldr	r3, [sp, #0]
 8009034:	2600      	movs	r6, #0
 8009036:	3301      	adds	r3, #1
 8009038:	429d      	cmp	r5, r3
 800903a:	d303      	bcc.n	8009044 <rshift+0x6e>
 800903c:	9b02      	ldr	r3, [sp, #8]
 800903e:	1ae4      	subs	r4, r4, r3
 8009040:	00a6      	lsls	r6, r4, #2
 8009042:	3e04      	subs	r6, #4
 8009044:	1996      	adds	r6, r2, r6
 8009046:	6031      	str	r1, [r6, #0]
 8009048:	2900      	cmp	r1, #0
 800904a:	d000      	beq.n	800904e <rshift+0x78>
 800904c:	3604      	adds	r6, #4
 800904e:	1ab1      	subs	r1, r6, r2
 8009050:	1089      	asrs	r1, r1, #2
 8009052:	6101      	str	r1, [r0, #16]
 8009054:	4296      	cmp	r6, r2
 8009056:	d101      	bne.n	800905c <rshift+0x86>
 8009058:	2300      	movs	r3, #0
 800905a:	6143      	str	r3, [r0, #20]
 800905c:	b005      	add	sp, #20
 800905e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009060:	6837      	ldr	r7, [r6, #0]
 8009062:	9b03      	ldr	r3, [sp, #12]
 8009064:	409f      	lsls	r7, r3
 8009066:	430f      	orrs	r7, r1
 8009068:	4661      	mov	r1, ip
 800906a:	c180      	stmia	r1!, {r7}
 800906c:	468c      	mov	ip, r1
 800906e:	9b01      	ldr	r3, [sp, #4]
 8009070:	ce02      	ldmia	r6!, {r1}
 8009072:	40d9      	lsrs	r1, r3
 8009074:	e7db      	b.n	800902e <rshift+0x58>
 8009076:	c980      	ldmia	r1!, {r7}
 8009078:	c680      	stmia	r6!, {r7}
 800907a:	e7c3      	b.n	8009004 <rshift+0x2e>

0800907c <__hexdig_fun>:
 800907c:	0002      	movs	r2, r0
 800907e:	3a30      	subs	r2, #48	@ 0x30
 8009080:	0003      	movs	r3, r0
 8009082:	2a09      	cmp	r2, #9
 8009084:	d802      	bhi.n	800908c <__hexdig_fun+0x10>
 8009086:	3b20      	subs	r3, #32
 8009088:	b2d8      	uxtb	r0, r3
 800908a:	4770      	bx	lr
 800908c:	0002      	movs	r2, r0
 800908e:	3a61      	subs	r2, #97	@ 0x61
 8009090:	2a05      	cmp	r2, #5
 8009092:	d801      	bhi.n	8009098 <__hexdig_fun+0x1c>
 8009094:	3b47      	subs	r3, #71	@ 0x47
 8009096:	e7f7      	b.n	8009088 <__hexdig_fun+0xc>
 8009098:	001a      	movs	r2, r3
 800909a:	3a41      	subs	r2, #65	@ 0x41
 800909c:	2000      	movs	r0, #0
 800909e:	2a05      	cmp	r2, #5
 80090a0:	d8f3      	bhi.n	800908a <__hexdig_fun+0xe>
 80090a2:	3b27      	subs	r3, #39	@ 0x27
 80090a4:	e7f0      	b.n	8009088 <__hexdig_fun+0xc>
	...

080090a8 <__gethex>:
 80090a8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80090aa:	b089      	sub	sp, #36	@ 0x24
 80090ac:	9307      	str	r3, [sp, #28]
 80090ae:	680b      	ldr	r3, [r1, #0]
 80090b0:	9201      	str	r2, [sp, #4]
 80090b2:	9003      	str	r0, [sp, #12]
 80090b4:	9106      	str	r1, [sp, #24]
 80090b6:	1c9a      	adds	r2, r3, #2
 80090b8:	0011      	movs	r1, r2
 80090ba:	3201      	adds	r2, #1
 80090bc:	1e50      	subs	r0, r2, #1
 80090be:	7800      	ldrb	r0, [r0, #0]
 80090c0:	2830      	cmp	r0, #48	@ 0x30
 80090c2:	d0f9      	beq.n	80090b8 <__gethex+0x10>
 80090c4:	1acb      	subs	r3, r1, r3
 80090c6:	3b02      	subs	r3, #2
 80090c8:	9305      	str	r3, [sp, #20]
 80090ca:	9100      	str	r1, [sp, #0]
 80090cc:	f7ff ffd6 	bl	800907c <__hexdig_fun>
 80090d0:	2300      	movs	r3, #0
 80090d2:	001d      	movs	r5, r3
 80090d4:	9302      	str	r3, [sp, #8]
 80090d6:	4298      	cmp	r0, r3
 80090d8:	d11e      	bne.n	8009118 <__gethex+0x70>
 80090da:	2201      	movs	r2, #1
 80090dc:	49a6      	ldr	r1, [pc, #664]	@ (8009378 <__gethex+0x2d0>)
 80090de:	9800      	ldr	r0, [sp, #0]
 80090e0:	f7ff fefb 	bl	8008eda <strncmp>
 80090e4:	0007      	movs	r7, r0
 80090e6:	42a8      	cmp	r0, r5
 80090e8:	d000      	beq.n	80090ec <__gethex+0x44>
 80090ea:	e06a      	b.n	80091c2 <__gethex+0x11a>
 80090ec:	9b00      	ldr	r3, [sp, #0]
 80090ee:	7858      	ldrb	r0, [r3, #1]
 80090f0:	1c5c      	adds	r4, r3, #1
 80090f2:	f7ff ffc3 	bl	800907c <__hexdig_fun>
 80090f6:	2301      	movs	r3, #1
 80090f8:	9302      	str	r3, [sp, #8]
 80090fa:	42a8      	cmp	r0, r5
 80090fc:	d02f      	beq.n	800915e <__gethex+0xb6>
 80090fe:	9400      	str	r4, [sp, #0]
 8009100:	9b00      	ldr	r3, [sp, #0]
 8009102:	7818      	ldrb	r0, [r3, #0]
 8009104:	2830      	cmp	r0, #48	@ 0x30
 8009106:	d009      	beq.n	800911c <__gethex+0x74>
 8009108:	f7ff ffb8 	bl	800907c <__hexdig_fun>
 800910c:	4242      	negs	r2, r0
 800910e:	4142      	adcs	r2, r0
 8009110:	2301      	movs	r3, #1
 8009112:	0025      	movs	r5, r4
 8009114:	9202      	str	r2, [sp, #8]
 8009116:	9305      	str	r3, [sp, #20]
 8009118:	9c00      	ldr	r4, [sp, #0]
 800911a:	e004      	b.n	8009126 <__gethex+0x7e>
 800911c:	9b00      	ldr	r3, [sp, #0]
 800911e:	3301      	adds	r3, #1
 8009120:	9300      	str	r3, [sp, #0]
 8009122:	e7ed      	b.n	8009100 <__gethex+0x58>
 8009124:	3401      	adds	r4, #1
 8009126:	7820      	ldrb	r0, [r4, #0]
 8009128:	f7ff ffa8 	bl	800907c <__hexdig_fun>
 800912c:	1e07      	subs	r7, r0, #0
 800912e:	d1f9      	bne.n	8009124 <__gethex+0x7c>
 8009130:	2201      	movs	r2, #1
 8009132:	0020      	movs	r0, r4
 8009134:	4990      	ldr	r1, [pc, #576]	@ (8009378 <__gethex+0x2d0>)
 8009136:	f7ff fed0 	bl	8008eda <strncmp>
 800913a:	2800      	cmp	r0, #0
 800913c:	d10d      	bne.n	800915a <__gethex+0xb2>
 800913e:	2d00      	cmp	r5, #0
 8009140:	d106      	bne.n	8009150 <__gethex+0xa8>
 8009142:	3401      	adds	r4, #1
 8009144:	0025      	movs	r5, r4
 8009146:	7820      	ldrb	r0, [r4, #0]
 8009148:	f7ff ff98 	bl	800907c <__hexdig_fun>
 800914c:	2800      	cmp	r0, #0
 800914e:	d102      	bne.n	8009156 <__gethex+0xae>
 8009150:	1b2d      	subs	r5, r5, r4
 8009152:	00af      	lsls	r7, r5, #2
 8009154:	e003      	b.n	800915e <__gethex+0xb6>
 8009156:	3401      	adds	r4, #1
 8009158:	e7f5      	b.n	8009146 <__gethex+0x9e>
 800915a:	2d00      	cmp	r5, #0
 800915c:	d1f8      	bne.n	8009150 <__gethex+0xa8>
 800915e:	2220      	movs	r2, #32
 8009160:	7823      	ldrb	r3, [r4, #0]
 8009162:	0026      	movs	r6, r4
 8009164:	4393      	bics	r3, r2
 8009166:	2b50      	cmp	r3, #80	@ 0x50
 8009168:	d11d      	bne.n	80091a6 <__gethex+0xfe>
 800916a:	7863      	ldrb	r3, [r4, #1]
 800916c:	2b2b      	cmp	r3, #43	@ 0x2b
 800916e:	d02d      	beq.n	80091cc <__gethex+0x124>
 8009170:	2b2d      	cmp	r3, #45	@ 0x2d
 8009172:	d02f      	beq.n	80091d4 <__gethex+0x12c>
 8009174:	2300      	movs	r3, #0
 8009176:	1c66      	adds	r6, r4, #1
 8009178:	9304      	str	r3, [sp, #16]
 800917a:	7830      	ldrb	r0, [r6, #0]
 800917c:	f7ff ff7e 	bl	800907c <__hexdig_fun>
 8009180:	1e43      	subs	r3, r0, #1
 8009182:	b2db      	uxtb	r3, r3
 8009184:	0005      	movs	r5, r0
 8009186:	2b18      	cmp	r3, #24
 8009188:	d82a      	bhi.n	80091e0 <__gethex+0x138>
 800918a:	7870      	ldrb	r0, [r6, #1]
 800918c:	f7ff ff76 	bl	800907c <__hexdig_fun>
 8009190:	1e43      	subs	r3, r0, #1
 8009192:	b2db      	uxtb	r3, r3
 8009194:	3601      	adds	r6, #1
 8009196:	3d10      	subs	r5, #16
 8009198:	2b18      	cmp	r3, #24
 800919a:	d91d      	bls.n	80091d8 <__gethex+0x130>
 800919c:	9b04      	ldr	r3, [sp, #16]
 800919e:	2b00      	cmp	r3, #0
 80091a0:	d000      	beq.n	80091a4 <__gethex+0xfc>
 80091a2:	426d      	negs	r5, r5
 80091a4:	197f      	adds	r7, r7, r5
 80091a6:	9b06      	ldr	r3, [sp, #24]
 80091a8:	601e      	str	r6, [r3, #0]
 80091aa:	9b02      	ldr	r3, [sp, #8]
 80091ac:	2b00      	cmp	r3, #0
 80091ae:	d019      	beq.n	80091e4 <__gethex+0x13c>
 80091b0:	9b05      	ldr	r3, [sp, #20]
 80091b2:	2606      	movs	r6, #6
 80091b4:	425a      	negs	r2, r3
 80091b6:	4153      	adcs	r3, r2
 80091b8:	425b      	negs	r3, r3
 80091ba:	401e      	ands	r6, r3
 80091bc:	0030      	movs	r0, r6
 80091be:	b009      	add	sp, #36	@ 0x24
 80091c0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80091c2:	2301      	movs	r3, #1
 80091c4:	2700      	movs	r7, #0
 80091c6:	9c00      	ldr	r4, [sp, #0]
 80091c8:	9302      	str	r3, [sp, #8]
 80091ca:	e7c8      	b.n	800915e <__gethex+0xb6>
 80091cc:	2300      	movs	r3, #0
 80091ce:	9304      	str	r3, [sp, #16]
 80091d0:	1ca6      	adds	r6, r4, #2
 80091d2:	e7d2      	b.n	800917a <__gethex+0xd2>
 80091d4:	2301      	movs	r3, #1
 80091d6:	e7fa      	b.n	80091ce <__gethex+0x126>
 80091d8:	230a      	movs	r3, #10
 80091da:	435d      	muls	r5, r3
 80091dc:	182d      	adds	r5, r5, r0
 80091de:	e7d4      	b.n	800918a <__gethex+0xe2>
 80091e0:	0026      	movs	r6, r4
 80091e2:	e7e0      	b.n	80091a6 <__gethex+0xfe>
 80091e4:	9b00      	ldr	r3, [sp, #0]
 80091e6:	9902      	ldr	r1, [sp, #8]
 80091e8:	1ae3      	subs	r3, r4, r3
 80091ea:	3b01      	subs	r3, #1
 80091ec:	2b07      	cmp	r3, #7
 80091ee:	dc0a      	bgt.n	8009206 <__gethex+0x15e>
 80091f0:	9803      	ldr	r0, [sp, #12]
 80091f2:	f7fe f8e3 	bl	80073bc <_Balloc>
 80091f6:	1e05      	subs	r5, r0, #0
 80091f8:	d108      	bne.n	800920c <__gethex+0x164>
 80091fa:	002a      	movs	r2, r5
 80091fc:	21e4      	movs	r1, #228	@ 0xe4
 80091fe:	4b5f      	ldr	r3, [pc, #380]	@ (800937c <__gethex+0x2d4>)
 8009200:	485f      	ldr	r0, [pc, #380]	@ (8009380 <__gethex+0x2d8>)
 8009202:	f7ff fe9d 	bl	8008f40 <__assert_func>
 8009206:	3101      	adds	r1, #1
 8009208:	105b      	asrs	r3, r3, #1
 800920a:	e7ef      	b.n	80091ec <__gethex+0x144>
 800920c:	0003      	movs	r3, r0
 800920e:	3314      	adds	r3, #20
 8009210:	9302      	str	r3, [sp, #8]
 8009212:	9305      	str	r3, [sp, #20]
 8009214:	2300      	movs	r3, #0
 8009216:	001e      	movs	r6, r3
 8009218:	9304      	str	r3, [sp, #16]
 800921a:	9b00      	ldr	r3, [sp, #0]
 800921c:	42a3      	cmp	r3, r4
 800921e:	d338      	bcc.n	8009292 <__gethex+0x1ea>
 8009220:	9c05      	ldr	r4, [sp, #20]
 8009222:	9b02      	ldr	r3, [sp, #8]
 8009224:	c440      	stmia	r4!, {r6}
 8009226:	1ae4      	subs	r4, r4, r3
 8009228:	10a4      	asrs	r4, r4, #2
 800922a:	0030      	movs	r0, r6
 800922c:	612c      	str	r4, [r5, #16]
 800922e:	f7fe f9bd 	bl	80075ac <__hi0bits>
 8009232:	9b01      	ldr	r3, [sp, #4]
 8009234:	0164      	lsls	r4, r4, #5
 8009236:	681b      	ldr	r3, [r3, #0]
 8009238:	1a26      	subs	r6, r4, r0
 800923a:	9300      	str	r3, [sp, #0]
 800923c:	429e      	cmp	r6, r3
 800923e:	dd52      	ble.n	80092e6 <__gethex+0x23e>
 8009240:	1af6      	subs	r6, r6, r3
 8009242:	0031      	movs	r1, r6
 8009244:	0028      	movs	r0, r5
 8009246:	f7fe fd58 	bl	8007cfa <__any_on>
 800924a:	1e04      	subs	r4, r0, #0
 800924c:	d00f      	beq.n	800926e <__gethex+0x1c6>
 800924e:	2401      	movs	r4, #1
 8009250:	211f      	movs	r1, #31
 8009252:	0020      	movs	r0, r4
 8009254:	1e73      	subs	r3, r6, #1
 8009256:	4019      	ands	r1, r3
 8009258:	4088      	lsls	r0, r1
 800925a:	0001      	movs	r1, r0
 800925c:	115a      	asrs	r2, r3, #5
 800925e:	9802      	ldr	r0, [sp, #8]
 8009260:	0092      	lsls	r2, r2, #2
 8009262:	5812      	ldr	r2, [r2, r0]
 8009264:	420a      	tst	r2, r1
 8009266:	d002      	beq.n	800926e <__gethex+0x1c6>
 8009268:	42a3      	cmp	r3, r4
 800926a:	dc34      	bgt.n	80092d6 <__gethex+0x22e>
 800926c:	2402      	movs	r4, #2
 800926e:	0031      	movs	r1, r6
 8009270:	0028      	movs	r0, r5
 8009272:	f7ff feb0 	bl	8008fd6 <rshift>
 8009276:	19bf      	adds	r7, r7, r6
 8009278:	9b01      	ldr	r3, [sp, #4]
 800927a:	689b      	ldr	r3, [r3, #8]
 800927c:	42bb      	cmp	r3, r7
 800927e:	da42      	bge.n	8009306 <__gethex+0x25e>
 8009280:	0029      	movs	r1, r5
 8009282:	9803      	ldr	r0, [sp, #12]
 8009284:	f7fe f8de 	bl	8007444 <_Bfree>
 8009288:	2300      	movs	r3, #0
 800928a:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 800928c:	26a3      	movs	r6, #163	@ 0xa3
 800928e:	6013      	str	r3, [r2, #0]
 8009290:	e794      	b.n	80091bc <__gethex+0x114>
 8009292:	3c01      	subs	r4, #1
 8009294:	7823      	ldrb	r3, [r4, #0]
 8009296:	2b2e      	cmp	r3, #46	@ 0x2e
 8009298:	d012      	beq.n	80092c0 <__gethex+0x218>
 800929a:	9b04      	ldr	r3, [sp, #16]
 800929c:	2b20      	cmp	r3, #32
 800929e:	d104      	bne.n	80092aa <__gethex+0x202>
 80092a0:	9b05      	ldr	r3, [sp, #20]
 80092a2:	c340      	stmia	r3!, {r6}
 80092a4:	2600      	movs	r6, #0
 80092a6:	9305      	str	r3, [sp, #20]
 80092a8:	9604      	str	r6, [sp, #16]
 80092aa:	7820      	ldrb	r0, [r4, #0]
 80092ac:	f7ff fee6 	bl	800907c <__hexdig_fun>
 80092b0:	230f      	movs	r3, #15
 80092b2:	4018      	ands	r0, r3
 80092b4:	9b04      	ldr	r3, [sp, #16]
 80092b6:	4098      	lsls	r0, r3
 80092b8:	3304      	adds	r3, #4
 80092ba:	4306      	orrs	r6, r0
 80092bc:	9304      	str	r3, [sp, #16]
 80092be:	e7ac      	b.n	800921a <__gethex+0x172>
 80092c0:	9b00      	ldr	r3, [sp, #0]
 80092c2:	42a3      	cmp	r3, r4
 80092c4:	d8e9      	bhi.n	800929a <__gethex+0x1f2>
 80092c6:	2201      	movs	r2, #1
 80092c8:	0020      	movs	r0, r4
 80092ca:	492b      	ldr	r1, [pc, #172]	@ (8009378 <__gethex+0x2d0>)
 80092cc:	f7ff fe05 	bl	8008eda <strncmp>
 80092d0:	2800      	cmp	r0, #0
 80092d2:	d1e2      	bne.n	800929a <__gethex+0x1f2>
 80092d4:	e7a1      	b.n	800921a <__gethex+0x172>
 80092d6:	0028      	movs	r0, r5
 80092d8:	1eb1      	subs	r1, r6, #2
 80092da:	f7fe fd0e 	bl	8007cfa <__any_on>
 80092de:	2800      	cmp	r0, #0
 80092e0:	d0c4      	beq.n	800926c <__gethex+0x1c4>
 80092e2:	2403      	movs	r4, #3
 80092e4:	e7c3      	b.n	800926e <__gethex+0x1c6>
 80092e6:	9b00      	ldr	r3, [sp, #0]
 80092e8:	2400      	movs	r4, #0
 80092ea:	429e      	cmp	r6, r3
 80092ec:	dac4      	bge.n	8009278 <__gethex+0x1d0>
 80092ee:	1b9e      	subs	r6, r3, r6
 80092f0:	0029      	movs	r1, r5
 80092f2:	0032      	movs	r2, r6
 80092f4:	9803      	ldr	r0, [sp, #12]
 80092f6:	f7fe fac7 	bl	8007888 <__lshift>
 80092fa:	0003      	movs	r3, r0
 80092fc:	3314      	adds	r3, #20
 80092fe:	0005      	movs	r5, r0
 8009300:	1bbf      	subs	r7, r7, r6
 8009302:	9302      	str	r3, [sp, #8]
 8009304:	e7b8      	b.n	8009278 <__gethex+0x1d0>
 8009306:	9b01      	ldr	r3, [sp, #4]
 8009308:	685e      	ldr	r6, [r3, #4]
 800930a:	42be      	cmp	r6, r7
 800930c:	dd6f      	ble.n	80093ee <__gethex+0x346>
 800930e:	9b00      	ldr	r3, [sp, #0]
 8009310:	1bf6      	subs	r6, r6, r7
 8009312:	42b3      	cmp	r3, r6
 8009314:	dc36      	bgt.n	8009384 <__gethex+0x2dc>
 8009316:	9b01      	ldr	r3, [sp, #4]
 8009318:	68db      	ldr	r3, [r3, #12]
 800931a:	2b02      	cmp	r3, #2
 800931c:	d024      	beq.n	8009368 <__gethex+0x2c0>
 800931e:	2b03      	cmp	r3, #3
 8009320:	d026      	beq.n	8009370 <__gethex+0x2c8>
 8009322:	2b01      	cmp	r3, #1
 8009324:	d117      	bne.n	8009356 <__gethex+0x2ae>
 8009326:	9b00      	ldr	r3, [sp, #0]
 8009328:	42b3      	cmp	r3, r6
 800932a:	d114      	bne.n	8009356 <__gethex+0x2ae>
 800932c:	2b01      	cmp	r3, #1
 800932e:	d10b      	bne.n	8009348 <__gethex+0x2a0>
 8009330:	9b01      	ldr	r3, [sp, #4]
 8009332:	9a07      	ldr	r2, [sp, #28]
 8009334:	685b      	ldr	r3, [r3, #4]
 8009336:	2662      	movs	r6, #98	@ 0x62
 8009338:	6013      	str	r3, [r2, #0]
 800933a:	2301      	movs	r3, #1
 800933c:	9a02      	ldr	r2, [sp, #8]
 800933e:	612b      	str	r3, [r5, #16]
 8009340:	6013      	str	r3, [r2, #0]
 8009342:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 8009344:	601d      	str	r5, [r3, #0]
 8009346:	e739      	b.n	80091bc <__gethex+0x114>
 8009348:	9900      	ldr	r1, [sp, #0]
 800934a:	0028      	movs	r0, r5
 800934c:	3901      	subs	r1, #1
 800934e:	f7fe fcd4 	bl	8007cfa <__any_on>
 8009352:	2800      	cmp	r0, #0
 8009354:	d1ec      	bne.n	8009330 <__gethex+0x288>
 8009356:	0029      	movs	r1, r5
 8009358:	9803      	ldr	r0, [sp, #12]
 800935a:	f7fe f873 	bl	8007444 <_Bfree>
 800935e:	2300      	movs	r3, #0
 8009360:	9a0e      	ldr	r2, [sp, #56]	@ 0x38
 8009362:	2650      	movs	r6, #80	@ 0x50
 8009364:	6013      	str	r3, [r2, #0]
 8009366:	e729      	b.n	80091bc <__gethex+0x114>
 8009368:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 800936a:	2b00      	cmp	r3, #0
 800936c:	d1f3      	bne.n	8009356 <__gethex+0x2ae>
 800936e:	e7df      	b.n	8009330 <__gethex+0x288>
 8009370:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 8009372:	2b00      	cmp	r3, #0
 8009374:	d1dc      	bne.n	8009330 <__gethex+0x288>
 8009376:	e7ee      	b.n	8009356 <__gethex+0x2ae>
 8009378:	08009ea4 	.word	0x08009ea4
 800937c:	08009e3a 	.word	0x08009e3a
 8009380:	08009efb 	.word	0x08009efb
 8009384:	1e77      	subs	r7, r6, #1
 8009386:	2c00      	cmp	r4, #0
 8009388:	d12f      	bne.n	80093ea <__gethex+0x342>
 800938a:	2f00      	cmp	r7, #0
 800938c:	d004      	beq.n	8009398 <__gethex+0x2f0>
 800938e:	0039      	movs	r1, r7
 8009390:	0028      	movs	r0, r5
 8009392:	f7fe fcb2 	bl	8007cfa <__any_on>
 8009396:	0004      	movs	r4, r0
 8009398:	231f      	movs	r3, #31
 800939a:	117a      	asrs	r2, r7, #5
 800939c:	401f      	ands	r7, r3
 800939e:	3b1e      	subs	r3, #30
 80093a0:	40bb      	lsls	r3, r7
 80093a2:	9902      	ldr	r1, [sp, #8]
 80093a4:	0092      	lsls	r2, r2, #2
 80093a6:	5852      	ldr	r2, [r2, r1]
 80093a8:	421a      	tst	r2, r3
 80093aa:	d001      	beq.n	80093b0 <__gethex+0x308>
 80093ac:	2302      	movs	r3, #2
 80093ae:	431c      	orrs	r4, r3
 80093b0:	9b00      	ldr	r3, [sp, #0]
 80093b2:	0031      	movs	r1, r6
 80093b4:	1b9b      	subs	r3, r3, r6
 80093b6:	2602      	movs	r6, #2
 80093b8:	0028      	movs	r0, r5
 80093ba:	9300      	str	r3, [sp, #0]
 80093bc:	f7ff fe0b 	bl	8008fd6 <rshift>
 80093c0:	9b01      	ldr	r3, [sp, #4]
 80093c2:	685f      	ldr	r7, [r3, #4]
 80093c4:	2c00      	cmp	r4, #0
 80093c6:	d03f      	beq.n	8009448 <__gethex+0x3a0>
 80093c8:	9b01      	ldr	r3, [sp, #4]
 80093ca:	68db      	ldr	r3, [r3, #12]
 80093cc:	2b02      	cmp	r3, #2
 80093ce:	d010      	beq.n	80093f2 <__gethex+0x34a>
 80093d0:	2b03      	cmp	r3, #3
 80093d2:	d012      	beq.n	80093fa <__gethex+0x352>
 80093d4:	2b01      	cmp	r3, #1
 80093d6:	d106      	bne.n	80093e6 <__gethex+0x33e>
 80093d8:	07a2      	lsls	r2, r4, #30
 80093da:	d504      	bpl.n	80093e6 <__gethex+0x33e>
 80093dc:	9a02      	ldr	r2, [sp, #8]
 80093de:	6812      	ldr	r2, [r2, #0]
 80093e0:	4314      	orrs	r4, r2
 80093e2:	421c      	tst	r4, r3
 80093e4:	d10c      	bne.n	8009400 <__gethex+0x358>
 80093e6:	2310      	movs	r3, #16
 80093e8:	e02d      	b.n	8009446 <__gethex+0x39e>
 80093ea:	2401      	movs	r4, #1
 80093ec:	e7d4      	b.n	8009398 <__gethex+0x2f0>
 80093ee:	2601      	movs	r6, #1
 80093f0:	e7e8      	b.n	80093c4 <__gethex+0x31c>
 80093f2:	2301      	movs	r3, #1
 80093f4:	9a0f      	ldr	r2, [sp, #60]	@ 0x3c
 80093f6:	1a9b      	subs	r3, r3, r2
 80093f8:	930f      	str	r3, [sp, #60]	@ 0x3c
 80093fa:	9b0f      	ldr	r3, [sp, #60]	@ 0x3c
 80093fc:	2b00      	cmp	r3, #0
 80093fe:	d0f2      	beq.n	80093e6 <__gethex+0x33e>
 8009400:	692b      	ldr	r3, [r5, #16]
 8009402:	2000      	movs	r0, #0
 8009404:	9302      	str	r3, [sp, #8]
 8009406:	009b      	lsls	r3, r3, #2
 8009408:	9304      	str	r3, [sp, #16]
 800940a:	002b      	movs	r3, r5
 800940c:	9a04      	ldr	r2, [sp, #16]
 800940e:	3314      	adds	r3, #20
 8009410:	1899      	adds	r1, r3, r2
 8009412:	681a      	ldr	r2, [r3, #0]
 8009414:	1c54      	adds	r4, r2, #1
 8009416:	d01c      	beq.n	8009452 <__gethex+0x3aa>
 8009418:	3201      	adds	r2, #1
 800941a:	601a      	str	r2, [r3, #0]
 800941c:	002b      	movs	r3, r5
 800941e:	3314      	adds	r3, #20
 8009420:	2e02      	cmp	r6, #2
 8009422:	d13f      	bne.n	80094a4 <__gethex+0x3fc>
 8009424:	9a01      	ldr	r2, [sp, #4]
 8009426:	9900      	ldr	r1, [sp, #0]
 8009428:	6812      	ldr	r2, [r2, #0]
 800942a:	3a01      	subs	r2, #1
 800942c:	428a      	cmp	r2, r1
 800942e:	d109      	bne.n	8009444 <__gethex+0x39c>
 8009430:	000a      	movs	r2, r1
 8009432:	201f      	movs	r0, #31
 8009434:	4010      	ands	r0, r2
 8009436:	2201      	movs	r2, #1
 8009438:	4082      	lsls	r2, r0
 800943a:	1149      	asrs	r1, r1, #5
 800943c:	0089      	lsls	r1, r1, #2
 800943e:	58cb      	ldr	r3, [r1, r3]
 8009440:	4213      	tst	r3, r2
 8009442:	d13d      	bne.n	80094c0 <__gethex+0x418>
 8009444:	2320      	movs	r3, #32
 8009446:	431e      	orrs	r6, r3
 8009448:	9b0e      	ldr	r3, [sp, #56]	@ 0x38
 800944a:	601d      	str	r5, [r3, #0]
 800944c:	9b07      	ldr	r3, [sp, #28]
 800944e:	601f      	str	r7, [r3, #0]
 8009450:	e6b4      	b.n	80091bc <__gethex+0x114>
 8009452:	c301      	stmia	r3!, {r0}
 8009454:	4299      	cmp	r1, r3
 8009456:	d8dc      	bhi.n	8009412 <__gethex+0x36a>
 8009458:	68ab      	ldr	r3, [r5, #8]
 800945a:	9a02      	ldr	r2, [sp, #8]
 800945c:	429a      	cmp	r2, r3
 800945e:	db18      	blt.n	8009492 <__gethex+0x3ea>
 8009460:	6869      	ldr	r1, [r5, #4]
 8009462:	9803      	ldr	r0, [sp, #12]
 8009464:	3101      	adds	r1, #1
 8009466:	f7fd ffa9 	bl	80073bc <_Balloc>
 800946a:	1e04      	subs	r4, r0, #0
 800946c:	d104      	bne.n	8009478 <__gethex+0x3d0>
 800946e:	0022      	movs	r2, r4
 8009470:	2184      	movs	r1, #132	@ 0x84
 8009472:	4b1d      	ldr	r3, [pc, #116]	@ (80094e8 <__gethex+0x440>)
 8009474:	481d      	ldr	r0, [pc, #116]	@ (80094ec <__gethex+0x444>)
 8009476:	e6c4      	b.n	8009202 <__gethex+0x15a>
 8009478:	0029      	movs	r1, r5
 800947a:	692a      	ldr	r2, [r5, #16]
 800947c:	310c      	adds	r1, #12
 800947e:	3202      	adds	r2, #2
 8009480:	0092      	lsls	r2, r2, #2
 8009482:	300c      	adds	r0, #12
 8009484:	f7ff fd4c 	bl	8008f20 <memcpy>
 8009488:	0029      	movs	r1, r5
 800948a:	9803      	ldr	r0, [sp, #12]
 800948c:	f7fd ffda 	bl	8007444 <_Bfree>
 8009490:	0025      	movs	r5, r4
 8009492:	692b      	ldr	r3, [r5, #16]
 8009494:	1c5a      	adds	r2, r3, #1
 8009496:	612a      	str	r2, [r5, #16]
 8009498:	2201      	movs	r2, #1
 800949a:	3304      	adds	r3, #4
 800949c:	009b      	lsls	r3, r3, #2
 800949e:	18eb      	adds	r3, r5, r3
 80094a0:	605a      	str	r2, [r3, #4]
 80094a2:	e7bb      	b.n	800941c <__gethex+0x374>
 80094a4:	692a      	ldr	r2, [r5, #16]
 80094a6:	9902      	ldr	r1, [sp, #8]
 80094a8:	428a      	cmp	r2, r1
 80094aa:	dd0b      	ble.n	80094c4 <__gethex+0x41c>
 80094ac:	2101      	movs	r1, #1
 80094ae:	0028      	movs	r0, r5
 80094b0:	f7ff fd91 	bl	8008fd6 <rshift>
 80094b4:	9b01      	ldr	r3, [sp, #4]
 80094b6:	3701      	adds	r7, #1
 80094b8:	689b      	ldr	r3, [r3, #8]
 80094ba:	42bb      	cmp	r3, r7
 80094bc:	da00      	bge.n	80094c0 <__gethex+0x418>
 80094be:	e6df      	b.n	8009280 <__gethex+0x1d8>
 80094c0:	2601      	movs	r6, #1
 80094c2:	e7bf      	b.n	8009444 <__gethex+0x39c>
 80094c4:	221f      	movs	r2, #31
 80094c6:	9c00      	ldr	r4, [sp, #0]
 80094c8:	9900      	ldr	r1, [sp, #0]
 80094ca:	4014      	ands	r4, r2
 80094cc:	4211      	tst	r1, r2
 80094ce:	d0f7      	beq.n	80094c0 <__gethex+0x418>
 80094d0:	9a04      	ldr	r2, [sp, #16]
 80094d2:	189b      	adds	r3, r3, r2
 80094d4:	3b04      	subs	r3, #4
 80094d6:	6818      	ldr	r0, [r3, #0]
 80094d8:	f7fe f868 	bl	80075ac <__hi0bits>
 80094dc:	2320      	movs	r3, #32
 80094de:	1b1b      	subs	r3, r3, r4
 80094e0:	4298      	cmp	r0, r3
 80094e2:	dbe3      	blt.n	80094ac <__gethex+0x404>
 80094e4:	e7ec      	b.n	80094c0 <__gethex+0x418>
 80094e6:	46c0      	nop			@ (mov r8, r8)
 80094e8:	08009e3a 	.word	0x08009e3a
 80094ec:	08009efb 	.word	0x08009efb

080094f0 <L_shift>:
 80094f0:	2308      	movs	r3, #8
 80094f2:	b570      	push	{r4, r5, r6, lr}
 80094f4:	2520      	movs	r5, #32
 80094f6:	1a9a      	subs	r2, r3, r2
 80094f8:	0092      	lsls	r2, r2, #2
 80094fa:	1aad      	subs	r5, r5, r2
 80094fc:	6843      	ldr	r3, [r0, #4]
 80094fe:	6804      	ldr	r4, [r0, #0]
 8009500:	001e      	movs	r6, r3
 8009502:	40ae      	lsls	r6, r5
 8009504:	40d3      	lsrs	r3, r2
 8009506:	4334      	orrs	r4, r6
 8009508:	6004      	str	r4, [r0, #0]
 800950a:	6043      	str	r3, [r0, #4]
 800950c:	3004      	adds	r0, #4
 800950e:	4288      	cmp	r0, r1
 8009510:	d3f4      	bcc.n	80094fc <L_shift+0xc>
 8009512:	bd70      	pop	{r4, r5, r6, pc}

08009514 <__match>:
 8009514:	b530      	push	{r4, r5, lr}
 8009516:	6803      	ldr	r3, [r0, #0]
 8009518:	780c      	ldrb	r4, [r1, #0]
 800951a:	3301      	adds	r3, #1
 800951c:	2c00      	cmp	r4, #0
 800951e:	d102      	bne.n	8009526 <__match+0x12>
 8009520:	6003      	str	r3, [r0, #0]
 8009522:	2001      	movs	r0, #1
 8009524:	bd30      	pop	{r4, r5, pc}
 8009526:	781a      	ldrb	r2, [r3, #0]
 8009528:	0015      	movs	r5, r2
 800952a:	3d41      	subs	r5, #65	@ 0x41
 800952c:	2d19      	cmp	r5, #25
 800952e:	d800      	bhi.n	8009532 <__match+0x1e>
 8009530:	3220      	adds	r2, #32
 8009532:	3101      	adds	r1, #1
 8009534:	42a2      	cmp	r2, r4
 8009536:	d0ef      	beq.n	8009518 <__match+0x4>
 8009538:	2000      	movs	r0, #0
 800953a:	e7f3      	b.n	8009524 <__match+0x10>

0800953c <__hexnan>:
 800953c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800953e:	680b      	ldr	r3, [r1, #0]
 8009540:	b08b      	sub	sp, #44	@ 0x2c
 8009542:	9201      	str	r2, [sp, #4]
 8009544:	9901      	ldr	r1, [sp, #4]
 8009546:	115a      	asrs	r2, r3, #5
 8009548:	0092      	lsls	r2, r2, #2
 800954a:	188a      	adds	r2, r1, r2
 800954c:	9202      	str	r2, [sp, #8]
 800954e:	0019      	movs	r1, r3
 8009550:	221f      	movs	r2, #31
 8009552:	4011      	ands	r1, r2
 8009554:	9008      	str	r0, [sp, #32]
 8009556:	9106      	str	r1, [sp, #24]
 8009558:	4213      	tst	r3, r2
 800955a:	d002      	beq.n	8009562 <__hexnan+0x26>
 800955c:	9b02      	ldr	r3, [sp, #8]
 800955e:	3304      	adds	r3, #4
 8009560:	9302      	str	r3, [sp, #8]
 8009562:	9b02      	ldr	r3, [sp, #8]
 8009564:	2500      	movs	r5, #0
 8009566:	1f1f      	subs	r7, r3, #4
 8009568:	003e      	movs	r6, r7
 800956a:	003c      	movs	r4, r7
 800956c:	9b08      	ldr	r3, [sp, #32]
 800956e:	603d      	str	r5, [r7, #0]
 8009570:	681b      	ldr	r3, [r3, #0]
 8009572:	9507      	str	r5, [sp, #28]
 8009574:	9305      	str	r3, [sp, #20]
 8009576:	9503      	str	r5, [sp, #12]
 8009578:	9b05      	ldr	r3, [sp, #20]
 800957a:	3301      	adds	r3, #1
 800957c:	9309      	str	r3, [sp, #36]	@ 0x24
 800957e:	9b05      	ldr	r3, [sp, #20]
 8009580:	785b      	ldrb	r3, [r3, #1]
 8009582:	9304      	str	r3, [sp, #16]
 8009584:	2b00      	cmp	r3, #0
 8009586:	d028      	beq.n	80095da <__hexnan+0x9e>
 8009588:	9804      	ldr	r0, [sp, #16]
 800958a:	f7ff fd77 	bl	800907c <__hexdig_fun>
 800958e:	2800      	cmp	r0, #0
 8009590:	d155      	bne.n	800963e <__hexnan+0x102>
 8009592:	9b04      	ldr	r3, [sp, #16]
 8009594:	2b20      	cmp	r3, #32
 8009596:	d819      	bhi.n	80095cc <__hexnan+0x90>
 8009598:	9b03      	ldr	r3, [sp, #12]
 800959a:	9a07      	ldr	r2, [sp, #28]
 800959c:	4293      	cmp	r3, r2
 800959e:	dd12      	ble.n	80095c6 <__hexnan+0x8a>
 80095a0:	42b4      	cmp	r4, r6
 80095a2:	d206      	bcs.n	80095b2 <__hexnan+0x76>
 80095a4:	2d07      	cmp	r5, #7
 80095a6:	dc04      	bgt.n	80095b2 <__hexnan+0x76>
 80095a8:	002a      	movs	r2, r5
 80095aa:	0031      	movs	r1, r6
 80095ac:	0020      	movs	r0, r4
 80095ae:	f7ff ff9f 	bl	80094f0 <L_shift>
 80095b2:	9b01      	ldr	r3, [sp, #4]
 80095b4:	2508      	movs	r5, #8
 80095b6:	429c      	cmp	r4, r3
 80095b8:	d905      	bls.n	80095c6 <__hexnan+0x8a>
 80095ba:	1f26      	subs	r6, r4, #4
 80095bc:	2500      	movs	r5, #0
 80095be:	0034      	movs	r4, r6
 80095c0:	9b03      	ldr	r3, [sp, #12]
 80095c2:	6035      	str	r5, [r6, #0]
 80095c4:	9307      	str	r3, [sp, #28]
 80095c6:	9b09      	ldr	r3, [sp, #36]	@ 0x24
 80095c8:	9305      	str	r3, [sp, #20]
 80095ca:	e7d5      	b.n	8009578 <__hexnan+0x3c>
 80095cc:	9b04      	ldr	r3, [sp, #16]
 80095ce:	2b29      	cmp	r3, #41	@ 0x29
 80095d0:	d15a      	bne.n	8009688 <__hexnan+0x14c>
 80095d2:	9b05      	ldr	r3, [sp, #20]
 80095d4:	9a08      	ldr	r2, [sp, #32]
 80095d6:	3302      	adds	r3, #2
 80095d8:	6013      	str	r3, [r2, #0]
 80095da:	9b03      	ldr	r3, [sp, #12]
 80095dc:	2b00      	cmp	r3, #0
 80095de:	d053      	beq.n	8009688 <__hexnan+0x14c>
 80095e0:	42b4      	cmp	r4, r6
 80095e2:	d206      	bcs.n	80095f2 <__hexnan+0xb6>
 80095e4:	2d07      	cmp	r5, #7
 80095e6:	dc04      	bgt.n	80095f2 <__hexnan+0xb6>
 80095e8:	002a      	movs	r2, r5
 80095ea:	0031      	movs	r1, r6
 80095ec:	0020      	movs	r0, r4
 80095ee:	f7ff ff7f 	bl	80094f0 <L_shift>
 80095f2:	9b01      	ldr	r3, [sp, #4]
 80095f4:	429c      	cmp	r4, r3
 80095f6:	d936      	bls.n	8009666 <__hexnan+0x12a>
 80095f8:	001a      	movs	r2, r3
 80095fa:	0023      	movs	r3, r4
 80095fc:	cb02      	ldmia	r3!, {r1}
 80095fe:	c202      	stmia	r2!, {r1}
 8009600:	429f      	cmp	r7, r3
 8009602:	d2fb      	bcs.n	80095fc <__hexnan+0xc0>
 8009604:	9b02      	ldr	r3, [sp, #8]
 8009606:	1c62      	adds	r2, r4, #1
 8009608:	1ed9      	subs	r1, r3, #3
 800960a:	2304      	movs	r3, #4
 800960c:	4291      	cmp	r1, r2
 800960e:	d305      	bcc.n	800961c <__hexnan+0xe0>
 8009610:	9b02      	ldr	r3, [sp, #8]
 8009612:	3b04      	subs	r3, #4
 8009614:	1b1b      	subs	r3, r3, r4
 8009616:	089b      	lsrs	r3, r3, #2
 8009618:	3301      	adds	r3, #1
 800961a:	009b      	lsls	r3, r3, #2
 800961c:	9a01      	ldr	r2, [sp, #4]
 800961e:	18d3      	adds	r3, r2, r3
 8009620:	2200      	movs	r2, #0
 8009622:	c304      	stmia	r3!, {r2}
 8009624:	429f      	cmp	r7, r3
 8009626:	d2fc      	bcs.n	8009622 <__hexnan+0xe6>
 8009628:	683b      	ldr	r3, [r7, #0]
 800962a:	2b00      	cmp	r3, #0
 800962c:	d104      	bne.n	8009638 <__hexnan+0xfc>
 800962e:	9b01      	ldr	r3, [sp, #4]
 8009630:	429f      	cmp	r7, r3
 8009632:	d127      	bne.n	8009684 <__hexnan+0x148>
 8009634:	2301      	movs	r3, #1
 8009636:	603b      	str	r3, [r7, #0]
 8009638:	2005      	movs	r0, #5
 800963a:	b00b      	add	sp, #44	@ 0x2c
 800963c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800963e:	9b03      	ldr	r3, [sp, #12]
 8009640:	3501      	adds	r5, #1
 8009642:	3301      	adds	r3, #1
 8009644:	9303      	str	r3, [sp, #12]
 8009646:	2d08      	cmp	r5, #8
 8009648:	dd06      	ble.n	8009658 <__hexnan+0x11c>
 800964a:	9b01      	ldr	r3, [sp, #4]
 800964c:	429c      	cmp	r4, r3
 800964e:	d9ba      	bls.n	80095c6 <__hexnan+0x8a>
 8009650:	2300      	movs	r3, #0
 8009652:	2501      	movs	r5, #1
 8009654:	3c04      	subs	r4, #4
 8009656:	6023      	str	r3, [r4, #0]
 8009658:	220f      	movs	r2, #15
 800965a:	6823      	ldr	r3, [r4, #0]
 800965c:	4010      	ands	r0, r2
 800965e:	011b      	lsls	r3, r3, #4
 8009660:	4303      	orrs	r3, r0
 8009662:	6023      	str	r3, [r4, #0]
 8009664:	e7af      	b.n	80095c6 <__hexnan+0x8a>
 8009666:	9b06      	ldr	r3, [sp, #24]
 8009668:	2b00      	cmp	r3, #0
 800966a:	d0dd      	beq.n	8009628 <__hexnan+0xec>
 800966c:	2320      	movs	r3, #32
 800966e:	9a06      	ldr	r2, [sp, #24]
 8009670:	9902      	ldr	r1, [sp, #8]
 8009672:	1a9b      	subs	r3, r3, r2
 8009674:	2201      	movs	r2, #1
 8009676:	4252      	negs	r2, r2
 8009678:	40da      	lsrs	r2, r3
 800967a:	3904      	subs	r1, #4
 800967c:	680b      	ldr	r3, [r1, #0]
 800967e:	4013      	ands	r3, r2
 8009680:	600b      	str	r3, [r1, #0]
 8009682:	e7d1      	b.n	8009628 <__hexnan+0xec>
 8009684:	3f04      	subs	r7, #4
 8009686:	e7cf      	b.n	8009628 <__hexnan+0xec>
 8009688:	2004      	movs	r0, #4
 800968a:	e7d6      	b.n	800963a <__hexnan+0xfe>

0800968c <__ascii_mbtowc>:
 800968c:	b082      	sub	sp, #8
 800968e:	2900      	cmp	r1, #0
 8009690:	d100      	bne.n	8009694 <__ascii_mbtowc+0x8>
 8009692:	a901      	add	r1, sp, #4
 8009694:	1e10      	subs	r0, r2, #0
 8009696:	d006      	beq.n	80096a6 <__ascii_mbtowc+0x1a>
 8009698:	2b00      	cmp	r3, #0
 800969a:	d006      	beq.n	80096aa <__ascii_mbtowc+0x1e>
 800969c:	7813      	ldrb	r3, [r2, #0]
 800969e:	600b      	str	r3, [r1, #0]
 80096a0:	7810      	ldrb	r0, [r2, #0]
 80096a2:	1e43      	subs	r3, r0, #1
 80096a4:	4198      	sbcs	r0, r3
 80096a6:	b002      	add	sp, #8
 80096a8:	4770      	bx	lr
 80096aa:	2002      	movs	r0, #2
 80096ac:	4240      	negs	r0, r0
 80096ae:	e7fa      	b.n	80096a6 <__ascii_mbtowc+0x1a>

080096b0 <_realloc_r>:
 80096b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80096b2:	0006      	movs	r6, r0
 80096b4:	000c      	movs	r4, r1
 80096b6:	0015      	movs	r5, r2
 80096b8:	2900      	cmp	r1, #0
 80096ba:	d105      	bne.n	80096c8 <_realloc_r+0x18>
 80096bc:	0011      	movs	r1, r2
 80096be:	f7fd fded 	bl	800729c <_malloc_r>
 80096c2:	0004      	movs	r4, r0
 80096c4:	0020      	movs	r0, r4
 80096c6:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80096c8:	2a00      	cmp	r2, #0
 80096ca:	d103      	bne.n	80096d4 <_realloc_r+0x24>
 80096cc:	f7fd fd70 	bl	80071b0 <_free_r>
 80096d0:	002c      	movs	r4, r5
 80096d2:	e7f7      	b.n	80096c4 <_realloc_r+0x14>
 80096d4:	f000 f841 	bl	800975a <_malloc_usable_size_r>
 80096d8:	0007      	movs	r7, r0
 80096da:	4285      	cmp	r5, r0
 80096dc:	d802      	bhi.n	80096e4 <_realloc_r+0x34>
 80096de:	0843      	lsrs	r3, r0, #1
 80096e0:	42ab      	cmp	r3, r5
 80096e2:	d3ef      	bcc.n	80096c4 <_realloc_r+0x14>
 80096e4:	0029      	movs	r1, r5
 80096e6:	0030      	movs	r0, r6
 80096e8:	f7fd fdd8 	bl	800729c <_malloc_r>
 80096ec:	9001      	str	r0, [sp, #4]
 80096ee:	2800      	cmp	r0, #0
 80096f0:	d101      	bne.n	80096f6 <_realloc_r+0x46>
 80096f2:	9c01      	ldr	r4, [sp, #4]
 80096f4:	e7e6      	b.n	80096c4 <_realloc_r+0x14>
 80096f6:	002a      	movs	r2, r5
 80096f8:	42bd      	cmp	r5, r7
 80096fa:	d900      	bls.n	80096fe <_realloc_r+0x4e>
 80096fc:	003a      	movs	r2, r7
 80096fe:	0021      	movs	r1, r4
 8009700:	9801      	ldr	r0, [sp, #4]
 8009702:	f7ff fc0d 	bl	8008f20 <memcpy>
 8009706:	0021      	movs	r1, r4
 8009708:	0030      	movs	r0, r6
 800970a:	f7fd fd51 	bl	80071b0 <_free_r>
 800970e:	e7f0      	b.n	80096f2 <_realloc_r+0x42>

08009710 <__ascii_wctomb>:
 8009710:	0003      	movs	r3, r0
 8009712:	1e08      	subs	r0, r1, #0
 8009714:	d005      	beq.n	8009722 <__ascii_wctomb+0x12>
 8009716:	2aff      	cmp	r2, #255	@ 0xff
 8009718:	d904      	bls.n	8009724 <__ascii_wctomb+0x14>
 800971a:	228a      	movs	r2, #138	@ 0x8a
 800971c:	2001      	movs	r0, #1
 800971e:	601a      	str	r2, [r3, #0]
 8009720:	4240      	negs	r0, r0
 8009722:	4770      	bx	lr
 8009724:	2001      	movs	r0, #1
 8009726:	700a      	strb	r2, [r1, #0]
 8009728:	e7fb      	b.n	8009722 <__ascii_wctomb+0x12>
	...

0800972c <fiprintf>:
 800972c:	b40e      	push	{r1, r2, r3}
 800972e:	b517      	push	{r0, r1, r2, r4, lr}
 8009730:	4c05      	ldr	r4, [pc, #20]	@ (8009748 <fiprintf+0x1c>)
 8009732:	ab05      	add	r3, sp, #20
 8009734:	cb04      	ldmia	r3!, {r2}
 8009736:	0001      	movs	r1, r0
 8009738:	6820      	ldr	r0, [r4, #0]
 800973a:	9301      	str	r3, [sp, #4]
 800973c:	f000 f83c 	bl	80097b8 <_vfiprintf_r>
 8009740:	bc1e      	pop	{r1, r2, r3, r4}
 8009742:	bc08      	pop	{r3}
 8009744:	b003      	add	sp, #12
 8009746:	4718      	bx	r3
 8009748:	20000020 	.word	0x20000020

0800974c <abort>:
 800974c:	2006      	movs	r0, #6
 800974e:	b510      	push	{r4, lr}
 8009750:	f000 fa18 	bl	8009b84 <raise>
 8009754:	2001      	movs	r0, #1
 8009756:	f7f9 fbfe 	bl	8002f56 <_exit>

0800975a <_malloc_usable_size_r>:
 800975a:	1f0b      	subs	r3, r1, #4
 800975c:	681b      	ldr	r3, [r3, #0]
 800975e:	1f18      	subs	r0, r3, #4
 8009760:	2b00      	cmp	r3, #0
 8009762:	da01      	bge.n	8009768 <_malloc_usable_size_r+0xe>
 8009764:	580b      	ldr	r3, [r1, r0]
 8009766:	18c0      	adds	r0, r0, r3
 8009768:	4770      	bx	lr

0800976a <__sfputc_r>:
 800976a:	6893      	ldr	r3, [r2, #8]
 800976c:	b510      	push	{r4, lr}
 800976e:	3b01      	subs	r3, #1
 8009770:	6093      	str	r3, [r2, #8]
 8009772:	2b00      	cmp	r3, #0
 8009774:	da04      	bge.n	8009780 <__sfputc_r+0x16>
 8009776:	6994      	ldr	r4, [r2, #24]
 8009778:	42a3      	cmp	r3, r4
 800977a:	db07      	blt.n	800978c <__sfputc_r+0x22>
 800977c:	290a      	cmp	r1, #10
 800977e:	d005      	beq.n	800978c <__sfputc_r+0x22>
 8009780:	6813      	ldr	r3, [r2, #0]
 8009782:	1c58      	adds	r0, r3, #1
 8009784:	6010      	str	r0, [r2, #0]
 8009786:	7019      	strb	r1, [r3, #0]
 8009788:	0008      	movs	r0, r1
 800978a:	bd10      	pop	{r4, pc}
 800978c:	f000 f930 	bl	80099f0 <__swbuf_r>
 8009790:	0001      	movs	r1, r0
 8009792:	e7f9      	b.n	8009788 <__sfputc_r+0x1e>

08009794 <__sfputs_r>:
 8009794:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009796:	0006      	movs	r6, r0
 8009798:	000f      	movs	r7, r1
 800979a:	0014      	movs	r4, r2
 800979c:	18d5      	adds	r5, r2, r3
 800979e:	42ac      	cmp	r4, r5
 80097a0:	d101      	bne.n	80097a6 <__sfputs_r+0x12>
 80097a2:	2000      	movs	r0, #0
 80097a4:	e007      	b.n	80097b6 <__sfputs_r+0x22>
 80097a6:	7821      	ldrb	r1, [r4, #0]
 80097a8:	003a      	movs	r2, r7
 80097aa:	0030      	movs	r0, r6
 80097ac:	f7ff ffdd 	bl	800976a <__sfputc_r>
 80097b0:	3401      	adds	r4, #1
 80097b2:	1c43      	adds	r3, r0, #1
 80097b4:	d1f3      	bne.n	800979e <__sfputs_r+0xa>
 80097b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080097b8 <_vfiprintf_r>:
 80097b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80097ba:	b0a1      	sub	sp, #132	@ 0x84
 80097bc:	000f      	movs	r7, r1
 80097be:	0015      	movs	r5, r2
 80097c0:	001e      	movs	r6, r3
 80097c2:	9003      	str	r0, [sp, #12]
 80097c4:	2800      	cmp	r0, #0
 80097c6:	d004      	beq.n	80097d2 <_vfiprintf_r+0x1a>
 80097c8:	6a03      	ldr	r3, [r0, #32]
 80097ca:	2b00      	cmp	r3, #0
 80097cc:	d101      	bne.n	80097d2 <_vfiprintf_r+0x1a>
 80097ce:	f7fc fd41 	bl	8006254 <__sinit>
 80097d2:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80097d4:	07db      	lsls	r3, r3, #31
 80097d6:	d405      	bmi.n	80097e4 <_vfiprintf_r+0x2c>
 80097d8:	89bb      	ldrh	r3, [r7, #12]
 80097da:	059b      	lsls	r3, r3, #22
 80097dc:	d402      	bmi.n	80097e4 <_vfiprintf_r+0x2c>
 80097de:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 80097e0:	f7fc fe5f 	bl	80064a2 <__retarget_lock_acquire_recursive>
 80097e4:	89bb      	ldrh	r3, [r7, #12]
 80097e6:	071b      	lsls	r3, r3, #28
 80097e8:	d502      	bpl.n	80097f0 <_vfiprintf_r+0x38>
 80097ea:	693b      	ldr	r3, [r7, #16]
 80097ec:	2b00      	cmp	r3, #0
 80097ee:	d113      	bne.n	8009818 <_vfiprintf_r+0x60>
 80097f0:	0039      	movs	r1, r7
 80097f2:	9803      	ldr	r0, [sp, #12]
 80097f4:	f000 f93e 	bl	8009a74 <__swsetup_r>
 80097f8:	2800      	cmp	r0, #0
 80097fa:	d00d      	beq.n	8009818 <_vfiprintf_r+0x60>
 80097fc:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80097fe:	07db      	lsls	r3, r3, #31
 8009800:	d503      	bpl.n	800980a <_vfiprintf_r+0x52>
 8009802:	2001      	movs	r0, #1
 8009804:	4240      	negs	r0, r0
 8009806:	b021      	add	sp, #132	@ 0x84
 8009808:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800980a:	89bb      	ldrh	r3, [r7, #12]
 800980c:	059b      	lsls	r3, r3, #22
 800980e:	d4f8      	bmi.n	8009802 <_vfiprintf_r+0x4a>
 8009810:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 8009812:	f7fc fe47 	bl	80064a4 <__retarget_lock_release_recursive>
 8009816:	e7f4      	b.n	8009802 <_vfiprintf_r+0x4a>
 8009818:	2300      	movs	r3, #0
 800981a:	ac08      	add	r4, sp, #32
 800981c:	6163      	str	r3, [r4, #20]
 800981e:	3320      	adds	r3, #32
 8009820:	7663      	strb	r3, [r4, #25]
 8009822:	3310      	adds	r3, #16
 8009824:	76a3      	strb	r3, [r4, #26]
 8009826:	9607      	str	r6, [sp, #28]
 8009828:	002e      	movs	r6, r5
 800982a:	7833      	ldrb	r3, [r6, #0]
 800982c:	2b00      	cmp	r3, #0
 800982e:	d001      	beq.n	8009834 <_vfiprintf_r+0x7c>
 8009830:	2b25      	cmp	r3, #37	@ 0x25
 8009832:	d148      	bne.n	80098c6 <_vfiprintf_r+0x10e>
 8009834:	1b73      	subs	r3, r6, r5
 8009836:	9305      	str	r3, [sp, #20]
 8009838:	42ae      	cmp	r6, r5
 800983a:	d00b      	beq.n	8009854 <_vfiprintf_r+0x9c>
 800983c:	002a      	movs	r2, r5
 800983e:	0039      	movs	r1, r7
 8009840:	9803      	ldr	r0, [sp, #12]
 8009842:	f7ff ffa7 	bl	8009794 <__sfputs_r>
 8009846:	3001      	adds	r0, #1
 8009848:	d100      	bne.n	800984c <_vfiprintf_r+0x94>
 800984a:	e0ae      	b.n	80099aa <_vfiprintf_r+0x1f2>
 800984c:	6963      	ldr	r3, [r4, #20]
 800984e:	9a05      	ldr	r2, [sp, #20]
 8009850:	189b      	adds	r3, r3, r2
 8009852:	6163      	str	r3, [r4, #20]
 8009854:	7833      	ldrb	r3, [r6, #0]
 8009856:	2b00      	cmp	r3, #0
 8009858:	d100      	bne.n	800985c <_vfiprintf_r+0xa4>
 800985a:	e0a6      	b.n	80099aa <_vfiprintf_r+0x1f2>
 800985c:	2201      	movs	r2, #1
 800985e:	2300      	movs	r3, #0
 8009860:	4252      	negs	r2, r2
 8009862:	6062      	str	r2, [r4, #4]
 8009864:	a904      	add	r1, sp, #16
 8009866:	3254      	adds	r2, #84	@ 0x54
 8009868:	1852      	adds	r2, r2, r1
 800986a:	1c75      	adds	r5, r6, #1
 800986c:	6023      	str	r3, [r4, #0]
 800986e:	60e3      	str	r3, [r4, #12]
 8009870:	60a3      	str	r3, [r4, #8]
 8009872:	7013      	strb	r3, [r2, #0]
 8009874:	65a3      	str	r3, [r4, #88]	@ 0x58
 8009876:	4b59      	ldr	r3, [pc, #356]	@ (80099dc <_vfiprintf_r+0x224>)
 8009878:	2205      	movs	r2, #5
 800987a:	0018      	movs	r0, r3
 800987c:	7829      	ldrb	r1, [r5, #0]
 800987e:	9305      	str	r3, [sp, #20]
 8009880:	f7fc fe11 	bl	80064a6 <memchr>
 8009884:	1c6e      	adds	r6, r5, #1
 8009886:	2800      	cmp	r0, #0
 8009888:	d11f      	bne.n	80098ca <_vfiprintf_r+0x112>
 800988a:	6822      	ldr	r2, [r4, #0]
 800988c:	06d3      	lsls	r3, r2, #27
 800988e:	d504      	bpl.n	800989a <_vfiprintf_r+0xe2>
 8009890:	2353      	movs	r3, #83	@ 0x53
 8009892:	a904      	add	r1, sp, #16
 8009894:	185b      	adds	r3, r3, r1
 8009896:	2120      	movs	r1, #32
 8009898:	7019      	strb	r1, [r3, #0]
 800989a:	0713      	lsls	r3, r2, #28
 800989c:	d504      	bpl.n	80098a8 <_vfiprintf_r+0xf0>
 800989e:	2353      	movs	r3, #83	@ 0x53
 80098a0:	a904      	add	r1, sp, #16
 80098a2:	185b      	adds	r3, r3, r1
 80098a4:	212b      	movs	r1, #43	@ 0x2b
 80098a6:	7019      	strb	r1, [r3, #0]
 80098a8:	782b      	ldrb	r3, [r5, #0]
 80098aa:	2b2a      	cmp	r3, #42	@ 0x2a
 80098ac:	d016      	beq.n	80098dc <_vfiprintf_r+0x124>
 80098ae:	002e      	movs	r6, r5
 80098b0:	2100      	movs	r1, #0
 80098b2:	200a      	movs	r0, #10
 80098b4:	68e3      	ldr	r3, [r4, #12]
 80098b6:	7832      	ldrb	r2, [r6, #0]
 80098b8:	1c75      	adds	r5, r6, #1
 80098ba:	3a30      	subs	r2, #48	@ 0x30
 80098bc:	2a09      	cmp	r2, #9
 80098be:	d950      	bls.n	8009962 <_vfiprintf_r+0x1aa>
 80098c0:	2900      	cmp	r1, #0
 80098c2:	d111      	bne.n	80098e8 <_vfiprintf_r+0x130>
 80098c4:	e017      	b.n	80098f6 <_vfiprintf_r+0x13e>
 80098c6:	3601      	adds	r6, #1
 80098c8:	e7af      	b.n	800982a <_vfiprintf_r+0x72>
 80098ca:	9b05      	ldr	r3, [sp, #20]
 80098cc:	6822      	ldr	r2, [r4, #0]
 80098ce:	1ac0      	subs	r0, r0, r3
 80098d0:	2301      	movs	r3, #1
 80098d2:	4083      	lsls	r3, r0
 80098d4:	4313      	orrs	r3, r2
 80098d6:	0035      	movs	r5, r6
 80098d8:	6023      	str	r3, [r4, #0]
 80098da:	e7cc      	b.n	8009876 <_vfiprintf_r+0xbe>
 80098dc:	9b07      	ldr	r3, [sp, #28]
 80098de:	1d19      	adds	r1, r3, #4
 80098e0:	681b      	ldr	r3, [r3, #0]
 80098e2:	9107      	str	r1, [sp, #28]
 80098e4:	2b00      	cmp	r3, #0
 80098e6:	db01      	blt.n	80098ec <_vfiprintf_r+0x134>
 80098e8:	930b      	str	r3, [sp, #44]	@ 0x2c
 80098ea:	e004      	b.n	80098f6 <_vfiprintf_r+0x13e>
 80098ec:	425b      	negs	r3, r3
 80098ee:	60e3      	str	r3, [r4, #12]
 80098f0:	2302      	movs	r3, #2
 80098f2:	4313      	orrs	r3, r2
 80098f4:	6023      	str	r3, [r4, #0]
 80098f6:	7833      	ldrb	r3, [r6, #0]
 80098f8:	2b2e      	cmp	r3, #46	@ 0x2e
 80098fa:	d10c      	bne.n	8009916 <_vfiprintf_r+0x15e>
 80098fc:	7873      	ldrb	r3, [r6, #1]
 80098fe:	2b2a      	cmp	r3, #42	@ 0x2a
 8009900:	d134      	bne.n	800996c <_vfiprintf_r+0x1b4>
 8009902:	9b07      	ldr	r3, [sp, #28]
 8009904:	3602      	adds	r6, #2
 8009906:	1d1a      	adds	r2, r3, #4
 8009908:	681b      	ldr	r3, [r3, #0]
 800990a:	9207      	str	r2, [sp, #28]
 800990c:	2b00      	cmp	r3, #0
 800990e:	da01      	bge.n	8009914 <_vfiprintf_r+0x15c>
 8009910:	2301      	movs	r3, #1
 8009912:	425b      	negs	r3, r3
 8009914:	9309      	str	r3, [sp, #36]	@ 0x24
 8009916:	4d32      	ldr	r5, [pc, #200]	@ (80099e0 <_vfiprintf_r+0x228>)
 8009918:	2203      	movs	r2, #3
 800991a:	0028      	movs	r0, r5
 800991c:	7831      	ldrb	r1, [r6, #0]
 800991e:	f7fc fdc2 	bl	80064a6 <memchr>
 8009922:	2800      	cmp	r0, #0
 8009924:	d006      	beq.n	8009934 <_vfiprintf_r+0x17c>
 8009926:	2340      	movs	r3, #64	@ 0x40
 8009928:	1b40      	subs	r0, r0, r5
 800992a:	4083      	lsls	r3, r0
 800992c:	6822      	ldr	r2, [r4, #0]
 800992e:	3601      	adds	r6, #1
 8009930:	4313      	orrs	r3, r2
 8009932:	6023      	str	r3, [r4, #0]
 8009934:	7831      	ldrb	r1, [r6, #0]
 8009936:	2206      	movs	r2, #6
 8009938:	482a      	ldr	r0, [pc, #168]	@ (80099e4 <_vfiprintf_r+0x22c>)
 800993a:	1c75      	adds	r5, r6, #1
 800993c:	7621      	strb	r1, [r4, #24]
 800993e:	f7fc fdb2 	bl	80064a6 <memchr>
 8009942:	2800      	cmp	r0, #0
 8009944:	d040      	beq.n	80099c8 <_vfiprintf_r+0x210>
 8009946:	4b28      	ldr	r3, [pc, #160]	@ (80099e8 <_vfiprintf_r+0x230>)
 8009948:	2b00      	cmp	r3, #0
 800994a:	d122      	bne.n	8009992 <_vfiprintf_r+0x1da>
 800994c:	2207      	movs	r2, #7
 800994e:	9b07      	ldr	r3, [sp, #28]
 8009950:	3307      	adds	r3, #7
 8009952:	4393      	bics	r3, r2
 8009954:	3308      	adds	r3, #8
 8009956:	9307      	str	r3, [sp, #28]
 8009958:	6963      	ldr	r3, [r4, #20]
 800995a:	9a04      	ldr	r2, [sp, #16]
 800995c:	189b      	adds	r3, r3, r2
 800995e:	6163      	str	r3, [r4, #20]
 8009960:	e762      	b.n	8009828 <_vfiprintf_r+0x70>
 8009962:	4343      	muls	r3, r0
 8009964:	002e      	movs	r6, r5
 8009966:	2101      	movs	r1, #1
 8009968:	189b      	adds	r3, r3, r2
 800996a:	e7a4      	b.n	80098b6 <_vfiprintf_r+0xfe>
 800996c:	2300      	movs	r3, #0
 800996e:	200a      	movs	r0, #10
 8009970:	0019      	movs	r1, r3
 8009972:	3601      	adds	r6, #1
 8009974:	6063      	str	r3, [r4, #4]
 8009976:	7832      	ldrb	r2, [r6, #0]
 8009978:	1c75      	adds	r5, r6, #1
 800997a:	3a30      	subs	r2, #48	@ 0x30
 800997c:	2a09      	cmp	r2, #9
 800997e:	d903      	bls.n	8009988 <_vfiprintf_r+0x1d0>
 8009980:	2b00      	cmp	r3, #0
 8009982:	d0c8      	beq.n	8009916 <_vfiprintf_r+0x15e>
 8009984:	9109      	str	r1, [sp, #36]	@ 0x24
 8009986:	e7c6      	b.n	8009916 <_vfiprintf_r+0x15e>
 8009988:	4341      	muls	r1, r0
 800998a:	002e      	movs	r6, r5
 800998c:	2301      	movs	r3, #1
 800998e:	1889      	adds	r1, r1, r2
 8009990:	e7f1      	b.n	8009976 <_vfiprintf_r+0x1be>
 8009992:	aa07      	add	r2, sp, #28
 8009994:	9200      	str	r2, [sp, #0]
 8009996:	0021      	movs	r1, r4
 8009998:	003a      	movs	r2, r7
 800999a:	4b14      	ldr	r3, [pc, #80]	@ (80099ec <_vfiprintf_r+0x234>)
 800999c:	9803      	ldr	r0, [sp, #12]
 800999e:	f7fb fe03 	bl	80055a8 <_printf_float>
 80099a2:	9004      	str	r0, [sp, #16]
 80099a4:	9b04      	ldr	r3, [sp, #16]
 80099a6:	3301      	adds	r3, #1
 80099a8:	d1d6      	bne.n	8009958 <_vfiprintf_r+0x1a0>
 80099aa:	6e7b      	ldr	r3, [r7, #100]	@ 0x64
 80099ac:	07db      	lsls	r3, r3, #31
 80099ae:	d405      	bmi.n	80099bc <_vfiprintf_r+0x204>
 80099b0:	89bb      	ldrh	r3, [r7, #12]
 80099b2:	059b      	lsls	r3, r3, #22
 80099b4:	d402      	bmi.n	80099bc <_vfiprintf_r+0x204>
 80099b6:	6db8      	ldr	r0, [r7, #88]	@ 0x58
 80099b8:	f7fc fd74 	bl	80064a4 <__retarget_lock_release_recursive>
 80099bc:	89bb      	ldrh	r3, [r7, #12]
 80099be:	065b      	lsls	r3, r3, #25
 80099c0:	d500      	bpl.n	80099c4 <_vfiprintf_r+0x20c>
 80099c2:	e71e      	b.n	8009802 <_vfiprintf_r+0x4a>
 80099c4:	980d      	ldr	r0, [sp, #52]	@ 0x34
 80099c6:	e71e      	b.n	8009806 <_vfiprintf_r+0x4e>
 80099c8:	aa07      	add	r2, sp, #28
 80099ca:	9200      	str	r2, [sp, #0]
 80099cc:	0021      	movs	r1, r4
 80099ce:	003a      	movs	r2, r7
 80099d0:	4b06      	ldr	r3, [pc, #24]	@ (80099ec <_vfiprintf_r+0x234>)
 80099d2:	9803      	ldr	r0, [sp, #12]
 80099d4:	f7fc f896 	bl	8005b04 <_printf_i>
 80099d8:	e7e3      	b.n	80099a2 <_vfiprintf_r+0x1ea>
 80099da:	46c0      	nop			@ (mov r8, r8)
 80099dc:	08009ea6 	.word	0x08009ea6
 80099e0:	08009eac 	.word	0x08009eac
 80099e4:	08009eb0 	.word	0x08009eb0
 80099e8:	080055a9 	.word	0x080055a9
 80099ec:	08009795 	.word	0x08009795

080099f0 <__swbuf_r>:
 80099f0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80099f2:	0006      	movs	r6, r0
 80099f4:	000d      	movs	r5, r1
 80099f6:	0014      	movs	r4, r2
 80099f8:	2800      	cmp	r0, #0
 80099fa:	d004      	beq.n	8009a06 <__swbuf_r+0x16>
 80099fc:	6a03      	ldr	r3, [r0, #32]
 80099fe:	2b00      	cmp	r3, #0
 8009a00:	d101      	bne.n	8009a06 <__swbuf_r+0x16>
 8009a02:	f7fc fc27 	bl	8006254 <__sinit>
 8009a06:	69a3      	ldr	r3, [r4, #24]
 8009a08:	60a3      	str	r3, [r4, #8]
 8009a0a:	89a3      	ldrh	r3, [r4, #12]
 8009a0c:	071b      	lsls	r3, r3, #28
 8009a0e:	d502      	bpl.n	8009a16 <__swbuf_r+0x26>
 8009a10:	6923      	ldr	r3, [r4, #16]
 8009a12:	2b00      	cmp	r3, #0
 8009a14:	d109      	bne.n	8009a2a <__swbuf_r+0x3a>
 8009a16:	0021      	movs	r1, r4
 8009a18:	0030      	movs	r0, r6
 8009a1a:	f000 f82b 	bl	8009a74 <__swsetup_r>
 8009a1e:	2800      	cmp	r0, #0
 8009a20:	d003      	beq.n	8009a2a <__swbuf_r+0x3a>
 8009a22:	2501      	movs	r5, #1
 8009a24:	426d      	negs	r5, r5
 8009a26:	0028      	movs	r0, r5
 8009a28:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8009a2a:	6923      	ldr	r3, [r4, #16]
 8009a2c:	6820      	ldr	r0, [r4, #0]
 8009a2e:	b2ef      	uxtb	r7, r5
 8009a30:	1ac0      	subs	r0, r0, r3
 8009a32:	6963      	ldr	r3, [r4, #20]
 8009a34:	b2ed      	uxtb	r5, r5
 8009a36:	4283      	cmp	r3, r0
 8009a38:	dc05      	bgt.n	8009a46 <__swbuf_r+0x56>
 8009a3a:	0021      	movs	r1, r4
 8009a3c:	0030      	movs	r0, r6
 8009a3e:	f7ff fa0f 	bl	8008e60 <_fflush_r>
 8009a42:	2800      	cmp	r0, #0
 8009a44:	d1ed      	bne.n	8009a22 <__swbuf_r+0x32>
 8009a46:	68a3      	ldr	r3, [r4, #8]
 8009a48:	3001      	adds	r0, #1
 8009a4a:	3b01      	subs	r3, #1
 8009a4c:	60a3      	str	r3, [r4, #8]
 8009a4e:	6823      	ldr	r3, [r4, #0]
 8009a50:	1c5a      	adds	r2, r3, #1
 8009a52:	6022      	str	r2, [r4, #0]
 8009a54:	701f      	strb	r7, [r3, #0]
 8009a56:	6963      	ldr	r3, [r4, #20]
 8009a58:	4283      	cmp	r3, r0
 8009a5a:	d004      	beq.n	8009a66 <__swbuf_r+0x76>
 8009a5c:	89a3      	ldrh	r3, [r4, #12]
 8009a5e:	07db      	lsls	r3, r3, #31
 8009a60:	d5e1      	bpl.n	8009a26 <__swbuf_r+0x36>
 8009a62:	2d0a      	cmp	r5, #10
 8009a64:	d1df      	bne.n	8009a26 <__swbuf_r+0x36>
 8009a66:	0021      	movs	r1, r4
 8009a68:	0030      	movs	r0, r6
 8009a6a:	f7ff f9f9 	bl	8008e60 <_fflush_r>
 8009a6e:	2800      	cmp	r0, #0
 8009a70:	d0d9      	beq.n	8009a26 <__swbuf_r+0x36>
 8009a72:	e7d6      	b.n	8009a22 <__swbuf_r+0x32>

08009a74 <__swsetup_r>:
 8009a74:	4b2d      	ldr	r3, [pc, #180]	@ (8009b2c <__swsetup_r+0xb8>)
 8009a76:	b570      	push	{r4, r5, r6, lr}
 8009a78:	0005      	movs	r5, r0
 8009a7a:	6818      	ldr	r0, [r3, #0]
 8009a7c:	000c      	movs	r4, r1
 8009a7e:	2800      	cmp	r0, #0
 8009a80:	d004      	beq.n	8009a8c <__swsetup_r+0x18>
 8009a82:	6a03      	ldr	r3, [r0, #32]
 8009a84:	2b00      	cmp	r3, #0
 8009a86:	d101      	bne.n	8009a8c <__swsetup_r+0x18>
 8009a88:	f7fc fbe4 	bl	8006254 <__sinit>
 8009a8c:	220c      	movs	r2, #12
 8009a8e:	5ea3      	ldrsh	r3, [r4, r2]
 8009a90:	071a      	lsls	r2, r3, #28
 8009a92:	d423      	bmi.n	8009adc <__swsetup_r+0x68>
 8009a94:	06da      	lsls	r2, r3, #27
 8009a96:	d407      	bmi.n	8009aa8 <__swsetup_r+0x34>
 8009a98:	2209      	movs	r2, #9
 8009a9a:	602a      	str	r2, [r5, #0]
 8009a9c:	2240      	movs	r2, #64	@ 0x40
 8009a9e:	2001      	movs	r0, #1
 8009aa0:	4313      	orrs	r3, r2
 8009aa2:	81a3      	strh	r3, [r4, #12]
 8009aa4:	4240      	negs	r0, r0
 8009aa6:	e03a      	b.n	8009b1e <__swsetup_r+0xaa>
 8009aa8:	075b      	lsls	r3, r3, #29
 8009aaa:	d513      	bpl.n	8009ad4 <__swsetup_r+0x60>
 8009aac:	6b61      	ldr	r1, [r4, #52]	@ 0x34
 8009aae:	2900      	cmp	r1, #0
 8009ab0:	d008      	beq.n	8009ac4 <__swsetup_r+0x50>
 8009ab2:	0023      	movs	r3, r4
 8009ab4:	3344      	adds	r3, #68	@ 0x44
 8009ab6:	4299      	cmp	r1, r3
 8009ab8:	d002      	beq.n	8009ac0 <__swsetup_r+0x4c>
 8009aba:	0028      	movs	r0, r5
 8009abc:	f7fd fb78 	bl	80071b0 <_free_r>
 8009ac0:	2300      	movs	r3, #0
 8009ac2:	6363      	str	r3, [r4, #52]	@ 0x34
 8009ac4:	2224      	movs	r2, #36	@ 0x24
 8009ac6:	89a3      	ldrh	r3, [r4, #12]
 8009ac8:	4393      	bics	r3, r2
 8009aca:	81a3      	strh	r3, [r4, #12]
 8009acc:	2300      	movs	r3, #0
 8009ace:	6063      	str	r3, [r4, #4]
 8009ad0:	6923      	ldr	r3, [r4, #16]
 8009ad2:	6023      	str	r3, [r4, #0]
 8009ad4:	2308      	movs	r3, #8
 8009ad6:	89a2      	ldrh	r2, [r4, #12]
 8009ad8:	4313      	orrs	r3, r2
 8009ada:	81a3      	strh	r3, [r4, #12]
 8009adc:	6923      	ldr	r3, [r4, #16]
 8009ade:	2b00      	cmp	r3, #0
 8009ae0:	d10b      	bne.n	8009afa <__swsetup_r+0x86>
 8009ae2:	21a0      	movs	r1, #160	@ 0xa0
 8009ae4:	2280      	movs	r2, #128	@ 0x80
 8009ae6:	89a3      	ldrh	r3, [r4, #12]
 8009ae8:	0089      	lsls	r1, r1, #2
 8009aea:	0092      	lsls	r2, r2, #2
 8009aec:	400b      	ands	r3, r1
 8009aee:	4293      	cmp	r3, r2
 8009af0:	d003      	beq.n	8009afa <__swsetup_r+0x86>
 8009af2:	0021      	movs	r1, r4
 8009af4:	0028      	movs	r0, r5
 8009af6:	f000 f88f 	bl	8009c18 <__smakebuf_r>
 8009afa:	220c      	movs	r2, #12
 8009afc:	5ea3      	ldrsh	r3, [r4, r2]
 8009afe:	2101      	movs	r1, #1
 8009b00:	001a      	movs	r2, r3
 8009b02:	400a      	ands	r2, r1
 8009b04:	420b      	tst	r3, r1
 8009b06:	d00b      	beq.n	8009b20 <__swsetup_r+0xac>
 8009b08:	2200      	movs	r2, #0
 8009b0a:	60a2      	str	r2, [r4, #8]
 8009b0c:	6962      	ldr	r2, [r4, #20]
 8009b0e:	4252      	negs	r2, r2
 8009b10:	61a2      	str	r2, [r4, #24]
 8009b12:	2000      	movs	r0, #0
 8009b14:	6922      	ldr	r2, [r4, #16]
 8009b16:	4282      	cmp	r2, r0
 8009b18:	d101      	bne.n	8009b1e <__swsetup_r+0xaa>
 8009b1a:	061a      	lsls	r2, r3, #24
 8009b1c:	d4be      	bmi.n	8009a9c <__swsetup_r+0x28>
 8009b1e:	bd70      	pop	{r4, r5, r6, pc}
 8009b20:	0799      	lsls	r1, r3, #30
 8009b22:	d400      	bmi.n	8009b26 <__swsetup_r+0xb2>
 8009b24:	6962      	ldr	r2, [r4, #20]
 8009b26:	60a2      	str	r2, [r4, #8]
 8009b28:	e7f3      	b.n	8009b12 <__swsetup_r+0x9e>
 8009b2a:	46c0      	nop			@ (mov r8, r8)
 8009b2c:	20000020 	.word	0x20000020

08009b30 <_raise_r>:
 8009b30:	b570      	push	{r4, r5, r6, lr}
 8009b32:	0004      	movs	r4, r0
 8009b34:	000d      	movs	r5, r1
 8009b36:	291f      	cmp	r1, #31
 8009b38:	d904      	bls.n	8009b44 <_raise_r+0x14>
 8009b3a:	2316      	movs	r3, #22
 8009b3c:	6003      	str	r3, [r0, #0]
 8009b3e:	2001      	movs	r0, #1
 8009b40:	4240      	negs	r0, r0
 8009b42:	bd70      	pop	{r4, r5, r6, pc}
 8009b44:	6bc3      	ldr	r3, [r0, #60]	@ 0x3c
 8009b46:	2b00      	cmp	r3, #0
 8009b48:	d004      	beq.n	8009b54 <_raise_r+0x24>
 8009b4a:	008a      	lsls	r2, r1, #2
 8009b4c:	189b      	adds	r3, r3, r2
 8009b4e:	681a      	ldr	r2, [r3, #0]
 8009b50:	2a00      	cmp	r2, #0
 8009b52:	d108      	bne.n	8009b66 <_raise_r+0x36>
 8009b54:	0020      	movs	r0, r4
 8009b56:	f000 f831 	bl	8009bbc <_getpid_r>
 8009b5a:	002a      	movs	r2, r5
 8009b5c:	0001      	movs	r1, r0
 8009b5e:	0020      	movs	r0, r4
 8009b60:	f000 f81a 	bl	8009b98 <_kill_r>
 8009b64:	e7ed      	b.n	8009b42 <_raise_r+0x12>
 8009b66:	2a01      	cmp	r2, #1
 8009b68:	d009      	beq.n	8009b7e <_raise_r+0x4e>
 8009b6a:	1c51      	adds	r1, r2, #1
 8009b6c:	d103      	bne.n	8009b76 <_raise_r+0x46>
 8009b6e:	2316      	movs	r3, #22
 8009b70:	6003      	str	r3, [r0, #0]
 8009b72:	2001      	movs	r0, #1
 8009b74:	e7e5      	b.n	8009b42 <_raise_r+0x12>
 8009b76:	2100      	movs	r1, #0
 8009b78:	0028      	movs	r0, r5
 8009b7a:	6019      	str	r1, [r3, #0]
 8009b7c:	4790      	blx	r2
 8009b7e:	2000      	movs	r0, #0
 8009b80:	e7df      	b.n	8009b42 <_raise_r+0x12>
	...

08009b84 <raise>:
 8009b84:	b510      	push	{r4, lr}
 8009b86:	4b03      	ldr	r3, [pc, #12]	@ (8009b94 <raise+0x10>)
 8009b88:	0001      	movs	r1, r0
 8009b8a:	6818      	ldr	r0, [r3, #0]
 8009b8c:	f7ff ffd0 	bl	8009b30 <_raise_r>
 8009b90:	bd10      	pop	{r4, pc}
 8009b92:	46c0      	nop			@ (mov r8, r8)
 8009b94:	20000020 	.word	0x20000020

08009b98 <_kill_r>:
 8009b98:	2300      	movs	r3, #0
 8009b9a:	b570      	push	{r4, r5, r6, lr}
 8009b9c:	4d06      	ldr	r5, [pc, #24]	@ (8009bb8 <_kill_r+0x20>)
 8009b9e:	0004      	movs	r4, r0
 8009ba0:	0008      	movs	r0, r1
 8009ba2:	0011      	movs	r1, r2
 8009ba4:	602b      	str	r3, [r5, #0]
 8009ba6:	f7f9 f9c6 	bl	8002f36 <_kill>
 8009baa:	1c43      	adds	r3, r0, #1
 8009bac:	d103      	bne.n	8009bb6 <_kill_r+0x1e>
 8009bae:	682b      	ldr	r3, [r5, #0]
 8009bb0:	2b00      	cmp	r3, #0
 8009bb2:	d000      	beq.n	8009bb6 <_kill_r+0x1e>
 8009bb4:	6023      	str	r3, [r4, #0]
 8009bb6:	bd70      	pop	{r4, r5, r6, pc}
 8009bb8:	200003b0 	.word	0x200003b0

08009bbc <_getpid_r>:
 8009bbc:	b510      	push	{r4, lr}
 8009bbe:	f7f9 f9b4 	bl	8002f2a <_getpid>
 8009bc2:	bd10      	pop	{r4, pc}

08009bc4 <__swhatbuf_r>:
 8009bc4:	b570      	push	{r4, r5, r6, lr}
 8009bc6:	000e      	movs	r6, r1
 8009bc8:	001d      	movs	r5, r3
 8009bca:	230e      	movs	r3, #14
 8009bcc:	5ec9      	ldrsh	r1, [r1, r3]
 8009bce:	0014      	movs	r4, r2
 8009bd0:	b096      	sub	sp, #88	@ 0x58
 8009bd2:	2900      	cmp	r1, #0
 8009bd4:	da0c      	bge.n	8009bf0 <__swhatbuf_r+0x2c>
 8009bd6:	89b2      	ldrh	r2, [r6, #12]
 8009bd8:	2380      	movs	r3, #128	@ 0x80
 8009bda:	0011      	movs	r1, r2
 8009bdc:	4019      	ands	r1, r3
 8009bde:	421a      	tst	r2, r3
 8009be0:	d114      	bne.n	8009c0c <__swhatbuf_r+0x48>
 8009be2:	2380      	movs	r3, #128	@ 0x80
 8009be4:	00db      	lsls	r3, r3, #3
 8009be6:	2000      	movs	r0, #0
 8009be8:	6029      	str	r1, [r5, #0]
 8009bea:	6023      	str	r3, [r4, #0]
 8009bec:	b016      	add	sp, #88	@ 0x58
 8009bee:	bd70      	pop	{r4, r5, r6, pc}
 8009bf0:	466a      	mov	r2, sp
 8009bf2:	f000 f853 	bl	8009c9c <_fstat_r>
 8009bf6:	2800      	cmp	r0, #0
 8009bf8:	dbed      	blt.n	8009bd6 <__swhatbuf_r+0x12>
 8009bfa:	23f0      	movs	r3, #240	@ 0xf0
 8009bfc:	9901      	ldr	r1, [sp, #4]
 8009bfe:	021b      	lsls	r3, r3, #8
 8009c00:	4019      	ands	r1, r3
 8009c02:	4b04      	ldr	r3, [pc, #16]	@ (8009c14 <__swhatbuf_r+0x50>)
 8009c04:	18c9      	adds	r1, r1, r3
 8009c06:	424b      	negs	r3, r1
 8009c08:	4159      	adcs	r1, r3
 8009c0a:	e7ea      	b.n	8009be2 <__swhatbuf_r+0x1e>
 8009c0c:	2100      	movs	r1, #0
 8009c0e:	2340      	movs	r3, #64	@ 0x40
 8009c10:	e7e9      	b.n	8009be6 <__swhatbuf_r+0x22>
 8009c12:	46c0      	nop			@ (mov r8, r8)
 8009c14:	ffffe000 	.word	0xffffe000

08009c18 <__smakebuf_r>:
 8009c18:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009c1a:	2602      	movs	r6, #2
 8009c1c:	898b      	ldrh	r3, [r1, #12]
 8009c1e:	0005      	movs	r5, r0
 8009c20:	000c      	movs	r4, r1
 8009c22:	b085      	sub	sp, #20
 8009c24:	4233      	tst	r3, r6
 8009c26:	d007      	beq.n	8009c38 <__smakebuf_r+0x20>
 8009c28:	0023      	movs	r3, r4
 8009c2a:	3347      	adds	r3, #71	@ 0x47
 8009c2c:	6023      	str	r3, [r4, #0]
 8009c2e:	6123      	str	r3, [r4, #16]
 8009c30:	2301      	movs	r3, #1
 8009c32:	6163      	str	r3, [r4, #20]
 8009c34:	b005      	add	sp, #20
 8009c36:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009c38:	ab03      	add	r3, sp, #12
 8009c3a:	aa02      	add	r2, sp, #8
 8009c3c:	f7ff ffc2 	bl	8009bc4 <__swhatbuf_r>
 8009c40:	9f02      	ldr	r7, [sp, #8]
 8009c42:	9001      	str	r0, [sp, #4]
 8009c44:	0039      	movs	r1, r7
 8009c46:	0028      	movs	r0, r5
 8009c48:	f7fd fb28 	bl	800729c <_malloc_r>
 8009c4c:	2800      	cmp	r0, #0
 8009c4e:	d108      	bne.n	8009c62 <__smakebuf_r+0x4a>
 8009c50:	220c      	movs	r2, #12
 8009c52:	5ea3      	ldrsh	r3, [r4, r2]
 8009c54:	059a      	lsls	r2, r3, #22
 8009c56:	d4ed      	bmi.n	8009c34 <__smakebuf_r+0x1c>
 8009c58:	2203      	movs	r2, #3
 8009c5a:	4393      	bics	r3, r2
 8009c5c:	431e      	orrs	r6, r3
 8009c5e:	81a6      	strh	r6, [r4, #12]
 8009c60:	e7e2      	b.n	8009c28 <__smakebuf_r+0x10>
 8009c62:	2380      	movs	r3, #128	@ 0x80
 8009c64:	89a2      	ldrh	r2, [r4, #12]
 8009c66:	6020      	str	r0, [r4, #0]
 8009c68:	4313      	orrs	r3, r2
 8009c6a:	81a3      	strh	r3, [r4, #12]
 8009c6c:	9b03      	ldr	r3, [sp, #12]
 8009c6e:	6120      	str	r0, [r4, #16]
 8009c70:	6167      	str	r7, [r4, #20]
 8009c72:	2b00      	cmp	r3, #0
 8009c74:	d00c      	beq.n	8009c90 <__smakebuf_r+0x78>
 8009c76:	0028      	movs	r0, r5
 8009c78:	230e      	movs	r3, #14
 8009c7a:	5ee1      	ldrsh	r1, [r4, r3]
 8009c7c:	f000 f820 	bl	8009cc0 <_isatty_r>
 8009c80:	2800      	cmp	r0, #0
 8009c82:	d005      	beq.n	8009c90 <__smakebuf_r+0x78>
 8009c84:	2303      	movs	r3, #3
 8009c86:	89a2      	ldrh	r2, [r4, #12]
 8009c88:	439a      	bics	r2, r3
 8009c8a:	3b02      	subs	r3, #2
 8009c8c:	4313      	orrs	r3, r2
 8009c8e:	81a3      	strh	r3, [r4, #12]
 8009c90:	89a3      	ldrh	r3, [r4, #12]
 8009c92:	9a01      	ldr	r2, [sp, #4]
 8009c94:	4313      	orrs	r3, r2
 8009c96:	81a3      	strh	r3, [r4, #12]
 8009c98:	e7cc      	b.n	8009c34 <__smakebuf_r+0x1c>
	...

08009c9c <_fstat_r>:
 8009c9c:	2300      	movs	r3, #0
 8009c9e:	b570      	push	{r4, r5, r6, lr}
 8009ca0:	4d06      	ldr	r5, [pc, #24]	@ (8009cbc <_fstat_r+0x20>)
 8009ca2:	0004      	movs	r4, r0
 8009ca4:	0008      	movs	r0, r1
 8009ca6:	0011      	movs	r1, r2
 8009ca8:	602b      	str	r3, [r5, #0]
 8009caa:	f7f9 f9a4 	bl	8002ff6 <_fstat>
 8009cae:	1c43      	adds	r3, r0, #1
 8009cb0:	d103      	bne.n	8009cba <_fstat_r+0x1e>
 8009cb2:	682b      	ldr	r3, [r5, #0]
 8009cb4:	2b00      	cmp	r3, #0
 8009cb6:	d000      	beq.n	8009cba <_fstat_r+0x1e>
 8009cb8:	6023      	str	r3, [r4, #0]
 8009cba:	bd70      	pop	{r4, r5, r6, pc}
 8009cbc:	200003b0 	.word	0x200003b0

08009cc0 <_isatty_r>:
 8009cc0:	2300      	movs	r3, #0
 8009cc2:	b570      	push	{r4, r5, r6, lr}
 8009cc4:	4d06      	ldr	r5, [pc, #24]	@ (8009ce0 <_isatty_r+0x20>)
 8009cc6:	0004      	movs	r4, r0
 8009cc8:	0008      	movs	r0, r1
 8009cca:	602b      	str	r3, [r5, #0]
 8009ccc:	f7f9 f9a1 	bl	8003012 <_isatty>
 8009cd0:	1c43      	adds	r3, r0, #1
 8009cd2:	d103      	bne.n	8009cdc <_isatty_r+0x1c>
 8009cd4:	682b      	ldr	r3, [r5, #0]
 8009cd6:	2b00      	cmp	r3, #0
 8009cd8:	d000      	beq.n	8009cdc <_isatty_r+0x1c>
 8009cda:	6023      	str	r3, [r4, #0]
 8009cdc:	bd70      	pop	{r4, r5, r6, pc}
 8009cde:	46c0      	nop			@ (mov r8, r8)
 8009ce0:	200003b0 	.word	0x200003b0

08009ce4 <_init>:
 8009ce4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009ce6:	46c0      	nop			@ (mov r8, r8)
 8009ce8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009cea:	bc08      	pop	{r3}
 8009cec:	469e      	mov	lr, r3
 8009cee:	4770      	bx	lr

08009cf0 <_fini>:
 8009cf0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8009cf2:	46c0      	nop			@ (mov r8, r8)
 8009cf4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8009cf6:	bc08      	pop	{r3}
 8009cf8:	469e      	mov	lr, r3
 8009cfa:	4770      	bx	lr
